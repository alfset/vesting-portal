import { Block, PointOrOrigin, TipOrOrigin } from '@cardano-ogmios/schema';
import { InteractionContext } from '../Connection';
import { Intersection } from './findIntersect';
export interface ChainSyncClient {
    context: InteractionContext;
    shutdown: () => Promise<void>;
    startSync: (points?: PointOrOrigin[], inFlight?: number) => Promise<Intersection>;
}
export interface ChainSyncMessageHandlers {
    rollBackward: (response: {
        point: PointOrOrigin;
        tip: TipOrOrigin;
    }, requestNext: () => void) => Promise<void>;
    rollForward: (response: {
        block: Block;
        tip: TipOrOrigin;
    }, requestNext: () => void) => Promise<void>;
}
export declare const createChainSyncClient: (context: InteractionContext, messageHandlers: ChainSyncMessageHandlers, options?: {
    sequential?: boolean;
}) => Promise<ChainSyncClient>;
//# sourceMappingURL=ChainSyncClient.d.ts.map