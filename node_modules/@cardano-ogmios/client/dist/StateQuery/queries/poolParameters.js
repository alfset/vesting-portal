"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.poolParameters = void 0;
const errors_1 = require("../../errors");
const Query_1 = require("../Query");
const isEraMismatch = (result) => result.eraMismatch !== undefined;
const isPoolParameters = (result) => {
    const sample = Object.entries(result)[0];
    if (sample === undefined) {
        return true;
    }
    return typeof sample[0] === 'string' && (sample[1].cost !== undefined && sample[1].margin !== undefined);
};
const poolParameters = (context, pools) => (0, Query_1.Query)({
    methodName: 'Query',
    args: { query: { poolParameters: pools } }
}, {
    handler: (response, resolve, reject) => {
        if (response.result === 'QueryUnavailableInCurrentEra') {
            return reject(new errors_1.QueryUnavailableInCurrentEraError('poolParameters'));
        }
        else if (isEraMismatch(response.result)) {
            const { eraMismatch } = response.result;
            const { ledgerEra, queryEra } = eraMismatch;
            return reject(new errors_1.EraMismatchError(queryEra, ledgerEra));
        }
        else if (isPoolParameters(response.result)) {
            return resolve(response.result);
        }
        else {
            return reject(new errors_1.UnknownResultError(response.result));
        }
    }
}, context);
exports.poolParameters = poolParameters;
//# sourceMappingURL=poolParameters.js.map