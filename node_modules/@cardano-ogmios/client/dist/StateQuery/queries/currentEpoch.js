"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.currentEpoch = void 0;
const errors_1 = require("../../errors");
const Query_1 = require("../Query");
const isEraMismatch = (result) => result.eraMismatch !== undefined;
const currentEpoch = (context) => (0, Query_1.Query)({
    methodName: 'Query',
    args: {
        query: 'currentEpoch'
    }
}, {
    handler: (response, resolve, reject) => {
        if (response.result === 'QueryUnavailableInCurrentEra') {
            return reject(new errors_1.QueryUnavailableInCurrentEraError('currentEpoch'));
        }
        else if (typeof response.result === 'number') {
            return resolve(response.result);
        }
        else if (isEraMismatch(response.result)) {
            const { eraMismatch } = response.result;
            const { ledgerEra, queryEra } = eraMismatch;
            return reject(new errors_1.EraMismatchError(queryEra, ledgerEra));
        }
        else {
            return reject(new errors_1.UnknownResultError(response.result));
        }
    }
}, context);
exports.currentEpoch = currentEpoch;
//# sourceMappingURL=currentEpoch.js.map