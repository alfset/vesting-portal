"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Query = void 0;
const nanoid_1 = require("nanoid");
const Request_1 = require("../Request");
const util_1 = require("../util");
const errors_1 = require("../errors");
const Query = (request, response, context) => (0, Request_1.send)((socket) => new Promise((resolve, reject) => {
    const requestId = (0, nanoid_1.nanoid)(5);
    async function listener(data) {
        const queryResponse = util_1.safeJSON.parse(data);
        if (queryResponse.reflection?.requestId !== requestId) {
            return;
        }
        socket.removeListener('message', listener);
        try {
            await response.handler(queryResponse, resolve, reject);
        }
        catch (e) {
            return reject(new errors_1.UnknownResultError(queryResponse));
        }
    }
    socket.on('message', listener);
    socket.send(util_1.safeJSON.stringify({
        ...Request_1.baseRequest,
        methodname: request.methodName,
        args: request.args,
        mirror: { requestId }
    }));
}), context);
exports.Query = Query;
//# sourceMappingURL=Query.js.map