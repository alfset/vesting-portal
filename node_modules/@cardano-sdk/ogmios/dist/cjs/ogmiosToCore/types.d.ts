import { Schema } from '@cardano-ogmios/client';
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type BlockKind = KeysOfUnion<Schema.Block>;
export declare type OgmiosBlockType = Schema.BlockAllegra | Schema.BlockAlonzo | Schema.BlockBabbage | Schema.StandardBlock | Schema.BlockMary | Schema.BlockShelley;
export declare type CommonBlock = Exclude<OgmiosBlockType, Schema.StandardBlock>;
interface Block<B extends OgmiosBlockType, T extends BlockKind> {
    block: B;
    kind: T;
}
export declare type BlockAndKind = Block<Schema.BlockAllegra, 'allegra'> | Block<Schema.BlockAlonzo, 'alonzo'> | Block<Schema.BlockBabbage, 'babbage'> | Block<Schema.StandardBlock, 'byron'> | Block<Schema.BlockMary, 'mary'> | Block<Schema.BlockShelley, 'shelley'>;
export {};
//# sourceMappingURL=types.d.ts.map