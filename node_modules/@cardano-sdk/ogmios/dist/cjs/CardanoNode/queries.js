"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryGenesisParameters = exports.queryEraSummaries = void 0;
const core_1 = require("@cardano-sdk/core");
const ogmiosToCore_1 = require("../ogmiosToCore");
const wrapError = async (query) => {
    try {
        return await query();
    }
    catch (error) {
        throw core_1.CardanoNodeUtil.asCardanoNodeError(error) || new core_1.CardanoNodeErrors.UnknownCardanoNodeError(error);
    }
};
const queryEraSummaries = (client, logger) => wrapError(async () => {
    logger.info('Querying era summaries');
    const systemStart = await client.systemStart();
    const eraSummaries = await client.eraSummaries();
    return eraSummaries.map((era) => (0, ogmiosToCore_1.eraSummary)(era, systemStart));
});
exports.queryEraSummaries = queryEraSummaries;
const queryGenesisParameters = (client, logger) => wrapError(async () => {
    logger.info('Querying genesis parameters');
    return (0, ogmiosToCore_1.genesis)(await client.genesisConfig());
});
exports.queryGenesisParameters = queryGenesisParameters;
//# sourceMappingURL=queries.js.map