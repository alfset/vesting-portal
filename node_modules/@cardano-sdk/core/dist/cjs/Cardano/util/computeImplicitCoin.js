"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeImplicitCoin = void 0;
const util_1 = require("@cardano-sdk/util");
const types_1 = require("../types");
const computeImplicitCoin = ({ stakeKeyDeposit, poolDeposit }, { certificates, withdrawals }) => {
    const stakeKeyDepositBigint = stakeKeyDeposit && BigInt(stakeKeyDeposit);
    const poolDepositBigint = poolDeposit && BigInt(poolDeposit);
    const deposit = util_1.BigIntMath.sum(certificates?.map((cert) => (cert.__typename === types_1.CertificateType.StakeKeyRegistration && stakeKeyDepositBigint) ||
        (cert.__typename === types_1.CertificateType.PoolRegistration && poolDepositBigint) ||
        0n) || []);
    const withdrawalsTotal = (withdrawals && util_1.BigIntMath.sum(withdrawals.map(({ quantity }) => quantity))) || 0n;
    const reclaimTotal = util_1.BigIntMath.sum(certificates?.map((cert) => (cert.__typename === types_1.CertificateType.StakeKeyDeregistration && stakeKeyDepositBigint) ||
        (cert.__typename === types_1.CertificateType.PoolRetirement && poolDepositBigint) ||
        0n) || []);
    return {
        deposit,
        input: withdrawalsTotal + reclaimTotal
    };
};
exports.computeImplicitCoin = computeImplicitCoin;
//# sourceMappingURL=computeImplicitCoin.js.map