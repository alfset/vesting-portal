"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAssetId = exports.assetIdFromPolicyAndName = exports.createAssetId = exports.assetNameFromAssetId = exports.policyIdFromAssetId = void 0;
const Asset_1 = require("../../Cardano/types/Asset");
const CML_1 = require("../../CML/CML");
const bytesToHex_1 = require("../../util/misc/bytesToHex");
const policyIdFromAssetId = (assetId) => (0, Asset_1.PolicyId)(assetId.slice(0, 56));
exports.policyIdFromAssetId = policyIdFromAssetId;
const assetNameFromAssetId = (assetId) => (0, Asset_1.AssetName)(assetId.slice(56));
exports.assetNameFromAssetId = assetNameFromAssetId;
const createAssetId = (scriptHash, assetName) => (0, Asset_1.AssetId)((0, bytesToHex_1.bytesToHex)(scriptHash.to_bytes()) + (0, bytesToHex_1.bytesToHex)(assetName.name()));
exports.createAssetId = createAssetId;
const assetIdFromPolicyAndName = (policyId, assetName) => (0, Asset_1.AssetId)(policyId + assetName);
exports.assetIdFromPolicyAndName = assetIdFromPolicyAndName;
const parseAssetId = (assetId) => {
    const policyId = (0, exports.policyIdFromAssetId)(assetId);
    const assetName = (0, exports.assetNameFromAssetId)(assetId);
    return {
        assetName: CML_1.CML.AssetName.new(Buffer.from(assetName, 'hex')),
        scriptHash: CML_1.CML.ScriptHash.from_bytes(Buffer.from(policyId, 'hex'))
    };
};
exports.parseAssetId = parseAssetId;
//# sourceMappingURL=assetId.js.map