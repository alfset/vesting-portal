import { AssetId, AssetName, PolicyId } from '../../Cardano/types/Asset';
import { CML } from '../../CML/CML';
import { bytesToHex } from '../../util/misc/bytesToHex';
export const policyIdFromAssetId = (assetId) => PolicyId(assetId.slice(0, 56));
export const assetNameFromAssetId = (assetId) => AssetName(assetId.slice(56));
export const createAssetId = (scriptHash, assetName) => AssetId(bytesToHex(scriptHash.to_bytes()) + bytesToHex(assetName.name()));
export const assetIdFromPolicyAndName = (policyId, assetName) => AssetId(policyId + assetName);
export const parseAssetId = (assetId) => {
    const policyId = policyIdFromAssetId(assetId);
    const assetName = assetNameFromAssetId(assetId);
    return {
        assetName: CML.AssetName.new(Buffer.from(assetName, 'hex')),
        scriptHash: CML.ScriptHash.from_bytes(Buffer.from(policyId, 'hex'))
    };
};
//# sourceMappingURL=assetId.js.map