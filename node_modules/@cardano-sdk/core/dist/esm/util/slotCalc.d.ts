import { CustomError } from 'ts-custom-error';
import { EpochNo, NetworkMagics, Slot } from '../Cardano';
import { EraSummary } from '../CardanoNode';
export interface SlotDate {
    slot: Slot;
    date: Date;
}
export interface EpochInfo {
    epochNo: EpochNo;
    firstSlot: SlotDate;
    lastSlot: SlotDate;
}
export declare class EraSummaryError extends CustomError {
}
export declare type EraSummariesMap = {
    [key in NetworkMagics]: EraSummary[];
};
export declare const createSlotEpochCalc: (eraSummaries: EraSummary[]) => (slotNo: Slot) => EpochNo;
export declare const createSlotTimeCalc: (eraSummaries: EraSummary[]) => (slotNo: Slot) => Date;
export declare const createSlotEpochInfoCalc: (eraSummaries: EraSummary[]) => (slot: Slot) => EpochInfo;
export declare type SlotTimeCalc = ReturnType<typeof createSlotTimeCalc>;
export declare type SlotEpochCalc = ReturnType<typeof createSlotEpochCalc>;
export declare type SlotEpochInfoCalc = ReturnType<typeof createSlotEpochInfoCalc>;
//# sourceMappingURL=slotCalc.d.ts.map