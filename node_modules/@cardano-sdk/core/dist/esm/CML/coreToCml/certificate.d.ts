import * as Cardano from '../../Cardano/types';
import * as Crypto from '@cardano-sdk/crypto';
import { Certificate } from '@dcspark/cardano-multiplatform-lib-nodejs';
import { ManagedFreeableScope } from '@cardano-sdk/util';
export declare const stakeKeyRegistration: (scope: ManagedFreeableScope, stakeKeyHash: Crypto.Ed25519KeyHashHex) => Certificate;
export declare const stakeKeyDeregistration: (scope: ManagedFreeableScope, stakeKeyHash: Crypto.Ed25519KeyHashHex) => Certificate;
export declare const poolRegistration: (scope: ManagedFreeableScope, { id, vrf, pledge, cost, margin, rewardAccount, owners, relays, metadataJson }: Cardano.PoolParameters) => Certificate;
export declare const poolRetirement: (scope: ManagedFreeableScope, poolId: Cardano.PoolId, epoch: number) => Certificate;
export declare const stakeDelegation: (scope: ManagedFreeableScope, stakeKeyHash: Crypto.Ed25519KeyHashHex, delegatee: Cardano.PoolId) => Certificate;
export declare const create: (scope: ManagedFreeableScope, certificate: Cardano.Certificate) => Certificate;
//# sourceMappingURL=certificate.d.ts.map