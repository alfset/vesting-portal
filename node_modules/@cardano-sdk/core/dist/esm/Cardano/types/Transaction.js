import * as Crypto from '@cardano-sdk/crypto';
import { hexStringToBuffer, usingAutoFree } from '@cardano-sdk/util';
import { CML } from '../../CML/CML';
import { bytesToHex } from '../../util/misc';
export const TransactionId = (value) => Crypto.Hash32ByteBase16(value);
TransactionId.fromHexBlob = (value) => Crypto.Hash32ByteBase16.fromHexBlob(value);
TransactionId.fromTxBodyCbor = (bodyCbor) => bytesToHex(usingAutoFree((scope) => scope
    .manage(CML.hash_transaction(scope.manage(CML.TransactionBody.from_bytes(hexStringToBuffer(bodyCbor)))))
    .to_bytes()));
export var RedeemerPurpose;
(function (RedeemerPurpose) {
    RedeemerPurpose["spend"] = "spend";
    RedeemerPurpose["mint"] = "mint";
    RedeemerPurpose["certificate"] = "certificate";
    RedeemerPurpose["withdrawal"] = "withdrawal";
})(RedeemerPurpose || (RedeemerPurpose = {}));
//# sourceMappingURL=Transaction.js.map