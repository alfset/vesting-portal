import * as Crypto from '@cardano-sdk/crypto';
import { HexBlob } from '@cardano-sdk/util';
import { Slot } from './Block';
export declare enum ScriptType {
    Native = "native",
    Plutus = "plutus"
}
export declare enum NativeScriptKind {
    RequireSignature = 0,
    RequireAllOf = 1,
    RequireAnyOf = 2,
    RequireNOf = 3,
    RequireTimeAfter = 4,
    RequireTimeBefore = 5
}
export interface RequireSignatureScript {
    __type: ScriptType.Native;
    keyHash: Crypto.Ed25519KeyHashHex;
    kind: NativeScriptKind.RequireSignature;
}
export interface RequireAllOfScript {
    __type: ScriptType.Native;
    scripts: NativeScript[];
    kind: NativeScriptKind.RequireAllOf;
}
export interface RequireAnyOfScript {
    __type: ScriptType.Native;
    scripts: NativeScript[];
    kind: NativeScriptKind.RequireAnyOf;
}
export interface RequireAtLeastScript {
    __type: ScriptType.Native;
    required: number;
    scripts: NativeScript[];
    kind: NativeScriptKind.RequireNOf;
}
export interface RequireTimeBeforeScript {
    __type: ScriptType.Native;
    slot: Slot;
    kind: NativeScriptKind.RequireTimeBefore;
}
export interface RequireTimeAfterScript {
    __type: ScriptType.Native;
    slot: Slot;
    kind: NativeScriptKind.RequireTimeAfter;
}
export declare type NativeScript = RequireAllOfScript | RequireSignatureScript | RequireAnyOfScript | RequireAtLeastScript | RequireTimeBeforeScript | RequireTimeAfterScript;
export declare enum PlutusLanguageVersion {
    V1 = 0,
    V2 = 1
}
export declare type DatumHash = Crypto.Hash32ByteBase16;
export declare type Datum = HexBlob;
export interface PlutusScript {
    __type: ScriptType.Plutus;
    bytes: HexBlob;
    version: PlutusLanguageVersion;
}
export declare type Script = NativeScript | PlutusScript;
//# sourceMappingURL=Script.d.ts.map