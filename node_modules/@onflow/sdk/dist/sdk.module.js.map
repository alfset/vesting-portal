{"version":3,"file":"sdk.module.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/voucher.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve-voucher-intercept.js","../src/resolve/resolve-compute-limit.js","../src/resolve/resolve.js","../src/build/build-invariant.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/account/account.js","../src/block/block.js","../src/build/build-authorizations.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-get-network-parameters.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-voucher-intercept.js","../src/resolve/resolve-proposer-sequence-number.js","../src/resolve/resolve-ref-block-id.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.js","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.ts"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\nimport {v4 as uuidv4} from \"uuid\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\nexport const GET_NETWORK_PARAMETERS /*        */ = \"GET_NETWORK_PARAMETERS\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct\n\n  invariant(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\")\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId),\n  }\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuidv4()\n\n  if (acct.authorization && isFn(acct.authorization))\n    acct = {resolve: acct.authorization}\n  if (!acct.authorization && isFn(acct)) acct = {resolve: acct}\n\n  const resolve = acct.resolve\n  if (resolve)\n    acct.resolve = (acct, ...rest) =>\n      [resolve, prepAccountKeyId].reduce(\n        async (d, fn) => fn(await d, ...rest),\n        acct\n      )\n  acct = prepAccountKeyId(acct)\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else if (role === PAYER) {\n    ix.payer.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuidv4()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\nexport const makeGetNetworkParameters /*    */ = makeIx(GET_NETWORK_PARAMETERS)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\nexport const isGetNetworkParameters /*    */ = is(GET_NETWORK_PARAMETERS)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null,\n    \"networkParameters\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get the latest block\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n/**\n * @description - A builder function that returns the interaction to get an account by address\n * @param {string} addr - The address of the account to getq\n * @returns {Function} - An interaction object\n */\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    },\n  ])\n}\n","import {log, LEVELS} from \"@onflow/util-logger\"\n\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject:\n      \"Operating upon data of the latestBlock field of the response object\",\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\",\n  })\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async i => i\n\nconst decodeVoid = async () => null\n\nconst decodeType = async type => {\n  return type.staticType\n}\n\nconst decodePath = async path => {\n  return {\n    domain: path.domain,\n    identifier: path.identifier,\n  }\n}\n\nconst decodeCapability = async cap => {\n  return {\n    path: cap.path,\n    address: cap.address,\n    borrowType: cap.borrowType,\n  }\n}\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async v => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      v =>\n        new Promise(async res =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[await recurseDecode(v.key, decoders, [...stack, v.key])] =\n      await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodePath,\n  Capability: decodeCapability,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\n/**\n * @description - Decodes a response from Flow into JSON\n * @param {*} decodeInstructions - The response object from Flow\n * @param {object} customDecoders - An object of custom decoders\n * @param {Array<*>} stack - The stack of the current decoding\n * @returns {Promise<*>} - The decoded response\n */\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders)\n    .filter(\n      decoder =>\n        !Object.keys(customDecoders).find(customDecoder =>\n          new RegExp(customDecoder).test(decoder)\n        )\n    )\n    .reduce((decoders, decoderKey) => {\n      decoders[decoderKey] = defaultDecoders[decoderKey]\n      return decoders\n    }, customDecoders)\n\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders,\n  }\n  return recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  if (response.encodedData) {\n    return decode(response.encodedData, customDecoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, customDecoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, customDecoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  } else if (response.networkParameters) {\n    const chainIdMap = {\n      \"flow-testnet\": \"testnet\",\n      \"flow-mainnet\": \"mainnet\",\n      \"flow-emulator\": \"local\",\n    }\n\n    return {\n      chainId: chainIdMap[response.networkParameters.chainId],\n    }\n  }\n\n  return null\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nconst oldIdentifierPatternFn = () => /\\b(0x\\w+)\\b/g\nfunction isOldIdentifierSyntax(cadence) {\n  return oldIdentifierPatternFn().test(cadence)\n}\n\nconst newIdentifierPatternFn = () => /import\\s+\"(\\w+)\"/g\nfunction isNewIdentifierSyntax(cadence) {\n  return newIdentifierPatternFn().test(cadence)\n}\n\nfunction getContractIdentifierSyntaxMatches(cadence) {\n  return cadence.matchAll(newIdentifierPatternFn())\n}\n\nexport async function resolveCadence(ix) {\n  if (!isTransaction(ix) && !isScript(ix)) return ix\n\n  var cadence = get(ix, \"ix.cadence\")\n\n  invariant(\n    isFn(cadence) || isString(cadence),\n    \"Cadence needs to be a function or a string.\"\n  )\n  if (isFn(cadence)) cadence = await cadence({})\n  invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n  invariant(\n    !isOldIdentifierSyntax(cadence) || !isNewIdentifierSyntax(cadence),\n    \"Both account identifier and contract identifier syntax not simultaneously supported.\"\n  )\n  if (isOldIdentifierSyntax(cadence)) {\n    cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce((cadence, [key, value]) => {\n          const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\")\n          return cadence.replace(regex, value)\n        }, cadence)\n      )\n  }\n\n  if (isNewIdentifierSyntax(cadence)) {\n    for (const [fullMatch, contractName] of getContractIdentifierSyntaxMatches(\n      cadence\n    )) {\n      const address = await config().get(`system.contracts.${contractName}`)\n      if (address) {\n        cadence = cadence.replace(\n          fullMatch,\n          `import ${contractName} from ${withPrefix(address)}`\n        )\n      } else {\n        logger.log({\n          title: \"Contract Placeholder not found\",\n          message: `Cannot find a value for contract placeholder ${contractName}. Please add to your flow.json or explicitly add it to the config 'contracts.*' namespace.`,\n          level: logger.LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  // We need to move this over in any case.\n  ix.message.cadence = cadence\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nasync function handleArgResolution(arg, depth = 3) {\n  invariant(\n    depth > 0,\n    `Argument Resolve Recursion Limit Exceeded for Arg: ${arg.tempId}`\n  )\n\n  if (isFn(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument()\n    return handleArgResolution(resolvedArg, depth - 1)\n  } else {\n    return arg\n  }\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg)\n      ix.arguments[id].asArgument = cast(res)\n    }\n  }\n\n  return ix\n}\n","import {SHA3} from \"sha3\"\nimport {encode, Buffer} from \"@onflow/rlp\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport const encodeTransactionPayload = tx =>\n  prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx =>\n  prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\nexport const encodeTxIdFromVoucher = voucher =>\n  sha3_256(rlpEncode(prepareVoucher(voucher)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(\n  Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),\n  32\n).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst sha3_256 = msg => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msg, \"hex\"))\n  return sha.digest().toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(sansPrefix(tx.proposalKey.address)),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(sansPrefix(tx.payer)),\n    tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer))),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst prepareVoucher = voucher => {\n  validateVoucher(voucher)\n\n  const signers = collectSigners(voucher)\n\n  const prepareSigs = sigs => {\n    return sigs\n      .map(({address, keyId, sig}) => {\n        return {signerIndex: signers.get(address), keyId, sig}\n      })\n      .sort((a, b) => {\n        if (a.signerIndex > b.signerIndex) return 1\n        if (a.signerIndex < b.signerIndex) return -1\n        if (a.keyId > b.keyId) return 1\n        if (a.keyId < b.keyId) return -1\n      })\n      .map(sig => {\n        return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n      })\n  }\n\n  return [\n    [\n      scriptBuffer(voucher.cadence),\n      voucher.arguments.map(argumentToString),\n      blockBuffer(voucher.refBlock),\n      voucher.computeLimit,\n      addressBuffer(sansPrefix(voucher.proposalKey.address)),\n      voucher.proposalKey.keyId,\n      voucher.proposalKey.sequenceNum,\n      addressBuffer(sansPrefix(voucher.payer)),\n      voucher.authorizers.map(authorizer =>\n        addressBuffer(sansPrefix(authorizer))\n      ),\n    ],\n    prepareSigs(voucher.payloadSigs),\n    prepareSigs(voucher.envelopeSigs),\n  ]\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  payloadSigsFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst validateVoucher = voucher => {\n  payloadFields.forEach(field => checkField(voucher, field))\n  proposalKeyFields.forEach(field =>\n    checkField(voucher.proposalKey, field, \"proposalKey\")\n  )\n  payloadSigsFields.forEach(field => checkField(voucher, field))\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n  envelopeSigsFields.forEach(field => checkField(voucher, field))\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field =>\n      checkField(sig, field, \"envelopeSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst payloadSigsFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst envelopeSigsFields = [{name: \"envelopeSigs\", check: isArray}]\n\nconst envelopeSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {withPrefix} from \"@onflow/util-address\"\nimport {encodeTxIdFromVoucher} from \"../encode/encode.js\"\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p))\n  } else {\n    inside.delete(ix.payer)\n  }\n  return Array.from(inside)\n}\n\nexport function findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer])\n  return Array.from(outside)\n}\n\nexport const createSignableVoucher = ix => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, [])\n    return authorizations[0] ? authorizations : []\n  }\n\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(\n      ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n    ),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport const voucherToTxId = voucher => {\n  return encodeTxIdFromVoucher(voucher)\n}\n","import {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log} from \"@onflow/util-logger\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\nimport {v4 as uuidv4} from \"uuid\"\n\nconst MAX_DEPTH_LIMIT = 5\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\nconst isFn = v =>\n  v &&\n  (Object.prototype.toString.call(v) === \"[object Function]\" ||\n    \"function\" === typeof v ||\n    v instanceof Function)\n\nconst genAccountId = (...ids) => ids.join(\"-\")\n\nconst ROLES = {\n  PAYER: \"payer\",\n  PROPOSER: \"proposer\",\n  AUTHORIZATIONS: \"authorizations\",\n}\n\nfunction debug() {\n  const SPACE = \" \"\n  const SPACE_COUNT_PER_INDENT = 4\n  const DEBUG_MESSAGE = []\n  return [\n    function (msg, indent = 0) {\n      DEBUG_MESSAGE.push(\n        Array(indent * SPACE_COUNT_PER_INDENT)\n          .fill(SPACE)\n          .join(\"-\") + msg\n      )\n    },\n    function () {\n      return DEBUG_MESSAGE.reduce((prev, curr) => prev + \"\\n\" + curr)\n    },\n  ]\n}\n\nfunction recurseFlatMap(el, depthLimit = 3) {\n  if (depthLimit <= 0) return el\n  if (!Array.isArray(el)) return el\n  return recurseFlatMap(\n    el.flatMap(e => e),\n    depthLimit - 1\n  )\n}\n\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function removeUnusedIxAccounts(ix) {\n  const payerTempIds = Array.isArray(ix.payer) ? ix.payer : [ix.payer]\n  const authorizersTempIds = Array.isArray(ix.authorizations)\n    ? ix.authorizations\n    : [ix.authorizations]\n  const proposerTempIds = Array.isArray(ix.proposer)\n    ? ix.proposer\n    : [ix.proposer]\n\n  const ixAccountKeys = Object.keys(ix.accounts)\n  const uniqueTempIds = [\n    ...new Set(payerTempIds.concat(authorizersTempIds, proposerTempIds)),\n  ]\n\n  for (const ixAccountKey of ixAccountKeys) {\n    if (!uniqueTempIds.find(id => id === ixAccountKey)) {\n      delete ix.accounts[ixAccountKey]\n    }\n  }\n}\n\nfunction addAccountToIx(ix, newAccount) {\n  if (\n    typeof newAccount.addr === \"string\" &&\n    (typeof newAccount.keyId === \"number\" ||\n      typeof newAccount.keyId === \"string\")\n  ) {\n    newAccount.tempId = idof(newAccount)\n  } else {\n    newAccount.tempId = newAccount.tempId || uuidv4()\n  }\n\n  const existingAccount = ix.accounts[newAccount.tempId] || newAccount\n\n  if (!ix.accounts[newAccount.tempId]) {\n    ix.accounts[newAccount.tempId] = newAccount\n  }\n\n  ix.accounts[newAccount.tempId].role.proposer =\n    existingAccount.role.proposer || newAccount.role.proposer\n  ix.accounts[newAccount.tempId].role.payer =\n    existingAccount.role.payer || newAccount.role.payer\n  ix.accounts[newAccount.tempId].role.authorizer =\n    existingAccount.role.authorizer || newAccount.role.authorizer\n\n  return ix.accounts[newAccount.tempId]\n}\n\nfunction uniqueAccountsFlatMap(accounts) {\n  const flatMapped = recurseFlatMap(accounts)\n  const seen = new Set()\n\n  const uniqueAccountsFlatMapped = flatMapped\n    .map(account => {\n      const accountId = genAccountId(\n        account.tempId,\n        account.role.payer,\n        account.role.proposer,\n        account.role.authorizer,\n        account.role.param\n      )\n      if (seen.has(accountId)) return null\n      seen.add(accountId)\n      return account\n    })\n    .filter(e => e !== null)\n\n  return uniqueAccountsFlatMapped\n}\n\nasync function recurseResolveAccount(\n  ix,\n  currentAccountTempId,\n  depthLimit = MAX_DEPTH_LIMIT,\n  {debugLogger}\n) {\n  if (depthLimit <= 0) {\n    throw new Error(\n      `recurseResolveAccount Error: Depth limit (${MAX_DEPTH_LIMIT}) reached. Ensure your authorization functions resolve to an account after ${MAX_DEPTH_LIMIT} resolves.`\n    )\n  }\n\n  let account = ix.accounts[currentAccountTempId]\n\n  if (!account) return null\n\n  debugLogger(\n    `account: ${account.tempId}`,\n    Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n  )\n\n  if (account?.resolve) {\n    if (isFn(account?.resolve)) {\n      debugLogger(\n        `account: ${account.tempId} -- cache MISS`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      const {resolve, ...accountWithoutResolve} = account\n\n      let resolvedAccounts = await resolve(\n        accountWithoutResolve,\n        buildPreSignable(accountWithoutResolve, ix)\n      )\n\n      resolvedAccounts = Array.isArray(resolvedAccounts)\n        ? resolvedAccounts\n        : [resolvedAccounts]\n\n      let flatResolvedAccounts = recurseFlatMap(resolvedAccounts)\n\n      flatResolvedAccounts = flatResolvedAccounts.map(flatResolvedAccount =>\n        addAccountToIx(ix, flatResolvedAccount)\n      )\n\n      account.resolve = flatResolvedAccounts.map(\n        flatResolvedAccount => flatResolvedAccount.tempId\n      )\n\n      account = addAccountToIx(ix, account)\n\n      const recursedAccounts = await Promise.all(\n        flatResolvedAccounts.map(async resolvedAccount => {\n          return await recurseResolveAccount(\n            ix,\n            resolvedAccount.tempId,\n            depthLimit - 1,\n            {debugLogger}\n          )\n        })\n      )\n\n      return recursedAccounts\n        ? recurseFlatMap(recursedAccounts)\n        : account.tempId\n    } else {\n      debugLogger(\n        `account: ${account.tempId} -- cache HIT`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      return account.resolve\n    }\n  }\n  return account.tempId\n}\n\nasync function resolveAccountType(ix, type, {debugLogger}) {\n  invariant(\n    ix && typeof ix === \"object\",\n    \"resolveAccountType Error: ix not defined\"\n  )\n  invariant(\n    type === ROLES.PAYER ||\n      type === ROLES.PROPOSER ||\n      type === ROLES.AUTHORIZATIONS,\n    \"resolveAccountType Error: type must be 'payer', 'proposer' or 'authorizations'\"\n  )\n\n  let accountTempIDs = Array.isArray(ix[type]) ? ix[type] : [ix[type]]\n\n  let allResolvedAccounts = []\n  for (let accountId of accountTempIDs) {\n    let account = ix.accounts[accountId]\n    invariant(account, `resolveAccountType Error: account not found`)\n\n    let resolvedAccountTempIds = await recurseResolveAccount(\n      ix,\n      accountId,\n      MAX_DEPTH_LIMIT,\n      {\n        debugLogger,\n      }\n    )\n\n    resolvedAccountTempIds = Array.isArray(resolvedAccountTempIds)\n      ? resolvedAccountTempIds\n      : [resolvedAccountTempIds]\n\n    let resolvedAccounts = resolvedAccountTempIds.map(\n      resolvedAccountTempId => ix.accounts[resolvedAccountTempId]\n    )\n\n    let flatResolvedAccounts = uniqueAccountsFlatMap(resolvedAccounts)\n\n    allResolvedAccounts = allResolvedAccounts.concat(flatResolvedAccounts)\n  }\n\n  invariant(\n    allResolvedAccounts.length > 0,\n    \"resolveAccountType Error: failed to resolve any accounts\"\n  )\n\n  if (type === ROLES.PAYER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.payer === true\n    )\n  }\n  if (type === ROLES.PROPOSER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.proposer === true\n    )\n  }\n  if (type === ROLES.AUTHORIZATIONS) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.authorizer === true\n    )\n  }\n\n  ix[type] = Array.isArray(ix[type])\n    ? [...new Set(allResolvedAccounts.map(acct => acct.tempId))]\n    : allResolvedAccounts[0].tempId\n\n  // Ensure all payers are of the same account\n  if (type === ROLES.PAYER) {\n    let address\n    for (const payerTempID of ix[ROLES.PAYER]) {\n      let pAcct = ix.accounts[payerTempID]\n      if (!address) address = pAcct.addr\n      else if (address !== pAcct.addr) {\n        throw new Error(\n          \"resolveAccountType Error: payers from different accounts detected\"\n        )\n      }\n    }\n  }\n}\n\nexport async function resolveAccounts(ix, opts = {}) {\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\",\n      })\n    }\n    let [debugLogger, getDebugMessage] = debug()\n    try {\n      await resolveAccountType(ix, ROLES.PROPOSER, {debugLogger})\n      await resolveAccountType(ix, ROLES.AUTHORIZATIONS, {debugLogger})\n      await resolveAccountType(ix, ROLES.PAYER, {debugLogger})\n\n      await removeUnusedIxAccounts(ix, {debugLogger})\n\n      if (opts.enableDebug) {\n        console.debug(getDebugMessage())\n      }\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\nimport {\n  createSignableVoucher,\n  findInsideSigners,\n  findOutsideSigners,\n} from \"./voucher.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      \n      // Promise.all could potentially break the flow if there are multiple inside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iiframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const insideSigner of insideSigners) {\n      //   await fetchSignature(ix, insidePayload)(insideSigner);\n      // }\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n\n      // Promise.all could potentially break the flow if there are multiple outside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const outsideSigner of outsideSigners) {\n      //   await fetchSignature(ix, outsidePayload)(outsideSigner);\n      // }\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null && acct.signature !== undefined) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  const payerAddress = sansPrefix(\n    (Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer])\n      .addr\n  )\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: payerAddress,\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {get, pipe, Ok, Bad} from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", [])\n  return pipe(\n    ix,\n    validators.map(cb => ix => cb(ix, {Ok, Bad}))\n  )\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {get, isFn} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nexport async function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\")\n  if (isFn(fn)) {\n    await fn(createSignableVoucher(ix))\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst DEFAULT_COMPUTE_LIMIT = 100\n\nexport async function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit =\n      ix.message.computeLimit || (await config.get(\"fcl.limit\"))\n\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject:\n          \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\",\n      })\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT\n    }\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\nimport {resolveVoucherIntercept} from \"./resolve-voucher-intercept.js\"\nimport {resolveComputeLimit} from \"./resolve-compute-limit.js\"\n\nconst noop = v => v\nconst debug =\n  (key, fn = noop) =>\n  async ix => {\n    const take = (obj, keys = []) => {\n      if (typeof keys === \"string\") keys = keys.split(\" \")\n      keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n    }\n\n    const accts = ix =>\n      [\n        \"\\nAccounts:\",\n        {\n          proposer: ix.proposer,\n          authorizations: ix.authorizations,\n          payer: ix.payer,\n        },\n        \"\\n\\nDetails:\",\n        ix.accounts,\n      ].filter(Boolean)\n\n    const log = (...msg) => {\n      console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n    }\n\n    if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n    return ix\n  }\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveComputeLimit,\n  debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  resolveVoucherIntercept,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\")\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    ix.message.refBlock = (\n      await sendFn(\n        build([getBlock()]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      ).then(decode)\n    ).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\")\n      const sendFn = await config.first(\n        [\"sdk.transport\", \"sdk.send\"],\n        defaultSend\n      )\n\n      invariant(\n        sendFn,\n        `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n      )\n\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}","import {Ok, Bad} from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, {Ok, Bad}) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport {interaction, pipe} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {invariant} from \"../build/build-invariant.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\n\n/**\n * @description - Sends arbitrary scripts, transactions, and requests to Flow\n * @param {Array.<Function>} args - An array of functions that take interaction and return interaction\n * @param {object} opts - Optional parameters\n * @returns {Promise<*>} - A promise that resolves to a response\n */\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFn(\n    await resolveFn(args),\n    {config, response, ix: ixModule, Buffer},\n    opts\n  )\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers)\n  payload.add(voucher.proposalKey.address)\n  payload.delete(voucher.payer)\n  return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer])\n  return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n    super(msg)\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n  }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher)\n  let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(\n      signerAddress\n    )\n  }\n\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address),\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address),\n    })),\n  }\n\n  return isPayloadSigner\n    ? encodeTransactionPayload(message)\n    : encodeTransactionEnvelope(message)\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n  return update(\"ix.validators\", validators =>\n    Array.isArray(validators) ? validators.push(cb) : [cb]\n  )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\n/**\n * @description - A builder function that returns a partial interaction to a block at a specific height\n * @param {number} height - The height of the block to get\n * @returns {Function} - A partial interaction object\n */\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix))\n        return Bad(\n          ix,\n          \"Unable to specify a block id with a Get Account interaction.\"\n        )\n      if (typeof ix.block.isSealed === \"boolean\")\n        return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height)\n        return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Account} Account\n */\n\n/**\n * @description  Returns the details of an account from their public address\n * @param {string} address - Address of the account\n * @param {object} [queryOptions] - Query parameters\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Account>} - A promise that resolves to an account response\n */\nexport function account(address, {height, id} = {}, opts) {\n  invariant(\n    !(id && height),\n    `Method: account -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decode)\n\n  // Get account by height\n  if (height)\n    return send([getAccount(address), atBlockHeight(height)], opts).then(decode)\n\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {invariant} from \"@onflow/util-invariant\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Block} Block\n */\n\n/**\n * @description Returns the latest block (optionally sealed or not), by id, or by height\n * @param {object} [queryOptions] - Query parameters\n * @param {boolean} [queryOptions.sealed=false] - Whether to query for a sealed block\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Block>} - A promise that resolves to a block response\n */\nexport function block({sealed = false, id, height} = {}, opts = {}) {\n  invariant(\n    !((sealed && id) || (sealed && height)),\n    `Method: block -- Cannot pass \"sealed\" with \"id\" or \"height\"`\n  )\n\n  invariant(\n    !(id && height),\n    `Method: block -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decode)\n\n  // Get block by height\n  if (height)\n    return send([getBlock(), atBlockHeight(height)], opts).then(decode)\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\nimport * as logger from \"@onflow/util-logger\"\n\nexport function getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\",\n    })\n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a height range\n * NOTE:\n * - The block range provided must be from the current spork.\n * - The block range provided must be 250 blocks or lower per request.\n * @param {string} eventName - The name of the event to get\n * @param {number} fromBlockHeight - The height of the block to start looking for events (inclusive)\n * @param {number} toBlockHeight - The height of the block to stop looking for events (inclusive)\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockHeightRange(eventName, fromBlockHeight, toBlockHeight) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.start = fromBlockHeight\n      ix.events.end = toBlockHeight\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a set of blocks, specified by block ids\n * NOTE:\n * - The block range provided must be from the current spork.\n * @param {string} eventName - The name of the event to get\n * @param {number[]} blockIds - The ids of the blocks to look for events\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockIds(eventName, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get a block header\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all a collection containing a list of transaction ids by its collection id\n * NOTE:\n * - The block range provided must be from the current spork. All events emitted during past sporks is current unavailable.\n * @param {string} [id] - The id of the collection to get\n * @returns {Function} - An interaction object\n */\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the status of transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get status\n * @returns {Function} - An interaction object\n */\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns a transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get\n * @returns {Function} - An interaction object\n */\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetNetworkParameters} from \"../interaction/interaction.js\"\n\nexport function getNetworkParameters() {\n  return pipe([\n    makeGetNetworkParameters,\n    ix => {\n      return Ok(ix)\n    },\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\n/**\n * @description - A utility builder to be used with other builders to pass in arguments with a value and supported type\n * @param {Array.<*>} ax - An array of arguments\n * @returns {Function} - An interaction object\n */\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\n/**\n * @description - A utility builder to be used with fcl.args[...] to create FCL supported arguments for interactions\n * @param {any} value - The value of the argument\n * @param {Function} xform - A function to transform the value\n * @returns {object} - An argument object\n */\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {pipe, prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport function payer(ax = []) {\n  if (!Array.isArray(ax)) ax = [ax]\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: PAYER})\n    })\n  )\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([makeScript, put(\"ix.cadence\", template(...args))])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n/**\n * @description - A template builder to use a Cadence transaction for an interaction\n * @param {...*} args - The arguments to pass\n * @returns {Function} - An interaction object\n */\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {put} from \"../interaction/interaction.js\"\n\nexport function voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn)\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response as responseModule} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nexport const resolveProposerSequenceNumber =\n  ({node}) =>\n  async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    const response = await sendFn(\n      await build([getAccount(ix.accounts[ix.proposer].addr)]),\n      {config, response: responseModule, Buffer, ix: ixModule},\n      {node}\n    )\n    const decoded = await decodeResponse(response)\n\n    ix.accounts[ix.proposer].sequenceNum =\n      decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n    return Ok(ix)\n  }\n","import {\n  isTransaction,\n  Ok,\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\")\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], defaultSend)\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await sendFn(ix, {config, response, Buffer, ix: ixModule}, {node})\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport const idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport function sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\nexport function authzFn(opts = {}) {\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      resolve: null,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\nexport function authzResolve(opts = {}) {\n  return function (account) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\nexport function authzResolveMany(opts = {}) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n\nexport function authzDeepResolveMany(opts = {}, depth = 1) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_DEEP_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve:\n        depth > 0\n          ? authzDeepResolveMany(opts, depth - 1)(account).resolve\n          : authzResolveMany(opts)(account).resolve\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import * as logger from \"@onflow/util-logger\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\nexport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n  encodeTxIdFromVoucher,\n} from \"./encode/encode\"\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n  isGetNetworkParameters,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher, voucherToTxId} from \"./resolve/voucher.js\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {account} from \"./account/account.js\"\nexport {block} from \"./block/block.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {getNetworkParameters} from \"./build/build-get-network-parameters.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\nexport {voucherIntercept} from \"./build/build-voucher-intercept.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {response} from \"./response/response.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveVoucherIntercept} from \"./resolve/resolve-voucher-intercept.js\"\n\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The params builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\nexport const param = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The param builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\"\n"],"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","PING","GET_TRANSACTION","GET_BLOCK","GET_BLOCK_HEADER","GET_COLLECTION","GET_NETWORK_PARAMETERS","BAD","OK","ACCOUNT","PARAM","ARGUMENT","AUTHORIZER","PAYER","PROPOSER","ACCT","ARG","IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNumber","d","isArray","Array","isObj","isNull","isFn","isInteraction","ix","key","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","prepAccountKeyId","acct","keyId","invariant","isNaN","parseInt","prepAccount","opts","arguments","length","undefined","role","tempId","uuidv4","authorization","resolve","_len","rest","_key","reduce","fn","accounts","authorizations","push","payer","makeArgument","arg","message","value","asArgument","xform","resolveArgument","bind","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","makeGetNetworkParameters","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isGetNetworkParameters","isOk","isBad","why","isAccount","account","kind","isParam","param","isArgument","argument","hardMode","has","Error","recPipe","fns","hd","cur","e","pipe","_len2","args","_key2","arg1","arg2","identity","v","get","fallback","assigns","put","update","destroy","build","DEFAULT_RESPONSE","response","getBlock","isSealed","block","getAccount","addr","sansPrefix","latestBlockDeprecationNotice","log","deprecate","pkg","subject","transition","decodeImplicit","i","decodeVoid","decodeType","type","staticType","decodePath","path","domain","identifier","decodeCapability","cap","address","borrowType","decodeOptional","optional","decoders","stack","recurseDecode","decodeReference","decodeArray","array","Promise","all","map","res","decodeDictionary","dictionary","acc","decodeComposite","composite","decoded","fields","name","decoder","id","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","Enum","Type","Path","Capability","lookup","found","find","test","reg","RegExp","substring","decodeInstructions","join","decode","customDecoders","filteredDecoders","filter","customDecoder","decoderKey","decodeResponse","encodedData","transactionStatus","events","decodeEvents","transactionId","transactionIndex","eventIndex","data","payload","transaction","blockId","blockHeight","blockTimestamp","blockHeader","latestBlock","collection","networkParameters","chainIdMap","chainId","isString","oldIdentifierPatternFn","isOldIdentifierSyntax","cadence","newIdentifierPatternFn","isNewIdentifierSyntax","getContractIdentifierSyntaxMatches","matchAll","resolveCadence","config","where","then","entries","_ref","regex","replace","fullMatch","contractName","withPrefix","logger","title","level","LEVELS","warn","cast","handleArgResolution","depth","resolvedArg","resolveArguments","encodeTransactionPayload","tx","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","encodeTxIdFromVoucher","voucher","sha3_256","prepareVoucher","rightPaddedHexBuffer","pad","Buffer","from","padEnd","leftPaddedHexBuffer","padStart","TRANSACTION_DOMAIN_TAG","toString","addressBuffer","blockBuffer","argumentToString","stringify","scriptBuffer","script","signatureBuffer","signature","encode","msg","sha","SHA3","digest","validatePayload","refBlock","computeLimit","proposalKey","sequenceNum","authorizers","authorizer","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","Map","addSigner","set","forEach","validateVoucher","prepareSigs","sigs","envelopeSigs","payloadFields","field","checkField","proposalKeyFields","payloadSigsFields","index","payloadSigFields","envelopeSigsFields","envelopeSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","findInsideSigners","inside","add","proposer","p","delete","findOutsideSigners","outside","createSignableVoucher","buildAuthorizers","cid","prev","current","item","buildInsideSigners","buildOutsideSigners","voucherToTxId","MAX_DEPTH_LIMIT","idof","prototype","call","Function","genAccountId","ids","ROLES","AUTHORIZATIONS","debug","SPACE","SPACE_COUNT_PER_INDENT","DEBUG_MESSAGE","indent","fill","curr","recurseFlatMap","el","depthLimit","flatMap","buildPreSignable","f_type","f_vsn","roles","error","console","removeUnusedIxAccounts","payerTempIds","authorizersTempIds","proposerTempIds","ixAccountKeys","uniqueTempIds","concat","ixAccountKey","addAccountToIx","newAccount","existingAccount","uniqueAccountsFlatMap","flatMapped","seen","uniqueAccountsFlatMapped","accountId","recurseResolveAccount","currentAccountTempId","debugLogger","Math","max","accountWithoutResolve","resolvedAccounts","flatResolvedAccounts","flatResolvedAccount","recursedAccounts","resolvedAccount","resolveAccountType","accountTempIDs","allResolvedAccounts","resolvedAccountTempIds","resolvedAccountTempId","payerTempID","pAcct","resolveAccounts","getDebugMessage","enableDebug","resolveSignatures","insideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","outsidePayload","encodeOutsideMessage","innerFetchSignature","signingFunction","buildSignable","payerAddress","resolveValidators","validators","cb","resolveFinalNormalization","resolveVoucherIntercept","DEFAULT_COMPUTE_LIMIT","resolveComputeLimit","noop","accts","Boolean","execFetchRef","execFetchSequenceNumber","node","sendFn","first","defaultSend","ixModule","values","sequenceNumber","predicate","send","resolveFn","defaultResolve","decodersFromConfig","pattern","fromEntries","findPayloadSigners","findEnvelopeSigners","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","trim","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","isPayloadSigner","includes","isEnvelopeSigner","ps","validator","atBlockHeight","height","atBlockId","sealed","ax","authz","getEvents","eventType","start","end","getEventsAtBlockHeightRange","eventName","fromBlockHeight","toBlockHeight","getEventsAtBlockIds","blockIds","getBlockHeader","getCollection","getTransactionStatus","getTransaction","getNetworkParameters","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","DEFUALT_REF","voucherIntercept","resolveProposerSequenceNumber","responseModule","getRefId","resolveRefBlockId","mockAccountResponse","numberOfKeys","_","mockGetBlockResponse","mockSend","execSend","authzFn","fallbackSigningFunction","authzResolve","ROLE","authzResolveMany","authzDeepResolveMany","run","VERSION","params"],"mappings":"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"}