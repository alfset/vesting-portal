{"version":3,"file":"sdk-send-http.umd.js","sources":["../src/http-request.js","../src/send-execute-script.js","../src/send-get-account.js","../src/send-get-block-header.js","../src/send-get-block.js","../src/send-get-collection.js","../src/send-get-events.js","../src/send-get-transaction.js","../src/send-get-transaction-status.js","../src/send-ping.js","../src/send-transaction.js","../src/send-get-network-parameters.js","../src/send-http.js"],"sourcesContent":["import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"cross-fetch\"\n\nconst AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nclass HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n  timeoutLimit = 30000,\n  enableRequestLogging = true,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    const controller = new AbortController()\n    const fetchTimeout = setTimeout(() => {\n      controller.abort()\n    }, timeoutLimit)\n\n    return fetchTransport(`${hostname}${path}`, {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = await res.text().catch(() => null)\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        if (e.name === \"AbortError\") {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        if (enableRequestLogging) {\n          await logger.log({\n            title: \"Access Node Error\",\n            message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\n  Please verify that you are not unintentionally using a GRPC access node.\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n            level: logger.LEVELS.error,\n          })\n        }\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n      .finally(() => {\n        clearTimeout(fetchTimeout)\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (\n        error.name === \"AbortError\" ||\n        retryStatusCodes.includes(error.statusCode)\n      ) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\n                `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n              )\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n\nfunction safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_id=${ix.block.id}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.height}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=sealed`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString())\n\n  return ret\n}\n\nexport async function sendExecuteScript(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Execute Script Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Execute Script Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Execute Script Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts)\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5,\n}\n\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3,\n}\n\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.height}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=sealed&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  const unwrapContracts = contracts => {\n    const c = {}\n    if (!contracts) return c\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString()\n    }\n    return c\n  }\n\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys:\n      res.keys?.map(key => ({\n        index: Number(key.index),\n        publicKey: key.public_key.replace(/^0x/, \"\"),\n        signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n        signAlgoString: key.signing_algorithm,\n        hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n        hashAlgoString: key.hashing_algorithm,\n        sequenceNumber: Number(key.sequence_number),\n        weight: Number(key.weight),\n        revoked: key.revoked,\n      })) ?? [],\n  }\n\n  return ret\n}\n\nexport async function sendGetAccount(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Account Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Account Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Account Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n  }\n\n  return ret\n}\n\nexport async function sendGetBlockHeader(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Block Header Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Block Header Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}?expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    collectionGuarantees: block.payload.collection_guarantees.map(\n      collectionGuarantee => ({\n        collectionId: collectionGuarantee.collection_id,\n        signerIds: collectionGuarantee.signer_ids,\n      })\n    ),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id,\n    })),\n  }\n\n  return ret\n}\n\nexport async function sendGetBlock(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Block Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Block Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetCollection(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Collection Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Collection Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/collections/${ix.collection.id}?expand=transactions`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${ix.events.eventType}&start_height=${ix.events.start}&end_height=${ix.events.end}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${\n      ix.events.eventType\n    }&block_ids=${ix.events.blockIds.join(\",\")}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.events = []\n  res.forEach(block =>\n    block.events\n      ? block.events.forEach(event =>\n          ret.events.push({\n            blockId: block.block_id,\n            blockHeight: Number(block.block_height),\n            blockTimestamp: block.block_timestamp,\n            type: event.type,\n            transactionId: event.transaction_id,\n            transactionIndex: Number(event.transaction_index),\n            eventIndex: Number(event.event_index),\n            payload: JSON.parse(\n              context.Buffer.from(event.payload, \"base64\").toString()\n            ),\n          })\n        )\n      : null\n  )\n\n  return ret\n}\n\nexport async function sendGetEvents(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionContainsBlockHeightRange = ix.events.start !== null\n  const interactionContainsBlockIDsList =\n    Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0\n\n  invariant(\n    interactionContainsBlockHeightRange || interactionContainsBlockIDsList,\n    \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"\n  )\n\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts)\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetTransaction(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_id),\n    sequenceNumber: Number(key.sequence_number),\n  })\n\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature,\n  })\n\n  const unwrapArg = arg =>\n    JSON.parse(context.Buffer.from(arg, \"base64\").toString())\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key\n      ? unwrapKey(res.proposal_key)\n      : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)],\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\nexport async function sendGetTransactionStatus(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Status Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Status Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Status Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transaction_results/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(\n        context.Buffer.from(event.payload, \"base64\").toString()\n      ),\n    })),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendPing(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Ping Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Ping Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  await httpRequest({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport async function sendTransaction(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Transaction Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = []\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n        if (!payloadSignatures.find(existingSignature => existingSignature.address === signature.address\n          && existingSignature.key_index === signature.key_index\n          && existingSignature.signature === signature.signature\n        )) {\n          payloadSignatures.push(signature)\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix,\n      })\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {}\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct)\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n      }\n    } catch (error) {\n      console.error(\n        \"SDK HTTP Send Error: Trouble applying envelope signature\",\n        {acct, ix}\n      )\n      throw error\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures)\n\n  var t1 = Date.now()\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [\n        ...ix.message.arguments.map(arg =>\n          context.Buffer.from(\n            JSON.stringify(ix.arguments[arg].asArgument)\n          ).toString(\"base64\")\n        ),\n      ],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(\n        ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n      ),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum),\n      },\n      authorizers: ix.authorizations\n        .map(tempId => ix.accounts[tempId].addr)\n        .reduce((prev, current) => {\n          return prev.find(item => item === current) ? prev : [...prev, current]\n        }, [])\n        .map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures,\n    },\n  })\n  var t2 = Date.now()\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionId = res.id\n\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetNetworkParameters(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Network Parameters Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Network Parameters Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/network/parameters`,\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: opts.enableRequestLogging ?? true,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.networkParameters = {\n    chainId: res.chain_id,\n  }\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {sendGetNetworkParameters} from \"./send-get-network-parameters.js\"\n\nexport const send = async (ix, context = {}, opts = {}) => {\n  invariant(\n    opts.node,\n    `SDK Send Error: Either opts.node or \"accessNode.api\" in config must be defined.`\n  )\n  invariant(context.ix, `SDK Send Error: context.ix must be defined.`)\n\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts)\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts)\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts)\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts)\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts)\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts)\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts)\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts)\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts)\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts)\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts)\n    default:\n      return ix\n  }\n}\n"],"names":["AbortController","globalThis","require","HTTPRequestError","Error","constructor","_ref","error","hostname","path","method","requestBody","responseBody","responseStatusText","statusCode","msg","name","errorMessage","httpRequest","_ref2","body","headers","retryLimit","retryIntervalMs","timeoutLimit","enableRequestLogging","bodyJSON","JSON","stringify","makeRequest","controller","fetchTimeout","setTimeout","abort","fetchTransport","signal","then","res","ok","json","responseText","text","catch","response","safeParseJSON","message","statusText","status","e","logger","log","title","level","LEVELS","finally","clearTimeout","requestLoop","retryAttempt","arguments","length","undefined","resp","retryStatusCodes","includes","Promise","resolve","reject","console","warn","data","parse","sendExecuteScriptAtBlockIDRequest","ix","context","opts","defaultHttpRequest","node","block","id","script","Buffer","from","cadence","toString","map","arg","asArgument","constructResponse","sendExecuteScriptAtBlockHeightRequest","height","sendExecuteScriptAtLatestBlockRequest","ret","tag","encodedData","sendExecuteScript","invariant","HashAlgorithmIDs","SHA2_256","SHA2_384","SHA3_256","SHA3_384","KMAC128_BLS_BLS12_381","SignatureAlgorithmIDs","ECDSA_P256","ECDSA_secp256k1","BLS_BLS12_381","sendGetAccountAtBlockHeightRequest","account","addr","sendGetAccountAtLatestBlockRequest","unwrapContracts","contracts","c","key","Object","keys","address","balance","Number","code","index","publicKey","public_key","replace","signAlgo","signing_algorithm","signAlgoString","hashAlgo","hashing_algorithm","hashAlgoString","sequenceNumber","sequence_number","weight","revoked","sendGetAccount","sendGetBlockHeaderByIDRequest","sendGetBlockHeaderByHeightRequest","sendGetLatestBlockHeaderRequest","isSealed","blockHeader","header","parentId","parent_id","timestamp","sendGetBlockHeader","interactionHasBlockID","interactionHasBlockHeight","sendGetBlockByIDRequest","sendGetBlockByHeightRequest","sendGetBlockRequest","collectionGuarantees","payload","collection_guarantees","collectionGuarantee","collectionId","collection_id","signerIds","signer_ids","blockSeals","block_seals","blockSeal","blockId","block_id","executionReceiptId","result_id","sendGetBlock","sendGetCollection","collection","transactionIds","transactions","transaction","sendGetEventsForHeightRangeRequest","events","eventType","start","end","sendGetEventsForBlockIDsRequest","blockIds","join","forEach","event","push","blockHeight","block_height","blockTimestamp","block_timestamp","type","transactionId","transaction_id","transactionIndex","transaction_index","eventIndex","event_index","sendGetEvents","interactionContainsBlockHeightRange","interactionContainsBlockIDsList","Array","isArray","sendGetTransaction","unwrapKey","keyId","key_id","unwrapSignature","sig","key_index","signature","unwrapArg","args","referenceBlockId","reference_block_id","gasLimit","gas_limit","payer","proposalKey","proposal_key","authorizers","payloadSignatures","payload_signatures","envelopeSignatures","envelope_signatures","STATUS_MAP","UNKNOWN","PENDING","FINALIZED","EXECUTED","SEALED","EXPIRED","sendGetTransactionStatus","transactionStatus","toUpperCase","statusString","status_code","error_message","sendPing","idof","acct","withPrefix","sendTransaction","values","accounts","role","sansPrefix","String","find","existingSignature","tempId","t1","Date","now","refBlock","computeLimit","proposer","sequenceNum","authorizations","reduce","prev","current","item","t2","window","CustomEvent","dispatchEvent","detail","txId","delta","sendGetNetworkParameters","networkParameters","chainId","chain_id","send","isTransaction","isGetTransactionStatus","isGetTransaction","isScript","isGetAccount","isGetEvents","isGetBlock","isGetBlockHeader","isGetCollection","isPing","isGetNetworkParameters"],"mappings":"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"}