{"version":3,"file":"fcl-react-native.module.js","sources":["../src/VERSION.js","../src/utils/is.js","../src/exec/utils/normalize-args.js","../src/document/document.js","../src/normalizers/interaction-template/interaction-template.js","../src/interaction-template-utils/derive-cadence-by-network.js","../src/utils/chain-id/fetch-chain-id.js","../src/utils/chain-id/get-chain-id.js","../src/utils/chain-id/chain-id-watcher.js","../src/utils/index.js","../src/exec/utils/derive-dependencies.js","../src/exec/utils/prep-template-opts.js","../src/exec/utils/pre.js","../src/exec/query.js","../src/utils/constants.js","../src/wallet-utils/on-message-from-fcl.js","../src/utils/is-react-native.js","../src/utils/url.js","../src/wallet-utils/send-msg-to-fcl.js","../src/normalizers/service/__vsn.js","../src/wallet-utils/CompositeSignature.js","../src/wallet-utils/encode-account-proof.js","../src/wallet-utils/inject-ext-service.js","../src/app-utils/verify-signatures.js","../src/exec/verify.js","../src/serialize/index.js","../src/default-config.js","../src/transaction/index.js","../src/events/index.js","../src/current-user/exec-service/plugins.js","../src/discovery/utils.js","../src/discovery/services.js","../src/discovery/services/authn.js","../src/discovery/index.js","../../../node_modules/sha3/sponge/permute/copy/index.js","../../../node_modules/sha3/sponge/permute/chi/index.js","../../../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../../../node_modules/sha3/sponge/permute/iota/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/index.js","../../../node_modules/sha3/sponge/permute/theta/index.js","../../../node_modules/sha3/sponge/permute/index.js","../../../node_modules/sha3/sponge/index.js","../../../node_modules/sha3/index.js","../src/interaction-template-utils/utils/hash.js","../src/interaction-template-utils/generate-template-id.js","../src/interaction-template-utils/get-interaction-template-audits.js","../src/interaction-template-utils/utils/generate-import.js","../src/interaction-template-utils/utils/find-imports.js","../src/interaction-template-utils/generate-dependency-pin.js","../src/normalizers/interaction-template/interaction-template-interface.js","../src/interaction-template-utils/generate-template-interface-id.js","../src/interaction-template-utils/verify-dependency-pin-same-at-block.js","../src/interaction-template-utils/get-template-message.js","../src/interaction-template-utils/get-template-argument-message.js","../src/shared-exports.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/normalizers/service/authn.js","../src/normalizers/service/authz.js","../src/normalizers/service/pre-authz.js","../src/normalizers/service/frame.js","../src/normalizers/service/back-channel-rpc.js","../src/normalizers/service/open-id.js","../src/normalizers/service/user-signature.js","../src/normalizers/service/local-view.js","../src/normalizers/service/account-proof.js","../src/normalizers/service/authn-refresh.js","../src/normalizers/service/service.js","../src/current-user/service-of-type.js","../src/current-user/build-user.js","../src/current-user/exec-service/index.js","../src/normalizers/service/composite-signature.js","../src/current-user/index.js","../src/exec/mutate.js","../src/utils/react-native/ServiceDiscovery.js","../src/utils/react-native/default-config.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/normalizers/service/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/http-post.js","../src/utils/react-native/render-browser.js","../src/utils/react-native/render-deeplink.js","../src/utils/react-native/exec-local.js","../src/utils/react-native/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/buildMessageHandler.js","../src/utils/react-native/strategies/utils/browser.js","../src/utils/react-native/strategies/deeplink-rpc.js","../src/utils/react-native/coreStrategies.js","../src/fcl-react-native.js"],"sourcesContent":["export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"../../utils/is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport fetchTransport from \"cross-fetch\"\nimport {config} from \"@onflow/config\"\n\nasync function httpDocumentResolver({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n\n  let res\n  try {\n    res = await fetchTransport(url)\n  } catch (e) {\n    throw new Error(\"httpDocumentResolver Error: Failed to retrieve document.\")\n  }\n\n  let document = res.ok ? await res.json() : null\n\n  return document\n}\n\nconst DOCUMENT_RESOLVERS = new Map([\n  [\"http\", httpDocumentResolver],\n  [\"https\", httpDocumentResolver],\n])\n\nexport async function retrieve({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n  invariant(\n    typeof url === \"string\",\n    \"retrieve({ url }) -- url must be a string\"\n  )\n\n  const documentResolversFromConfig = await config().where(\n    /^document\\.resolver\\./\n  )\n  Object.keys(documentResolversFromConfig).map(key => {\n    const resolverFromConfig = documentResolversFromConfig[key]\n    const resolverProtocol = key.replace(/^document\\.resolver\\./, \"\")\n    DOCUMENT_RESOLVERS.set(resolverProtocol, resolverFromConfig)\n  })\n\n  const urlParts = /^(.*):\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/.exec(url)\n  invariant(urlParts, \"Failed to parse URL\")\n  const protocol = urlParts[1]\n  invariant(urlParts, \"Failed to parse URL protocol\")\n\n  const resolver = DOCUMENT_RESOLVERS.get(protocol)\n  invariant(resolver, `No resolver found for protcol=${protocol}`)\n\n  let document = await resolver({url})\n\n  return document\n}\n","export function normalizeInteractionTemplate(template) {\n  if (template == null) return null\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      return template\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplate Error: Invalid InteractionTemplate\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template\"\n\n/**\n * @description Fills import addresses in Cadence for network\n * \n * @param {object} params\n * @param {string} params.network - Network to derive Cadence for\n * @param {object} params.template - Interaction Template to derive Cadence from\n * @returns {string} - Cadence\n */\nexport function deriveCadenceByNetwork({network, template}) {\n  invariant(\n    network != undefined,\n    \"deriveCadenceByNetwork({ network }) -- network must be defined\"\n  )\n  invariant(\n    typeof network === \"string\",\n    \"deriveCadenceByNetwork({ network }) -- network must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let networkDependencies = Object.keys(template?.data?.dependencies).map(\n        dependencyPlaceholder => {\n          let dependencyNetworkContracts = Object.values(\n            template?.data?.dependencies?.[dependencyPlaceholder]\n          )\n\n          invariant(\n            dependencyNetworkContracts,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          invariant(\n            dependencyNetworkContracts.length === 0,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          let dependencyContract = dependencyNetworkContracts[0]\n          let dependencyContractForNetwork = dependencyContract?.[network]\n\n          invariant(\n            dependencyContractForNetwork,\n            `deriveCadenceByNetwork -- Could not find ${network} network information for dependency: ${dependencyPlaceholder}`\n          )\n\n          return [dependencyPlaceholder, dependencyContractForNetwork.address]\n        }\n      )\n\n      return networkDependencies.reduce((cadence, [placeholder, address]) => {\n        const regex = new RegExp(\"(\\\\b\" + placeholder + \"\\\\b)\", \"g\")\n        return cadence.replace(regex, address)\n      }, template.data.cadence)\n\n    default:\n      throw new Error(\n        \"deriveCadenceByNetwork Error: Unsupported template version\"\n      )\n  }\n}\n","import * as sdk from \"@onflow/sdk\"\n\nexport async function fetchChainId(opts = {}) {\n  const response = await sdk\n    .send([sdk.getNetworkParameters()], opts)\n    .then(sdk.decode)\n  return response.chainId\n}\n","import {config} from \"@onflow/config\"\nimport {fetchChainId} from \"./fetch-chain-id\"\nimport {log} from \"@onflow/util-logger\"\n\n// Cache of chainId promises for each access node value\n// key: access node, value: chainId promise\nlet chainIdCache = {}\n\nlet hasWarnedFlowNetwork = false\nlet hasWarnedEnv = false\n\n/**\n * @description\n * Gets the chain ID if its set, otherwise gets the chain ID from the access node\n *\n * @param {object} opts - Optional parameters\n * @returns {Promise<string>} The chain ID of the access node\n * @throws {Error} If the chain ID is not found\n *\n * @example\n * // returns \"testnet\"\n * getChainId()\n */\nexport async function getChainId(opts = {}) {\n  let flowNetworkCfg = await config.get(\"flow.network\")\n  let envCfg = await config.get(\"env\")\n\n  /* \n    TODO: Add deprecation warning for flow.network config key\n    Remove this if statement when deprecation is complete\n\n    config.load() depends on flow.network config key even though this deprecation\n    warning has been available since https://github.com/onflow/fcl-js/pull/1420\n    it has effectively never been shown because of an issue in the implementation\n    of getChainId()\n\n    Showing this warning is the correct and intended behavior, but it would lead to\n    mixed messaging for users since config.load() depends on flow.network config key\n\n    We need to remove the dependency on flow.network config key from config.load()\n    before we can show this warning.\n  */\n  if (false && flowNetworkCfg && !hasWarnedFlowNetwork) {\n    log.deprecate({\n      pkg: \"FCL\",\n      subject:\n        'Using the \"flow.network\" configuration key for specifying the flow network',\n      message: \"Configuring flow.network is no longer required\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0002-deprecate-flow.network-config-key\",\n    })\n    hasWarnedFlowNetwork = true\n  }\n\n  if (envCfg && !hasWarnedEnv) {\n    log.deprecate({\n      pkg: \"FCL\",\n      subject:\n        'Using the \"env\" configuration key for specifying the flow network',\n      message: \"Configuring to specify flow network is no longer required\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0001-deprecate-env-config-key\",\n    })\n    hasWarnedEnv = true\n  }\n\n  const accessNode = opts.node || (await config.get(\"accessNode.api\"))\n  if (!accessNode) {\n    // Fall back to deprecated flow.network and env config keys\n    // This probably should have been done before trying to fetch the chainId from the access node\n    // However, this was the behaviour with the initial implementation of getChainId()\n    if (flowNetworkCfg) {\n      return flowNetworkCfg\n    } else if (envCfg) {\n      return envCfg\n    }\n\n    throw new Error(\n      `Either the \"accessNode.api\" config key or opts.node must be set`\n    )\n  }\n\n  // Try using cached chainId first if it exists and access node is the same\n  if (chainIdCache[accessNode]) {\n    try {\n      return await chainIdCache[accessNode]\n    } catch {}\n  }\n\n  // If no cached chainId, value is stale, or last attempt failed, try getting chainId from access node\n  // Check if another getChainId() call has already started a new promise, if not, start a new one\n  // There may have been concurrent calls to getChainId() while the first call was waiting for the response\n  if (!chainIdCache[accessNode]) {\n    chainIdCache[accessNode] = fetchChainId(opts).catch(error => {\n      // If there was an error, reset the promise so that the next call will try again\n      chainIdCache[accessNode] = null\n      throw error\n    })\n  }\n\n  // Use newly created promise\n  try {\n    return await chainIdCache[accessNode]\n  } catch (e) {\n    // Fall back to deprecated flow.network and env config keys\n    // This probably should have been done before trying to fetch the chainId from the access node\n    // However, this was the behaviour with the initial implementation of getChainId()\n    if (flowNetworkCfg) {\n      return flowNetworkCfg\n    } else if (envCfg) {\n      return envCfg\n    }\n\n    throw new Error(\n      `Error getting chainId from access node - are you using the correct access node endpoint.  If running locally, is your emulator up-to-date? ${e.message}`\n    )\n  }\n}\n\n/**\n * @description\n * Clears the chainId cache, useful for testing\n */\nexport function clearChainIdCache() {\n  chainIdCache = {}\n}\n","import {config} from \"@onflow/config\"\nimport {getChainId} from \"./get-chain-id\"\n\n/**\n * @description\n * Watches the config for changes to access node and updates the chain id accordingly\n *\n * @returns {Function} A function that unsubscribes the listener\n *\n */\nexport function watchForChainIdChanges() {\n  return config.subscribe(() => {\n    // Call getChainId to update the chainId cache if access node has changed\n    getChainId({\n      enableRequestLogging: false,\n    }).catch(() => {})\n  })\n}\n","export {getChainId} from \"./chain-id/get-chain-id\"\nexport {watchForChainIdChanges} from \"./chain-id/chain-id-watcher\"\n\nexport function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix} from \"@onflow/util-address\"\nimport {getChainId} from \"../../utils\"\n\nexport async function deriveDependencies(opts = {}) {\n  const template = opts.template\n  const network = await getChainId(opts)\n\n  const derivedDependencies = {}\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      const dependencyPlaceholderKeys = Object.keys(\n        template?.data?.dependencies\n      )\n      for (let dependencyPlaceholderKey of dependencyPlaceholderKeys) {\n        let dependencyPlaceholder =\n          template?.data?.dependencies[dependencyPlaceholderKey]\n\n        const dependencyPlaceholderContractsKeys = Object.keys(\n          dependencyPlaceholder\n        )\n        invariant(\n          dependencyPlaceholderContractsKeys.length > 0,\n          `FCL configureDependencies Error: No contracts found in template for placeholder=${dependencyPlaceholderKey}`\n        )\n        const dependencyPlaceholderContract =\n          dependencyPlaceholder[dependencyPlaceholderContractsKeys[0]]\n        const dependency = dependencyPlaceholderContract[network]\n\n        invariant(\n          dependency,\n          `FCL configureDependencies Error: No dependency information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n        invariant(\n          dependency?.address,\n          `FCL configureDependencies Error: No address information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n\n        derivedDependencies[dependencyPlaceholderKey] = withPrefix(\n          dependency?.address\n        )\n      }\n\n      return derivedDependencies\n\n    default:\n      throw new Error(\n        \"FCL configureDependencies Error: Unsupported template version\"\n      )\n  }\n}\n","import {retrieve} from \"../../document/document.js\"\nimport {normalizeInteractionTemplate} from \"../../normalizers/interaction-template/interaction-template\"\nimport {deriveCadenceByNetwork} from \"../../interaction-template-utils/derive-cadence-by-network.js\"\nimport {deriveDependencies} from \"./derive-dependencies\"\nimport {isString} from \"../../utils/is\"\nimport {getChainId} from \"../../utils\"\n\nexport async function prepTemplateOpts(opts) {\n  if (isString(opts?.template)) {\n    opts.template = await retrieve({url: opts?.template})\n  }\n\n  let dependencies = {}\n  if (opts?.template) {\n    opts.template = normalizeInteractionTemplate(opts?.template)\n    dependencies = await deriveDependencies({template: opts.template})\n  }\n\n  const cadence =\n    opts.cadence ||\n    deriveCadenceByNetwork({\n      template: opts.template,\n      network: await getChainId(opts),\n    })\n\n  opts.cadence = cadence\n  opts.dependencies = dependencies\n\n  return opts\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"../../utils/is\"\n\nasync function pre(type, opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), `${type}(opts) -- opts is required`)\n  // prettier-ignore\n  invariant(isObject(opts), `${type}(opts) -- opts must be an object`)\n  // prettier-ignore\n  invariant(!(opts.cadence && opts.template), `${type}({ template, cadence }) -- cannot pass both cadence and template`)\n  // prettier-ignore\n  invariant(isRequired(opts.cadence || opts?.template), `${type}({ cadence }) -- cadence is required`)\n  // // prettier-ignore\n  invariant(\n    isString(opts.cadence) || opts?.template,\n    `${type}({ cadence }) -- cadence must be a string`\n  )\n  // prettier-ignore\n  invariant(\n    await sdk.config().get(\"accessNode.api\"),\n    `${type}(opts) -- Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n\nexport async function preMutate(opts) {\n  return pre(\"mutate\", opts)\n}\n\nexport async function preQuery(opts) {\n  return pre(\"query\", opts)\n}\n","import * as sdk from \"@onflow/sdk\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preQuery} from \"./utils/pre.js\"\n\n/**\n * @description\n * Allows you to submit scripts to query the blockchain.\n *\n *  @param {object} opts - Query Options and configuration\n *  @param {string} opts.cadence - Cadence Script used to query Flow\n *  @param {import(\"../fcl\").ArgsFn} [opts.args] - Arguments passed to cadence script\n *  @param {object} [opts.template] - Interaction Template for a script\n *  @param {number} [opts.limit]   - Compute Limit for Query\n *  @returns {Promise}\n *\n *  @example\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n  opts = await prepTemplateOpts(opts)\n\n  return sdk.config().overload(opts.dependencies || {}, async () =>\n    // prettier-ignore\n    sdk.send([\n      sdk.script(opts.cadence),\n      sdk.args(normalizeArgs(opts.args || [])),\n      opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n    ]).then(sdk.decode)\n  )\n}\n","export const FCL_REDIRECT_URL_PARAM_NAME = 'fcl_redirect_url'\nexport const FCL_RESPONSE_PARAM_NAME = 'fclResponseJson'\n\nexport const CORE_STRATEGIES = {\n  \"HTTP/RPC\": \"HTTP/RPC\",\n  \"HTTP/POST\": \"HTTP/POST\",\n  \"IFRAME/RPC\": \"IFRAME/RPC\",\n  \"POP/RPC\": \"POP/RPC\",\n  \"TAB/RPC\": \"TAB/RPC\",\n  \"EXT/RPC\": \"EXT/RPC\",\n  \"DEEPLINK/RPC\": \"DEEPLINK/RPC\"\n}\n","/**\n * @description\n * Listens for messages from FCL\n * \n * @param {string} messageType - Message type\n * @param {Function} cb - Callback function\n * @returns {Function} - Function to remove event listener\n */\nexport const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","let _isReactNative = false\n\nexport function isReactNative() {\n  return _isReactNative\n}\n\nexport function setIsReactNative(value) {\n  _isReactNative = value\n}\n","// This is a workaround for an ongoing issue with URL in React Native\n// It does not parse the URL correctly and appends trailing slashes\n// See: https://github.com/facebook/react-native/issues/24428\n// See: https://github.com/facebook/react-native/issues/24428\n\n// The React Native team is aware of this issue but does not plan to fix it\n// since it could break existing apps, even though this is out of spec\n// See whatwg implementation: https://github.com/jsdom/whatwg-url/blob/master/lib/URL-impl.js#L6-L34\n// See react-native implementation: https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Blob/URL.js#L144-L146\n\n// This is not polyfilled globally because it could break other libraries or the user's code\nimport {isReactNative} from \"./is-react-native\"\n\nconst _URL = globalThis.URL\nexport class URL extends _URL {\n  constructor(url, base, ...args) {\n    super(url, base, ...args)\n\n    // Extra check if in React Native\n    if (!isReactNative()) {\n      return\n    }\n\n    // Fix trailing slash issue\n    if (this._url && !url.endsWith(\"/\") && this._url.endsWith(\"/\")) {\n      this._url = this._url.slice(0, -1)\n    }\n  }\n}\n","import {\n  FCL_REDIRECT_URL_PARAM_NAME,\n  FCL_RESPONSE_PARAM_NAME,\n} from \"../utils/constants\"\nimport {onMessageFromFCL} from \"./on-message-from-fcl\"\nimport {URL} from \"../utils/url\"\n\n/**\n * @description\n * Sends message to FCL window\n *\n * @param {string} type - Message type\n * @param {object} msg - Message object\n * @returns {void}\n *\n * @example\n * sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n *    f_type: \"PollingResponse\",\n *    f_vsn: \"1.0.0\",\n *    status: \"APPROVED\",\n *    reason: null,\n *    data: data,\n *  })\n */\nexport const sendMsgToFCL = (type, msg = {}) => {\n  const data = {...msg, type}\n\n  const urlParams = new URLSearchParams(window.location.search)\n  const redirectUrl = urlParams.get(FCL_REDIRECT_URL_PARAM_NAME)\n  if (redirectUrl) {\n    const url = new URL(redirectUrl)\n    url.searchParams.append(FCL_RESPONSE_PARAM_NAME, JSON.stringify(data))\n    window.location.href = url.href\n  } else if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else if (window.opener) {\n    window.opener.postMessage({...msg, type}, \"*\")\n  } else {\n    throw new Error(\"Unable to communicate with parent FCL instance\")\n  }\n}\n\n/**\n * @description\n * Listens for \"FCL:VIEW:READY:RESPONSE\" and sends \"FCL:VIEW:READY\"\n *\n * @param {Function} cb - Callback function\n * @param {object} msg - Message object\n * @returns {void}\n */\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:CLOSE\"\n *\n * @returns {void}\n */\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"APPROVED\"\n *\n * @param {object} data - Data object\n * @returns {void}\n */\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"DECLINED\"\n *\n * @param {string} reason - Reason for declining\n * @returns {void}\n */\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"REDIRECT\"\n *\n * @param {object} data - Data object\n * @returns {void}\n */\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../normalizers/service/__vsn\"\n\n/**\n * @description\n * Constructs a new CompositeSignature instance.\n *\n * @param {string} addr - Flow Address\n * @param {number} keyId - Key ID\n * @param {string} signature - Signature as a hex string\n */\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer, encode as rlpEncode} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst nonceBuffer = nonce => Buffer.from(nonce, \"hex\")\n\nexport const encodeAccountProof = (\n  {address, nonce, appIdentifier},\n  includeDomainTag = true\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    nonce,\n    \"Encode Message For Provable Authn Error: nonce must be defined\"\n  )\n  invariant(\n    appIdentifier,\n    \"Encode Message For Provable Authn Error: appIdentifier must be defined\"\n  )\n\n  invariant(\n    nonce.length >= 64,\n    \"Encode Message For Provable Authn Error: nonce must be minimum of 32 bytes\"\n  )\n\n  const ACCOUNT_PROOF_DOMAIN_TAG = rightPaddedHexBuffer(\n    Buffer.from(\"FCL-ACCOUNT-PROOF-V0.0\").toString(\"hex\"),\n    32\n  )\n\n  if (includeDomainTag) {\n    return Buffer.concat([\n      ACCOUNT_PROOF_DOMAIN_TAG,\n      rlpEncode([\n        appIdentifier,\n        addressBuffer(sansPrefix(address)),\n        nonceBuffer(nonce),\n      ]),\n    ]).toString(\"hex\")\n  }\n\n  return rlpEncode([\n    appIdentifier,\n    addressBuffer(sansPrefix(address)),\n    nonceBuffer(nonce),\n  ]).toString(\"hex\")\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {query} from \"../exec/query\"\nimport {encodeAccountProof} from \"../wallet-utils\"\nimport {isString} from \"../utils/is\"\nimport {getChainId} from \"../utils\"\n\nconst ACCOUNT_PROOF = \"ACCOUNT_PROOF\"\nconst USER_SIGNATURE = \"USER_SIGNATURE\"\n\nexport const validateArgs = args => {\n  if (args.appIdentifier) {\n    const {appIdentifier, address, nonce, signatures} = args\n    invariant(\n      isString(appIdentifier),\n      \"verifyAccountProof({ appIdentifier }) -- appIdentifier must be a string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyAccountProof({ address }) -- address must be a valid address\"\n    )\n    invariant(/^[0-9a-f]+$/i.test(nonce), \"nonce must be a hex string\")\n    invariant(\n      Array.isArray(signatures) &&\n        signatures.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      signatures.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  } else {\n    const {message, address, compSigs} = args\n    invariant(\n      /^[0-9a-f]+$/i.test(message),\n      \"Signed message must be a hex string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyUserSignatures({ address }) -- address must be a valid address\"\n    )\n    invariant(\n      Array.isArray(compSigs) &&\n        compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  }\n}\n\n// TODO: pass in option for contract but we're connected to testnet\n// log address + network -> in sync?\nconst getVerifySignaturesScript = async (sig, opts) => {\n  const verifyFunction =\n    sig === \"ACCOUNT_PROOF\"\n      ? \"verifyAccountProofSignatures\"\n      : \"verifyUserSignatures\"\n\n  let network = await getChainId(opts)\n\n  let fclCryptoContract\n\n  invariant(\n    opts.fclCryptoContract || network === \"testnet\" || network === \"mainnet\",\n    \"${verifyFunction}({ fclCryptoContract }) -- fclCrypto contract address must be set for non-mainnet/testnet networks\"\n  )\n\n  if (opts.fclCryptoContract) {\n    fclCryptoContract = opts.fclCryptoContract\n  } else {\n    fclCryptoContract =\n      network === \"testnet\" ? \"0x74daa6f9c7ef24b1\" : \"0xb4b82a1c9d21d284\"\n  }\n\n  return `\n      import FCLCrypto from ${fclCryptoContract}\n\n      pub fun main(\n          address: Address, \n          message: String, \n          keyIndices: [Int], \n          signatures: [String]\n      ): Bool {\n        return FCLCrypto.${verifyFunction}(address: address, message: message, keyIndices: keyIndices, signatures: signatures)\n      }\n    `\n}\n\n/**\n * @description\n * Verify a valid account proof signature or signatures for an account on Flow.\n *\n * @param {string} appIdentifier - A message string in hexadecimal format\n * @param {object} accountProofData - An object consisting of address, nonce, and signatures\n * @param {string} accountProofData.address - A Flow account address\n * @param {string} accountProofData.nonce - A random string in hexadecimal format (minimum 32 bytes in total, i.e 64 hex characters)\n * @param {object[]} accountProofData.signatures - An array of composite signatures to verify\n * @param {object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override Flow account address where the FCLCrypto contract is deployed\n * @returns {Promise<boolean>} - Returns true if the signature is valid, false otherwise\n *\n * @example\n *\n *  const accountProofData = {\n *   address: \"0x123\",\n *   nonce: \"F0123\"\n *   signatures: [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *  }\n *\n *  const isValid = await fcl.AppUtils.verifyAccountProof(\n *    \"AwesomeAppId\",\n *    accountProofData,\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyAccountProof(\n  appIdentifier,\n  {address, nonce, signatures},\n  opts = {}\n) {\n  validateArgs({appIdentifier, address, nonce, signatures})\n  const message = encodeAccountProof({address, nonce, appIdentifier}, false)\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of signatures) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(ACCOUNT_PROOF, opts),\n    args: (arg, t) => [\n      arg(withPrefix(address), t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n\n/**\n * @description\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} message - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @param {object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override of Flow account address where the FCLCrypto contract is deployed\n * @returns {boolean} - Returns true if the signature is valid, false otherwise\n *\n * @example\n *\n *  const isValid = await fcl.AppUtils.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyUserSignatures(message, compSigs, opts = {}) {\n  const address = withPrefix(compSigs[0].addr)\n  validateArgs({message, address, compSigs})\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of compSigs) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(USER_SIGNATURE, opts),\n    args: (arg, t) => [\n      arg(address, t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n","import {log} from \"@onflow/util-logger\"\nimport {verifyUserSignatures as verify} from \"../app-utils\"\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @deprecated since version '1.0.0-alpha.0', use AppUtils.verifyUserSignatures instead\n *\n */\nexport const verifyUserSignatures = log.deprecate({\n  pkg: \"FCL\",\n  subject: \"fcl.verifyUserSignatures()\",\n  message: \"Please use fcl.AppUtils.verifyUserSignatures()\",\n  callback: function verifyUserSignatures(message, compSigs) {\n    return verify(message, compSigs)\n  },\n})\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import {config} from \"@onflow/config\"\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Transaction} Transaction\n */\n\n/**\n * @typedef {import(\"@onflow/typedefs\").TransactionStatus} TransactionStatus\n */\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.sendSelf(POLL)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    let tx\n    try {\n      tx = await fetchTxStatus(ctx.self())\n    } catch (e) {\n      return ctx.fatalError(e)\n    }\n\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\n/**\n * @callback SubscriptionCallback\n * @param {TransactionStatus} txStatus\n * @returns {void}\n */\n\n/**\n * Provides methods for interacting with a transaction\n * \n * @param {string} transactionId - The transaction ID\n * @returns {{\n *    snapshot: function(): Promise<TransactionStatus>,\n *    subscribe: function(SubscriptionCallback): function(): void,\n *    onceFinalized: function(): Promise<TransactionStatus>,\n *    onceExecuted: function(): Promise<TransactionStatus>,\n *    onceSealed: function(): Promise<TransactionStatus>\n * }}\n */\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus, error) => {\n          if ((error || txStatus.statusCode) && !suppress) {\n            reject(error || txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {\n  config,\n  block,\n  getEventsAtBlockHeightRange,\n  send,\n  decode,\n} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\nconst HIGH_WATER_MARK = \"hwm\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(HIGH_WATER_MARK)\n    if (hwm == null) {\n      ctx.put(HIGH_WATER_MARK, await block())\n      ctx.put(TICK, await scheduleTick(ctx))\n    } else {\n      let next = await block()\n      ctx.put(HIGH_WATER_MARK, next)\n      if (hwm.height < next.height) {\n        const data = await send([\n          getEventsAtBlockHeightRange(ctx.self(), hwm.height + 1, next.height),\n        ]).then(decode)\n        for (let d of data) ctx.broadcast(UPDATED, d.data)\n      }\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(TICK))\n      ctx.delete(TICK)\n      ctx.delete(HIGH_WATER_MARK)\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Event} Event\n */\n\n/**\n * @typedef {object} SubscribeObject\n * @property {Function} subscribe - The subscribe function.\n */\n\n/**\n * @callback SubscriptionCallback\n * @returns {Event}\n */\n\n/**\n * @description - Subscribe to events\n * @param {string} key - A valid event name\n * @returns {SubscribeObject}\n * \n * @example\n * import * as fcl from \"@onflow/fcl\"\n * fcl.events(eventName).subscribe((event) => console.log(event))\n */\nexport function events(key) {\n  return {\n    /**\n     * @description - Subscribe to events\n     * @param {Function} callback - The callback function\n     * @returns {SubscriptionCallback}\n     */\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nimport {isRequired, isString, isObject, isFunc} from \"../../utils/is\"\nimport { CORE_STRATEGIES } from \"../../utils/constants\"\n\nconst stub = () => {\n  throw new Error(`Platform specific Core Strategies are not initialized`)\n}\n\nconst stubCoreStrategies = ({\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: stub,\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: stub,\n  [CORE_STRATEGIES[\"IFRAME/RPC\"]]: stub,\n  [CORE_STRATEGIES[\"POP/RPC\"]]: stub,\n  [CORE_STRATEGIES[\"TAB/RPC\"]]: stub,\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: stub,\n})\n\nconst supportedPlugins = [\"ServicePlugin\"]\nconst supportedServicePlugins = [\"discovery-service\"]\n\nconst validateDiscoveryPlugin = servicePlugin => {\n  const {services, serviceStrategy} = servicePlugin\n  invariant(\n    Array.isArray(services) && services.length,\n    \"Array of Discovery Services is required\"\n  )\n\n  for (const ds of services) {\n    invariant(\n      isRequired(ds.f_type) && ds.f_type === \"Service\",\n      \"Service is required\"\n    )\n    invariant(\n      isRequired(ds.type) && ds.type === \"authn\",\n      `Service must be type authn. Received ${ds.type}`\n    )\n    invariant(\n      ds.method in CORE_STRATEGIES || serviceStrategy.method === ds.method,\n      `Service method ${ds.method} is not supported`\n    )\n  }\n\n  invariant(isRequired(serviceStrategy), \"Service strategy is required\")\n  invariant(\n    isRequired(serviceStrategy.method) && isString(serviceStrategy.method),\n    \"Service strategy method is required\"\n  )\n  invariant(\n    isRequired(serviceStrategy.exec) && isFunc(serviceStrategy.exec),\n    \"Service strategy exec function is required\"\n  )\n\n  return {discoveryServices: services, serviceStrategy}\n}\n\nconst ServiceRegistry = ({coreStrategies}) => {\n  let services = new Set()\n  let strategies = new Map(Object.entries(coreStrategies))\n\n  const add = servicePlugin => {\n    invariant(\n      supportedServicePlugins.includes(servicePlugin.type),\n      `Service Plugin type ${servicePlugin.type} is not supported`\n    )\n    if (servicePlugin.type === \"discovery-service\") {\n      const {discoveryServices, serviceStrategy} =\n        validateDiscoveryPlugin(servicePlugin)\n      setServices(discoveryServices)\n      if (!strategies.has(serviceStrategy.method)) {\n        strategies.set(serviceStrategy.method, serviceStrategy.exec)\n      } else {\n        log({\n          title: `Add Service Plugin`,\n          message: `Service strategy for ${serviceStrategy.method} already exists`,\n          level: LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  const setServices = discoveryServices =>\n    (services = new Set([...discoveryServices]))\n\n  const getServices = () => [...services]\n\n  const getStrategy = method => strategies.get(method)\n\n  const getStrategies = () => [...strategies.keys()]\n\n  return Object.freeze({\n    add,\n    getServices,\n    getStrategy,\n    getStrategies,\n  })\n}\n\nconst validatePlugins = plugins => {\n  let pluginsArray\n  invariant(plugins, \"No plugins supplied\")\n\n  if (!Array.isArray(plugins)) {\n    pluginsArray = [plugins]\n  } else {\n    pluginsArray = [...plugins]\n  }\n  for (const p of pluginsArray) {\n    invariant(isRequired(p.name), \"Plugin name is required\")\n    invariant(isRequired(p.f_type), \"Plugin f_type is required\")\n    invariant(\n      supportedPlugins.includes(p.f_type),\n      `Plugin type ${p.f_type} is not supported`\n    )\n  }\n\n  return pluginsArray\n}\n\nconst PluginRegistry = () => {\n  const pluginsMap = new Map()\n\n  const getPlugins = () => pluginsMap\n\n  const add = plugins => {\n    const pluginsArray = validatePlugins(plugins)\n    for (const p of pluginsArray) {\n      pluginsMap.set(p.name, p)\n      if (p.f_type === \"ServicePlugin\") {\n        serviceRegistry.add(p)\n      }\n    }\n  }\n\n  return Object.freeze({\n    add,\n    getPlugins,\n  })\n}\n\nlet serviceRegistry\nconst getIsServiceRegistryInitialized = () => typeof serviceRegistry !== 'undefined'\n\nexport const initServiceRegistry = ({coreStrategies}) => {\n  if (getIsServiceRegistryInitialized()) {\n    return serviceRegistry\n  }\n  const _serviceRegistry = ServiceRegistry({coreStrategies});\n  serviceRegistry = _serviceRegistry;\n\n  return _serviceRegistry\n}\nexport const getServiceRegistry = () => {\n  if (!getIsServiceRegistryInitialized()) {\n    console.warn(\"Registry is not initalized, it will be initialized with stub core strategies\")\n\n    return initServiceRegistry({coreStrategies: stubCoreStrategies})\n  }\n\n  return serviceRegistry\n}\nexport const pluginRegistry = PluginRegistry()\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {getServiceRegistry} from \"../current-user/exec-service/plugins\"\n\nexport const makeDiscoveryServices = async () => {\n  const extensionServices = window?.fcl_extensions || []\n  return [...extensionServices, ...getServiceRegistry().getServices()]\n}\n\nexport async function getDiscoveryService(service) {\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n  const discoveryFeaturesSuggested = await config.get(\"discovery.features.suggested\", [])\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n  const method = service?.method ? service.method : discoveryWalletMethod\n  const endpoint =\n    service?.endpoint ??\n    (await config.first([\"discovery.wallet\", \"challenge.handshake\"]))\n\n  invariant(\n    endpoint,\n    `\n    If no service is passed to \"authenticate,\" then \"discovery.wallet\" must be defined in fcl config.\n    See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n    `\n  )\n\n  return {\n    ...service,\n    type: \"authn\",\n    endpoint,\n    method,\n    discoveryAuthnInclude,\n    discoveryFeaturesSuggested,\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {getServiceRegistry} from \"../current-user/exec-service/plugins\"\nimport {getChainId} from \"../utils\"\nimport {VERSION} from \"../VERSION\"\nimport {makeDiscoveryServices} from \"./utils\"\nimport {URL} from \"../utils/url\"\n\nexport async function getServices({types}) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(\n    Boolean(endpoint),\n    `\"discovery.authn.endpoint\" in config must be defined.`\n  )\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      type: types,\n      fclVersion: VERSION,\n      include,\n      features: {\n        suggested: await config.get(\"discovery.features.suggested\", [])\n      },\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: getServiceRegistry().getStrategies(),\n      userAgent: window?.navigator?.userAgent,\n      network: await getChainId(),\n    }),\n  }).then(d => d.json())\n}\n","import {\n  spawn,\n  subscriber,\n  snapshoter,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  send,\n} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\n\nexport const SERVICE_ACTOR_KEYS = {\n  AUTHN: \"authn\",\n  RESULTS: \"results\",\n  SNAPSHOT: \"SNAPSHOT\",\n  UPDATED: \"UPDATED\",\n  UPDATE_RESULTS: \"UPDATE_RESULTS\",\n}\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst fetchServicesFromDiscovery = async () => {\n  try {\n    const services = await getServices({types: [SERVICE_ACTOR_KEYS.AUTHN]})\n    send(SERVICE_ACTOR_KEYS.AUTHN, SERVICE_ACTOR_KEYS.UPDATE_RESULTS, {\n      results: services,\n    })\n  } catch (error) {\n    log({\n      title: `${error.name} Error fetching Discovery API services.`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(\n      typeof window === \"undefined\",\n      '\"fcl.discovery\" is only available in the browser.'\n    )\n    // If you call this before the window is loaded extensions will not be set yet\n    if (document.readyState === 'complete') {\n      fetchServicesFromDiscovery()\n    } else {\n      window.onload = async () => {\n        fetchServicesFromDiscovery()\n      }\n    }\n  },\n  [SERVICE_ACTOR_KEYS.UPDATE_RESULTS]: (ctx, _letter, data) => {\n    ctx.merge(data)\n    ctx.broadcast(SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SERVICE_ACTOR_KEYS.SNAPSHOT]: async (ctx, letter) =>\n    letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, SERVICE_ACTOR_KEYS.AUTHN)\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Service} Service\n */\n\n/**\n * @callback SubscriptionCallback\n * @returns {Service[]}\n */\n\n/**\n * @description\n * Discovery methods for interacting with Authn.\n * \n * @typedef {object} Authn\n * @property {Function} subscribe - Subscribe to Discovery authn services\n * @property {Function} snapshot - Get the current Discovery authn services spanshot\n * @property {Function} update - Trigger an update of authn services\n */\nconst authn = {\n  /**\n   * @description - Subscribe to Discovery authn services\n   * @param {Function} cb\n   * @returns {SubscriptionCallback}\n   */\n  subscribe: cb => subscriber(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders, cb),\n  /**\n   * @description - Get the current Discovery authn services spanshot\n   * @returns {Service[]}\n   */\n  snapshot: () => snapshoter(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders),\n  /**\n   * @description - Trigger an update of authn services\n   * @returns {void}\n   */\n  update: () => fetchServicesFromDiscovery(),\n}\n\nexport default authn\n","import authn from \"./services/authn\"\nexport {getDiscoveryService, makeDiscoveryServices} from \"./utils\"\n\nconst discovery = {\n  authn,\n}\n\nexport {discovery}\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","import {SHA3} from \"sha3\"\nimport {Buffer} from \"@onflow/rlp\"\n\nexport async function genHash(utf8String) {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(utf8String, \"utf8\"))\n  return sha.digest(\"hex\")\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\n/**\n * @description Generates Interaction Template ID for a given Interaction Template\n *  \n * @param {object} params\n * @param {object} params.template - Interaction Template\n * @returns {Promise<string>} - Interaction Template ID\n */\nexport async function generateTemplateId({template}) {\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const templateData = template.data\n\n      const messages = await Promise.all(\n        Object.keys(templateData.messages).map(async messageKey => [\n          await genHash(messageKey),\n          await Promise.all(\n            Object.keys(templateData.messages?.[messageKey]?.i18n).map(\n              async i18nkeylanguage => [\n                await genHash(i18nkeylanguage),\n                await genHash(\n                  templateData.messages?.[messageKey]?.i18n?.[i18nkeylanguage]\n                ),\n              ]\n            )\n          ),\n        ])\n      )\n\n      const dependencies = await Promise.all(\n        Object.keys(templateData?.dependencies).map(\n          async dependencyAddressPlaceholder => [\n            await genHash(dependencyAddressPlaceholder),\n            await Promise.all(\n              Object.keys(\n                templateData?.dependencies?.[dependencyAddressPlaceholder]\n              ).map(async dependencyContract => [\n                await genHash(dependencyContract),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.dependencies?.[\n                      dependencyAddressPlaceholder\n                    ]?.[dependencyContract]\n                  ).map(async dependencyContractNetwork => [\n                    await genHash(dependencyContractNetwork),\n                    [\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .contract\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .fq_address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork].pin\n                      ),\n                      await genHash(\n                        String(\n                          templateData?.dependencies?.[\n                            dependencyAddressPlaceholder\n                          ]?.[dependencyContract]?.[dependencyContractNetwork]\n                            .pin_block_height\n                        )\n                      ),\n                    ],\n                  ])\n                ),\n              ])\n            ),\n          ]\n        )\n      )\n\n      const _arguments = await Promise.all(\n        Object.keys(templateData?.[\"arguments\"]).map(async argumentLabel => [\n          await genHash(argumentLabel),\n          [\n            await genHash(\n              String(templateData?.[\"arguments\"]?.[argumentLabel].index)\n            ),\n            await genHash(templateData?.[\"arguments\"]?.[argumentLabel].type),\n            await genHash(\n              templateData?.[\"arguments\"]?.[argumentLabel].balance || \"\"\n            ),\n            await Promise.all(\n              Object.keys(\n                templateData?.[\"arguments\"]?.[argumentLabel].messages\n              ).map(async argumentMessageKey => [\n                await genHash(argumentMessageKey),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                      argumentMessageKey\n                    ].i18n\n                  ).map(async i18nkeylanguage => [\n                    await genHash(i18nkeylanguage),\n                    await genHash(\n                      templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                        argumentMessageKey\n                      ].i18n?.[i18nkeylanguage]\n                    ),\n                  ])\n                ),\n              ])\n            ),\n          ],\n        ])\n      )\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplate\"),\n        await genHash(\"1.0.0\"),\n        await genHash(templateData?.type),\n        await genHash(templateData?.interface),\n        messages,\n        await genHash(templateData?.cadence),\n        dependencies,\n        _arguments,\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\"generateTemplateId Error: Unsupported template version\")\n  }\n}\n","import {config, invariant} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {query} from \"../exec/query.js\"\nimport {generateTemplateId} from \"./generate-template-id.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\nimport {getChainId} from \"../utils\"\n\n/**\n * @description Returns whether a set of auditors have audited a given Interaction Template\n *\n * @param {object} params\n * @param {object} params.template - Interaction Template\n * @param {Array<string>} params.auditors - Array of auditors\n * @param {object} opts\n * @param {string} opts.flowInteractionAuditContract - Flow Interaction Template Audit contract address\n * @returns {Promise<object>} - Object of auditor addresses and audit status\n */\nexport async function getInteractionTemplateAudits(\n  {template, auditors},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"getInteractionTemplateAudits({ template }) -- template must be defined\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"getInteractionTemplateAudits({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  // Recompute ID to be sure it matches\n  let recomputedTemplateID = await generateTemplateId({template})\n\n  if (recomputedTemplateID !== template.id) {\n    log({\n      title: \"getInteractionTemplateAudits Debug Error\",\n      message: `Could not recompute and match template ID\n                computed: ${recomputedTemplateID}\n                template: ${template.id}\n            `,\n      level: LEVELS.debug,\n    })\n    throw new Error(\n      \"getInteractionTemplateAudits Error: Could not recompute and match template ID\"\n    )\n  }\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const _auditors = auditors || (await config().get(\"flow.auditors\"))\n\n      invariant(\n        _auditors,\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not set\"\n      )\n      invariant(\n        Array.isArray(_auditors),\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not an array\"\n      )\n\n      let FlowInteractionAuditContract = opts.flowInteractionAuditContract\n      if (!FlowInteractionAuditContract) {\n        const fclNetwork = await getChainId(opts)\n        invariant(\n          fclNetwork === \"mainnet\" || fclNetwork === \"testnet\",\n          \"getInteractionTemplateAudits Error: Unable to determine address for FlowInteractionTemplateAudit contract. Set configuration for 'fcl.network' to 'mainnet' or 'testnet'\"\n        )\n        if (fclNetwork === \"mainnet\") {\n          FlowInteractionAuditContract = \"0xfd100e39d50a13e6\"\n        } else {\n          FlowInteractionAuditContract = \"0xf78bfc12d0a786dc\"\n        }\n      }\n\n      const audits = await query({\n        cadence: `\n        import FlowInteractionTemplateAudit from ${FlowInteractionAuditContract}\n        pub fun main(templateId: String, auditors: [Address]): {Address:Bool} {\n          return FlowInteractionTemplateAudit.getHasTemplateBeenAuditedByAuditors(templateId: templateId, auditors: auditors)\n        }\n        `,\n        args: (arg, t) => [\n          arg(recomputedTemplateID, t.String),\n          arg(_auditors, t.Array(t.Address)),\n        ],\n      })\n\n      return audits\n\n    default:\n      throw new Error(\n        \"getInteractionTemplateAudits Error: Unsupported template version\"\n      )\n  }\n}\n","export function generateImport({contractName, address}) {\n  return {contractName, address, contract: \"\"}\n}\n","import {generateImport} from \"./generate-import.js\"\n\nexport function findImports(cadence) {\n  let imports = []\n\n  let importsReg = /import ((\\w|,| )+)* from 0x\\w+/g\n  let fileImports = cadence.match(importsReg) || []\n\n  for (const fileImport of fileImports) {\n    const importLineReg = /import ((\\w+|, |)*) from (0x\\w+)/g\n    const importLine = importLineReg.exec(fileImport)\n\n    const contractsReg = /((?:\\w+)+),?/g\n    const contracts = importLine[1].match(contractsReg) || []\n\n    for (const contract of contracts) {\n      imports.push(\n        generateImport({\n          address: importLine[3],\n          contractName: contract.replace(/,/g, \"\"),\n        })\n      )\n    }\n  }\n\n  return imports\n}\n","import {\n  invariant,\n  block,\n  send,\n  getAccount,\n  atBlockHeight,\n  config,\n  decode,\n} from \"@onflow/sdk\"\nimport {genHash} from \"./utils/hash.js\"\nimport {findImports} from \"./utils/find-imports.js\"\nimport {generateImport} from \"./utils/generate-import.js\"\n\n/**\n * @description Produces a dependency pin for a contract at a given block height\n * @param {object} params\n * @param {string} params.address - The address of the account containing the contract\n * @param {string} params.contractName - The name of the contract\n * @param {number} params.blockHeight - The block height to produce the dependency pin for\n * @param {object} opts - Options to pass to the interaction\n * @returns {Promise<string>} - The dependency pin\n */\nexport async function generateDependencyPin(\n  {address, contractName, blockHeight},\n  opts = {}\n) {\n  invariant(\n    address != undefined,\n    \"generateDependencyPin({ address }) -- address must be defined\"\n  )\n  invariant(\n    contractName != undefined,\n    \"generateDependencyPin({ contractName }) -- contractName must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be defined\"\n  )\n  invariant(\n    typeof address === \"string\",\n    \"generateDependencyPin({ address }) -- address must be a string\"\n  )\n  invariant(\n    typeof contractName === \"string\",\n    \"generateDependencyPin({ contractName }) -- contractName must be a string\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be a number\"\n  )\n\n  let horizon = [generateImport({contractName, address})]\n\n  for (const horizonImport of horizon) {\n    let account = await send(\n      [\n        getAccount(\n          await config().get(horizonImport.address, horizonImport.address)\n        ),\n        atBlockHeight(blockHeight),\n      ],\n      opts\n    ).then(decode)\n\n    horizonImport.contract = account.contracts?.[horizonImport.contractName]\n\n    if (!horizonImport.contract) {\n      console.error(\"Did not find expected contract\", horizonImport, account)\n      throw new Error(\"Did not find expected contract\")\n    }\n\n    let contractImports = findImports(horizonImport.contract)\n\n    horizon.push(...contractImports)\n  }\n\n  let contractHashes = horizon.map(iport => genHash(iport.contract))\n\n  let contractHashesJoined = contractHashes.join(\"\")\n\n  return genHash(contractHashesJoined)\n}\n\n/**\n * @description Produces a dependency pin for a contract at latest sealed block\n * @param {object} params\n * @param {string} params.address - The address of the account containing the contract\n * @param {string} params.contractName - The name of the contract\n * @param {object} opts - Options to pass to the interaction\n * @returns {Promise<string>} - The dependency pin\n */\nexport async function generateDependencyPinAtLatestSealedBlock(\n  {address, contractName},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true}, opts)\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return generateDependencyPin(\n    {address, contractName, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","export function normalizeInteractionTemplateInterface(templateInterface) {\n  if (templateInterface == null) return null\n\n  switch (templateInterface[\"f_version\"]) {\n    case \"1.0.0\":\n      return templateInterface\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplateInterface Error: Invalid InteractionTemplateInterface\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplateInterface} from \"../normalizers/interaction-template/interaction-template-interface.js\"\n\n/**\n * @description Generates Interaction Template Interface ID for a given Interaction Template Interface\n * \n * @param {object} params\n * @param {object} params.templateInterface - Interaction Template Interface\n * @returns {Promise<string>} - Interaction Template Interface ID\n */\nexport async function generateTemplateInterfaceId({templateInterface}) {\n  invariant(\n    templateInterface != undefined,\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be defined\"\n  )\n  invariant(\n    typeof templateInterface === \"object\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be an object\"\n  )\n  invariant(\n    typeof templateInterface.f_type === \"InteractionTemplateInterface\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface object must be an InteractionTemplate\"\n  )\n\n  templateInterface = normalizeInteractionTemplateInterface(templateInterface)\n\n  switch (templateInterface.f_version) {\n    case \"1.0.0\":\n      const interfaceData = templateInterface.data\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplateInterface\"),\n        await genHash(\"1.0.0\"),\n        await genHash(interfaceData.flip),\n        await Promise.all(\n          Object.keys(interfaceData.arguments).map(async argumentLabel => [\n            await genHash(argumentLabel),\n            await genHash(String(interfaceData.arguments[argumentLabel].index)),\n            await genHash(interfaceData.arguments[argumentLabel].type),\n          ])\n        ),\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\n        \"generateTemplateInterfaceId Error: Unsupported templateInterface version\"\n      )\n  }\n}\n","import {generateDependencyPin} from \"./generate-dependency-pin.js\"\nimport {invariant, block} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\n/**\n * @description Checks if an Interaction Template's pins match those generated at a block height\n * \n * @param {object} params\n * @param {object} params.template - Interaction Template to check pins for\n * @param {number} params.blockHeight - Block height to check pins at\n * @param {string} params.network - Network to check pins on\n * @param {object} opts\n * @returns {Promise<boolean>} - Whether or not the pins match\n */\nexport async function verifyDependencyPinsSame(\n  {template, blockHeight, network},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    network != undefined,\n    \"generateDependencyPin({ network }) network must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) blockHeight must be defined\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) blockHeight must be a number\"\n  )\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let templateDependenciesPlaceholderKeys = Object.keys(\n        template.data.dependencies\n      )\n\n      for (let templateDependencyPlaceholderKey of templateDependenciesPlaceholderKeys) {\n        let templateDependencyPlaceholder =\n          template.data.dependencies[templateDependencyPlaceholderKey]\n\n        let templateDependencyPlaceholderContractNames = Object.keys(\n          templateDependencyPlaceholder\n        )\n\n        for (let templateDependencyPlaceholderContractName of templateDependencyPlaceholderContractNames) {\n          let templateDependencyPlaceholderContractNetworks =\n            template.data.dependencies[templateDependencyPlaceholderKey][\n              templateDependencyPlaceholderContractName\n            ]\n\n          let templateDependency =\n            templateDependencyPlaceholderContractNetworks[network]\n          if (typeof templateDependency === \"undefined\") continue\n\n          let pin = await generateDependencyPin(\n            {\n              address: templateDependency.address,\n              contractName: templateDependency.contract,\n              blockHeight,\n            },\n            opts\n          )\n\n          if (pin !== templateDependency.pin) {\n            log({\n              title: \"verifyDependencyPinsSame Debug Error\",\n              message: `Could not recompute and match dependency pin.\n                                address: ${templateDependency.address} | contract: ${templateDependency.contract}\n                                computed: ${pin}\n                                template: ${templateDependency.pin}\n                            `,\n              level: LEVELS.debug,\n            })\n            return false\n          }\n        }\n      }\n\n      return true\n\n    default:\n      throw new Error(\n        \"verifyDependencyPinsSame Error: Unsupported template version\"\n      )\n  }\n}\n\n/**\n * @description Checks if an Interaction Template's pins match those generated at the latest block height\n * \n * @param {object} params\n * @param {object} params.template - Interaction Template to check pins for\n * @param {string} params.network - Network to check pins on\n * @param {object} opts\n * @returns {Promise<boolean>} - Whether or not the pins match\n */\nexport async function verifyDependencyPinsSameAtLatestSealedBlock(\n  {template, network},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true})\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return verifyDependencyPinsSame(\n    {template, network, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","import {invariant} from \"@onflow/sdk\"\n\n/**\n * @description Get Interaction Template argument message\n * \n * @param {object} params\n * @param {string} params.localization [localization=\"en-US\"] - Localization code\n * @param {string} params.messageKey - Message key\n * @param {object} params.template - Interaction Template\n * @returns {string} - Message\n */\nexport function getTemplateMessage({\n  localization = \"en-US\",\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getTemplateMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getTemplateMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"string\",\n    \"getTemplateMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"getTemplateMessage({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"getTemplateMessage({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"getTemplateMessage({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const messages = template?.data?.messages\n\n  return messages?.[messageKey]?.i18n?.[localization]\n}\n","import {invariant} from \"@onflow/sdk\"\n\n/**\n * @description Gets Interaction Template argument message by message key, argument label, and localization\n * \n * @param {object} opts\n * @param {string} opts.localization [localization=\"en-US\"] - Localization to get message for\n * @param {string} opts.argumentLabel - Argument label to get message for\n * @param {string} opts.messageKey - Message key to get message for\n * @param {object} opts.template - Interaction Template to get message from\n * @returns {string} - Message\n */\nexport function getTemplateArgumentMessage({\n  localization = \"en-US\",\n  argumentLabel,\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    argumentLabel,\n    \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getTemplateArgumentMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"string\",\n    \"getTemplateArgumentMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"getTemplateArgumentMessage({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"getTemplateArgumentMessage({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"getTemplateArgumentMessage({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const args = template?.data?.arguments\n\n  return args?.[argumentLabel]?.messages?.[messageKey]?.i18n?.[localization]\n}\n","export {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\nexport {pluginRegistry} from \"./current-user/exec-service/plugins\"\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nimport * as types from \"@onflow/types\"\n/**\n * @type {Types}\n */\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nimport * as AppUtils from \"./app-utils\"\nexport {AppUtils}\n\nimport * as InteractionTemplateUtils from \"./interaction-template-utils\"\nexport {InteractionTemplateUtils}\n\nexport {getChainId} from \"./utils\"\n\nexport {TestUtils} from \"@onflow/sdk\"\n\nimport {config} from \"@onflow/config\"\nexport {config}\n\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\nexport {voucherIntercept} from \"@onflow/sdk\"\nexport {voucherToTxId} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {getNetworkParameters} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n\n/**\n * @typedef {object} Types\n * @property {any} Identity - Represents the Identity type.\n * @property {any} UInt - Represents the UInt type.\n * @property {any} Int - Represents the Int type.\n * @property {any} UInt8 - Represents the UInt8 type.\n * @property {any} Int8 - Represents the Int8 type.\n * @property {any} UInt16 - Represents the UInt16 type.\n * @property {any} Int16 - Represents the Int16 type.\n * @property {any} UInt32 - Represents the UInt32 type.\n * @property {any} Int32 - Represents the Int32 type.\n * @property {any} UInt64 - Represents the UInt64 type.\n * @property {any} Int64 - Represents the Int64 type.\n * @property {any} UInt128 - Represents the UInt128 type.\n * @property {any} Int128 - Represents the Int128 type.\n * @property {any} UInt256 - Represents the UInt256 type.\n * @property {any} Int256 - Represents the Int256 type.\n * @property {any} Word8 - Represents the Word8 type.\n * @property {any} Word16 - Represents the Word16 type.\n * @property {any} Word32 - Represents the Word32 type.\n * @property {any} Word64 - Represents the Word64 type.\n * @property {any} UFix64 - Represents the UFix64 type.\n * @property {any} Fix64 - Represents the Fix64 type.\n * @property {any} String - Represents the String type.\n * @property {any} Character - Represents the Character type.\n * @property {any} Bool - Represents the Bool type.\n * @property {any} Address - Represents the Address type.\n * @property {any} Void - Represents the Void type.\n * @property {any} Optional - Represents the Optional type.\n * @property {any} Reference - Represents the Reference type.\n * @property {any} Array - Represents the Array type.\n * @property {any} Dictionary - Represents the Dictionary type.\n * @property {any} Event - Represents the Event type.\n * @property {any} Resource - Represents the Resource type.\n * @property {any} Struct - Represents the Struct type.\n * @property {any} Enum - Represents the Enum type.\n * @property {any} Path - Represents the Path type.\n */\n\n/**\n * @callback ArgsFn\n * @param {ArgFn} arg - Argument function to define a single argument\n * @param {Types} t - Cadence Types object used to define the type\n * @returns {any[]}\n */\n\n/**\n * @callback ArgFn\n * @param {any} value - the value of the argument\n * @param {any} type - the cadence type of the value\n * @returns {any}\n */\n\nimport {watchForChainIdChanges} from \"./utils\"\n\n// Set chain id default on access node change\nwatchForChainIdChanges()\n","import {URL} from \"../utils/url\"\n\nexport async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","export function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    return {\n      ...SERVICE_PRAGMA,\n      type: service.type,\n      uid: service.id,\n      endpoint: service.authn,\n      id: service.pid,\n      provider: {\n        address: withPrefix(service.addr),\n        name: service.name,\n        icon: service.icon,\n      },\n    }\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    return {\n      ...SERVICE_PRAGMA,\n      type: service.type,\n      uid: service.id,\n      endpoint: service.endpoint,\n      method: service.method,\n      identity: {\n        ...IDENTITY_PRAGMA,\n        address: withPrefix(service.addr),\n        keyId: service.keyId,\n      },\n      params: service.params,\n      data: service.data,\n    }\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    return {\n      ...SERVICE_PRAGMA,\n      type: service.type,\n      uid: service.id,\n      endpoint: service.endpoint,\n      method: service.method,\n      identity: {\n        ...IDENTITY_PRAGMA,\n        address: withPrefix(service.addr),\n        keyId: service.keyId,\n      },\n      params: service.params,\n      data: service.data,\n    }\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    return {\n      old: service,\n      ...SERVICE_PRAGMA,\n      type: \"frame\",\n      endpoint: service.endpoint,\n      params: service.params || {},\n      data: service.data || {},\n    }\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    return {\n      ...SERVICE_PRAGMA,\n      type: \"back-channel-rpc\",\n      endpoint: service.endpoint,\n      method: service.method,\n      params: service.params || {},\n      data: service.data || {},\n    }\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    throw new Error(\"Invalid user-signature service\")\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  if (!resp[\"f_vsn\"]) {\n    return {\n      ...SERVICE_PRAGMA,\n      type: resp.type || \"local-view\",\n      method: resp.method,\n      endpoint: resp.endpoint,\n      data: resp.data || {},\n      params: resp.params || {},\n    }\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",                    // Its a service!\n//   \"f_vsn\": \"1.0.0\",                       // Follows the v1.0.0 spec for the service\n//   \"type\": \"account-proof\",                // the type of service it is\n//   \"method\": \"DATA\",                       // Its data!\n//   \"uid\": \"awesome-wallet#account-proof\",  // A unique identifier for the service\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"nonce\": \"0A1BC2FF\",                  // Nonce signed by the current account-proof (minimum 32 bytes in total, i.e 64 hex characters)\n//     \"address\": \"0xUSER\",                  // The user's address (8 bytes, i.e 16 hex characters)\n//     \"signature\": CompositeSignature,      // address (sans-prefix), keyId, signature (hex)\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    throw new Error(`FCL Normalizer Error: Invalid account-proof service`)\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  if (!service[\"f_vsn\"]) {\n    throw new Error(\"Invalid authn-refresh service\")\n  }\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services\n    .map(service => normalizeService(service, data))\n    .filter(Boolean)\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import * as semver from \"@onflow/util-semver\"\n\nexport function serviceOfType(services = [], type) {\n  // Find the greatest version of the service type\n  return services.reduce(\n    (mostRecent, service) =>\n      service.type === type\n        ? !mostRecent || semver.compare(service.f_vsn, mostRecent.f_vsn) > 0\n          ? service\n          : mostRecent\n        : mostRecent,\n    null\n  )\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"../normalizers/service/__vsn\"\nimport {\n  normalizeService,\n  normalizeServices,\n} from \"../normalizers/service/service\"\nimport {serviceOfType} from \"./service-of-type\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = normalizeServices(\n    mergeServices(data.services || [], await fetchServices(data.hks, data.code))\n  )\n\n  const authn = serviceOfType(services, \"authn\")\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {getServiceRegistry} from \"./plugins\"\nimport {getChainId} from \"../../utils\"\nimport {VERSION} from \"../../VERSION\"\nimport {configLens} from \"../../default-config\"\nconst execStrategy = async ({service, body, config, opts}) => {\n  const strategy = getServiceRegistry().getStrategy(service.method)\n  return strategy({service, body, config, opts})\n}\n\nexport async function execService({service, msg = {}, config = {}, opts = {}, platform}) {\n  msg.data = service.data\n  const execConfig = {\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n    client: {\n      ...config.client,\n      platform,\n      fclVersion: VERSION,\n      fclLibrary: \"https://github.com/onflow/fcl-js\",\n      hostname: window?.location?.hostname ?? null,\n      network: await getChainId(opts),\n    },\n  }\n\n  try {\n    const res = await execStrategy({\n      service,\n      body: msg,\n      config: execConfig,\n      opts,\n    })\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data,\n        msg,\n        config: execConfig,\n        opts,\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    log({\n      title: `Error on execService ${service?.type}`,\n      message: error,\n      level: LEVELS.error,\n    })\n    throw error\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  if (!resp[\"f_vsn\"]) {\n    return {\n      ...COMPOSITE_SIGNATURE_PRAGMA,\n      addr: sansPrefix(resp.addr || resp.address),\n      signature: resp.signature || resp.sig,\n      keyId: resp.keyId,\n    }\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return null\n  }\n}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {normalizeCompositeSignature} from \"../normalizers/service/composite-signature\"\nimport {getDiscoveryService, makeDiscoveryServices} from \"../discovery\"\nimport {getServiceRegistry} from \"./exec-service/plugins\"\nimport {isMobile} from \"../utils\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").CurrentUser} CurrentUser\n * @typedef {import(\"@onflow/typedefs\").CompositeSignature} CompositeSignature\n */\n\nexport const isFn = d => typeof d === \"function\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function getAccountProofData() {\n  let accountProofDataResolver = await config.get(\"fcl.accountProof.resolver\")\n  if (accountProofDataResolver == null) return\n  if (!isFn(accountProofDataResolver)) {\n    log({\n      title: \"Account Proof Data Resolver must be a function\",\n      message: `Check fcl.accountProof.resolver configuration.\n                Expected: fcl.accountProof.resolver: async () => { ... }\n                Received: fcl.accountProof.resolver: ${typeof accountProofDataResolver}\n                `,\n      level: LEVELS.warn,\n    })\n    return\n  }\n\n  const accountProofData = await accountProofDataResolver()\n  if (accountProofData == null) return\n\n  invariant(\n    typeof accountProofData.appIdentifier === \"string\",\n    \"appIdentifier must be a string\"\n  )\n  invariant(\n    /^[0-9a-f]+$/i.test(accountProofData.nonce),\n    \"Nonce must be a hex string\"\n  )\n\n  return accountProofData\n}\n\nconst makeConfig = async ({discoveryAuthnInclude, discoveryFeaturesSuggested}) => {\n  return {\n    client: {\n      discoveryAuthnInclude,\n      discoveryFeaturesSuggested,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: getServiceRegistry().getStrategies(),\n    },\n  }\n}\n\n/**\n * @description - Authenticate a user\n * @param {object} [opts] - Options\n * @param {object} [opts.platform] - platform that runs the function\n * @param {object} [opts.service] - Optional service to use for authentication\n * @param {boolean} [opts.redir=false] - Optional flag to allow window to stay open after authentication\n * @returns {function(*)Promise<CurrentUser>} - User object\n */\nconst getAuthenticate =\n  ({platform}) =>\n  async ({service, redir = false} = {}) => {\n    if (\n      service &&\n      !service?.provider?.is_installed &&\n      service?.provider?.requires_install\n    ) {\n      window.location.href = service?.provider?.install_link\n      return\n    }\n\n    return new Promise(async (resolve, reject) => {\n      spawnCurrentUser()\n      const opts = {redir}\n      const user = await snapshot()\n      const discoveryService = await getDiscoveryService(service)\n      const refreshService = serviceOfType(user.services, \"authn-refresh\")\n      let accountProofData\n\n      if (user.loggedIn) {\n        if (refreshService) {\n          try {\n            const response = await execService({\n              service: refreshService,\n              msg: accountProofData,\n              opts,\n              platform,\n            })\n            send(NAME, SET_CURRENT_USER, await buildUser(response))\n          } catch (error) {\n            log({\n              title: `${error.name} Could not refresh wallet authentication.`,\n              message: error.message,\n              level: LEVELS.error,\n            })\n          } finally {\n            return resolve(await snapshot())\n          }\n        } else {\n          return resolve(user)\n        }\n      }\n\n      try {\n        accountProofData = await getAccountProofData()\n      } catch (error) {\n        log({\n          title: `${error.name} On Authentication: Could not resolve account proof data.`,\n          message: error.message,\n          level: LEVELS.error,\n        })\n        return reject(error)\n      }\n\n      try {\n        const response = await execService({\n          service: discoveryService,\n          msg: accountProofData,\n          config: await makeConfig(discoveryService),\n          opts,\n          platform,\n        })\n        send(NAME, SET_CURRENT_USER, await buildUser(response))\n      } catch (error) {\n        log({\n          title: `${error} On Authentication`,\n          message: error,\n          level: LEVELS.error,\n        })\n      } finally {\n        resolve(await snapshot())\n      }\n    })\n  }\n\n/**\n * @description - Unauthenticate a user\n * @returns {void}\n */\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nconst getResolvePreAuthz =\n  ({platform}) =>\n  authz => {\n    const resp = normalizePreAuthzResponse(authz)\n    const axs = []\n\n    if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n    for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n    for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n    var result = axs.map(([role, az]) => ({\n      tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n      addr: az.identity.address,\n      keyId: az.identity.keyId,\n      signingFunction(signable) {\n        return execService({service: az, msg: signable, platform})\n      },\n      role: {\n        proposer: role === \"PROPOSER\",\n        payer: role === \"PAYER\",\n        authorizer: role === \"AUTHORIZER\",\n      },\n    }))\n    return result\n  }\n\n/**\n * @description\n * Produces the needed authorization details for the current user to submit transactions to Flow\n * It defines a signing function that connects to a user's wallet provider to produce signatures to submit transactions.\n *\n * @param {object} ops - running options\n * @param {string} ops.platform - platform that runs the function\n * @param {object} account - Account object\n * @returns {Promise<object>} - Account object with signing function\n */\nconst getAuthorization =\n  ({platform}) =>\n  async account => {\n    spawnCurrentUser()\n\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        const user = await getAuthenticate({platform})({redir: true})\n        const authz = serviceOfType(user.services, \"authz\")\n        const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n        if (preAuthz)\n          return getResolvePreAuthz({platform})(\n            await execService({\n              service: preAuthz,\n              msg: preSignable,\n              platform,\n            })\n          )\n        if (authz) {\n          let windowRef\n          if (isMobile() && authz.method === \"WC/RPC\") {\n            windowRef = window.open(\"\", \"_blank\")\n          }\n          return {\n            ...account,\n            tempId: \"CURRENT_USER\",\n            resolve: null,\n            addr: sansPrefix(authz.identity.address),\n            keyId: authz.identity.keyId,\n            sequenceNum: null,\n            signature: null,\n            async signingFunction(signable) {\n              return normalizeCompositeSignature(\n                await execService({\n                  service: authz,\n                  msg: signable,\n                  opts: {\n                    includeOlderJsonRpcCall: true,\n                    windowRef,\n                  },\n                  platform,\n                })\n              )\n            },\n          }\n        }\n        throw new Error(\n          \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n        )\n      },\n    }\n  }\n\n/**\n * @description\n * The callback passed to subscribe will be called when the user authenticates and un-authenticates, making it easy to update the UI accordingly.\n *\n * @param {Function} callback - Callback function\n * @returns {Function} - Unsubscribe function\n */\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n/**\n * @description - Gets the current user\n * @returns {Promise<CurrentUser>} - User object\n */\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\n/**\n * @description - Resolves the current user as an argument\n *\n * @param {object} ops - running options\n * @param {string} ops.platform - platform that runs the function\n * @returns {Promise<Function>}\n */\nconst getResolveArgument =\n  ({platform}) =>\n  async () => {\n    const {addr} = await getAuthenticate({platform})()\n    return arg(withPrefix(addr), t.Address)\n  }\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\n/**\n * @description - A method to use allowing the user to personally sign data via FCL Compatible Wallets/Services.\n * @param {string} msg - Message to sign\n * @returns {Promise<CompositeSignature[]>} - Array of CompositeSignatures\n */\nconst getSignUserMessage =\n  ({platform}) =>\n  async msg => {\n    spawnCurrentUser()\n    const user = await getAuthenticate({platform})({redir: true})\n\n    const signingService = serviceOfType(user.services, \"user-signature\")\n\n    invariant(\n      signingService,\n      \"Current user must have authorized a signing service.\"\n    )\n\n    try {\n      const response = await execService({\n        service: signingService,\n        msg: makeSignable(msg),\n        platform,\n      })\n      if (Array.isArray(response)) {\n        return response.map(compSigs => normalizeCompositeSignature(compSigs))\n      } else {\n        return [normalizeCompositeSignature(response)]\n      }\n    } catch (error) {\n      return error\n    }\n  }\n\nconst getCurrentUser = ({platform}) => {\n  let currentUser = () => {\n    return {\n      authenticate: getAuthenticate({platform}),\n      unauthenticate,\n      authorization: getAuthorization({platform}),\n      signUserMessage: getSignUserMessage({platform}),\n      subscribe,\n      snapshot,\n      resolveArgument: getResolveArgument({platform}),\n    }\n  }\n\n  currentUser.authenticate = getAuthenticate({platform})\n  currentUser.unauthenticate = unauthenticate\n  currentUser.authorization = getAuthorization({platform})\n  currentUser.signUserMessage = getSignUserMessage({platform})\n  currentUser.subscribe = subscribe\n  currentUser.snapshot = snapshot\n  currentUser.resolveArgument = getResolveArgument({platform})\n\n  return currentUser\n}\n\nexport {getCurrentUser}\n","import * as sdk from \"@onflow/sdk\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {getCurrentUser} from \"../current-user\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preMutate} from \"./utils/pre.js\"\nimport {isNumber} from \"../utils/is\"\n\nexport const getMutate = ({platform}) => {\n  /**\n   * @description\n   * Allows you to submit transactions to the blockchain to potentially mutate the state.\n   *\n   * @param {object} [opts] - Mutation Options and configuration\n   * @param {string} [opts.cadence] - Cadence Transaction used to mutate Flow\n   * @param {import(\"../shared-exports\").ArgsFn} [opts.args] - Arguments passed to cadence transaction\n   * @param {object | string} [opts.template] - Interaction Template for a transaction\n   * @param {number} [opts.limit] - Compute Limit for transaction\n   * @param {Function} [opts.authz] - Authorization function for transaction\n   * @param {Function} [opts.proposer] - Proposer Authorization function for transaction\n   * @param {Function} [opts.payer] - Payer Authorization function for transaction\n   * @param {Array<Function>} [opts.authorizations] - Authorizations function for transaction\n   * @returns {Promise<string>} Transaction Id\n   *\n   * @example\n   * fcl.mutate({\n   *   cadence: `\n   *     transaction(a: Int, b: Int, c: Address) {\n   *       prepare(acct: AuthAccount) {\n   *         log(acct)\n   *         log(a)\n   *         log(b)\n   *         log(c)\n   *       }\n   *     }\n   *   `,\n   *   args: (arg, t) => [\n   *     arg(6, t.Int),\n   *     arg(7, t.Int),\n   *     arg(\"0xba1132bc08f82fe2\", t.Address),\n   *   ],\n   * })\n   *\n   *\n   * Options:\n   * type Options = {\n   *   template: InteractionTemplate | String // InteractionTemplate or url to one\n   *   cadence: String!,\n   *   args: (arg, t) => Array<Arg>,\n   *   limit: Number,\n   *   authz: AuthzFn, // will overload the trinity of signatory roles\n   *   proposer: AuthzFn, // will overload the proposer signatory role\n   *   payer: AuthzFn, // will overload the payer signatory role\n   *   authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n   * }\n   */\n  const mutate = async (opts = {}) => {\n    var txid\n    try {\n      await preMutate(opts)\n      opts = await prepTemplateOpts(opts)\n      const currentUser = getCurrentUser({platform})\n      // Allow for a config to overwrite the authorization function.\n      // prettier-ignore\n      const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n      txid = sdk.config().overload(opts.dependencies || {}, async () =>\n        // prettier-ignore\n        sdk.send([\n        sdk.transaction(opts.cadence),\n\n        sdk.args(normalizeArgs(opts.args || [])),\n\n        opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n        // opts.proposer > opts.authz > authz\n        sdk.proposer(opts.proposer || opts.authz || authz),\n\n        // opts.payer > opts.authz > authz\n        sdk.payer(opts.payer || opts.authz || authz),\n\n        // opts.authorizations > [opts.authz > authz]\n        sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n      ]).then(sdk.decode)\n      )\n\n      return txid\n    } catch (error) {\n      throw error\n    }\n  }\n\n  return mutate\n}\n","import { useState, useEffect, createElement } from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Service} Service\n */\n\n/**\n * Fetches data from a URL using the POST method and returns the parsed JSON response.\n *\n * @param {string} url - The URL to fetch.\n * @param {object} opts - Additional options for the fetch request.\n * @returns {Promise<object>} - A promise that resolves to the parsed JSON response.\n */\nconst fetcher = (url, opts) => {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(opts),\n  }).then(d => d.json())\n}\n\n/**\n * Default loading component that renders the \"Loading...\" text.\n *\n * @returns {JSX.Element} - The loading component.\n */\nconst DefaultLoadingComponent = () => createElement(Text, null, \"Loading...\")\n\n/**\n * Default empty component that renders the \"No Wallets Found\" text.\n *\n * @returns {JSX.Element} - The empty component.\n */\nconst DefaultEmptyComponent = () => createElement(Text, null, \"No Wallets Found\")\n\n/**\n * Default service card component that renders a TouchableOpacity with the service provider's name as text.\n *\n * @param {object} props - The component props.\n * @param {Service} props.service - The service object.\n * @param {Function} props.onPress - The onPress event handler.\n * @returns {JSX.Element} - The service card component.\n */\nconst DefaultServiceCard = ({\n  service,\n  onPress\n}) => {\n  return createElement(\n    TouchableOpacity,\n    { onPress },\n    createElement(Text, null, service?.provider?.name),\n  )\n}\n\n/**\n * Default wrapper component that renders a View with the specified style and children components.\n *\n * @param {object} props - The component props.\n * @param {JSX.Element[]} props.children - The children components.\n * @returns {JSX.Element} - The wrapper component.\n */\nconst DefaultWrapper = ({ children }) => createElement(View, { style: styles.container }, ...children)\n\n/**\n * Custom hook for service discovery.\n *\n * @param {object} params - The hook parameters.\n * @param {object} params.fcl - The fcl instance.\n * @returns {object} - The service discovery result object.\n * @property {object[]} services - The discovered services.\n * @property {boolean} isLoading - A flag indicating whether the services are being loaded.\n * @property {Function} authenticateService - A function to authenticate a service.\n */\nexport const useServiceDiscovery = ({ fcl }) => {\n  const [services, setServices] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  const getServices = async () => {\n    setIsLoading(true)\n    const endpoint = await fcl.config.get(\"discovery.authn.endpoint\")\n    try {\n      const response = await fetcher(endpoint, {\n        fclVersion: fcl.VERSION,\n        userAgent: 'ReactNative',\n        supportedStrategies: ['HTTP/POST'],\n      })\n      setServices(response)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    getServices()\n  }, [])\n\n  /**\n   * Authenticates the provided service using the fcl instance.\n   *\n   * @param {object} service - The service object to authenticate.\n   */\n  const authenticateService = (service) => {\n    if (services.includes(service)) {\n      fcl.authenticate({ service })\n    }\n  }\n\n  return {\n    services,\n    isLoading,\n    authenticateService,\n  }\n}\n\n/**\n * Component for service discovery.\n *\n * @param {object} props - The component props.\n * @param {object} props.fcl - The fcl instance.\n * @param {Function} [props.Loading=DefaultLoadingComponent] - The loading component.\n * @param {Function} [props.Empty=DefaultEmptyComponent] - The empty component.\n * @param {Function} [props.ServiceCard=DefaultServiceCard] - The service card component.\n * @param {Function} [props.Wrapper=DefaultWrapper] - The wrapper component.\n * @returns {JSX.Element} - The service discovery component.\n */\nexport const ServiceDiscovery = ({\n  fcl,\n  Loading = DefaultLoadingComponent,\n  Empty = DefaultEmptyComponent,\n  ServiceCard = DefaultServiceCard,\n  Wrapper = DefaultWrapper\n}) => {\n  const { services, isLoading, authenticateService } = useServiceDiscovery({ fcl })\n\n  return createElement(\n    Wrapper,\n    null,\n    isLoading && createElement(Loading),\n    !isLoading && services.length === 0 && createElement(Empty),\n    !isLoading && services.map((service, index) => {\n      return (\n        createElement(ServiceCard, {\n          key: service?.provider?.address ?? index,\n          service,\n          onPress: () => {\n            authenticateService(service)\n          }\n        })\n      )\n    })\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst getAsyncStorage = () => {\n  try {\n    const ASYNC_STORAGE = {\n      can: true,\n      get: async key => JSON.parse(await AsyncStorage.getItem(key)),\n      put: async (key, value) => await AsyncStorage.setItem(key, JSON.stringify(value)),\n    }\n    return ASYNC_STORAGE\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"DEEPLINK/RPC\",\n    \"fcl.storage.default\": getAsyncStorage(),\n  }\n}\n\n","import {URL} from \"../../../../utils/url\"\n\nexport function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  if (window?.location?.origin) {\n    url.searchParams.append(\"l6n\", window.location.origin)\n  }\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then(d => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  if (!resp[\"f_vsn\"]) {\n    return {\n      ...POLLING_RESPONSE_PRAGMA,\n      status: resp.status ?? \"APPROVED\",\n      reason: resp.reason ?? null,\n      data: resp.compositeSignature || resp.data || {...resp} || {},\n      updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n      local: normalizeFrame((resp.local || [])[0]),\n    }\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return null\n  }\n}\n","import {normalizePollingResponse} from \"../../../../normalizers/service/polling-response\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, checkCanContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  const canContinue = checkCanContinue()\n  if (!canContinue) throw new Error(\"Externally Halted\")\n\n  let resp\n  try {\n    if (\n      typeof document !== \"undefined\" &&\n      document.visibilityState === \"hidden\"\n    ) {\n      await new Promise(r => setTimeout(r, 500))\n      return poll(service, checkCanContinue)\n    }\n\n    resp = await fetchService(service, {\n      method: serviceMethod(service),\n    }).then(normalizePollingResponse)\n  } catch (error) {\n    throw error\n  }\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, checkCanContinue)\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {normalizeLocalView} from \"../../../normalizers/service/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {VERSION} from \"../../../VERSION\"\nimport {serviceEndpoint} from \"../strategies/utils/service-endpoint\"\n\nexport const getExecHttpPost = (execLocal) => async({service, body, config, opts}) => {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...body,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n\n    // these two flags are required to run polling one more time before it stops\n    var canContinue = true\n    var shouldContinue = true\n\n    const [_, unmount] = await execLocal(\n      normalizeLocalView(resp.local),\n      {\n        serviceEndpoint,\n        onClose: () => (shouldContinue = false)\n      }\n    )\n\n    const close = () => {\n      try {\n        unmount()\n        shouldContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n    /**\n     * this function is run once per poll call.\n     * Offsetting canContinue flag to make sure that\n     * the polling is performed one extra time after canContinue flag is set to false\n     * to prevent halting on Android when a browser calls window.close\n     * before FCL receives a successful result from polling\n     *\n     * @returns {boolean} \n     */ \n    const checkCanContinue = () => {\n      const offsetCanContinue = canContinue\n      canContinue = shouldContinue\n\n      return offsetCanContinue\n    }\n\n    return poll(resp.updates, checkCanContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import * as WebBrowser from \"expo-web-browser\"\nimport * as Linking from \"expo-linking\"\nimport {FCL_REDIRECT_URL_PARAM_NAME} from \"../constants\"\nimport {URL} from \"../url\"\n\n/**\n *\n * @param {URL} src\n * @param {object} opts\n * @returns {[object, () => void]}\n */\nexport function renderBrowser(src, opts = {}) {\n  const redirectUrl = Linking.createURL(\"$$fcl_auth_callback$$\", {\n    queryParams: {},\n  })\n  const url = new URL(src.toString())\n  url.searchParams.append(FCL_REDIRECT_URL_PARAM_NAME, redirectUrl)\n  const webbrowser = WebBrowser.openAuthSessionAsync(url.toString())\n\n  const unmount = () => {\n    try {\n      WebBrowser.dismissAuthSession()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  // Call onClose when the webbrowser is closed\n  webbrowser.then(() => {\n    if (opts?.onClose) {\n      opts.onClose()\n    }\n  })\n\n  return [webbrowser, unmount]\n}\n","import * as Linking from \"expo-linking\"\nimport {AppState} from \"react-native\"\nimport {URL} from \"../url\"\n\n/**\n * Renders a deeplink view (i.e. deep links to a wallet app)\n *\n * @param {URL} src\n * @param {object} opts\n * @param {() => void} [opts.onClose]\n * @returns {[null, () => void]}\n */\nexport function renderDeeplink(src, opts = {}) {\n  const url = new URL(src.toString())\n\n  // Custom schemes (i.e mywallet://) are not supported for\n  // security reasons. These schemes can be hijacked by malicious\n  // apps and impersonate the wallet.\n  //\n  // Wallet developers should register a universal link instead.\n  // (i.e https://mywallet.com/ or https://link.mywallet.com/)\n  //\n  // Additionally this allows the wallet to redirect to the app\n  // store/show custom web content if the wallet is not installed.\n  if (url.protocol !== \"https:\") {\n    throw new Error(\n      \"Deeplink must be https scheme.  Custom schemes are not supported, please use a universal link/app link instead.\"\n    )\n  }\n\n  // Link to the target url\n  Linking.openURL(url.toString())\n\n  const onClose = opts.onClose || (() => {})\n\n  const onAppStateChange = state => {\n    if (state === \"active\") {\n      unmount()\n      onClose()\n    }\n  }\n  AppState.addEventListener(\"change\", onAppStateChange)\n\n  const unmount = () => {\n    AppState.removeEventListener(\"change\", onAppStateChange)\n  }\n\n  return [null, unmount]\n}\n","import {renderBrowser} from \"./render-browser\"\nimport {renderDeeplink} from \"./render-deeplink\"\n\nconst NOT_IMPLEMENTED = strategy => () => {\n  throw new Error(\n    `${strategy} Strategy util has not been implemented on this platform`\n  )\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": NOT_IMPLEMENTED(\"VIEW/IFRAME\"),\n  \"VIEW/POP\": NOT_IMPLEMENTED(\"VIEW/IFRAME\"),\n  \"VIEW/TAB\": NOT_IMPLEMENTED(\"VIEW/TAB\"),\n  \"VIEW/MOBILE_BROWSER\": renderBrowser,\n  \"VIEW/DEEPLINK\": renderDeeplink,\n}\n\nexport async function execLocal(\n  service,\n  opts = {serviceEndpoint: () => {}, onClose: () => {}}\n) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {URL} from \"../../../../utils/url\"\n\nconst isBodyEmpty = (body) => {\n  return !body || (body?.data !== undefined && Object.keys(body).filter(key => key !== 'data').length === 0)\n}\n\nexport function serviceEndpoint(service, config, body) {\n  const url = new URL(service.endpoint)\n  if (!isBodyEmpty(body)) {\n    url.searchParams.append('fclMessageJson', JSON.stringify({...body, config}))\n  } else {\n    url.searchParams.append('fclMessageJson', JSON.stringify({config}))\n  }\n\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import * as Linking from \"expo-linking\"\nimport {renderBrowser} from \"../../render-browser\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"../../../../current-user/exec-service/strategies/utils/buildMessageHandler\"\nimport {FCL_RESPONSE_PARAM_NAME} from \"../../../constants\"\n\nconst noop = () => {}\n\nexport function browser(service, config, body, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = noop\n  const onReady = noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send: noop,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  const parseDeeplink = ({url}) => {\n    const {queryParams} = Linking.parse(url)\n    const eventDataRaw = queryParams[FCL_RESPONSE_PARAM_NAME]\n    const eventData = JSON.parse(eventDataRaw)\n\n    handler({data: eventData})\n  }\n\n  const [browser, unmount] = renderBrowser(\n    serviceEndpoint(service, config, body)\n  )\n  // Android deeplink parsing\n  Linking.addEventListener(\"url\", parseDeeplink)\n  // iOS deeplink parsing\n  browser.then(parseDeeplink)\n  return {send: noop, close}\n\n  function close() {\n    try {\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n}\n","import { normalizePollingResponse } from \"../../../normalizers/service/polling-response\"\nimport {browser} from \"./utils/browser\"\n\nexport function execDeeplinkRPC({service, config, body}) {\n  return new Promise((resolve, reject) => {\n\n    browser(service, config, body, {\n      onResponse: (e, {close}) => {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n      onClose: () => {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import { CORE_STRATEGIES } from \"../constants\"\nimport {getExecHttpPost} from \"../../current-user/exec-service/strategies/http-post\"\nimport {execLocal} from \"./exec-local\"\nimport {execDeeplinkRPC} from './strategies/deeplink-rpc'\n\nexport const coreStrategies = ({\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"DEEPLINK/RPC\"]]: execDeeplinkRPC\n})\n","export * from \"./shared-exports\"\n\nimport {getMutate} from \"./exec/mutate\"\nexport const mutate = getMutate({platform: \"react-native\"})\n\nimport {getCurrentUser} from \"./current-user\"\nconst currentUser = getCurrentUser({platform: \"react-native\"})\n\nexport {currentUser}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {\n  coreStrategies,\n  getDefaultConfig,\n  useServiceDiscovery,\n  ServiceDiscovery,\n} from \"./utils/react-native\"\nimport {initServiceRegistry} from \"./current-user/exec-service/plugins\"\nimport {setIsReactNative} from \"./utils/is-react-native\"\n\nconfig(getDefaultConfig())\n\n// Set chain id default on access node change\ninitServiceRegistry({coreStrategies})\n\n// Set isReactNative flag\nsetIsReactNative(true)\n\nexport {useServiceDiscovery, ServiceDiscovery}\n"],"names":["VERSION","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","httpDocumentResolver","_ref","url","invariant","res","fetchTransport","e","Error","document","ok","json","DOCUMENT_RESOLVERS","Map","retrieve","_ref2","documentResolversFromConfig","config","where","Object","keys","map","key","resolverFromConfig","resolverProtocol","replace","set","urlParts","exec","protocol","resolver","get","normalizeInteractionTemplate","template","deriveCadenceByNetwork","network","undefined","f_type","f_version","networkDependencies","data","dependencies","dependencyPlaceholder","dependencyNetworkContracts","values","length","dependencyContract","dependencyContractForNetwork","address","reduce","cadence","placeholder","regex","RegExp","fetchChainId","opts","arguments","response","send","getNetworkParameters","then","decode","chainId","chainIdCache","hasWarnedEnv","getChainId","flowNetworkCfg","envCfg","log","deprecate","pkg","subject","message","transition","accessNode","node","catch","error","watchForChainIdChanges","subscribe","enableRequestLogging","isAndroid","navigator","test","userAgent","isSmallIOS","isLargeIOS","isIOS","isMobile","deriveDependencies","derivedDependencies","dependencyPlaceholderKeys","dependencyPlaceholderKey","dependencyPlaceholderContractsKeys","dependencyPlaceholderContract","dependency","withPrefix","prepTemplateOpts","pre","preMutate","preQuery","query","overload","script","args","limit","FCL_REDIRECT_URL_PARAM_NAME","FCL_RESPONSE_PARAM_NAME","CORE_STRATEGIES","onMessageFromFCL","messageType","cb","buildData","deprecated","console","warn","body","interaction","internal","window","addEventListener","removeEventListener","_isReactNative","isReactNative","setIsReactNative","value","_URL","globalThis","URL","constructor","base","_len","Array","_key","_url","endsWith","slice","sendMsgToFCL","msg","urlParams","URLSearchParams","location","search","redirectUrl","searchParams","append","JSON","stringify","href","parent","postMessage","opener","ready","close","approve","f_vsn","status","reason","decline","redirect","SERVICE_PRAGMA","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","CompositeSignature","addr","keyId","signature","Number","rightPaddedHexBuffer","pad","Buffer","from","padEnd","leftPaddedHexBuffer","padStart","addressBuffer","nonceBuffer","nonce","encodeAccountProof","appIdentifier","includeDomainTag","ACCOUNT_PROOF_DOMAIN_TAG","toString","concat","rlpEncode","sansPrefix","injectExtService","service","endpoint","isArray","fcl_extensions","push","ACCOUNT_PROOF","USER_SIGNATURE","validateArgs","signatures","every","sig","i","arr","cs","compSigs","getVerifySignaturesScript","verifyFunction","fclCryptoContract","verifyAccountProof","signaturesArr","keyIndices","el","Address","String","Int","verifyUserSignatures","callback","verify","serialize","resolveFunction","first","resolve","defaultResolve","pipe","createSignableVoucher","configLens","fromEntries","entries","RATE","POLL","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isExpired","tx","isSealed","isExecuted","isFinalized","isPending","isUnknown","isDiff","cur","next","HANDLERS","INIT","ctx","sendSelf","SUBSCRIBE","letter","UPDATED","all","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","self","fatalError","setTimeout","broadcast","merge","scoped","spawnTransaction","spawn","transaction","snapshot","snapshoter","subscriber","once","predicate","innerOnce","suppress","Promise","reject","unsub","txStatus","statusCode","errorMessage","onceFinalized","onceExecuted","onceSealed","TICK","HIGH_WATER_MARK","scheduleTick","hasSubs","hwm","put","block","height","getEventsAtBlockHeightRange","clearTimeout","delete","spawnEvents","events","stub","stubCoreStrategies","supportedPlugins","supportedServicePlugins","validateDiscoveryPlugin","servicePlugin","services","serviceStrategy","ds","method","discoveryServices","ServiceRegistry","coreStrategies","Set","strategies","add","includes","setServices","has","title","level","LEVELS","getServices","getStrategy","getStrategies","freeze","validatePlugins","plugins","pluginsArray","p","name","PluginRegistry","pluginsMap","getPlugins","serviceRegistry","getIsServiceRegistryInitialized","initServiceRegistry","_serviceRegistry","getServiceRegistry","pluginRegistry","makeDiscoveryServices","extensionServices","getDiscoveryService","discoveryAuthnInclude","discoveryFeaturesSuggested","discoveryWalletMethod","types","Boolean","include","fetch","headers","fclVersion","features","suggested","clientServices","supportedStrategies","SERVICE_ACTOR_KEYS","AUTHN","RESULTS","UPDATE_RESULTS","fact","fetchServicesFromDiscovery","results","readyState","onload","_letter","spawnProviders","authn","update","discovery","copy","I","O","o","oi","ii","copy_1","defineProperty","exports","_copy","_interopRequireDefault","require$$0","obj","__esModule","chi","A","C","y","x","_x","xy","x1","x2","_default","ROUND_CONSTANTS","Uint32Array","_roundConstants","iota","roundIndex","PI_SHUFFLES","RHO_OFFSETS","_piShuffles","_rhoOffsets","require$$1","require$$2","rhoPi","W","H","L","Wi","ri","j","r","theta","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","permute","fill","_buffer","_permute","xorWords","readWords","Sponge","_this","capacity","padding","keccak","stateSize","blockSize","queueSize","queueOffset","state","queue","allocUnsafe","absorb","buffer","squeeze","options","output","offset","reset","SHAKE","SHA3Hash","SHA3","Keccak","_sponge","createHash","allowedSizes","defaultSize","Hash","size","sponge","input","encoding","isBuffer","TypeError","digest","formatOrOptions","format","genHash","utf8String","sha","generateTemplateId","templateData","messages","messageKey","i18n","i18nkeylanguage","dependencyAddressPlaceholder","dependencyContractNetwork","contract","fq_address","pin","pin_block_height","_arguments","argumentLabel","index","balance","argumentMessageKey","encodedHex","interface","getInteractionTemplateAudits","auditors","recomputedTemplateID","id","debug","_auditors","FlowInteractionAuditContract","flowInteractionAuditContract","fclNetwork","audits","generateImport","contractName","findImports","imports","importsReg","fileImports","match","fileImport","importLineReg","importLine","contractsReg","contracts","generateDependencyPin","blockHeight","horizon","horizonImport","account","getAccount","atBlockHeight","contractImports","contractHashes","iport","contractHashesJoined","join","generateDependencyPinAtLatestSealedBlock","latestSealedBlock","sealed","latestSealedBlockHeight","normalizeInteractionTemplateInterface","templateInterface","generateTemplateInterfaceId","interfaceData","flip","verifyDependencyPinsSame","templateDependenciesPlaceholderKeys","templateDependencyPlaceholderKey","templateDependencyPlaceholder","templateDependencyPlaceholderContractNames","templateDependencyPlaceholderContractName","templateDependencyPlaceholderContractNetworks","templateDependency","verifyDependencyPinsSameAtLatestSealedBlock","getTemplateMessage","localization","getTemplateArgumentMessage","fetchServices","servicesURL","code","resp","authorizations","provider","mergeServices","sx1","sx2","normalizeAuthn","uid","pid","icon","normalizeAuthz","identity","params","normalizePreAuthz","normalizeFrame","old","normalizeBackChannelRpc","normalizeOpenId","normalizeUserSignature","normalizeLocalView","normalizeAccountProof","normalizeAuthnRefresh","normalizeServices","normalizeService","filter","serviceNormalizers","authz","frame","normalized","serviceOfType","mostRecent","semver","compare","deriveCompositeId","rlp","encode","normalizeData","paddr","buildUser","hks","cid","loggedIn","expiresAt","expires","execStrategy","strategy","execService","platform","execConfig","app","client","fclLibrary","hostname","normalizeCompositeSignature","isFn","NAME","SET_CURRENT_USER","DEL_CURRENT_USER","DATA","getStoredUser","storage","fallback","parse","stored","removeItem","can","user","notExpired","spawnCurrentUser","Date","now","getAccountProofData","accountProofDataResolver","accountProofData","makeConfig","getAuthenticate","redir","is_installed","requires_install","install_link","discoveryService","refreshService","unauthenticate","normalizePreAuthzResponse","proposer","payer","authorization","getResolvePreAuthz","_ref3","axs","az","result","_ref4","role","tempId","signingFunction","signable","authorizer","getAuthorization","_ref5","preSignable","preAuthz","windowRef","open","sequenceNum","includeOlderJsonRpcCall","EXIT","receive","tag","expectReply","timeout","getResolveArgument","_ref6","makeSignable","getSignUserMessage","_ref7","signingService","getCurrentUser","_ref8","currentUser","authenticate","signUserMessage","resolveArgument","getMutate","mutate","txid","fetcher","DefaultLoadingComponent","createElement","Text","DefaultEmptyComponent","DefaultServiceCard","onPress","TouchableOpacity","DefaultWrapper","children","View","style","styles","container","useServiceDiscovery","fcl","useState","isLoading","setIsLoading","useEffect","authenticateService","ServiceDiscovery","Loading","Empty","ServiceCard","Wrapper","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","getAsyncStorage","ASYNC_STORAGE","AsyncStorage","getItem","setItem","getDefaultConfig","serviceEndpoint","origin","fetchService","normalizePollingResponse","compositeSignature","updates","authorizationUpdates","local","OPTIONS","serviceMethod","poll","checkCanContinue","canContinue","visibilityState","getExecHttpPost","execLocal","shouldContinue","_","unmount","onClose","offsetCanContinue","serviceResponse","renderBrowser","src","Linking","createURL","queryParams","webbrowser","WebBrowser","openAuthSessionAsync","dismissAuthSession","renderDeeplink","openURL","onAppStateChange","AppState","NOT_IMPLEMENTED","VIEWS","isBodyEmpty","CLOSE_EVENT","READY_EVENT","RESPONSE_EVENT","toLowerCase","IGNORE","was","want","buildMessageHandler","onReady","onResponse","onMessage","noop","browser","handler","parseDeeplink","eventDataRaw","eventData","execDeeplinkRPC","reauthenticate","signUp","logIn"],"mappings":"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"}