{"ast":null,"code":"export let Status=/*#__PURE__*/function(Status){Status[\"Pending\"]=\"Pending\";Status[\"Success\"]=\"Success\";Status[\"Failure\"]=\"Failure\";Status[\"Null\"]=\"Null\";Status[\"Confirming\"]=\"Confirming\";Status[\"Crosschaining\"]=\"Routing\";Status[\"Timeout\"]=\"Timeout\";Status[\"BigAmount\"]=\"Big Amount\";return Status;}({});export function getStatus(status,confirmations){let statusType=Status.Confirming;if([0,5].includes(status)){statusType=Status.Confirming;}else if([7,8].includes(status)){statusType=Status.Crosschaining;}else if([9,10].includes(status)){if(status===10||confirmations&&confirmations>0){statusType=Status.Success;}else{statusType=Status.Crosschaining;}}else if([1,2,4,6,3,16,11,14,20].includes(status)){statusType=Status.Failure;}// else if ([].includes(status)) {\n//   statusType = Status.Timeout\n// }\nelse if([12].includes(status)){statusType=Status.BigAmount;}return statusType;}export const END_STATUS=[1,3,10,16,-2,-3];","map":{"version":3,"names":["Status","getStatus","status","confirmations","statusType","Confirming","includes","Crosschaining","Success","Failure","BigAmount","END_STATUS"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/status.ts"],"sourcesContent":["export enum Status {\n  Pending = \"Pending\",\n  Success = \"Success\",\n  Failure = \"Failure\",\n  Null = \"Null\",\n  Confirming = \"Confirming\",\n  Crosschaining = \"Routing\",\n  Timeout = \"Timeout\",\n  BigAmount = \"Big Amount\",\n}\n\nexport function getStatus (status:any, confirmations?:any) {\n  let statusType = Status.Confirming\n  if ([0, 5].includes(status)) {\n    statusType = Status.Confirming\n  } else if ([7, 8].includes(status)) {\n    statusType = Status.Crosschaining\n  } else if ([9, 10].includes(status)) {\n    if (\n      status === 10\n      || (confirmations && confirmations > 0)\n    ) {\n      statusType = Status.Success\n    } else {\n      statusType = Status.Crosschaining\n    }\n  } else if ([1,2, 4, 6, 3, 16, 11, 14, 20].includes(status)) {\n    statusType = Status.Failure\n  }\n  // else if ([].includes(status)) {\n  //   statusType = Status.Timeout\n  // }\n  else if ([12].includes(status)) {\n    statusType = Status.BigAmount\n  }\n  return statusType\n}\n\nexport const END_STATUS = [1, 3, 10, 16,-2, -3]"],"mappings":"AAAA,UAAY,CAAAA,MAAM,uBAANA,MAAM,EAANA,MAAM,sBAANA,MAAM,sBAANA,MAAM,sBAANA,MAAM,gBAANA,MAAM,4BAANA,MAAM,4BAANA,MAAM,sBAANA,MAAM,iCAAN,CAAAA,MAAM,OAWlB,MAAO,SAAS,CAAAC,SAASA,CAAEC,MAAU,CAAEC,aAAkB,CAAE,CACzD,GAAI,CAAAC,UAAU,CAAGJ,MAAM,CAACK,UAAU,CAClC,GAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,QAAQ,CAACJ,MAAM,CAAC,CAAE,CAC3BE,UAAU,CAAGJ,MAAM,CAACK,UAAU,CAChC,CAAC,IAAM,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAACC,QAAQ,CAACJ,MAAM,CAAC,CAAE,CAClCE,UAAU,CAAGJ,MAAM,CAACO,aAAa,CACnC,CAAC,IAAM,IAAI,CAAC,CAAC,CAAE,EAAE,CAAC,CAACD,QAAQ,CAACJ,MAAM,CAAC,CAAE,CACnC,GACEA,MAAM,GAAK,EAAE,EACTC,aAAa,EAAIA,aAAa,CAAG,CAAE,CACvC,CACAC,UAAU,CAAGJ,MAAM,CAACQ,OAAO,CAC7B,CAAC,IAAM,CACLJ,UAAU,CAAGJ,MAAM,CAACO,aAAa,CACnC,CACF,CAAC,IAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,CAACD,QAAQ,CAACJ,MAAM,CAAC,CAAE,CAC1DE,UAAU,CAAGJ,MAAM,CAACS,OAAO,CAC7B,CACA;AACA;AACA;AAAA,IACK,IAAI,CAAC,EAAE,CAAC,CAACH,QAAQ,CAACJ,MAAM,CAAC,CAAE,CAC9BE,UAAU,CAAGJ,MAAM,CAACU,SAAS,CAC/B,CACA,MAAO,CAAAN,UAAU,CACnB,CAEA,MAAO,MAAM,CAAAO,UAAU,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}