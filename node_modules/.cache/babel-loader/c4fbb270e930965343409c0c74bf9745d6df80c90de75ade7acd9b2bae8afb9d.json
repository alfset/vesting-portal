{"ast":null,"code":"import config from'../../config';import multicallABI from'../../constants/multicall/abi.json';// import ERC20_INTERFACE from '../../constants/abis/erc20'\nconst TIMEOUT='timeout';const Web3=require('web3');export function getWeb3(rpc,provider){rpc=rpc?rpc:'';if(provider){// console.log(library)\nconst wFn=new Web3(provider);// console.log(wFn)\nreturn wFn;}else{// console.log(rpc)\nconst wFn=new Web3(new Web3.providers.HttpProvider(rpc));return wFn;}}export function getContract(_ref){let{rpc,abi,provider}=_ref;const web3=getWeb3(rpc,provider);abi=abi?abi:multicallABI;return new web3.eth.Contract(abi);}function timeoutWeb3(){return new Promise(resolve=>{setTimeout(()=>{resolve(TIMEOUT);},[1000*50]);});}function getMulticallData(chainId,rpc,list){return new Promise((resolve,reject)=>{const contract=getContract({abi:multicallABI,rpc:rpc});contract.options.address=config.getCurChainInfo(chainId).multicalToken;const arr=[];for(const obj of list){arr.push({target:obj.to,callData:obj.data});}contract.methods.aggregate(arr).call((err,res)=>{if(err){reject(err);}else{resolve(res.returnData);}});});}function getMulticallResult(chainId,rpc,list){return new Promise((resolve,reject)=>{Promise.race([timeoutWeb3(),getMulticallData(chainId,rpc,list)]).then(res=>{if(res===TIMEOUT){reject(res);}else{resolve(res);}}).catch(error=>{reject(error);});});}const useNode={};async function useMulticall(chainId,list){var _config$getCurChainIn;if(isNaN(chainId))return undefined;const rpcArr=(_config$getCurChainIn=config.getCurChainInfo(chainId))===null||_config$getCurChainIn===void 0?void 0:_config$getCurChainIn.nodeRpcList;if(!rpcArr)return'';const len=rpcArr.length-1;if(!useNode[chainId]){useNode[chainId]={rpc:rpcArr[0],index:0};}let index=useNode[chainId].index;const rpc=rpcArr[useNode[chainId].index];let results='';try{results=await getMulticallResult(chainId,rpc,list);}catch(error){console.error('useMulticall error: '+rpc);console.error(error.toString());if(error.toString().indexOf('Invalid JSON RPC response')!==-1||error.toString().indexOf('Error: Returned error')!==-1||error===TIMEOUT){if(index<len){index++;useNode[chainId]={rpc:rpcArr[index],index:index};results=await useMulticall(chainId,list);}else{useNode[chainId]={rpc:rpcArr[0],index:0};}}else{results=error;}}return results;}// const rList = [\n//   {\n//     data: ERC20_INTERFACE.encodeFunctionData('balanceOf', ['0xC03033d8b833fF7ca08BF2A58C9BC9d711257249']),\n//     methods: 'balanceOf',\n//     to: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\n//   },\n//   {\n//     data: ERC20_INTERFACE.encodeFunctionData('balanceOf', ['0xC03033d8b833fF7ca08BF2A58C9BC9d711257249']),\n//     methods: 'balanceOf',\n//     to: '0xf68c9df95a18b2a5a5fa1124d79eeeffbad0b6fa'\n//   },\n//   // {\n//   //   data: '0x313ce567',\n//   //   methods: 'decimals',\n//   //   to: '0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b'\n//   // },\n//   // {\n//   //   data: '0x95d89b41',\n//   //   methods: 'symbol',\n//   //   to: '0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b'\n//   // }\n// ]\n// useMulticall('56', rList).then(res => {\n//   console.log(res)\n//   const bl1 = ERC20_INTERFACE.decodeFunctionResult(rList[0].methods, res[0])[0]\n//   const bl2 = ERC20_INTERFACE.decodeFunctionResult(rList[1].methods, res[1])[0]\n//   console.log(bl1)\n//   console.log(bl2)\n//   console.log(bl1.sub(bl2).toString())\n//   // for (let i = 0, len = rList.length; i < len; i++) {\n//   //   console.log(rList[i].methods)\n//   //   console.log(ERC20_INTERFACE.decodeFunctionResult(rList[i].methods, res[i])[0])\n//   // }\n// })\nexport{useMulticall};","map":{"version":3,"names":["config","multicallABI","TIMEOUT","Web3","require","getWeb3","rpc","provider","wFn","providers","HttpProvider","getContract","_ref","abi","web3","eth","Contract","timeoutWeb3","Promise","resolve","setTimeout","getMulticallData","chainId","list","reject","contract","options","address","getCurChainInfo","multicalToken","arr","obj","push","target","to","callData","data","methods","aggregate","call","err","res","returnData","getMulticallResult","race","then","catch","error","useNode","useMulticall","_config$getCurChainIn","isNaN","undefined","rpcArr","nodeRpcList","len","length","index","results","console","toString","indexOf"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/tools/multicall.js"],"sourcesContent":["import config from '../../config'\nimport multicallABI from '../../constants/multicall/abi.json'\n// import ERC20_INTERFACE from '../../constants/abis/erc20'\nconst TIMEOUT = 'timeout'\n\nconst Web3 = require('web3')\n\nexport function getWeb3 (rpc, provider) {\n  rpc = rpc ? rpc : ''\n  if (provider) {\n    // console.log(library)\n    const wFn = new Web3(provider)\n    // console.log(wFn)\n    return wFn\n  } else {\n    // console.log(rpc)\n    const wFn = new Web3(new Web3.providers.HttpProvider(rpc))\n    return wFn\n  }\n}\n\n\nexport function getContract ({rpc, abi, provider}) {\n  const web3 = getWeb3(rpc, provider)\n  abi = abi ? abi : multicallABI\n  return new web3.eth.Contract(abi)\n}\n\nfunction timeoutWeb3 () {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(TIMEOUT)\n    }, [1000 * 50])\n  })\n}\n\nfunction getMulticallData (chainId, rpc, list) {\n  return new Promise((resolve, reject) => {\n    const contract = getContract({abi: multicallABI, rpc: rpc})\n    contract.options.address = config.getCurChainInfo(chainId).multicalToken\n    const arr = []\n    for (const obj of list) {\n      arr.push({\n        target: obj.to,\n        callData: obj.data\n      })\n    }\n    contract.methods.aggregate(arr).call((err, res) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(res.returnData)\n      }\n    })\n  })\n}\n\nfunction getMulticallResult (chainId, rpc, list) {\n  return new Promise((resolve, reject) => {\n    Promise.race([\n      timeoutWeb3(),\n      getMulticallData(chainId, rpc, list)\n    ]).then(res => {\n      if (res === TIMEOUT) {\n        reject(res)\n      } else {\n        resolve(res)\n      }\n    }).catch(error => {\n      reject(error)\n    })\n  })\n}\n\nconst useNode = {}\n\nasync function useMulticall (chainId, list) {\n  if (isNaN(chainId)) return undefined\n  const rpcArr = config.getCurChainInfo(chainId)?.nodeRpcList\n  if (!rpcArr) return ''\n  const len = rpcArr.length - 1\n  if (!useNode[chainId]) {\n    useNode[chainId] = {\n      rpc: rpcArr[0],\n      index: 0\n    }\n  }\n  let index = useNode[chainId].index\n  const rpc = rpcArr[useNode[chainId].index]\n  let results = ''\n  try {\n    results = await getMulticallResult(chainId, rpc, list)\n  } catch (error) {\n    console.error('useMulticall error: ' + rpc)\n    console.error(error.toString())\n    if (\n      error.toString().indexOf('Invalid JSON RPC response') !== -1\n      || error.toString().indexOf('Error: Returned error') !== -1\n      || error === TIMEOUT\n    ) {\n      if (index < len) {\n        index ++\n        useNode[chainId] = {\n          rpc: rpcArr[index],\n          index: index\n        }\n        results = await useMulticall(chainId, list)\n      } else {\n        useNode[chainId] = {\n          rpc: rpcArr[0],\n          index: 0\n        }\n      }\n    } else {\n      results = error\n    }\n  }\n  return results\n}\n\n// const rList = [\n//   {\n//     data: ERC20_INTERFACE.encodeFunctionData('balanceOf', ['0xC03033d8b833fF7ca08BF2A58C9BC9d711257249']),\n//     methods: 'balanceOf',\n//     to: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\n//   },\n//   {\n//     data: ERC20_INTERFACE.encodeFunctionData('balanceOf', ['0xC03033d8b833fF7ca08BF2A58C9BC9d711257249']),\n//     methods: 'balanceOf',\n//     to: '0xf68c9df95a18b2a5a5fa1124d79eeeffbad0b6fa'\n//   },\n//   // {\n//   //   data: '0x313ce567',\n//   //   methods: 'decimals',\n//   //   to: '0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b'\n//   // },\n//   // {\n//   //   data: '0x95d89b41',\n//   //   methods: 'symbol',\n//   //   to: '0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b'\n//   // }\n// ]\n// useMulticall('56', rList).then(res => {\n//   console.log(res)\n//   const bl1 = ERC20_INTERFACE.decodeFunctionResult(rList[0].methods, res[0])[0]\n//   const bl2 = ERC20_INTERFACE.decodeFunctionResult(rList[1].methods, res[1])[0]\n//   console.log(bl1)\n//   console.log(bl2)\n//   console.log(bl1.sub(bl2).toString())\n//   // for (let i = 0, len = rList.length; i < len; i++) {\n//   //   console.log(rList[i].methods)\n//   //   console.log(ERC20_INTERFACE.decodeFunctionResult(rList[i].methods, res[i])[0])\n//   // }\n// })\nexport {\n  useMulticall\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}