{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { tokenBalanceList, walletViews, WALLET_VIEWS, updateTokenBalance } from './actions';\n\n// import config from '../../config'\n\nconst initialState = {\n  tokenBalanceList: {},\n  tokenBalance: {},\n  walletViews: WALLET_VIEWS.ACCOUNT\n};\nexport default createReducer(initialState, builder => builder.addCase(walletViews, (state, _ref) => {\n  let {\n    payload: {\n      type\n    }\n  } = _ref;\n  state.walletViews = type;\n}).addCase(updateTokenBalance, (state, _ref2) => {\n  let {\n    payload: {\n      chainId,\n      token,\n      account,\n      balance,\n      decimals\n    }\n  } = _ref2;\n  if (!state.tokenBalance) state.tokenBalance = {};\n  if (!state.tokenBalance[chainId]) state.tokenBalance[chainId] = {};\n  if (!state.tokenBalance[chainId][account]) state.tokenBalance[chainId][account] = {};\n  // if (!state.tokenBalance[chainId][account][token]) state.tokenBalance[chainId][account][token] = {}\n  state.tokenBalance[chainId][account][token] = {\n    balance,\n    decimals\n  };\n  // console.log(state, chainId, token, account, balance, decimals)\n}).addCase(tokenBalanceList, (state, _ref3) => {\n  let {\n    payload: {\n      chainId,\n      tokenList,\n      account\n    }\n  } = _ref3;\n  // console.log(state.tokenBalanceList)\n  if (state.tokenBalanceList && chainId && account) {\n    // console.log(1)\n    state.tokenBalanceList[account] = {\n      ...state.tokenBalanceList[account],\n      [chainId]: {\n        ...(state.tokenBalanceList[account] ? state.tokenBalanceList[account][chainId] : {}),\n        ...tokenList\n      }\n    };\n  } else if (chainId && account) {\n    // console.log(2)\n    state.tokenBalanceList = {\n      [account]: {\n        [chainId]: {\n          ...tokenList\n        }\n      }\n    };\n  }\n}));","map":{"version":3,"names":["createReducer","tokenBalanceList","walletViews","WALLET_VIEWS","updateTokenBalance","initialState","tokenBalance","ACCOUNT","builder","addCase","state","_ref","payload","type","_ref2","chainId","token","account","balance","decimals","_ref3","tokenList"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/wallet/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { tokenBalanceList, walletViews, WALLET_VIEWS, updateTokenBalance } from './actions'\n\n// import config from '../../config'\n\nexport interface ListsState {\n  readonly tokenBalanceList: any\n  readonly tokenBalance: any\n  readonly walletViews: any\n}\n\nconst initialState: ListsState = {\n  tokenBalanceList: {},\n  tokenBalance: {},\n  walletViews: WALLET_VIEWS.ACCOUNT,\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(walletViews, (state, { payload: { type } }) => {\n      state.walletViews = type\n    })\n    .addCase(updateTokenBalance, (state, { payload: { chainId, token, account, balance, decimals } }) => {\n      if (!state.tokenBalance) state.tokenBalance = {}\n      if (!state.tokenBalance[chainId]) state.tokenBalance[chainId] = {}\n      if (!state.tokenBalance[chainId][account]) state.tokenBalance[chainId][account] = {}\n      // if (!state.tokenBalance[chainId][account][token]) state.tokenBalance[chainId][account][token] = {}\n      state.tokenBalance[chainId][account][token] = {\n        balance,\n        decimals\n      }\n      // console.log(state, chainId, token, account, balance, decimals)\n    })\n    .addCase(tokenBalanceList, (state, { payload: { chainId, tokenList, account } }) => {\n      // console.log(state.tokenBalanceList)\n      if (state.tokenBalanceList && chainId && account) {\n        // console.log(1)\n        state.tokenBalanceList[account] = {\n          ...state.tokenBalanceList[account],\n          [chainId]: {\n            ...(state.tokenBalanceList[account] ? state.tokenBalanceList[account][chainId] : {}),\n            ...tokenList\n          }\n        }\n      } else if (chainId && account) {\n        // console.log(2)\n        state.tokenBalanceList = {\n          [account]: {\n            [chainId]: {\n              ...tokenList\n            }\n          }\n        }\n      }\n    })\n    \n)\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,gBAAgB,EAAEC,WAAW,EAAEC,YAAY,EAAEC,kBAAkB,QAAQ,WAAW;;AAE3F;;AAQA,MAAMC,YAAwB,GAAG;EAC/BJ,gBAAgB,EAAE,CAAC,CAAC;EACpBK,YAAY,EAAE,CAAC,CAAC;EAChBJ,WAAW,EAAEC,YAAY,CAACI;AAC5B,CAAC;AAED,eAAeP,aAAa,CAACK,YAAY,EAAEG,OAAO,IAChDA,OAAO,CACJC,OAAO,CAACP,WAAW,EAAE,CAACQ,KAAK,EAAAC,IAAA,KAA4B;EAAA,IAA1B;IAAEC,OAAO,EAAE;MAAEC;IAAK;EAAE,CAAC,GAAAF,IAAA;EACjDD,KAAK,CAACR,WAAW,GAAGW,IAAI;AAC1B,CAAC,CAAC,CACDJ,OAAO,CAACL,kBAAkB,EAAE,CAACM,KAAK,EAAAI,KAAA,KAAkE;EAAA,IAAhE;IAAEF,OAAO,EAAE;MAAEG,OAAO;MAAEC,KAAK;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAS;EAAE,CAAC,GAAAL,KAAA;EAC9F,IAAI,CAACJ,KAAK,CAACJ,YAAY,EAAEI,KAAK,CAACJ,YAAY,GAAG,CAAC,CAAC;EAChD,IAAI,CAACI,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,EAAEL,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,GAAG,CAAC,CAAC;EAClE,IAAI,CAACL,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,EAAEP,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,GAAG,CAAC,CAAC;EACpF;EACAP,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,CAACD,KAAK,CAAC,GAAG;IAC5CE,OAAO;IACPC;EACF,CAAC;EACD;AACF,CAAC,CAAC,CACDV,OAAO,CAACR,gBAAgB,EAAE,CAACS,KAAK,EAAAU,KAAA,KAAmD;EAAA,IAAjD;IAAER,OAAO,EAAE;MAAEG,OAAO;MAAEM,SAAS;MAAEJ;IAAQ;EAAE,CAAC,GAAAG,KAAA;EAC7E;EACA,IAAIV,KAAK,CAACT,gBAAgB,IAAIc,OAAO,IAAIE,OAAO,EAAE;IAChD;IACAP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,GAAG;MAChC,GAAGP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC;MAClC,CAACF,OAAO,GAAG;QACT,IAAIL,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,GAAGP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,CAACF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACpF,GAAGM;MACL;IACF,CAAC;EACH,CAAC,MAAM,IAAIN,OAAO,IAAIE,OAAO,EAAE;IAC7B;IACAP,KAAK,CAACT,gBAAgB,GAAG;MACvB,CAACgB,OAAO,GAAG;QACT,CAACF,OAAO,GAAG;UACT,GAAGM;QACL;MACF;IACF,CAAC;EACH;AACF,CAAC,CAEL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}