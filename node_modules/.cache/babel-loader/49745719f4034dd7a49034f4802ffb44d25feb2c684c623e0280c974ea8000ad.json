{"ast":null,"code":"export let Status = /*#__PURE__*/function (Status) {\n  Status[\"Pending\"] = \"Pending\";\n  Status[\"Success\"] = \"Success\";\n  Status[\"Failure\"] = \"Failure\";\n  Status[\"Null\"] = \"Null\";\n  Status[\"Confirming\"] = \"Confirming\";\n  Status[\"Crosschaining\"] = \"Routing\";\n  Status[\"Timeout\"] = \"Timeout\";\n  Status[\"BigAmount\"] = \"Big Amount\";\n  return Status;\n}({});\nexport function getStatus(status, confirmations) {\n  let statusType = Status.Confirming;\n  if ([0, 5].includes(status)) {\n    statusType = Status.Confirming;\n  } else if ([7, 8].includes(status)) {\n    statusType = Status.Crosschaining;\n  } else if ([9, 10].includes(status)) {\n    if (status === 10 || confirmations && confirmations > 0) {\n      statusType = Status.Success;\n    } else {\n      statusType = Status.Crosschaining;\n    }\n  } else if ([1, 2, 4, 6, 3, 16, 11, 14, 20].includes(status)) {\n    statusType = Status.Failure;\n  }\n  // else if ([].includes(status)) {\n  //   statusType = Status.Timeout\n  // }\n  else if ([12].includes(status)) {\n    statusType = Status.BigAmount;\n  }\n  return statusType;\n}\nexport const END_STATUS = [1, 3, 10, 16, -2, -3];","map":{"version":3,"names":["Status","getStatus","status","confirmations","statusType","Confirming","includes","Crosschaining","Success","Failure","BigAmount","END_STATUS"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/status.ts"],"sourcesContent":["export enum Status {\n  Pending = \"Pending\",\n  Success = \"Success\",\n  Failure = \"Failure\",\n  Null = \"Null\",\n  Confirming = \"Confirming\",\n  Crosschaining = \"Routing\",\n  Timeout = \"Timeout\",\n  BigAmount = \"Big Amount\",\n}\n\nexport function getStatus (status:any, confirmations?:any) {\n  let statusType = Status.Confirming\n  if ([0, 5].includes(status)) {\n    statusType = Status.Confirming\n  } else if ([7, 8].includes(status)) {\n    statusType = Status.Crosschaining\n  } else if ([9, 10].includes(status)) {\n    if (\n      status === 10\n      || (confirmations && confirmations > 0)\n    ) {\n      statusType = Status.Success\n    } else {\n      statusType = Status.Crosschaining\n    }\n  } else if ([1,2, 4, 6, 3, 16, 11, 14, 20].includes(status)) {\n    statusType = Status.Failure\n  }\n  // else if ([].includes(status)) {\n  //   statusType = Status.Timeout\n  // }\n  else if ([12].includes(status)) {\n    statusType = Status.BigAmount\n  }\n  return statusType\n}\n\nexport const END_STATUS = [1, 3, 10, 16,-2, -3]"],"mappings":"AAAA,WAAYA,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA;AAWlB,OAAO,SAASC,SAASA,CAAEC,MAAU,EAAEC,aAAkB,EAAE;EACzD,IAAIC,UAAU,GAAGJ,MAAM,CAACK,UAAU;EAClC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,QAAQ,CAACJ,MAAM,CAAC,EAAE;IAC3BE,UAAU,GAAGJ,MAAM,CAACK,UAAU;EAChC,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,QAAQ,CAACJ,MAAM,CAAC,EAAE;IAClCE,UAAU,GAAGJ,MAAM,CAACO,aAAa;EACnC,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAACD,QAAQ,CAACJ,MAAM,CAAC,EAAE;IACnC,IACEA,MAAM,KAAK,EAAE,IACTC,aAAa,IAAIA,aAAa,GAAG,CAAE,EACvC;MACAC,UAAU,GAAGJ,MAAM,CAACQ,OAAO;IAC7B,CAAC,MAAM;MACLJ,UAAU,GAAGJ,MAAM,CAACO,aAAa;IACnC;EACF,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAACD,QAAQ,CAACJ,MAAM,CAAC,EAAE;IAC1DE,UAAU,GAAGJ,MAAM,CAACS,OAAO;EAC7B;EACA;EACA;EACA;EAAA,KACK,IAAI,CAAC,EAAE,CAAC,CAACH,QAAQ,CAACJ,MAAM,CAAC,EAAE;IAC9BE,UAAU,GAAGJ,MAAM,CAACU,SAAS;EAC/B;EACA,OAAON,UAAU;AACnB;AAEA,OAAO,MAAMO,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}