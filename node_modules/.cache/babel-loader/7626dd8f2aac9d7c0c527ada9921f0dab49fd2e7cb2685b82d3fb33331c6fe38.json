{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst connection_1 = require(\"./connection\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: undefined,\n    version: undefined,\n    delayPeriod: long_1.default.UZERO,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenInit = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseMsgConnectionOpenInit();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.signer = (_b = object.signer) !== null && _b !== void 0 ? _b : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nexports.MsgConnectionOpenInitResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: undefined,\n    delayPeriod: long_1.default.UZERO,\n    counterpartyVersions: [],\n    proofHeight: undefined,\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenTry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.delayPeriod.isZero()) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    for (const v of message.counterpartyVersions) {\n      connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      previousConnectionId: isSet(object.previousConnectionId) ? String(object.previousConnectionId) : \"\",\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      counterparty: isSet(object.counterparty) ? connection_1.Counterparty.fromJSON(object.counterparty) : undefined,\n      delayPeriod: isSet(object.delayPeriod) ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO,\n      counterpartyVersions: Array.isArray(object === null || object === void 0 ? void 0 : object.counterpartyVersions) ? object.counterpartyVersions.map(e => connection_1.Version.fromJSON(e)) : [],\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofInit: isSet(object.proofInit) ? bytesFromBase64(object.proofInit) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || long_1.default.UZERO).toString());\n    if (message.counterpartyVersions) {\n      obj.counterpartyVersions = message.counterpartyVersions.map(e => e ? connection_1.Version.toJSON(e) : undefined);\n    } else {\n      obj.counterpartyVersions = [];\n    }\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const message = createBaseMsgConnectionOpenTry();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.previousConnectionId = (_b = object.previousConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.counterparty = object.counterparty !== undefined && object.counterparty !== null ? connection_1.Counterparty.fromPartial(object.counterparty) : undefined;\n    message.delayPeriod = object.delayPeriod !== undefined && object.delayPeriod !== null ? long_1.default.fromValue(object.delayPeriod) : long_1.default.UZERO;\n    message.counterpartyVersions = ((_c = object.counterpartyVersions) === null || _c === void 0 ? void 0 : _c.map(e => connection_1.Version.fromPartial(e))) || [];\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofInit = (_d = object.proofInit) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofClient = (_e = object.proofClient) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.proofConsensus = (_f = object.proofConsensus) !== null && _f !== void 0 ? _f : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_g = object.signer) !== null && _g !== void 0 ? _g : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nexports.MsgConnectionOpenTryResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: undefined,\n    clientState: undefined,\n    proofHeight: undefined,\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenAck = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      counterpartyConnectionId: isSet(object.counterpartyConnectionId) ? String(object.counterpartyConnectionId) : \"\",\n      version: isSet(object.version) ? connection_1.Version.fromJSON(object.version) : undefined,\n      clientState: isSet(object.clientState) ? any_1.Any.fromJSON(object.clientState) : undefined,\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      proofTry: isSet(object.proofTry) ? bytesFromBase64(object.proofTry) : new Uint8Array(),\n      proofClient: isSet(object.proofClient) ? bytesFromBase64(object.proofClient) : new Uint8Array(),\n      proofConsensus: isSet(object.proofConsensus) ? bytesFromBase64(object.proofConsensus) : new Uint8Array(),\n      consensusHeight: isSet(object.consensusHeight) ? client_1.Height.fromJSON(object.consensusHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.counterpartyConnectionId !== undefined && (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofTry !== undefined && (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = base64FromBytes(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    const message = createBaseMsgConnectionOpenAck();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.counterpartyConnectionId = (_b = object.counterpartyConnectionId) !== null && _b !== void 0 ? _b : \"\";\n    message.version = object.version !== undefined && object.version !== null ? connection_1.Version.fromPartial(object.version) : undefined;\n    message.clientState = object.clientState !== undefined && object.clientState !== null ? any_1.Any.fromPartial(object.clientState) : undefined;\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.proofTry = (_c = object.proofTry) !== null && _c !== void 0 ? _c : new Uint8Array();\n    message.proofClient = (_d = object.proofClient) !== null && _d !== void 0 ? _d : new Uint8Array();\n    message.proofConsensus = (_e = object.proofConsensus) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.consensusHeight = object.consensusHeight !== undefined && object.consensusHeight !== null ? client_1.Height.fromPartial(object.consensusHeight) : undefined;\n    message.signer = (_f = object.signer) !== null && _f !== void 0 ? _f : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nexports.MsgConnectionOpenAckResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: undefined,\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenConfirm = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      proofAck: isSet(object.proofAck) ? bytesFromBase64(object.proofAck) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined,\n      signer: isSet(object.signer) ? String(object.signer) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.proofAck !== undefined && (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.proofAck = (_b = object.proofAck) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    message.signer = (_c = object.signer) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nexports.MsgConnectionOpenConfirmResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    return {};\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n  }\n  ConnectionOpenInit(request) {\n    const data = exports.MsgConnectionOpenInit.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n    return promise.then(data => exports.MsgConnectionOpenInitResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenTry(request) {\n    const data = exports.MsgConnectionOpenTry.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n    return promise.then(data => exports.MsgConnectionOpenTryResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenAck(request) {\n    const data = exports.MsgConnectionOpenAck.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n    return promise.then(data => exports.MsgConnectionOpenAckResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionOpenConfirm(request) {\n    const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n    return promise.then(data => exports.MsgConnectionOpenConfirmResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","any_1","client_1","connection_1","exports","protobufPackage","createBaseMsgConnectionOpenInit","clientId","counterparty","undefined","version","delayPeriod","default","UZERO","signer","MsgConnectionOpenInit","encode","message","writer","arguments","length","Writer","create","uint32","string","Counterparty","fork","ldelim","Version","isZero","uint64","decode","input","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","String","fromValue","toJSON","obj","toString","fromPartial","_a","_b","createBaseMsgConnectionOpenInitResponse","MsgConnectionOpenInitResponse","_","createBaseMsgConnectionOpenTry","previousConnectionId","clientState","counterpartyVersions","proofHeight","proofInit","Uint8Array","proofClient","proofConsensus","consensusHeight","MsgConnectionOpenTry","Any","v","Height","bytes","push","Array","isArray","map","e","bytesFromBase64","base64FromBytes","_c","_d","_e","_f","_g","createBaseMsgConnectionOpenTryResponse","MsgConnectionOpenTryResponse","createBaseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","proofTry","MsgConnectionOpenAck","createBaseMsgConnectionOpenAckResponse","MsgConnectionOpenAckResponse","createBaseMsgConnectionOpenConfirm","proofAck","MsgConnectionOpenConfirm","createBaseMsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirmResponse","MsgClientImpl","constructor","rpc","ConnectionOpenInit","bind","ConnectionOpenTry","ConnectionOpenAck","ConnectionOpenConfirm","request","data","finish","promise","then","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/ibc/core/connection/v1/tx.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}