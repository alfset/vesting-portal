{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nexport function get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    // string or array of namespaces\n    whitelist: false,\n    // array with whitelisted languages\n    nonExplicitWhitelist: false,\n    load: 'all',\n    // | currentOnly | languageOnly\n    preload: false,\n    // array with preload languages\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    // allow bundling certain languages that are not remotely fetched\n    saveMissing: false,\n    // enable to send missing values\n    updateMissing: false,\n    // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n    saveMissingTo: 'fallback',\n    // 'current' || 'all'\n    saveMissingPlurals: true,\n    // will save all forms not only singular key\n    missingKeyHandler: false,\n    // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n    missingInterpolationHandler: false,\n    // function(str, match)\n    postProcess: false,\n    // string or array of postProcessor names\n    returnNull: true,\n    // allows null value as valid translation\n    returnEmptyString: true,\n    // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false,\n    // or string to join array\n    returnedObjectHandler: function returnedObjectHandler() {},\n    // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false,\n    // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000 // max replaces to prevent endless loop\n    }\n  };\n}\n/* eslint no-param-reassign: 0 */\n\nexport function transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS]; // extend whitelist with cimode\n\n  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n    options.whitelist = options.whitelist.concat(['cimode']);\n  }\n  return options;\n}","map":{"version":3,"names":["_typeof","get","debug","initImmediate","ns","defaultNS","fallbackLng","fallbackNS","whitelist","nonExplicitWhitelist","load","preload","simplifyPluralSuffix","keySeparator","nsSeparator","pluralSeparator","contextSeparator","partialBundledLanguages","saveMissing","updateMissing","saveMissingTo","saveMissingPlurals","missingKeyHandler","missingInterpolationHandler","postProcess","returnNull","returnEmptyString","returnObjects","joinArrays","returnedObjectHandler","parseMissingKeyHandler","appendNamespaceToMissingKey","appendNamespaceToCIMode","overloadTranslationOptionHandler","handle","args","ret","defaultValue","tDescription","options","Object","keys","forEach","key","interpolation","escapeValue","format","value","_format","lng","prefix","suffix","formatSeparator","unescapePrefix","nestingPrefix","nestingSuffix","maxReplaces","transformOptions","indexOf","concat"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/i18next/dist/es/defaults.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\nexport function get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    // string or array of namespaces\n    whitelist: false,\n    // array with whitelisted languages\n    nonExplicitWhitelist: false,\n    load: 'all',\n    // | currentOnly | languageOnly\n    preload: false,\n    // array with preload languages\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    // allow bundling certain languages that are not remotely fetched\n    saveMissing: false,\n    // enable to send missing values\n    updateMissing: false,\n    // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n    saveMissingTo: 'fallback',\n    // 'current' || 'all'\n    saveMissingPlurals: true,\n    // will save all forms not only singular key\n    missingKeyHandler: false,\n    // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n    missingInterpolationHandler: false,\n    // function(str, match)\n    postProcess: false,\n    // string or array of postProcessor names\n    returnNull: true,\n    // allows null value as valid translation\n    returnEmptyString: true,\n    // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false,\n    // or string to join array\n    returnedObjectHandler: function returnedObjectHandler() {},\n    // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false,\n    // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000 // max replaces to prevent endless loop\n\n    }\n  };\n}\n/* eslint no-param-reassign: 0 */\n\nexport function transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS]; // extend whitelist with cimode\n\n  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n    options.whitelist = options.whitelist.concat(['cimode']);\n  }\n\n  return options;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}