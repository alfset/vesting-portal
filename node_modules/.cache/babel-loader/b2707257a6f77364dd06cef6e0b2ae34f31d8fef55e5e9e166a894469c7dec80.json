{"ast":null,"code":"import { Fee, Msg } from '@terra-money/terra.js';\nexport var WebConnectorTxStatus;\n(function (WebConnectorTxStatus) {\n  WebConnectorTxStatus[\"PROGRESS\"] = \"PROGRESS\";\n  WebConnectorTxStatus[\"SUCCEED\"] = \"SUCCEED\";\n  WebConnectorTxStatus[\"FAIL\"] = \"FAIL\";\n  WebConnectorTxStatus[\"DENIED\"] = \"DENIED\";\n})(WebConnectorTxStatus || (WebConnectorTxStatus = {}));\nexport function serializeTx(tx) {\n  var _a, _b, _c;\n  return {\n    msgs: tx.msgs.map(msg => msg.toJSON()),\n    fee: (_a = tx.fee) === null || _a === void 0 ? void 0 : _a.toJSON(),\n    memo: tx.memo,\n    gasPrices: (_b = tx.gasPrices) === null || _b === void 0 ? void 0 : _b.toString(),\n    gasAdjustment: (_c = tx.gasAdjustment) === null || _c === void 0 ? void 0 : _c.toString(),\n    feeDenoms: tx.feeDenoms\n  };\n}\nexport function deserializeTx(tx) {\n  const msgs = tx.msgs.map(msg => JSON.parse(msg));\n  const isProto = ('@type' in msgs[0]);\n  return {\n    ...tx,\n    msgs: msgs.map(msg => isProto ? Msg.fromData(msg) : Msg.fromAmino(msg)),\n    fee: tx.fee ? isProto ? Fee.fromData(JSON.parse(tx.fee)) : Fee.fromAmino(JSON.parse(tx.fee)) : undefined\n  };\n}","map":{"version":3,"names":["Fee","Msg","WebConnectorTxStatus","serializeTx","tx","msgs","map","msg","toJSON","fee","_a","memo","gasPrices","_b","toString","gasAdjustment","_c","feeDenoms","deserializeTx","JSON","parse","isProto","fromData","fromAmino","undefined"],"sources":["../../../../src/@terra-dev/web-connector-interface/models/tx.ts"],"sourcesContent":["import { CreateTxOptions, Fee, Msg } from '@terra-money/terra.js';\nimport {\n  WebConnectorCreateTxFailed,\n  WebConnectorTxFailed,\n  WebConnectorTxUnspecifiedError,\n} from '../errors';\n\nexport enum WebConnectorTxStatus {\n  PROGRESS = 'PROGRESS',\n  SUCCEED = 'SUCCEED',\n  FAIL = 'FAIL',\n  DENIED = 'DENIED',\n}\n\nexport interface WebConnectorTxProgress {\n  status: WebConnectorTxStatus.PROGRESS;\n  payload?: unknown;\n}\n\nexport interface WebConnectorTxSucceed {\n  status: WebConnectorTxStatus.SUCCEED;\n  payload: {\n    height: number;\n    raw_log: string;\n    txhash: string;\n  };\n}\n\nexport interface WebConnectorTxFail {\n  status: WebConnectorTxStatus.FAIL;\n  error:\n    | WebConnectorCreateTxFailed\n    | WebConnectorTxFailed\n    | WebConnectorTxUnspecifiedError;\n}\n\nexport interface WebConnectorTxDenied {\n  status: WebConnectorTxStatus.DENIED;\n}\n\nexport type WebConnectorTxResult =\n  | WebConnectorTxProgress\n  | WebConnectorTxSucceed\n  | WebConnectorTxFail\n  | WebConnectorTxDenied;\n\n// ---------------------------------------------\n// functions\n// ---------------------------------------------\nexport interface SerializedCreateTxOptions\n  extends Omit<CreateTxOptions, 'msgs' | 'fee'> {\n  msgs: string[];\n  fee: string | undefined;\n}\n\nexport function serializeTx(tx: CreateTxOptions): SerializedCreateTxOptions {\n  return {\n    msgs: tx.msgs.map((msg) => msg.toJSON()),\n    fee: tx.fee?.toJSON(),\n    memo: tx.memo,\n    gasPrices: tx.gasPrices?.toString(),\n    gasAdjustment: tx.gasAdjustment?.toString(),\n    feeDenoms: tx.feeDenoms,\n  };\n}\n\nexport function deserializeTx(tx: SerializedCreateTxOptions): CreateTxOptions {\n  const msgs = tx.msgs.map((msg) => JSON.parse(msg));\n  const isProto = '@type' in msgs[0];\n\n  return {\n    ...tx,\n    msgs: msgs.map((msg) => (isProto ? Msg.fromData(msg) : Msg.fromAmino(msg))),\n    fee: tx.fee\n      ? isProto\n        ? Fee.fromData(JSON.parse(tx.fee))\n        : Fee.fromAmino(JSON.parse(tx.fee))\n      : undefined,\n  };\n}\n"],"mappings":"AAAA,SAA0BA,GAAG,EAAEC,GAAG,QAAQ,uBAAuB;AAOjE,WAAYC,oBAKX;AALD,WAAYA,oBAAoB;EAC9BA,oBAAA,yBAAqB;EACrBA,oBAAA,uBAAmB;EACnBA,oBAAA,iBAAa;EACbA,oBAAA,qBAAiB;AACnB,CAAC,EALWA,oBAAoB,KAApBA,oBAAoB;AAgDhC,OAAM,SAAUC,WAAWA,CAACC,EAAmB;;EAC7C,OAAO;IACLC,IAAI,EAAED,EAAE,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,EAAE,CAAC;IACxCC,GAAG,EAAE,CAAAC,EAAA,GAAAN,EAAE,CAACK,GAAG,cAAAC,EAAA,uBAAAA,EAAA,CAAEF,MAAM,EAAE;IACrBG,IAAI,EAAEP,EAAE,CAACO,IAAI;IACbC,SAAS,EAAE,CAAAC,EAAA,GAAAT,EAAE,CAACQ,SAAS,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,QAAQ,EAAE;IACnCC,aAAa,EAAE,CAAAC,EAAA,GAAAZ,EAAE,CAACW,aAAa,cAAAC,EAAA,uBAAAA,EAAA,CAAEF,QAAQ,EAAE;IAC3CG,SAAS,EAAEb,EAAE,CAACa;GACf;AACH;AAEA,OAAM,SAAUC,aAAaA,CAACd,EAA6B;EACzD,MAAMC,IAAI,GAAGD,EAAE,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKY,IAAI,CAACC,KAAK,CAACb,GAAG,CAAC,CAAC;EAClD,MAAMc,OAAO,IAAG,OAAO,IAAIhB,IAAI,CAAC,CAAC,CAAC;EAElC,OAAO;IACL,GAAGD,EAAE;IACLC,IAAI,EAAEA,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAMc,OAAO,GAAGpB,GAAG,CAACqB,QAAQ,CAACf,GAAG,CAAC,GAAGN,GAAG,CAACsB,SAAS,CAAChB,GAAG,CAAE,CAAC;IAC3EE,GAAG,EAAEL,EAAE,CAACK,GAAG,GACPY,OAAO,GACLrB,GAAG,CAACsB,QAAQ,CAACH,IAAI,CAACC,KAAK,CAAChB,EAAE,CAACK,GAAG,CAAC,CAAC,GAChCT,GAAG,CAACuB,SAAS,CAACJ,IAAI,CAACC,KAAK,CAAChB,EAAE,CAACK,GAAG,CAAC,CAAC,GACnCe;GACL;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}