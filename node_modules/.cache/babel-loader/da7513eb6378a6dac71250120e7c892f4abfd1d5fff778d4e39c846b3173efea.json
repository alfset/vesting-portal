{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMeteorPostMessenger = void 0;\nconst nanoid_1 = require(\"nanoid\");\nconst envConfig_1 = require(\"../envConfig\");\nconst ExternalActionTypes_1 = require(\"../../../meteor-common/src/models/external_actions/ExternalActionTypes\");\nconst query_string_1 = require(\"query-string\");\nconst ExternalActionErrorMessages_1 = require(\"../../../meteor-common/src/models/external_actions/ExternalActionErrorMessages\");\nconst app_constants_1 = require(\"../../../meteor-common/src/constants/app_constants\");\nclass ComWindow {\n  constructor(connection, listener) {\n    const baseWalletUrl = envConfig_1.envConfig.wallet_base_url;\n    const url = new URL(baseWalletUrl);\n    this.walletOrigin = url.origin;\n    if (window.meteorCom == null) {\n      this.comType = ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message;\n      console.log(\"No extension found. Need to connect to web popup for Meteor communication\");\n      const queryParams = {\n        source: ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message,\n        connectionUid: connection.uid\n      };\n      const w = app_constants_1.SIGN_POPUP_WIDTH;\n      const h = app_constants_1.SIGN_POPUP_HEIGHT;\n      const y = window.top.outerHeight / 2 + window.top.screenY - h / 2;\n      const x = window.top.outerWidth / 2 + window.top.screenX - w / 2;\n      const newWindow = window.open(\"\".concat(baseWalletUrl, \"/connect/\").concat(connection.network, \"/\").concat(connection.actionType, \"?\").concat((0, query_string_1.stringify)(queryParams)), \"_blank\", \"popup=1,width=\".concat(w, \",height=\").concat(h, \",top=\").concat(y, \",left=\").concat(x));\n      if (newWindow != null) {\n        this.websiteWindow = newWindow;\n      } else {\n        throw new ExternalActionTypes_1.MeteorActionError({\n          message: \"Couldn't open popup window to complete wallet action\",\n          endTags: [ExternalActionErrorMessages_1.EMeteorActionErrorTag.POPUP_WINDOW_OPEN_FAILED]\n        });\n      }\n      window.addEventListener(\"message\", event => listener(event.data));\n      this.wasOpened = false;\n    } else {\n      this.comType = ExternalActionTypes_1.EMeteorWalletExternalActionSource.extension_injected;\n      this.wasOpened = true;\n      // console.log(\"Need to communicate with the extension!\");\n      window.meteorCom.addMessageDataListener(listener);\n    }\n  }\n  focus() {\n    var _a;\n    if (this.comType === ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message) {\n      (_a = this.websiteWindow) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }\n  sendMessage(data) {\n    var _a, _b;\n    if (this.comType === ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message) {\n      (_a = this.websiteWindow) === null || _a === void 0 ? void 0 : _a.postMessage(data, this.walletOrigin);\n    } else {\n      (_b = window.meteorCom) === null || _b === void 0 ? void 0 : _b.sendMessageData(data);\n    }\n  }\n  isWindowClosed() {\n    var _a, _b;\n    if (this.comType === ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message) {\n      return (_b = (_a = this.websiteWindow) === null || _a === void 0 ? void 0 : _a.closed) !== null && _b !== void 0 ? _b : true;\n    } else {\n      return false;\n    }\n  }\n  hasActiveWindow() {\n    if (this.comType === ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message) {\n      return this.websiteWindow != null;\n    } else {\n      return true;\n    }\n  }\n  close() {\n    if (this.comType === ExternalActionTypes_1.EMeteorWalletExternalActionSource.website_post_message) {\n      delete this.websiteWindow;\n    } else {}\n  }\n}\nconst pingInterval = 450;\nclass MeteorPostMessenger {\n  constructor() {\n    this.connections = [];\n    // const baseUrl = \"https://dev.wallet.meteorwallet.app\";\n    const baseUrl = envConfig_1.envConfig.wallet_base_url;\n    const url = new URL(baseUrl);\n    this.baseWalletUrl = baseUrl;\n    this.walletOrigin = url.origin;\n    this.listener = data => {\n      if (data != null) {\n        // const data: TClientPostMessageResponse = event.data;\n        // console.log(\"Meteor Post Messenger received event with data: \", data);\n        const currentConnection = this.connections.find(con => con.uid === data.uid);\n        if (currentConnection != null) {\n          this.updateConnection(currentConnection.uid, {\n            lastConnection: Date.now()\n          });\n          if (data.status === ExternalActionTypes_1.EExternalActionConnectionStatus.attempting_reconnect) {\n            this.updateConnection(currentConnection.uid, {\n              status: ExternalActionTypes_1.EExternalActionConnectionStatus.initializing\n            });\n            this.sendComs();\n          }\n          if (data.status === ExternalActionTypes_1.EExternalActionConnectionStatus.connected && currentConnection.status === ExternalActionTypes_1.EExternalActionConnectionStatus.initializing) {\n            this.updateConnection(currentConnection.uid, {\n              status: ExternalActionTypes_1.EExternalActionConnectionStatus.connected\n            });\n          }\n          if (data.status === ExternalActionTypes_1.EExternalActionConnectionStatus.closed_success) {\n            currentConnection.resolve({\n              success: true,\n              endTags: [],\n              payload: data.payload\n            });\n            this.updateConnection(currentConnection.uid, {\n              status: ExternalActionTypes_1.EExternalActionConnectionStatus.closed_success\n            });\n            this.sendComs();\n          }\n          if (data.status === ExternalActionTypes_1.EExternalActionConnectionStatus.closed_fail) {\n            this.updateConnection(currentConnection.uid, {\n              status: ExternalActionTypes_1.EExternalActionConnectionStatus.closed_fail\n            });\n            this.sendComs();\n            // const error = new MeteorActionError({ endTags: data.endTags });\n            // console.log(\"Ending failure with error\", { ...error });\n            currentConnection.reject(new ExternalActionTypes_1.MeteorActionError({\n              endTags: data.endTags\n            }));\n          }\n          if (data.status === ExternalActionTypes_1.EExternalActionConnectionStatus.closed_window) {\n            this.updateConnection(currentConnection.uid, {\n              status: ExternalActionTypes_1.EExternalActionConnectionStatus.closed_window\n            });\n            currentConnection.reject(new ExternalActionTypes_1.MeteorActionError({\n              endTags: data.endTags,\n              message: \"User closed the window\"\n            }));\n          }\n          if ([ExternalActionTypes_1.EExternalActionConnectionStatus.disconnected, ExternalActionTypes_1.EExternalActionConnectionStatus.closed_fail, ExternalActionTypes_1.EExternalActionConnectionStatus.closed_window, ExternalActionTypes_1.EExternalActionConnectionStatus.closed_success].includes(data.status)) {\n            this.removeConnection(currentConnection.uid);\n          }\n        } /* else {\r\n          console.warn(`Connection data received but no ID found \"${data.uid}\"`, data);\r\n          }*/\n      }\n    };\n    // window.addEventListener(\"message\", this.listener);\n  }\n\n  removeConnection(uid) {\n    this.connections = this.connections.filter(con => con.uid !== uid);\n    if (this.connections.length === 0) {\n      delete this.comWindow;\n      clearInterval(this.comInterval);\n      delete this.comInterval;\n    }\n  }\n  updateConnection(uid, newConnectionProperties) {\n    this.connections = this.connections.map(con => {\n      if (con.uid === uid) {\n        return {\n          ...con,\n          ...newConnectionProperties,\n          uid: con.uid\n        };\n      }\n      return con;\n    });\n  }\n  sendComs() {\n    var _a;\n    if (((_a = this.comWindow) === null || _a === void 0 ? void 0 : _a.hasActiveWindow()) && this.connections.length > 0) {\n      if (this.comInterval == null) {\n        this.comInterval = setInterval(() => this.sendComs(), pingInterval);\n      }\n      if (this.comWindow.isWindowClosed()) {\n        if (this.comWindow.wasOpened) {\n          for (const con of this.connections) {\n            con.reject(new ExternalActionTypes_1.MeteorActionError({\n              message: \"User closed the window before completing the action\",\n              endTags: [ExternalActionErrorMessages_1.EMeteorActionErrorTag.INCOMPLETE_ACTION, ExternalActionErrorMessages_1.EMeteorActionErrorTag.WINDOW_CLOSED]\n            }));\n          }\n          this.connections = [];\n          this.comWindow.close();\n        } else {\n          console.log(\"Window is closed, need to allow popup\");\n        }\n      } else {\n        this.comWindow.wasOpened = true;\n        for (const {\n          network,\n          actionType,\n          endTags,\n          status,\n          inputs,\n          uid\n        } of this.connections) {\n          const postMessage = {\n            endTags,\n            actionType: actionType,\n            status,\n            uid,\n            network\n          };\n          if (status === ExternalActionTypes_1.EExternalActionConnectionStatus.initializing) {\n            postMessage.inputs = inputs;\n          }\n          this.comWindow.sendMessage(postMessage);\n        }\n      }\n    } else {\n      clearInterval(this.comInterval);\n      delete this.comInterval;\n    }\n  }\n  addAndStartConnection(connection) {\n    if (this.connections.length > 0) {\n      for (const con of this.connections) {\n        con.status = ExternalActionTypes_1.EExternalActionConnectionStatus.disconnected;\n        con.endTags = [ExternalActionErrorMessages_1.EMeteorActionErrorTag.NEW_ACTION_STARTED];\n      }\n    }\n    this.connections.push(connection);\n    if (this.comWindow == null || !this.comWindow.hasActiveWindow()) {\n      this.comWindow = new ComWindow(connection, this.listener);\n    } else {\n      this.comWindow.focus();\n    }\n    this.sendComs();\n  }\n  async connectAndWaitForResponse(_ref) {\n    let {\n      actionType,\n      network,\n      inputs\n    } = _ref;\n    let newConnection = {\n      uid: (0, nanoid_1.nanoid)(),\n      actionType,\n      lastAttemptedConnection: 0,\n      lastConnection: 0,\n      status: ExternalActionTypes_1.EExternalActionConnectionStatus.initializing,\n      promise: undefined,\n      reject: undefined,\n      resolve: undefined,\n      currentPayload: {},\n      inputs,\n      network,\n      endTags: []\n    };\n    const promise = new Promise((resolve, reject) => {\n      newConnection.resolve = resolve;\n      newConnection.reject = error => {\n        this.connections = this.connections.filter(con => con.uid !== newConnection.uid);\n        reject(error);\n      };\n    });\n    newConnection.promise = promise;\n    this.addAndStartConnection(newConnection);\n    return await promise;\n  }\n}\nlet postMessenger;\nfunction getMeteorPostMessenger() {\n  if (postMessenger == null) {\n    postMessenger = new MeteorPostMessenger();\n  }\n  return postMessenger;\n}\nexports.getMeteorPostMessenger = getMeteorPostMessenger;","map":{"version":3,"names":["nanoid_1","require","envConfig_1","ExternalActionTypes_1","query_string_1","ExternalActionErrorMessages_1","app_constants_1","ComWindow","constructor","connection","listener","baseWalletUrl","envConfig","wallet_base_url","url","URL","walletOrigin","origin","window","meteorCom","comType","EMeteorWalletExternalActionSource","website_post_message","console","log","queryParams","source","connectionUid","uid","w","SIGN_POPUP_WIDTH","h","SIGN_POPUP_HEIGHT","y","top","outerHeight","screenY","x","outerWidth","screenX","newWindow","open","concat","network","actionType","stringify","websiteWindow","MeteorActionError","message","endTags","EMeteorActionErrorTag","POPUP_WINDOW_OPEN_FAILED","addEventListener","event","data","wasOpened","extension_injected","addMessageDataListener","focus","_a","sendMessage","postMessage","_b","sendMessageData","isWindowClosed","closed","hasActiveWindow","close","pingInterval","MeteorPostMessenger","connections","baseUrl","currentConnection","find","con","updateConnection","lastConnection","Date","now","status","EExternalActionConnectionStatus","attempting_reconnect","initializing","sendComs","connected","closed_success","resolve","success","payload","closed_fail","reject","closed_window","disconnected","includes","removeConnection","filter","length","comWindow","clearInterval","comInterval","newConnectionProperties","map","setInterval","INCOMPLETE_ACTION","WINDOW_CLOSED","inputs","addAndStartConnection","NEW_ACTION_STARTED","push","connectAndWaitForResponse","_ref","newConnection","nanoid","lastAttemptedConnection","promise","undefined","currentPayload","Promise","error","postMessenger","getMeteorPostMessenger","exports"],"sources":["./src/meteor-sdk/src/postMessage/MeteorPostMessenger.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}