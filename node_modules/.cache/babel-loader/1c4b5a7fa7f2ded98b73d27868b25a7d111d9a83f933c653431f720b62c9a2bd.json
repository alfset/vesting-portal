{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liquidityPoolDeposit = liquidityPoolDeposit;\nvar _isUndefined = require('lodash/isUndefined');\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\nvar _xdr = require('../xdr');\nvar _xdr2 = _interopRequireDefault(_xdr);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\nfunction liquidityPoolDeposit() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var liquidityPoolId = opts.liquidityPoolId,\n    maxAmountA = opts.maxAmountA,\n    maxAmountB = opts.maxAmountB,\n    minPrice = opts.minPrice,\n    maxPrice = opts.maxPrice;\n  var attributes = {};\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = _xdr2.default.PoolId.fromXDR(liquidityPoolId, 'hex');\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError('maxAmountA argument is required');\n  }\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError('maxAmountB argument is required');\n  }\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n  if ((0, _isUndefined2.default)(minPrice)) {\n    throw new TypeError('minPrice argument is required');\n  }\n  attributes.minPrice = this._toXDRPrice(minPrice);\n  if ((0, _isUndefined2.default)(maxPrice)) {\n    throw new TypeError('maxPrice argument is required');\n  }\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n  var liquidityPoolDepositOp = new _xdr2.default.LiquidityPoolDepositOp(attributes);\n  var opAttributes = {\n    body: _xdr2.default.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n  return new _xdr2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","liquidityPoolDeposit","_isUndefined","require","_isUndefined2","_interopRequireDefault","_xdr","_xdr2","obj","__esModule","default","opts","arguments","length","undefined","liquidityPoolId","maxAmountA","maxAmountB","minPrice","maxPrice","attributes","TypeError","PoolId","fromXDR","isValidAmount","_toXDRAmount","_toXDRPrice","liquidityPoolDepositOp","LiquidityPoolDepositOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/stellar-base/lib/operations/liquidity_pool_deposit.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liquidityPoolDeposit = liquidityPoolDeposit;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _xdr = require('../xdr');\n\nvar _xdr2 = _interopRequireDefault(_xdr);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\nfunction liquidityPoolDeposit() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var liquidityPoolId = opts.liquidityPoolId,\n      maxAmountA = opts.maxAmountA,\n      maxAmountB = opts.maxAmountB,\n      minPrice = opts.minPrice,\n      maxPrice = opts.maxPrice;\n\n  var attributes = {};\n\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = _xdr2.default.PoolId.fromXDR(liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError('maxAmountA argument is required');\n  }\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError('maxAmountB argument is required');\n  }\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n\n  if ((0, _isUndefined2.default)(minPrice)) {\n    throw new TypeError('minPrice argument is required');\n  }\n  attributes.minPrice = this._toXDRPrice(minPrice);\n\n  if ((0, _isUndefined2.default)(maxPrice)) {\n    throw new TypeError('maxPrice argument is required');\n  }\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n\n  var liquidityPoolDepositOp = new _xdr2.default.LiquidityPoolDepositOp(attributes);\n  var opAttributes = {\n    body: _xdr2.default.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _xdr2.default.Operation(opAttributes);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}