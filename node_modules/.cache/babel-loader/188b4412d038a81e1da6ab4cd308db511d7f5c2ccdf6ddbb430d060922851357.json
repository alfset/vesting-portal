{"ast":null,"code":"import{chainInfo}from'../chainConfig';import{ENV_NODE_CONFIG}from'../constant';export function selectNetwork(chainID,type){return new Promise(resolve=>{var _request;const{ethereum}=window;const ethereumFN=ethereum;ethereumFN.request=(_request=ethereum.request)!==null&&_request!==void 0?_request:'';window.localStorage.setItem(ENV_NODE_CONFIG,chainInfo[chainID].label);if(ethereumFN&&ethereumFN.request){// console.log(ethereumFN)\n// console.log(ethereumFN.chainId)\nconst useChainId='0x'+Number(chainID).toString(16);ethereumFN.request({method:'wallet_switchEthereumChain',params:[{chainId:useChainId}]}).then(res=>{// console.log(chainID)\nconsole.log(res);if(!type){history.go(0);}resolve({msg:'Success'});}).catch(switchError=>{console.log(switchError);if(switchError.code===4902){var _chainInfo$chainID$wa,_chainInfo$chainID;const data={method:'wallet_addEthereumChain',params:[{chainId:useChainId,// A 0x-prefixed hexadecimal string\nchainName:(_chainInfo$chainID$wa=(_chainInfo$chainID=chainInfo[chainID])===null||_chainInfo$chainID===void 0?void 0:_chainInfo$chainID.walletName)!==null&&_chainInfo$chainID$wa!==void 0?_chainInfo$chainID$wa:chainInfo[chainID].networkName,nativeCurrency:{name:chainInfo[chainID].name,symbol:chainInfo[chainID].symbol,// 2-6 characters long\ndecimals:18},rpcUrls:[chainInfo[chainID].nodeRpc],blockExplorerUrls:chainInfo[chainID].explorer&&chainInfo[chainID].explorer.indexOf('https')===0?[chainInfo[chainID].explorer]:null,iconUrls:null// Currently ignored.\n}]};console.log(data);ethereumFN.request(data).then(res=>{// console.log(chainID)\nconsole.log(res);if(!type){history.go(0);}resolve({msg:'Success'});}).catch(err=>{console.log(err);resolve({msg:'Error'});});}else{resolve({msg:'Error'});}});}else{resolve({msg:'Error'});}});}export function addToken(address,symbol,decimals,logoUrl){return new Promise(resolve=>{var _request2;const{ethereum}=window;// const ethereumFN:any = {\n//   request: '',\n//   ...ethereum\n// }\nconst ethereumFN=ethereum;ethereumFN.request=(_request2=ethereum.request)!==null&&_request2!==void 0?_request2:'';if(ethereumFN&&ethereumFN.request){const params={method:'wallet_watchAsset',params:{type:'ERC20',// 最初只支持ERC20，但最终支持更多\noptions:{address:address,// 令牌所在的地址。\nsymbol:symbol,// A ticker symbol or shorthand, up to 5 chars.\ndecimals:decimals,// The number of decimals in the token\nimage:logoUrl// A string url of the token logo\n}}};// console.log(params)\nethereumFN.request(params).then(res=>{console.log(res);resolve({msg:'Success'});}).catch(err=>{console.log(err);resolve({msg:'Error'});});}else{resolve({msg:'Error'});}});}","map":{"version":3,"names":["chainInfo","ENV_NODE_CONFIG","selectNetwork","chainID","type","Promise","resolve","_request","ethereum","window","ethereumFN","request","localStorage","setItem","label","useChainId","Number","toString","method","params","chainId","then","res","console","log","history","go","msg","catch","switchError","code","_chainInfo$chainID$wa","_chainInfo$chainID","data","chainName","walletName","networkName","nativeCurrency","name","symbol","decimals","rpcUrls","nodeRpc","blockExplorerUrls","explorer","indexOf","iconUrls","err","addToken","address","logoUrl","_request2","options","image"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/tools/methods.ts"],"sourcesContent":["import { chainInfo } from '../chainConfig'\nimport {\n  ENV_NODE_CONFIG\n} from '../constant'\n\nexport function selectNetwork (chainID:any, type?: any) {\n  return new Promise(resolve => {\n    const { ethereum } = window\n    const ethereumFN: any = ethereum;\n    ethereumFN.request = (ethereum as any).request ?? '';\n    window.localStorage.setItem(ENV_NODE_CONFIG, chainInfo[chainID].label)\n    if (ethereumFN && ethereumFN.request) {\n      // console.log(ethereumFN)\n      // console.log(ethereumFN.chainId)\n      const useChainId = '0x' + Number(chainID).toString(16)\n      ethereumFN.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: useChainId }],\n      }).then((res: any) => {\n        // console.log(chainID)\n        console.log(res)\n        if (!type) {\n          history.go(0)\n        }\n        resolve({\n          msg: 'Success'\n        })\n      }).catch((switchError: any) => {\n        console.log(switchError)\n        if (switchError.code === 4902) {\n          const data = {\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: useChainId, // A 0x-prefixed hexadecimal string\n                chainName: chainInfo[chainID]?.walletName ?? chainInfo[chainID].networkName,\n                nativeCurrency: {\n                  name: chainInfo[chainID].name,\n                  symbol: chainInfo[chainID].symbol, // 2-6 characters long\n                  decimals: 18,\n                },\n                rpcUrls: [chainInfo[chainID].nodeRpc],\n                blockExplorerUrls: chainInfo[chainID].explorer && chainInfo[chainID].explorer.indexOf('https') === 0 ? [chainInfo[chainID].explorer] : null,\n                iconUrls: null // Currently ignored.\n              }\n            ],\n          }\n          console.log(data)\n          ethereumFN.request(data).then((res: any) => {\n            // console.log(chainID)\n            console.log(res)\n            if (!type) {\n              history.go(0)\n            }\n            resolve({\n              msg: 'Success'\n            })\n          }).catch((err: any) => {\n            console.log(err)\n            resolve({\n              msg: 'Error'\n            })\n          })\n        } else {\n          resolve({\n            msg: 'Error'\n          })\n        }\n      })\n\n\n    } else {\n      resolve({\n        msg: 'Error'\n      })\n    }\n  })\n}\n\nexport function addToken (address:string, symbol: string, decimals: number, logoUrl?:string) {\n  return new Promise(resolve => {\n    const { ethereum } = window\n    // const ethereumFN:any = {\n    //   request: '',\n    //   ...ethereum\n    // }\n    const ethereumFN: any = ethereum;\n    ethereumFN.request = (ethereum as any).request ?? '';\n    if (ethereumFN && ethereumFN.request) {\n      const params = {\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // 最初只支持ERC20，但最终支持更多\n          options: {\n            address: address, // 令牌所在的地址。\n            symbol: symbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: decimals, // The number of decimals in the token\n            image: logoUrl, // A string url of the token logo\n          },\n        },\n      }\n      // console.log(params)\n      ethereumFN.request(params).then((res: any) => {\n        console.log(res)\n        resolve({\n          msg: 'Success'\n        })\n      }).catch((err: any) => {\n        console.log(err)\n        resolve({\n          msg: 'Error'\n        })\n      })\n    } else {\n      resolve({\n        msg: 'Error'\n      })\n    }\n  })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}