{"ast":null,"code":"import { useMemo } from 'react';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport swapMULTIABI from '../constants/abis/swapMULTIABI.json';\nimport MasterChef from '../constants/abis/farm/MasterChef.json';\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator';\nimport { MULTICALL_ABI } from '../constants/multicall';\nimport { V1_FACTORY_ABI } from '../constants/v1';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport RouterSwapAction from '../constants/abis/bridge/RouterSwapAction.json';\nimport RouterSwapActionV2 from '../constants/abis/bridge/RouterSwapActionV2.json';\nimport ClientABI from '../constants/abis/client.json';\nimport AnycallABI from '../constants/abis/anycall.json';\nimport RouterAction from '../constants/abis/bridge/RouterAction.json';\nimport swapBTCABI from '../constants/abis/bridge/swapBTCABI.json';\nimport swapETHABI from '../constants/abis/bridge/swapETHABI.json';\nimport veMULTI from '../constants/abis/veMULTI.json';\nimport veMultiReward from '../constants/abis/veMULTIReward.json';\nimport veshare from '../constants/abis/veshare.json';\nimport NFT from '../constants/abis/bridge/nft.json';\nimport anycallNFT721 from '../constants/abis/bridge/anycallNFT721.json';\nimport NFT721 from '../constants/abis/bridge/erc721.json';\nimport NFT1155 from '../constants/abis/bridge/erc1155.json';\nimport config from '../config/index';\nimport { ChainId } from '../config/chainConfig/chainId';\nimport { ERC_TYPE } from '../state/nft/hooks';\nconst Web3 = require('web3');\n\n// returns null on errors\nfunction useContract(address, ABI) {\n  let withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n// returns null on errors\nexport function useRpcContract(address, ABI) {\n  let withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let chainId = arguments.length > 3 ? arguments[3] : undefined;\n  return useMemo(() => {\n    if (!address || !ABI || !chainId) return null;\n    const web3Fn = new Web3(new Web3.providers.HttpProvider(config.getCurChainInfo(chainId).nodeRpc));\n    try {\n      return new web3Fn.eth.Contract(ABI, address);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, withSignerIfPossible, chainId]);\n}\nexport function useV1FactoryContract() {\n  return useContract(config.v1FactoryToken ? config.v1FactoryToken : undefined, V1_FACTORY_ABI, false);\n}\nexport function useV2MigratorContract() {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useBridgeContract(routerToken, version, withSignerIfPossible) {\n  return useContract(routerToken ? routerToken : undefined, version === 'v2' ? RouterSwapActionV2 : RouterSwapAction, withSignerIfPossible);\n}\nexport function usePermissonlessContract(routerToken, withSignerIfPossible) {\n  return useContract(routerToken ? routerToken : undefined, ClientABI, withSignerIfPossible);\n}\nexport function useAnycallContract(anytoken, withSignerIfPossible) {\n  return useContract(anytoken ? anytoken : undefined, AnycallABI, withSignerIfPossible);\n}\nexport function useVeMULTIContract(veToken, withSignerIfPossible) {\n  return useContract(veToken ? veToken : undefined, veMULTI, withSignerIfPossible);\n}\nexport function useVeMULTIRewardContract(veToken, withSignerIfPossible) {\n  return useContract(veToken ? veToken : undefined, veMultiReward, withSignerIfPossible);\n}\nexport function useVeShareContract(token, withSignerIfPossible) {\n  return useContract(token ? token : undefined, veshare, withSignerIfPossible);\n}\nexport function useNFTContract(routerToken, withSignerIfPossible) {\n  return useContract(routerToken ? routerToken : undefined, NFT, withSignerIfPossible);\n}\nexport function useAnycallNFTContract(routerToken, nfttype, withSignerIfPossible) {\n  return useContract(routerToken ? routerToken : undefined, nfttype ? nfttype === ERC_TYPE.erc721 ? anycallNFT721 : NFT1155 : undefined, withSignerIfPossible);\n}\nexport function useNFT721Contract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress ? tokenAddress : undefined, NFT721, withSignerIfPossible);\n}\nexport function useNFT1155Contract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress ? tokenAddress : undefined, NFT1155, withSignerIfPossible);\n}\nexport function useSwapUnderlyingContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, RouterAction, withSignerIfPossible);\n}\nexport function useSwapBTCContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, swapBTCABI, withSignerIfPossible);\n}\nexport function useSwapETHContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, swapETHABI, withSignerIfPossible);\n}\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n  if (chainId) {\n    switch (chainId === null || chainId === void 0 ? void 0 : chainId.toString()) {\n      case ChainId.ETH:\n      case ChainId.GOERLI:\n        // case ChainId.ROPSTEN:\n        // case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n      case ChainId.BNB:\n        address = '0x08ced32a7f3eec915ba84415e9c07a7286977956';\n        break;\n      case ChainId.ARBITRUM:\n        address = '0x4a067EE58e73ac5E4a43722E008DFdf65B2bF348';\n        break;\n    }\n  }\n  // console.log(address)\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let useAddress;\n  if (chainId) {\n    switch (chainId === null || chainId === void 0 ? void 0 : chainId.toString()) {\n      case ChainId.ETH:\n      case ChainId.GOERLI:\n        useAddress = '0xA2C122BE93b0074270ebeE7f6b7292C7deB45047';\n        break;\n      case ChainId.BNB:\n        useAddress = '0x1DdA6feF836c0c1dE986aC15597922dEe95Ff98A';\n        break;\n      case ChainId.ARBITRUM:\n        useAddress = '0xfc81140Cd374Fe235c8398A0Ae57101Eac79Ae35';\n        break;\n    }\n  }\n  return useContract(address ? address : useAddress, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useSwapMultiContract(address, withSignerIfPossible) {\n  return useContract(address, swapMULTIABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  // return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n  // console.log(config.getCurChainInfo(chainId).multicalToken)\n  return useContract(config.getCurChainInfo(chainId).multicalToken, MULTICALL_ABI, false);\n}\nexport function useRpcMulticallContract(chainId) {\n  // return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n  return useRpcContract(config.getCurChainInfo(chainId).multicalToken, MULTICALL_ABI, false, chainId);\n}\nexport function useFarmContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, MasterChef, withSignerIfPossible);\n}","map":{"version":3,"names":["useMemo","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","swapMULTIABI","MasterChef","MIGRATOR_ABI","MIGRATOR_ADDRESS","MULTICALL_ABI","V1_FACTORY_ABI","getContract","useActiveWeb3React","RouterSwapAction","RouterSwapActionV2","ClientABI","AnycallABI","RouterAction","swapBTCABI","swapETHABI","veMULTI","veMultiReward","veshare","NFT","anycallNFT721","NFT721","NFT1155","config","ChainId","ERC_TYPE","Web3","require","useContract","address","ABI","withSignerIfPossible","arguments","length","undefined","library","account","error","console","useRpcContract","chainId","web3Fn","providers","HttpProvider","getCurChainInfo","nodeRpc","eth","Contract","useV1FactoryContract","v1FactoryToken","useV2MigratorContract","useTokenContract","tokenAddress","useBridgeContract","routerToken","version","usePermissonlessContract","useAnycallContract","anytoken","useVeMULTIContract","veToken","useVeMULTIRewardContract","useVeShareContract","token","useNFTContract","useAnycallNFTContract","nfttype","erc721","useNFT721Contract","useNFT1155Contract","useSwapUnderlyingContract","useSwapBTCContract","useSwapETHContract","useENSRegistrarContract","toString","ETH","GOERLI","BNB","ARBITRUM","useENSResolverContract","useAddress","useSwapMultiContract","useBytes32TokenContract","useMulticallContract","multicalToken","useRpcMulticallContract","useFarmContract"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/hooks/useContract.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { useMemo } from 'react'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport swapMULTIABI from '../constants/abis/swapMULTIABI.json'\nimport MasterChef from '../constants/abis/farm/MasterChef.json'\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\n\nimport { MULTICALL_ABI } from '../constants/multicall'\nimport { V1_FACTORY_ABI } from '../constants/v1'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\n\nimport RouterSwapAction from '../constants/abis/bridge/RouterSwapAction.json'\nimport RouterSwapActionV2 from '../constants/abis/bridge/RouterSwapActionV2.json'\nimport ClientABI from '../constants/abis/client.json'\nimport AnycallABI from '../constants/abis/anycall.json'\nimport RouterAction from '../constants/abis/bridge/RouterAction.json'\nimport swapBTCABI from '../constants/abis/bridge/swapBTCABI.json'\nimport swapETHABI from '../constants/abis/bridge/swapETHABI.json'\nimport veMULTI from '../constants/abis/veMULTI.json'\nimport veMultiReward from '../constants/abis/veMULTIReward.json'\nimport veshare from '../constants/abis/veshare.json'\n\nimport NFT from '../constants/abis/bridge/nft.json'\nimport anycallNFT721 from '../constants/abis/bridge/anycallNFT721.json'\nimport NFT721 from '../constants/abis/bridge/erc721.json'\nimport NFT1155 from '../constants/abis/bridge/erc1155.json'\n\nimport config from '../config/index'\nimport { ChainId } from '../config/chainConfig/chainId'\nimport { ERC_TYPE } from '../state/nft/hooks'\n\nconst Web3 = require('web3')\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\n// returns null on errors\nexport function useRpcContract(address: string | undefined, ABI: any, withSignerIfPossible = true, chainId: any): Contract | null {\n\n  return useMemo(() => {\n    if (!address || !ABI || !chainId) return null\n    const web3Fn = new Web3(new Web3.providers.HttpProvider(config.getCurChainInfo(chainId).nodeRpc))\n    try {\n      return new web3Fn.eth.Contract(ABI, address)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, withSignerIfPossible, chainId])\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  return useContract(config.v1FactoryToken ? config.v1FactoryToken : undefined, V1_FACTORY_ABI, false)\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useBridgeContract(routerToken?:any, version?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(routerToken ? routerToken : undefined, version === 'v2' ? RouterSwapActionV2 : RouterSwapAction, withSignerIfPossible)\n}\nexport function usePermissonlessContract(routerToken?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(routerToken ? routerToken : undefined, ClientABI, withSignerIfPossible)\n}\n\nexport function useAnycallContract(anytoken?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(anytoken ? anytoken : undefined, AnycallABI, withSignerIfPossible)\n}\n\nexport function useVeMULTIContract(veToken?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(veToken ? veToken : undefined, veMULTI, withSignerIfPossible)\n}\nexport function useVeMULTIRewardContract(veToken?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(veToken ? veToken : undefined, veMultiReward, withSignerIfPossible)\n}\nexport function useVeShareContract(token?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(token ? token : undefined, veshare, withSignerIfPossible)\n}\n\nexport function useNFTContract(routerToken?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(routerToken ? routerToken : undefined, NFT, withSignerIfPossible)\n}\n\nexport function useAnycallNFTContract(routerToken?:any, nfttype?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(routerToken ? routerToken : undefined, nfttype ? (nfttype === ERC_TYPE.erc721 ? anycallNFT721 : NFT1155) : undefined, withSignerIfPossible)\n}\n\nexport function useNFT721Contract(tokenAddress?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress ? tokenAddress : undefined, NFT721, withSignerIfPossible)\n}\n\nexport function useNFT1155Contract(tokenAddress?:any, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress ? tokenAddress : undefined, NFT1155, withSignerIfPossible)\n}\n\nexport function useSwapUnderlyingContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, RouterAction, withSignerIfPossible)\n}\n\nexport function useSwapBTCContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, swapBTCABI, withSignerIfPossible)\n}\n\nexport function useSwapETHContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, swapETHABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId }:any = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    switch (chainId?.toString()) {\n      case ChainId.ETH:\n      case ChainId.GOERLI:\n      // case ChainId.ROPSTEN:\n      // case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n      case ChainId.BNB:\n        address = '0x08ced32a7f3eec915ba84415e9c07a7286977956'\n        break\n      case ChainId.ARBITRUM:\n        address = '0x4a067EE58e73ac5E4a43722E008DFdf65B2bF348'\n        break\n    }\n  }\n  // console.log(address)\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  const { chainId }:any = useActiveWeb3React()\n  let useAddress: string | undefined\n  if (chainId) {\n    switch (chainId?.toString()) {\n      case ChainId.ETH:\n      case ChainId.GOERLI:\n        useAddress = '0xA2C122BE93b0074270ebeE7f6b7292C7deB45047'\n        break\n      case ChainId.BNB:\n        useAddress = '0x1DdA6feF836c0c1dE986aC15597922dEe95Ff98A'\n        break\n      case ChainId.ARBITRUM:\n        useAddress = '0xfc81140Cd374Fe235c8398A0Ae57101Eac79Ae35'\n        break\n    }\n  }\n  return useContract(address ? address : useAddress, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useSwapMultiContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, swapMULTIABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  // return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n  // console.log(config.getCurChainInfo(chainId).multicalToken)\n  return useContract(config.getCurChainInfo(chainId).multicalToken, MULTICALL_ABI, false)\n}\n\nexport function useRpcMulticallContract(chainId:any): Contract | null {\n  // return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n  return useRpcContract(config.getCurChainInfo(chainId).multicalToken, MULTICALL_ABI, false, chainId)\n}\n\n\n\nexport function useFarmContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, MasterChef, withSignerIfPossible)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}