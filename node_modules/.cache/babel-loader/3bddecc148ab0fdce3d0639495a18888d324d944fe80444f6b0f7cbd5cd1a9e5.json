{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValConsAddress = exports.ValPubKey = exports.ValAddress = exports.AccPubKey = exports.AccAddress = void 0;\nvar bech32_1 = require(\"bech32\");\nfunction checkPrefixAndLength(prefix, data, length) {\n  try {\n    var vals = bech32_1.bech32.decode(data);\n    return vals.prefix === prefix && data.length == length;\n  } catch (e) {\n    return false;\n  }\n}\nvar AccAddress;\n(function (AccAddress) {\n  /**\n   * Checks if a string is a valid Terra account address.\n   *\n   * @param data string to check\n   */\n  function validate(data) {\n    // 44 for normal account and 64 for contract account\n    return checkPrefixAndLength('terra', data, 44) || checkPrefixAndLength('terra', data, 64);\n  }\n  AccAddress.validate = validate;\n  /**\n   * Converts a validator address into an account address\n   *\n   * @param address validator address\n   */\n  function fromValAddress(address) {\n    var vals = bech32_1.bech32.decode(address);\n    return bech32_1.bech32.encode('terra', vals.words);\n  }\n  AccAddress.fromValAddress = fromValAddress;\n})(AccAddress = exports.AccAddress || (exports.AccAddress = {}));\nvar AccPubKey;\n(function (AccPubKey) {\n  /**\n   * Checks if a string is a Terra account's public key\n   * @param data string to check\n   */\n  function validate(data) {\n    return checkPrefixAndLength('terrapub', data, 47);\n  }\n  AccPubKey.validate = validate;\n  /**\n   * Converts a Terra validator pubkey to an account pubkey.\n   * @param address validator pubkey to convert\n   */\n  function fromAccAddress(address) {\n    var vals = bech32_1.bech32.decode(address);\n    return bech32_1.bech32.encode('terrapub', vals.words);\n  }\n  AccPubKey.fromAccAddress = fromAccAddress;\n})(AccPubKey = exports.AccPubKey || (exports.AccPubKey = {}));\nvar ValAddress;\n(function (ValAddress) {\n  /**\n   * Checks if a string is a Terra validator address.\n   *\n   * @param data string to check\n   */\n  function validate(data) {\n    return checkPrefixAndLength('terravaloper', data, 51);\n  }\n  ValAddress.validate = validate;\n  /**\n   * Converts a Terra account address to a validator address.\n   * @param address account address to convert\n   */\n  function fromAccAddress(address) {\n    var vals = bech32_1.bech32.decode(address);\n    return bech32_1.bech32.encode('terravaloper', vals.words);\n  }\n  ValAddress.fromAccAddress = fromAccAddress;\n})(ValAddress = exports.ValAddress || (exports.ValAddress = {}));\nvar ValPubKey;\n(function (ValPubKey) {\n  /**\n   * Checks if a string is a Terra validator pubkey\n   * @param data string to check\n   */\n  function validate(data) {\n    return checkPrefixAndLength('terravaloperpub', data, 54);\n  }\n  ValPubKey.validate = validate;\n  /**\n   * Converts a Terra validator operator address to a validator pubkey.\n   * @param valAddress account pubkey\n   */\n  function fromValAddress(valAddress) {\n    var vals = bech32_1.bech32.decode(valAddress);\n    return bech32_1.bech32.encode('terravaloperpub', vals.words);\n  }\n  ValPubKey.fromValAddress = fromValAddress;\n})(ValPubKey = exports.ValPubKey || (exports.ValPubKey = {}));\nvar ValConsAddress;\n(function (ValConsAddress) {\n  /**\n   * Checks if a string is a Terra validator consensus address\n   * @param data string to check\n   */\n  function validate(data) {\n    return checkPrefixAndLength('terravalcons', data, 51);\n  }\n  ValConsAddress.validate = validate;\n})(ValConsAddress = exports.ValConsAddress || (exports.ValConsAddress = {}));","map":{"version":3,"names":["bech32_1","require","checkPrefixAndLength","prefix","data","length","vals","bech32","decode","e","AccAddress","validate","fromValAddress","address","encode","words","exports","AccPubKey","fromAccAddress","ValAddress","ValPubKey","valAddress","ValConsAddress"],"sources":["../../src/core/bech32.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}