{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst multisig_1 = require(\"../../../../cosmos/crypto/multisig/v1beta1/multisig\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  /**\n   * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\n   * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n   *\n   * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n   * but is not implemented on the SDK by default. To enable EIP-191, you need\n   * to pass a custom `TxConfig` that has an implementation of\n   * `SignModeHandler` for EIP-191. The SDK may decide to fully support\n   * EIP-191 in the future.\n   *\n   * Since: cosmos-sdk 0.45.2\n   */\n  SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode = exports.SignMode || (exports.SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case 191:\n    case \"SIGN_MODE_EIP_191\":\n      return SignMode.SIGN_MODE_EIP_191;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    case SignMode.SIGN_MODE_EIP_191:\n      return \"SIGN_MODE_EIP_191\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nconst baseSignatureDescriptors = {};\nexports.SignatureDescriptors = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptors);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor = {\n  sequence: long_1.default.UZERO\n};\nexports.SignatureDescriptor = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor);\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromJSON(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = exports.SignatureDescriptor_Data.fromJSON(object.data);\n    } else {\n      message.data = undefined;\n    }\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = long_1.default.fromString(object.sequence);\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor);\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromPartial(object.publicKey);\n    } else {\n      message.publicKey = undefined;\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = exports.SignatureDescriptor_Data.fromPartial(object.data);\n    } else {\n      message.data = undefined;\n    }\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = object.sequence;\n    } else {\n      message.sequence = long_1.default.UZERO;\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data = {};\nexports.SignatureDescriptor_Data = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.SignatureDescriptor_Data_Single.fromJSON(object.single);\n    } else {\n      message.single = undefined;\n    }\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data);\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.SignatureDescriptor_Data_Single.fromPartial(object.single);\n    } else {\n      message.single = undefined;\n    }\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi);\n    } else {\n      message.multi = undefined;\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data_Single = {\n  mode: 0\n};\nexports.SignatureDescriptor_Data_Single = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    message.signature = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    message.signature = new Uint8Array();\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = signModeFromJSON(object.mode);\n    } else {\n      message.mode = 0;\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = bytesFromBase64(object.signature);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Single);\n    if (object.mode !== undefined && object.mode !== null) {\n      message.mode = object.mode;\n    } else {\n      message.mode = 0;\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst baseSignatureDescriptor_Data_Multi = {};\nexports.SignatureDescriptor_Data_Multi = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor_Data.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignatureDescriptor_Data_Multi);\n    message.signatures = [];\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n    } else {\n      message.bitarray = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.SignatureDescriptor_Data.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","any_1","multisig_1","exports","protobufPackage","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","SIGN_MODE_EIP_191","UNRECOGNIZED","signModeToJSON","baseSignatureDescriptors","SignatureDescriptors","encode","message","writer","arguments","length","undefined","default","Writer","create","v","signatures","SignatureDescriptor","uint32","fork","ldelim","decode","input","reader","Reader","end","len","pos","Object","assign","tag","push","skipType","fromJSON","e","toJSON","obj","map","fromPartial","baseSignatureDescriptor","sequence","UZERO","publicKey","Any","data","SignatureDescriptor_Data","isZero","uint64","fromString","toString","baseSignatureDescriptor_Data","single","SignatureDescriptor_Data_Single","multi","SignatureDescriptor_Data_Multi","baseSignatureDescriptor_Data_Single","mode","int32","signature","bytes","Uint8Array","bytesFromBase64","base64FromBytes","baseSignatureDescriptor_Data_Multi","bitarray","CompactBitArray","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","String","fromCharCode","join","util","Long","configure"],"sources":["../../../../../src/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA;AACA,MAAAA,MAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,SAAA,GAAAF,eAAA,CAAAC,OAAA;AACA,MAAAE,KAAA,GAAAF,OAAA;AACA,MAAAG,UAAA,GAAAH,OAAA;AAEaI,OAAA,CAAAC,eAAe,GAAG,2BAA2B;AAE1D;AACA,IAAYC,QAoCX;AApCD,WAAYA,QAAQ;EAClB;;;;EAIAA,QAAA,CAAAA,QAAA,wDAAyB;EACzB;;;;EAIAA,QAAA,CAAAA,QAAA,8CAAoB;EACpB;;;;;EAKAA,QAAA,CAAAA,QAAA,gDAAqB;EACrB;;;;EAIAA,QAAA,CAAAA,QAAA,sEAAiC;EACjC;;;;;;;;;;;;EAYAA,QAAA,CAAAA,QAAA,kDAAuB;EACvBA,QAAA,CAAAA,QAAA,uCAAiB;AACnB,CAAC,EApCWA,QAAQ,GAARF,OAAA,CAAAE,QAAQ,KAARF,OAAA,CAAAE,QAAQ;AAsCpB,SAAgBC,gBAAgBA,CAACC,MAAW;EAC1C,QAAQA,MAAM;IACZ,KAAK,CAAC;IACN,KAAK,uBAAuB;MAC1B,OAAOF,QAAQ,CAACG,qBAAqB;IACvC,KAAK,CAAC;IACN,KAAK,kBAAkB;MACrB,OAAOH,QAAQ,CAACI,gBAAgB;IAClC,KAAK,CAAC;IACN,KAAK,mBAAmB;MACtB,OAAOJ,QAAQ,CAACK,iBAAiB;IACnC,KAAK,GAAG;IACR,KAAK,6BAA6B;MAChC,OAAOL,QAAQ,CAACM,2BAA2B;IAC7C,KAAK,GAAG;IACR,KAAK,mBAAmB;MACtB,OAAON,QAAQ,CAACO,iBAAiB;IACnC,KAAK,CAAC,CAAC;IACP,KAAK,cAAc;IACnB;MACE,OAAOP,QAAQ,CAACQ,YAAY;;AAElC;AAtBAV,OAAA,CAAAG,gBAAA,GAAAA,gBAAA;AAwBA,SAAgBQ,cAAcA,CAACP,MAAgB;EAC7C,QAAQA,MAAM;IACZ,KAAKF,QAAQ,CAACG,qBAAqB;MACjC,OAAO,uBAAuB;IAChC,KAAKH,QAAQ,CAACI,gBAAgB;MAC5B,OAAO,kBAAkB;IAC3B,KAAKJ,QAAQ,CAACK,iBAAiB;MAC7B,OAAO,mBAAmB;IAC5B,KAAKL,QAAQ,CAACM,2BAA2B;MACvC,OAAO,6BAA6B;IACtC,KAAKN,QAAQ,CAACO,iBAAiB;MAC7B,OAAO,mBAAmB;IAC5B;MACE,OAAO,SAAS;;AAEtB;AAfAT,OAAA,CAAAW,cAAA,GAAAA,cAAA;AAiEA,MAAMC,wBAAwB,GAAW,EAAE;AAE9BZ,OAAA,CAAAa,oBAAoB,GAAG;EAClCC,MAAMA,CAACC,OAA6B,EAA0C;IAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqBpB,SAAA,CAAAuB,OAAG,CAACC,MAAM,CAACC,MAAM,EAAE;IAC5E,KAAK,MAAMC,CAAC,IAAIR,OAAO,CAACS,UAAU,EAAE;MAClCxB,OAAA,CAAAyB,mBAAmB,CAACX,MAAM,CAACS,CAAE,EAAEP,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAEnE,OAAOZ,MAAM;EACf,CAAC;EAEDa,MAAMA,CAACC,KAA8B,EAAEZ,MAAe;IACpD,MAAMa,MAAM,GAAGD,KAAK,YAAYjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,GAAGF,KAAK,GAAG,IAAIjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,CAACF,KAAK,CAAC;IAC1E,IAAIG,GAAG,GAAGf,MAAM,KAAKC,SAAS,GAAGY,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACI,GAAG,GAAGjB,MAAM;IACjE,MAAMH,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKzB,wBAAwB,CAA0B;IACvEG,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,OAAOO,MAAM,CAACI,GAAG,GAAGF,GAAG,EAAE;MACvB,MAAMK,GAAG,GAAGP,MAAM,CAACL,MAAM,EAAE;MAC3B,QAAQY,GAAG,KAAK,CAAC;QACf,KAAK,CAAC;UACJvB,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAyB,mBAAmB,CAACI,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC,CAAC;UAC5E;QACF;UACEK,MAAM,CAACS,QAAQ,CAACF,GAAG,GAAG,CAAC,CAAC;UACxB;;;IAGN,OAAOvB,OAAO;EAChB,CAAC;EAED0B,QAAQA,CAACrC,MAAW;IAClB,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKzB,wBAAwB,CAA0B;IACvEG,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,IAAIpB,MAAM,CAACoB,UAAU,KAAKL,SAAS,IAAIf,MAAM,CAACoB,UAAU,KAAK,IAAI,EAAE;MACjE,KAAK,MAAMkB,CAAC,IAAItC,MAAM,CAACoB,UAAU,EAAE;QACjCT,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAyB,mBAAmB,CAACgB,QAAQ,CAACC,CAAC,CAAC,CAAC;;;IAG5D,OAAO3B,OAAO;EAChB,CAAC;EAED4B,MAAMA,CAAC5B,OAA6B;IAClC,MAAM6B,GAAG,GAAQ,EAAE;IACnB,IAAI7B,OAAO,CAACS,UAAU,EAAE;MACtBoB,GAAG,CAACpB,UAAU,GAAGT,OAAO,CAACS,UAAU,CAACqB,GAAG,CAAEH,CAAC,IAAMA,CAAC,GAAG1C,OAAA,CAAAyB,mBAAmB,CAACkB,MAAM,CAACD,CAAC,CAAC,GAAGvB,SAAU,CAAC;KAChG,MAAM;MACLyB,GAAG,CAACpB,UAAU,GAAG,EAAE;;IAErB,OAAOoB,GAAG;EACZ,CAAC;EAEDE,WAAWA,CAAC1C,MAAyC;IACnD,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKzB,wBAAwB,CAA0B;IACvEG,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,IAAIpB,MAAM,CAACoB,UAAU,KAAKL,SAAS,IAAIf,MAAM,CAACoB,UAAU,KAAK,IAAI,EAAE;MACjE,KAAK,MAAMkB,CAAC,IAAItC,MAAM,CAACoB,UAAU,EAAE;QACjCT,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAyB,mBAAmB,CAACqB,WAAW,CAACJ,CAAC,CAAC,CAAC;;;IAG/D,OAAO3B,OAAO;EAChB;CACD;AAED,MAAMgC,uBAAuB,GAAW;EAAEC,QAAQ,EAAEtD,MAAA,CAAA0B,OAAI,CAAC6B;AAAK,CAAE;AAEnDjD,OAAA,CAAAyB,mBAAmB,GAAG;EACjCX,MAAMA,CAACC,OAA4B,EAA0C;IAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqBpB,SAAA,CAAAuB,OAAG,CAACC,MAAM,CAACC,MAAM,EAAE;IAC3E,IAAIP,OAAO,CAACmC,SAAS,KAAK/B,SAAS,EAAE;MACnCrB,KAAA,CAAAqD,GAAG,CAACrC,MAAM,CAACC,OAAO,CAACmC,SAAS,EAAElC,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAElE,IAAIb,OAAO,CAACqC,IAAI,KAAKjC,SAAS,EAAE;MAC9BnB,OAAA,CAAAqD,wBAAwB,CAACvC,MAAM,CAACC,OAAO,CAACqC,IAAI,EAAEpC,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAElF,IAAI,CAACb,OAAO,CAACiC,QAAQ,CAACM,MAAM,EAAE,EAAE;MAC9BtC,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAAC6B,MAAM,CAACxC,OAAO,CAACiC,QAAQ,CAAC;;IAE5C,OAAOhC,MAAM;EACf,CAAC;EAEDa,MAAMA,CAACC,KAA8B,EAAEZ,MAAe;IACpD,MAAMa,MAAM,GAAGD,KAAK,YAAYjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,GAAGF,KAAK,GAAG,IAAIjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,CAACF,KAAK,CAAC;IAC1E,IAAIG,GAAG,GAAGf,MAAM,KAAKC,SAAS,GAAGY,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACI,GAAG,GAAGjB,MAAM;IACjE,MAAMH,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKU,uBAAuB,CAAyB;IACrE,OAAOhB,MAAM,CAACI,GAAG,GAAGF,GAAG,EAAE;MACvB,MAAMK,GAAG,GAAGP,MAAM,CAACL,MAAM,EAAE;MAC3B,QAAQY,GAAG,KAAK,CAAC;QACf,KAAK,CAAC;UACJvB,OAAO,CAACmC,SAAS,GAAGpD,KAAA,CAAAqD,GAAG,CAACtB,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC;UACvD;QACF,KAAK,CAAC;UACJX,OAAO,CAACqC,IAAI,GAAGpD,OAAA,CAAAqD,wBAAwB,CAACxB,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC;UACvE;QACF,KAAK,CAAC;UACJX,OAAO,CAACiC,QAAQ,GAAGjB,MAAM,CAACwB,MAAM,EAAU;UAC1C;QACF;UACExB,MAAM,CAACS,QAAQ,CAACF,GAAG,GAAG,CAAC,CAAC;UACxB;;;IAGN,OAAOvB,OAAO;EAChB,CAAC;EAED0B,QAAQA,CAACrC,MAAW;IAClB,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKU,uBAAuB,CAAyB;IACrE,IAAI3C,MAAM,CAAC8C,SAAS,KAAK/B,SAAS,IAAIf,MAAM,CAAC8C,SAAS,KAAK,IAAI,EAAE;MAC/DnC,OAAO,CAACmC,SAAS,GAAGpD,KAAA,CAAAqD,GAAG,CAACV,QAAQ,CAACrC,MAAM,CAAC8C,SAAS,CAAC;KACnD,MAAM;MACLnC,OAAO,CAACmC,SAAS,GAAG/B,SAAS;;IAE/B,IAAIf,MAAM,CAACgD,IAAI,KAAKjC,SAAS,IAAIf,MAAM,CAACgD,IAAI,KAAK,IAAI,EAAE;MACrDrC,OAAO,CAACqC,IAAI,GAAGpD,OAAA,CAAAqD,wBAAwB,CAACZ,QAAQ,CAACrC,MAAM,CAACgD,IAAI,CAAC;KAC9D,MAAM;MACLrC,OAAO,CAACqC,IAAI,GAAGjC,SAAS;;IAE1B,IAAIf,MAAM,CAAC4C,QAAQ,KAAK7B,SAAS,IAAIf,MAAM,CAAC4C,QAAQ,KAAK,IAAI,EAAE;MAC7DjC,OAAO,CAACiC,QAAQ,GAAGtD,MAAA,CAAA0B,OAAI,CAACoC,UAAU,CAACpD,MAAM,CAAC4C,QAAQ,CAAC;KACpD,MAAM;MACLjC,OAAO,CAACiC,QAAQ,GAAGtD,MAAA,CAAA0B,OAAI,CAAC6B,KAAK;;IAE/B,OAAOlC,OAAO;EAChB,CAAC;EAED4B,MAAMA,CAAC5B,OAA4B;IACjC,MAAM6B,GAAG,GAAQ,EAAE;IACnB7B,OAAO,CAACmC,SAAS,KAAK/B,SAAS,KAC5ByB,GAAG,CAACM,SAAS,GAAGnC,OAAO,CAACmC,SAAS,GAAGpD,KAAA,CAAAqD,GAAG,CAACR,MAAM,CAAC5B,OAAO,CAACmC,SAAS,CAAC,GAAG/B,SAAS,CAAC;IACjFJ,OAAO,CAACqC,IAAI,KAAKjC,SAAS,KACvByB,GAAG,CAACQ,IAAI,GAAGrC,OAAO,CAACqC,IAAI,GAAGpD,OAAA,CAAAqD,wBAAwB,CAACV,MAAM,CAAC5B,OAAO,CAACqC,IAAI,CAAC,GAAGjC,SAAS,CAAC;IACvFJ,OAAO,CAACiC,QAAQ,KAAK7B,SAAS,KAAKyB,GAAG,CAACI,QAAQ,GAAG,CAACjC,OAAO,CAACiC,QAAQ,IAAItD,MAAA,CAAA0B,OAAI,CAAC6B,KAAK,EAAEQ,QAAQ,EAAE,CAAC;IAC9F,OAAOb,GAAG;EACZ,CAAC;EAEDE,WAAWA,CAAC1C,MAAwC;IAClD,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKU,uBAAuB,CAAyB;IACrE,IAAI3C,MAAM,CAAC8C,SAAS,KAAK/B,SAAS,IAAIf,MAAM,CAAC8C,SAAS,KAAK,IAAI,EAAE;MAC/DnC,OAAO,CAACmC,SAAS,GAAGpD,KAAA,CAAAqD,GAAG,CAACL,WAAW,CAAC1C,MAAM,CAAC8C,SAAS,CAAC;KACtD,MAAM;MACLnC,OAAO,CAACmC,SAAS,GAAG/B,SAAS;;IAE/B,IAAIf,MAAM,CAACgD,IAAI,KAAKjC,SAAS,IAAIf,MAAM,CAACgD,IAAI,KAAK,IAAI,EAAE;MACrDrC,OAAO,CAACqC,IAAI,GAAGpD,OAAA,CAAAqD,wBAAwB,CAACP,WAAW,CAAC1C,MAAM,CAACgD,IAAI,CAAC;KACjE,MAAM;MACLrC,OAAO,CAACqC,IAAI,GAAGjC,SAAS;;IAE1B,IAAIf,MAAM,CAAC4C,QAAQ,KAAK7B,SAAS,IAAIf,MAAM,CAAC4C,QAAQ,KAAK,IAAI,EAAE;MAC7DjC,OAAO,CAACiC,QAAQ,GAAG5C,MAAM,CAAC4C,QAAgB;KAC3C,MAAM;MACLjC,OAAO,CAACiC,QAAQ,GAAGtD,MAAA,CAAA0B,OAAI,CAAC6B,KAAK;;IAE/B,OAAOlC,OAAO;EAChB;CACD;AAED,MAAM2C,4BAA4B,GAAW,EAAE;AAElC1D,OAAA,CAAAqD,wBAAwB,GAAG;EACtCvC,MAAMA,CAACC,OAAiC,EAA0C;IAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqBpB,SAAA,CAAAuB,OAAG,CAACC,MAAM,CAACC,MAAM,EAAE;IAChF,IAAIP,OAAO,CAAC4C,MAAM,KAAKxC,SAAS,EAAE;MAChCnB,OAAA,CAAA4D,+BAA+B,CAAC9C,MAAM,CAACC,OAAO,CAAC4C,MAAM,EAAE3C,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAE3F,IAAIb,OAAO,CAAC8C,KAAK,KAAK1C,SAAS,EAAE;MAC/BnB,OAAA,CAAA8D,8BAA8B,CAAChD,MAAM,CAACC,OAAO,CAAC8C,KAAK,EAAE7C,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAEzF,OAAOZ,MAAM;EACf,CAAC;EAEDa,MAAMA,CAACC,KAA8B,EAAEZ,MAAe;IACpD,MAAMa,MAAM,GAAGD,KAAK,YAAYjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,GAAGF,KAAK,GAAG,IAAIjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,CAACF,KAAK,CAAC;IAC1E,IAAIG,GAAG,GAAGf,MAAM,KAAKC,SAAS,GAAGY,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACI,GAAG,GAAGjB,MAAM;IACjE,MAAMH,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKqB,4BAA4B,CAA8B;IAC/E,OAAO3B,MAAM,CAACI,GAAG,GAAGF,GAAG,EAAE;MACvB,MAAMK,GAAG,GAAGP,MAAM,CAACL,MAAM,EAAE;MAC3B,QAAQY,GAAG,KAAK,CAAC;QACf,KAAK,CAAC;UACJvB,OAAO,CAAC4C,MAAM,GAAG3D,OAAA,CAAA4D,+BAA+B,CAAC/B,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC;UAChF;QACF,KAAK,CAAC;UACJX,OAAO,CAAC8C,KAAK,GAAG7D,OAAA,CAAA8D,8BAA8B,CAACjC,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC;UAC9E;QACF;UACEK,MAAM,CAACS,QAAQ,CAACF,GAAG,GAAG,CAAC,CAAC;UACxB;;;IAGN,OAAOvB,OAAO;EAChB,CAAC;EAED0B,QAAQA,CAACrC,MAAW;IAClB,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKqB,4BAA4B,CAA8B;IAC/E,IAAItD,MAAM,CAACuD,MAAM,KAAKxC,SAAS,IAAIf,MAAM,CAACuD,MAAM,KAAK,IAAI,EAAE;MACzD5C,OAAO,CAAC4C,MAAM,GAAG3D,OAAA,CAAA4D,+BAA+B,CAACnB,QAAQ,CAACrC,MAAM,CAACuD,MAAM,CAAC;KACzE,MAAM;MACL5C,OAAO,CAAC4C,MAAM,GAAGxC,SAAS;;IAE5B,IAAIf,MAAM,CAACyD,KAAK,KAAK1C,SAAS,IAAIf,MAAM,CAACyD,KAAK,KAAK,IAAI,EAAE;MACvD9C,OAAO,CAAC8C,KAAK,GAAG7D,OAAA,CAAA8D,8BAA8B,CAACrB,QAAQ,CAACrC,MAAM,CAACyD,KAAK,CAAC;KACtE,MAAM;MACL9C,OAAO,CAAC8C,KAAK,GAAG1C,SAAS;;IAE3B,OAAOJ,OAAO;EAChB,CAAC;EAED4B,MAAMA,CAAC5B,OAAiC;IACtC,MAAM6B,GAAG,GAAQ,EAAE;IACnB7B,OAAO,CAAC4C,MAAM,KAAKxC,SAAS,KACzByB,GAAG,CAACe,MAAM,GAAG5C,OAAO,CAAC4C,MAAM,GAAG3D,OAAA,CAAA4D,+BAA+B,CAACjB,MAAM,CAAC5B,OAAO,CAAC4C,MAAM,CAAC,GAAGxC,SAAS,CAAC;IACpGJ,OAAO,CAAC8C,KAAK,KAAK1C,SAAS,KACxByB,GAAG,CAACiB,KAAK,GAAG9C,OAAO,CAAC8C,KAAK,GAAG7D,OAAA,CAAA8D,8BAA8B,CAACnB,MAAM,CAAC5B,OAAO,CAAC8C,KAAK,CAAC,GAAG1C,SAAS,CAAC;IAChG,OAAOyB,GAAG;EACZ,CAAC;EAEDE,WAAWA,CAAC1C,MAA6C;IACvD,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKqB,4BAA4B,CAA8B;IAC/E,IAAItD,MAAM,CAACuD,MAAM,KAAKxC,SAAS,IAAIf,MAAM,CAACuD,MAAM,KAAK,IAAI,EAAE;MACzD5C,OAAO,CAAC4C,MAAM,GAAG3D,OAAA,CAAA4D,+BAA+B,CAACd,WAAW,CAAC1C,MAAM,CAACuD,MAAM,CAAC;KAC5E,MAAM;MACL5C,OAAO,CAAC4C,MAAM,GAAGxC,SAAS;;IAE5B,IAAIf,MAAM,CAACyD,KAAK,KAAK1C,SAAS,IAAIf,MAAM,CAACyD,KAAK,KAAK,IAAI,EAAE;MACvD9C,OAAO,CAAC8C,KAAK,GAAG7D,OAAA,CAAA8D,8BAA8B,CAAChB,WAAW,CAAC1C,MAAM,CAACyD,KAAK,CAAC;KACzE,MAAM;MACL9C,OAAO,CAAC8C,KAAK,GAAG1C,SAAS;;IAE3B,OAAOJ,OAAO;EAChB;CACD;AAED,MAAMgD,mCAAmC,GAAW;EAAEC,IAAI,EAAE;AAAC,CAAE;AAElDhE,OAAA,CAAA4D,+BAA+B,GAAG;EAC7C9C,MAAMA,CAACC,OAAwC,EAA0C;IAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqBpB,SAAA,CAAAuB,OAAG,CAACC,MAAM,CAACC,MAAM,EAAE;IACvF,IAAIP,OAAO,CAACiD,IAAI,KAAK,CAAC,EAAE;MACtBhD,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAACuC,KAAK,CAAClD,OAAO,CAACiD,IAAI,CAAC;;IAEtC,IAAIjD,OAAO,CAACmD,SAAS,CAAChD,MAAM,KAAK,CAAC,EAAE;MAClCF,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACyC,KAAK,CAACpD,OAAO,CAACmD,SAAS,CAAC;;IAE5C,OAAOlD,MAAM;EACf,CAAC;EAEDa,MAAMA,CAACC,KAA8B,EAAEZ,MAAe;IACpD,MAAMa,MAAM,GAAGD,KAAK,YAAYjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,GAAGF,KAAK,GAAG,IAAIjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,CAACF,KAAK,CAAC;IAC1E,IAAIG,GAAG,GAAGf,MAAM,KAAKC,SAAS,GAAGY,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACI,GAAG,GAAGjB,MAAM;IACjE,MAAMH,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAK0B,mCAAmC,CAAqC;IAC7FhD,OAAO,CAACmD,SAAS,GAAG,IAAIE,UAAU,EAAE;IACpC,OAAOrC,MAAM,CAACI,GAAG,GAAGF,GAAG,EAAE;MACvB,MAAMK,GAAG,GAAGP,MAAM,CAACL,MAAM,EAAE;MAC3B,QAAQY,GAAG,KAAK,CAAC;QACf,KAAK,CAAC;UACJvB,OAAO,CAACiD,IAAI,GAAGjC,MAAM,CAACkC,KAAK,EAAS;UACpC;QACF,KAAK,CAAC;UACJlD,OAAO,CAACmD,SAAS,GAAGnC,MAAM,CAACoC,KAAK,EAAE;UAClC;QACF;UACEpC,MAAM,CAACS,QAAQ,CAACF,GAAG,GAAG,CAAC,CAAC;UACxB;;;IAGN,OAAOvB,OAAO;EAChB,CAAC;EAED0B,QAAQA,CAACrC,MAAW;IAClB,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAK0B,mCAAmC,CAAqC;IAC7FhD,OAAO,CAACmD,SAAS,GAAG,IAAIE,UAAU,EAAE;IACpC,IAAIhE,MAAM,CAAC4D,IAAI,KAAK7C,SAAS,IAAIf,MAAM,CAAC4D,IAAI,KAAK,IAAI,EAAE;MACrDjD,OAAO,CAACiD,IAAI,GAAG7D,gBAAgB,CAACC,MAAM,CAAC4D,IAAI,CAAC;KAC7C,MAAM;MACLjD,OAAO,CAACiD,IAAI,GAAG,CAAC;;IAElB,IAAI5D,MAAM,CAAC8D,SAAS,KAAK/C,SAAS,IAAIf,MAAM,CAAC8D,SAAS,KAAK,IAAI,EAAE;MAC/DnD,OAAO,CAACmD,SAAS,GAAGG,eAAe,CAACjE,MAAM,CAAC8D,SAAS,CAAC;;IAEvD,OAAOnD,OAAO;EAChB,CAAC;EAED4B,MAAMA,CAAC5B,OAAwC;IAC7C,MAAM6B,GAAG,GAAQ,EAAE;IACnB7B,OAAO,CAACiD,IAAI,KAAK7C,SAAS,KAAKyB,GAAG,CAACoB,IAAI,GAAGrD,cAAc,CAACI,OAAO,CAACiD,IAAI,CAAC,CAAC;IACvEjD,OAAO,CAACmD,SAAS,KAAK/C,SAAS,KAC5ByB,GAAG,CAACsB,SAAS,GAAGI,eAAe,CAC9BvD,OAAO,CAACmD,SAAS,KAAK/C,SAAS,GAAGJ,OAAO,CAACmD,SAAS,GAAG,IAAIE,UAAU,EAAE,CACvE,CAAC;IACJ,OAAOxB,GAAG;EACZ,CAAC;EAEDE,WAAWA,CAAC1C,MAAoD;IAC9D,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAK0B,mCAAmC,CAAqC;IAC7F,IAAI3D,MAAM,CAAC4D,IAAI,KAAK7C,SAAS,IAAIf,MAAM,CAAC4D,IAAI,KAAK,IAAI,EAAE;MACrDjD,OAAO,CAACiD,IAAI,GAAG5D,MAAM,CAAC4D,IAAI;KAC3B,MAAM;MACLjD,OAAO,CAACiD,IAAI,GAAG,CAAC;;IAElB,IAAI5D,MAAM,CAAC8D,SAAS,KAAK/C,SAAS,IAAIf,MAAM,CAAC8D,SAAS,KAAK,IAAI,EAAE;MAC/DnD,OAAO,CAACmD,SAAS,GAAG9D,MAAM,CAAC8D,SAAS;KACrC,MAAM;MACLnD,OAAO,CAACmD,SAAS,GAAG,IAAIE,UAAU,EAAE;;IAEtC,OAAOrD,OAAO;EAChB;CACD;AAED,MAAMwD,kCAAkC,GAAW,EAAE;AAExCvE,OAAA,CAAA8D,8BAA8B,GAAG;EAC5ChD,MAAMA,CAACC,OAAuC,EAA0C;IAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqBpB,SAAA,CAAAuB,OAAG,CAACC,MAAM,CAACC,MAAM,EAAE;IACtF,IAAIP,OAAO,CAACyD,QAAQ,KAAKrD,SAAS,EAAE;MAClCpB,UAAA,CAAA0E,eAAe,CAAC3D,MAAM,CAACC,OAAO,CAACyD,QAAQ,EAAExD,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAE7E,KAAK,MAAML,CAAC,IAAIR,OAAO,CAACS,UAAU,EAAE;MAClCxB,OAAA,CAAAqD,wBAAwB,CAACvC,MAAM,CAACS,CAAE,EAAEP,MAAM,CAACU,MAAM,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,MAAM,EAAE;;IAExE,OAAOZ,MAAM;EACf,CAAC;EAEDa,MAAMA,CAACC,KAA8B,EAAEZ,MAAe;IACpD,MAAMa,MAAM,GAAGD,KAAK,YAAYjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,GAAGF,KAAK,GAAG,IAAIjC,SAAA,CAAAuB,OAAG,CAACY,MAAM,CAACF,KAAK,CAAC;IAC1E,IAAIG,GAAG,GAAGf,MAAM,KAAKC,SAAS,GAAGY,MAAM,CAACG,GAAG,GAAGH,MAAM,CAACI,GAAG,GAAGjB,MAAM;IACjE,MAAMH,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKkC,kCAAkC,CAAoC;IAC3FxD,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,OAAOO,MAAM,CAACI,GAAG,GAAGF,GAAG,EAAE;MACvB,MAAMK,GAAG,GAAGP,MAAM,CAACL,MAAM,EAAE;MAC3B,QAAQY,GAAG,KAAK,CAAC;QACf,KAAK,CAAC;UACJvB,OAAO,CAACyD,QAAQ,GAAGzE,UAAA,CAAA0E,eAAe,CAAC5C,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC;UAClE;QACF,KAAK,CAAC;UACJX,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAqD,wBAAwB,CAACxB,MAAM,CAACE,MAAM,EAAEA,MAAM,CAACL,MAAM,EAAE,CAAC,CAAC;UACjF;QACF;UACEK,MAAM,CAACS,QAAQ,CAACF,GAAG,GAAG,CAAC,CAAC;UACxB;;;IAGN,OAAOvB,OAAO;EAChB,CAAC;EAED0B,QAAQA,CAACrC,MAAW;IAClB,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKkC,kCAAkC,CAAoC;IAC3FxD,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,IAAIpB,MAAM,CAACoE,QAAQ,KAAKrD,SAAS,IAAIf,MAAM,CAACoE,QAAQ,KAAK,IAAI,EAAE;MAC7DzD,OAAO,CAACyD,QAAQ,GAAGzE,UAAA,CAAA0E,eAAe,CAAChC,QAAQ,CAACrC,MAAM,CAACoE,QAAQ,CAAC;KAC7D,MAAM;MACLzD,OAAO,CAACyD,QAAQ,GAAGrD,SAAS;;IAE9B,IAAIf,MAAM,CAACoB,UAAU,KAAKL,SAAS,IAAIf,MAAM,CAACoB,UAAU,KAAK,IAAI,EAAE;MACjE,KAAK,MAAMkB,CAAC,IAAItC,MAAM,CAACoB,UAAU,EAAE;QACjCT,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAqD,wBAAwB,CAACZ,QAAQ,CAACC,CAAC,CAAC,CAAC;;;IAGjE,OAAO3B,OAAO;EAChB,CAAC;EAED4B,MAAMA,CAAC5B,OAAuC;IAC5C,MAAM6B,GAAG,GAAQ,EAAE;IACnB7B,OAAO,CAACyD,QAAQ,KAAKrD,SAAS,KAC3ByB,GAAG,CAAC4B,QAAQ,GAAGzD,OAAO,CAACyD,QAAQ,GAAGzE,UAAA,CAAA0E,eAAe,CAAC9B,MAAM,CAAC5B,OAAO,CAACyD,QAAQ,CAAC,GAAGrD,SAAS,CAAC;IAC1F,IAAIJ,OAAO,CAACS,UAAU,EAAE;MACtBoB,GAAG,CAACpB,UAAU,GAAGT,OAAO,CAACS,UAAU,CAACqB,GAAG,CAAEH,CAAC,IAAMA,CAAC,GAAG1C,OAAA,CAAAqD,wBAAwB,CAACV,MAAM,CAACD,CAAC,CAAC,GAAGvB,SAAU,CAAC;KACrG,MAAM;MACLyB,GAAG,CAACpB,UAAU,GAAG,EAAE;;IAErB,OAAOoB,GAAG;EACZ,CAAC;EAEDE,WAAWA,CAAC1C,MAAmD;IAC7D,MAAMW,OAAO,GAAGqB,MAAA,CAAAC,MAAA,KAAKkC,kCAAkC,CAAoC;IAC3FxD,OAAO,CAACS,UAAU,GAAG,EAAE;IACvB,IAAIpB,MAAM,CAACoE,QAAQ,KAAKrD,SAAS,IAAIf,MAAM,CAACoE,QAAQ,KAAK,IAAI,EAAE;MAC7DzD,OAAO,CAACyD,QAAQ,GAAGzE,UAAA,CAAA0E,eAAe,CAAC3B,WAAW,CAAC1C,MAAM,CAACoE,QAAQ,CAAC;KAChE,MAAM;MACLzD,OAAO,CAACyD,QAAQ,GAAGrD,SAAS;;IAE9B,IAAIf,MAAM,CAACoB,UAAU,KAAKL,SAAS,IAAIf,MAAM,CAACoB,UAAU,KAAK,IAAI,EAAE;MACjE,KAAK,MAAMkB,CAAC,IAAItC,MAAM,CAACoB,UAAU,EAAE;QACjCT,OAAO,CAACS,UAAU,CAACe,IAAI,CAACvC,OAAA,CAAAqD,wBAAwB,CAACP,WAAW,CAACJ,CAAC,CAAC,CAAC;;;IAGpE,OAAO3B,OAAO;EAChB;CACD;AAID,IAAI2D,UAAU,GAAQ,CAAC,MAAK;EAC1B,IAAI,OAAOA,UAAU,KAAK,WAAW,EAAE,OAAOA,UAAU;EACxD,IAAI,OAAOC,IAAI,KAAK,WAAW,EAAE,OAAOA,IAAI;EAC5C,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAOA,MAAM;EAChD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAOA,MAAM;EAChD,MAAM,gCAAgC;AACxC,CAAC,EAAC,CAAE;AAEJ,MAAMC,IAAI,GACRJ,UAAU,CAACI,IAAI,KAAMC,GAAG,IAAKL,UAAU,CAACM,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC,CAACtB,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxF,SAASY,eAAeA,CAACU,GAAW;EAClC,MAAMG,GAAG,GAAGJ,IAAI,CAACC,GAAG,CAAC;EACrB,MAAMI,GAAG,GAAG,IAAIf,UAAU,CAACc,GAAG,CAAChE,MAAM,CAAC;EACtC,KAAK,IAAIkE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAChE,MAAM,EAAE,EAAEkE,CAAC,EAAE;IACnCD,GAAG,CAACC,CAAC,CAAC,GAAGF,GAAG,CAACG,UAAU,CAACD,CAAC,CAAC;;EAE5B,OAAOD,GAAG;AACZ;AAEA,MAAMG,IAAI,GACRZ,UAAU,CAACY,IAAI,KAAMJ,GAAG,IAAKR,UAAU,CAACM,MAAM,CAACC,IAAI,CAACC,GAAG,EAAE,QAAQ,CAAC,CAACzB,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACxF,SAASa,eAAeA,CAACa,GAAe;EACtC,MAAMD,GAAG,GAAa,EAAE;EACxB,KAAK,MAAMK,IAAI,IAAIJ,GAAG,EAAE;IACtBD,GAAG,CAAC3C,IAAI,CAACiD,MAAM,CAACC,YAAY,CAACF,IAAI,CAAC,CAAC;;EAErC,OAAOD,IAAI,CAACJ,GAAG,CAACQ,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B;AAaA,IAAI7F,SAAA,CAAAuB,OAAG,CAACuE,IAAI,CAACC,IAAI,KAAKlG,MAAA,CAAA0B,OAAI,EAAE;EAC1BvB,SAAA,CAAAuB,OAAG,CAACuE,IAAI,CAACC,IAAI,GAAGlG,MAAA,CAAA0B,OAAW;EAC3BvB,SAAA,CAAAuB,OAAG,CAACyE,SAAS,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}