{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{poolList,updatePoollistTime}from'./actions';const initialState={// poolLiquidity: {},\npoolList:{},updatePoollistTime:{}};export default createReducer(initialState,builder=>builder.addCase(updatePoollistTime,(state,_ref)=>{let{payload:{}}=_ref;state.updatePoollistTime=Date.now();})// .addCase(poolLiquidity, (state, { payload: {poolLiquidity} }) => {\n//   state.poolLiquidity = poolLiquidity\n// })\n.addCase(poolList,(state,_ref2)=>{let{payload:{chainId,tokenList,version}}=_ref2;// console.log(state)\nstate.poolList={[chainId]:{tokenList,timestamp:Date.now(),version}};// if (state.poolList) {\n//   state.poolList[chainId] = {tokenList, timestamp: Date.now(), version}\n// } else {\n//   state.poolList = {\n//     [chainId]: {tokenList, timestamp: Date.now(), version}\n//   }\n// }\n}));","map":{"version":3,"names":["createReducer","poolList","updatePoollistTime","initialState","builder","addCase","state","_ref","payload","Date","now","_ref2","chainId","tokenList","version","timestamp"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/pools/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { poolList, updatePoollistTime } from './actions'\n\nexport interface BurnState {\n  // readonly poolLiquidity: any\n  readonly poolList: any\n  readonly updatePoollistTime: any\n}\n\nconst initialState: BurnState = {\n  // poolLiquidity: {},\n  poolList: {},\n  updatePoollistTime: {},\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(updatePoollistTime, (state, { payload: {  } }) => {\n      state.updatePoollistTime = Date.now()\n    })\n    // .addCase(poolLiquidity, (state, { payload: {poolLiquidity} }) => {\n    //   state.poolLiquidity = poolLiquidity\n    // })\n    .addCase(poolList, (state, { payload: { chainId, tokenList, version } }) => {\n      // console.log(state)\n      state.poolList= {\n        [chainId]: {tokenList, timestamp: Date.now(), version}\n      }\n      // if (state.poolList) {\n      //   state.poolList[chainId] = {tokenList, timestamp: Date.now(), version}\n      // } else {\n      //   state.poolList = {\n      //     [chainId]: {tokenList, timestamp: Date.now(), version}\n      //   }\n      // }\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,QAAQ,CAAEC,kBAAkB,KAAQ,WAAW,CAQxD,KAAM,CAAAC,YAAuB,CAAG,CAC9B;AACAF,QAAQ,CAAE,CAAC,CAAC,CACZC,kBAAkB,CAAE,CAAC,CACvB,CAAC,CAED,cAAe,CAAAF,aAAa,CAAYG,YAAY,CAAEC,OAAO,EAC3DA,OAAO,CACJC,OAAO,CAACH,kBAAkB,CAAE,CAACI,KAAK,CAAAC,IAAA,GAAwB,IAAtB,CAAEC,OAAO,CAAE,CAAG,CAAE,CAAC,CAAAD,IAAA,CACpDD,KAAK,CAACJ,kBAAkB,CAAGO,IAAI,CAACC,GAAG,CAAC,CAAC,CACvC,CAAC,CACD;AACA;AACA;AAAA,CACCL,OAAO,CAACJ,QAAQ,CAAE,CAACK,KAAK,CAAAK,KAAA,GAAmD,IAAjD,CAAEH,OAAO,CAAE,CAAEI,OAAO,CAAEC,SAAS,CAAEC,OAAQ,CAAE,CAAC,CAAAH,KAAA,CACrE;AACAL,KAAK,CAACL,QAAQ,CAAE,CACd,CAACW,OAAO,EAAG,CAACC,SAAS,CAAEE,SAAS,CAAEN,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEI,OAAO,CACvD,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}