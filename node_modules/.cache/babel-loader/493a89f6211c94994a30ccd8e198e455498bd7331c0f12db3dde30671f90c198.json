{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport { updateMatchesDarkMode, removeTokenToWallet } from './actions';\nimport { useChangeTokenOnWallet } from './hooks';\nimport { addToken } from '../../config/tools/methods';\nexport default function Updater() {\n  const dispatch = useDispatch();\n  const {\n    chainId\n  } = useActiveReact();\n  const {\n    tokeninfo\n  } = useChangeTokenOnWallet();\n  // keep dark mode in sync with the system\n  useEffect(() => {\n    var _window;\n    const darkHandler = match => {\n      dispatch(updateMatchesDarkMode({\n        matchesDarkMode: match.matches\n      }));\n    };\n    const match = (_window = window) === null || _window === void 0 ? void 0 : _window.matchMedia('(prefers-color-scheme: dark)');\n    dispatch(updateMatchesDarkMode({\n      matchesDarkMode: match.matches\n    }));\n    if (match === null || match === void 0 ? void 0 : match.addListener) {\n      match === null || match === void 0 ? void 0 : match.addListener(darkHandler);\n    } else if (match === null || match === void 0 ? void 0 : match.addEventListener) {\n      match === null || match === void 0 ? void 0 : match.addEventListener('change', darkHandler);\n    }\n\n    // console.log(tokeninfo)\n    // console.log(chainId)\n    if (tokeninfo && chainId && tokeninfo.chainId.toString() === chainId.toString()) {\n      addToken(tokeninfo.address, tokeninfo.symbol, tokeninfo.decimals, tokeninfo === null || tokeninfo === void 0 ? void 0 : tokeninfo.logoUrl).then(() => {\n        dispatch(removeTokenToWallet({}));\n      });\n    }\n    return () => {\n      if (match === null || match === void 0 ? void 0 : match.removeListener) {\n        match === null || match === void 0 ? void 0 : match.removeListener(darkHandler);\n      } else if (match === null || match === void 0 ? void 0 : match.removeEventListener) {\n        match === null || match === void 0 ? void 0 : match.removeEventListener('change', darkHandler);\n      }\n    };\n  }, [dispatch, chainId, tokeninfo]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","useActiveReact","updateMatchesDarkMode","removeTokenToWallet","useChangeTokenOnWallet","addToken","Updater","dispatch","chainId","tokeninfo","_window","darkHandler","match","matchesDarkMode","matches","window","matchMedia","addListener","addEventListener","toString","address","symbol","decimals","logoUrl","then","removeListener","removeEventListener"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/user/updater.tsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { AppDispatch } from '../index'\nimport { updateMatchesDarkMode, removeTokenToWallet } from './actions'\nimport { useChangeTokenOnWallet } from './hooks'\nimport { addToken } from '../../config/tools/methods'\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const {chainId} = useActiveReact()\n  const {tokeninfo} = useChangeTokenOnWallet()\n  // keep dark mode in sync with the system\n  useEffect(() => {\n    const darkHandler = (match: MediaQueryListEvent) => {\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n    }\n\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n\n    if (match?.addListener) {\n      match?.addListener(darkHandler)\n    } else if (match?.addEventListener) {\n      match?.addEventListener('change', darkHandler)\n    }\n\n    // console.log(tokeninfo)\n    // console.log(chainId)\n    if (tokeninfo && chainId && tokeninfo.chainId.toString() === chainId.toString()) {\n      addToken(tokeninfo.address, tokeninfo.symbol, tokeninfo.decimals, tokeninfo?.logoUrl).then(() => {\n        dispatch(removeTokenToWallet({}))\n      })\n    }\n\n    return () => {\n      if (match?.removeListener) {\n        match?.removeListener(darkHandler)\n      } else if (match?.removeEventListener) {\n        match?.removeEventListener('change', darkHandler)\n      }\n    }\n  }, [dispatch, chainId, tokeninfo])\n\n  return null\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,SAASC,qBAAqB,EAAEC,mBAAmB,QAAQ,WAAW;AACtE,SAASC,sBAAsB,QAAQ,SAAS;AAChD,SAASC,QAAQ,QAAQ,4BAA4B;AAErD,eAAe,SAASC,OAAOA,CAAA,EAAS;EACtC,MAAMC,QAAQ,GAAGP,WAAW,CAAc,CAAC;EAC3C,MAAM;IAACQ;EAAO,CAAC,GAAGP,cAAc,CAAC,CAAC;EAClC,MAAM;IAACQ;EAAS,CAAC,GAAGL,sBAAsB,CAAC,CAAC;EAC5C;EACAL,SAAS,CAAC,MAAM;IAAA,IAAAW,OAAA;IACd,MAAMC,WAAW,GAAIC,KAA0B,IAAK;MAClDL,QAAQ,CAACL,qBAAqB,CAAC;QAAEW,eAAe,EAAED,KAAK,CAACE;MAAQ,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,MAAMF,KAAK,IAAAF,OAAA,GAAGK,MAAM,cAAAL,OAAA,uBAANA,OAAA,CAAQM,UAAU,CAAC,8BAA8B,CAAC;IAChET,QAAQ,CAACL,qBAAqB,CAAC;MAAEW,eAAe,EAAED,KAAK,CAACE;IAAQ,CAAC,CAAC,CAAC;IAEnE,IAAIF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAW,EAAE;MACtBL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,WAAW,CAACN,WAAW,CAAC;IACjC,CAAC,MAAM,IAAIC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,gBAAgB,EAAE;MAClCN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,gBAAgB,CAAC,QAAQ,EAAEP,WAAW,CAAC;IAChD;;IAEA;IACA;IACA,IAAIF,SAAS,IAAID,OAAO,IAAIC,SAAS,CAACD,OAAO,CAACW,QAAQ,CAAC,CAAC,KAAKX,OAAO,CAACW,QAAQ,CAAC,CAAC,EAAE;MAC/Ed,QAAQ,CAACI,SAAS,CAACW,OAAO,EAAEX,SAAS,CAACY,MAAM,EAAEZ,SAAS,CAACa,QAAQ,EAAEb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc,OAAO,CAAC,CAACC,IAAI,CAAC,MAAM;QAC/FjB,QAAQ,CAACJ,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIS,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,cAAc,EAAE;QACzBb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,cAAc,CAACd,WAAW,CAAC;MACpC,CAAC,MAAM,IAAIC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,mBAAmB,EAAE;QACrCd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,mBAAmB,CAAC,QAAQ,EAAEf,WAAW,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,SAAS,CAAC,CAAC;EAElC,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}