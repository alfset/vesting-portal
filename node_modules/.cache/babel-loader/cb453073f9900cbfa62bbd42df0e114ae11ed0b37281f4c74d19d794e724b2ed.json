{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAppProvider = void 0;\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider extends events_1.EventEmitter {\n  constructor(safe, sdk) {\n    super();\n    this.submittedTxs = new Map();\n    this.safe = safe;\n    this.sdk = sdk;\n  }\n  async connect() {\n    this.emit('connect', {\n      chainId: this.chainId\n    });\n    return;\n  }\n  async disconnect() {\n    return;\n  }\n  get chainId() {\n    return this.safe.chainId;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async request(request) {\n    const {\n      method,\n      params = []\n    } = request;\n    switch (method) {\n      case 'eth_accounts':\n        return [this.safe.safeAddress];\n      case 'net_version':\n      case 'eth_chainId':\n        return \"0x\".concat(this.chainId.toString(16));\n      case 'personal_sign':\n        {\n          const [message, address] = params;\n          if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n            throw new Error('The address or message hash is invalid');\n          }\n          await this.sdk.txs.signMessage(message);\n          return '0x';\n        }\n      case 'eth_sign':\n        {\n          const [address, messageHash] = params;\n          if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase() || !messageHash.startsWith('0x')) {\n            throw new Error('The address or message hash is invalid');\n          }\n          await this.sdk.txs.signMessage(messageHash);\n          return '0x';\n        }\n      case 'eth_sendTransaction':\n        const tx = Object.assign({\n          value: '0',\n          data: '0x'\n        }, params[0]);\n        const resp = await this.sdk.txs.send({\n          txs: [tx]\n        });\n        // Store fake transaction\n        this.submittedTxs.set(resp.safeTxHash, {\n          from: this.safe.safeAddress,\n          hash: resp.safeTxHash,\n          gas: 0,\n          gasPrice: '0x00',\n          nonce: 0,\n          input: tx.data,\n          value: tx.value,\n          to: tx.to,\n          blockHash: null,\n          blockNumber: null,\n          transactionIndex: null\n        });\n        return resp.safeTxHash;\n      case 'eth_blockNumber':\n        const block = await this.sdk.eth.getBlockByNumber(['latest']);\n        return block.number;\n      case 'eth_getBalance':\n        return this.sdk.eth.getBalance([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n      case 'eth_getCode':\n        return this.sdk.eth.getCode([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n      case 'eth_getTransactionCount':\n        return this.sdk.eth.getTransactionCount([(0, utils_1.getLowerCase)(params[0]), params[1]]);\n      case 'eth_getStorageAt':\n        return this.sdk.eth.getStorageAt([(0, utils_1.getLowerCase)(params[0]), params[1], params[2]]);\n      case 'eth_getBlockByNumber':\n        return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n      case 'eth_getBlockByHash':\n        return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n      case 'eth_getTransactionByHash':\n        let txHash = params[0];\n        try {\n          const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n          txHash = resp.txHash || txHash;\n        } catch (e) {}\n        // Use fake transaction if we don't have a real tx hash\n        if (this.submittedTxs.has(txHash)) {\n          return this.submittedTxs.get(txHash);\n        }\n        return this.sdk.eth.getTransactionByHash([txHash]).then(tx => {\n          // We set the tx hash to the one requested, as some provider assert this\n          if (tx) {\n            tx.hash = params[0];\n          }\n          return tx;\n        });\n      case 'eth_getTransactionReceipt':\n        {\n          let txHash = params[0];\n          try {\n            const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n            txHash = resp.txHash || txHash;\n          } catch (e) {}\n          return this.sdk.eth.getTransactionReceipt([txHash]).then(tx => {\n            // We set the tx hash to the one requested, as some provider assert this\n            if (tx) {\n              tx.transactionHash = params[0];\n            }\n            return tx;\n          });\n        }\n      case 'eth_estimateGas':\n        {\n          return this.sdk.eth.getEstimateGas(params[0]);\n        }\n      case 'eth_call':\n        {\n          return this.sdk.eth.call([params[0], params[1]]);\n        }\n      case 'eth_getLogs':\n        return this.sdk.eth.getPastLogs([params[0]]);\n      case 'eth_gasPrice':\n        return this.sdk.eth.getGasPrice();\n      case 'wallet_getPermissions':\n        return this.sdk.wallet.getPermissions();\n      case 'wallet_requestPermissions':\n        return this.sdk.wallet.requestPermissions(params[0]);\n      default:\n        throw Error(\"\\\"\".concat(request.method, \"\\\" not implemented\"));\n    }\n  }\n  // this method is needed for ethers v4\n  // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n  send(request, callback) {\n    if (!request) callback('Undefined request');\n    this.request(request).then(result => callback(null, {\n      jsonrpc: '2.0',\n      id: request.id,\n      result\n    })).catch(error => callback(error, null));\n  }\n}\nexports.SafeAppProvider = SafeAppProvider;","map":{"version":3,"names":["events_1","require","utils_1","SafeAppProvider","EventEmitter","constructor","safe","sdk","submittedTxs","Map","connect","emit","chainId","disconnect","request","method","params","safeAddress","concat","toString","message","address","toLowerCase","Error","txs","signMessage","messageHash","startsWith","tx","Object","assign","value","data","resp","send","set","safeTxHash","from","hash","gas","gasPrice","nonce","input","to","blockHash","blockNumber","transactionIndex","block","eth","getBlockByNumber","number","getBalance","getLowerCase","getCode","getTransactionCount","getStorageAt","getBlockByHash","txHash","getBySafeTxHash","e","has","get","getTransactionByHash","then","getTransactionReceipt","transactionHash","getEstimateGas","call","getPastLogs","getGasPrice","wallet","getPermissions","requestPermissions","callback","result","jsonrpc","id","catch","error","exports"],"sources":["../src/provider.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}