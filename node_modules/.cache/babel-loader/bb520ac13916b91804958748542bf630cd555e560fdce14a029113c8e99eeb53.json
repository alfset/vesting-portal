{"ast":null,"code":"import{AbstractConnector}from\"@web3-react/abstract-connector\";import warning from\"tiny-warning\";// import { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\nfunction parseSendReturn(sendReturn){return sendReturn.hasOwnProperty(\"result\")?sendReturn.result:sendReturn;}export class NoXdefiProviderError extends Error{constructor(){var _this$constructor$nam,_this$constructor;super();this.name=(_this$constructor$nam=this===null||this===void 0?void 0:(_this$constructor=this.constructor)===null||_this$constructor===void 0?void 0:_this$constructor.name)!==null&&_this$constructor$nam!==void 0?_this$constructor$nam:'';this.message=\"No Xdefi provider was found on window.xfi.\";}}export class UserRejectedRequestError extends Error{constructor(){var _this$constructor$nam2,_this$constructor2;super();this.name=(_this$constructor$nam2=this===null||this===void 0?void 0:(_this$constructor2=this.constructor)===null||_this$constructor2===void 0?void 0:_this$constructor2.name)!==null&&_this$constructor$nam2!==void 0?_this$constructor$nam2:'';this.message=\"The user rejected the request.\";}}export class XdefiConnector extends AbstractConnector{constructor(kwargs){super(kwargs);this.handleNetworkChanged=this.handleNetworkChanged.bind(this);this.handleChainChanged=this.handleChainChanged.bind(this);this.handleAccountsChanged=this.handleAccountsChanged.bind(this);this.handleClose=this.handleClose.bind(this);}handleChainChanged(chainId){if(__DEV__){console.log(\"Handling 'chainChanged' event with payload\",chainId);}this.emitUpdate({chainId,provider:window.xfi.ethereum});}handleAccountsChanged(accounts){if(__DEV__){console.log(\"Handling 'accountsChanged' event with payload\",accounts);}if(accounts.length===0){this.emitDeactivate();}else{this.emitUpdate({account:accounts[0]});}}handleClose(code,reason){if(__DEV__){console.log(\"Handling 'close' event with payload\",code,reason);}this.emitDeactivate();}handleNetworkChanged(networkId){if(__DEV__){console.log(\"Handling 'networkChanged' event with payload\",networkId);}this.emitUpdate({chainId:networkId,provider:window.xfi.ethereum});}async activate(){var _window,_window$xfi,_window6,_window6$xfi,_window10,_window10$xfi;if(!((_window=window)===null||_window===void 0?void 0:(_window$xfi=_window.xfi)===null||_window$xfi===void 0?void 0:_window$xfi.ethereum)){throw new NoXdefiProviderError();}if(window.xfi.ethereum.on){var _window2,_window2$xfi,_window3,_window3$xfi,_window4,_window4$xfi,_window5,_window5$xfi;(_window2=window)===null||_window2===void 0?void 0:(_window2$xfi=_window2.xfi)===null||_window2$xfi===void 0?void 0:_window2$xfi.ethereum.on(\"chainChanged\",this.handleChainChanged);(_window3=window)===null||_window3===void 0?void 0:(_window3$xfi=_window3.xfi)===null||_window3$xfi===void 0?void 0:_window3$xfi.ethereum.on(\"accountsChanged\",this.handleAccountsChanged);(_window4=window)===null||_window4===void 0?void 0:(_window4$xfi=_window4.xfi)===null||_window4$xfi===void 0?void 0:_window4$xfi.ethereum.on(\"close\",this.handleClose);(_window5=window)===null||_window5===void 0?void 0:(_window5$xfi=_window5.xfi)===null||_window5$xfi===void 0?void 0:_window5$xfi.ethereum.on(\"networkChanged\",this.handleNetworkChanged);}if(((_window6=window)===null||_window6===void 0?void 0:(_window6$xfi=_window6.xfi)===null||_window6$xfi===void 0?void 0:_window6$xfi.ethereum).isMetaMask){var _window7,_window7$xfi;((_window7=window)===null||_window7===void 0?void 0:(_window7$xfi=_window7.xfi)===null||_window7$xfi===void 0?void 0:_window7$xfi.ethereum).autoRefreshOnNetworkChange=false;}// try to activate + get account via eth_requestAccounts\nlet account;try{var _window8,_window8$xfi;account=await((_window8=window)===null||_window8===void 0?void 0:(_window8$xfi=_window8.xfi)===null||_window8$xfi===void 0?void 0:_window8$xfi.ethereum.send)(\"eth_requestAccounts\").then(sendReturn=>parseSendReturn(sendReturn)[0]);}catch(error){if(error.code===4001){throw new UserRejectedRequestError();}warning(false,\"eth_requestAccounts was unsuccessful, falling back to enable\");}// if unsuccessful, try enable\nif(!account){var _window9,_window9$xfi;// if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\naccount=await((_window9=window)===null||_window9===void 0?void 0:(_window9$xfi=_window9.xfi)===null||_window9$xfi===void 0?void 0:_window9$xfi.ethereum.enable().then(sendReturn=>sendReturn&&parseSendReturn(sendReturn)[0]));}return{provider:(_window10=window)===null||_window10===void 0?void 0:(_window10$xfi=_window10.xfi)===null||_window10$xfi===void 0?void 0:_window10$xfi.ethereum,...(account?{account}:{})};}async getProvider(){var _window11,_window11$xfi;return(_window11=window)===null||_window11===void 0?void 0:(_window11$xfi=_window11.xfi)===null||_window11$xfi===void 0?void 0:_window11$xfi.ethereum;}async getChainId(){var _window12,_window12$xfi;if(!((_window12=window)===null||_window12===void 0?void 0:(_window12$xfi=_window12.xfi)===null||_window12$xfi===void 0?void 0:_window12$xfi.ethereum)){throw new NoXdefiProviderError();}let chainId;try{var _window13,_window13$xfi;chainId=await((_window13=window)===null||_window13===void 0?void 0:(_window13$xfi=_window13.xfi)===null||_window13$xfi===void 0?void 0:_window13$xfi.ethereum.send)(\"eth_chainId\").then(parseSendReturn);}catch{warning(false,\"eth_chainId was unsuccessful, falling back to net_version\");}if(!chainId){try{var _window14,_window14$xfi;// window?.xfi?.ethereum.send('net_version').then((res:any) => {\n//   console.log(res)\n// })\n// chainId = await (window?.xfi?.ethereum.send as Send)(\"net_version\").then(\n//   parseSendReturn\n// );\nchainId=await((_window14=window)===null||_window14===void 0?void 0:(_window14$xfi=_window14.xfi)===null||_window14$xfi===void 0?void 0:_window14$xfi.ethereum.send('net_version'));}catch{warning(false,\"net_version was unsuccessful, falling back to net version v2\");}}if(!chainId){try{var _window15,_window15$xfi;// chainId = parseSendReturn(\n//   (window?.xfi?.ethereum.send as any)({ method: \"net_version\" })\n// );\nchainId=await((_window15=window)===null||_window15===void 0?void 0:(_window15$xfi=_window15.xfi)===null||_window15$xfi===void 0?void 0:_window15$xfi.ethereum.send('net_version'));}catch{warning(false,\"net_version v2 was unsuccessful, falling back to manual matches and static properties\");}}if(!chainId){var _window16,_window16$xfi;if(((_window16=window)===null||_window16===void 0?void 0:(_window16$xfi=_window16.xfi)===null||_window16$xfi===void 0?void 0:_window16$xfi.ethereum).isDapper){var _window17,_window17$xfi;chainId=parseSendReturn(((_window17=window)===null||_window17===void 0?void 0:(_window17$xfi=_window17.xfi)===null||_window17$xfi===void 0?void 0:_window17$xfi.ethereum).cachedResults.net_version);}else{var _window18,_window18$xfi,_window19,_window19$xfi,_window20,_window20$xfi,_window21,_window21$xfi;chainId=((_window18=window)===null||_window18===void 0?void 0:(_window18$xfi=_window18.xfi)===null||_window18$xfi===void 0?void 0:_window18$xfi.ethereum).chainId||((_window19=window)===null||_window19===void 0?void 0:(_window19$xfi=_window19.xfi)===null||_window19$xfi===void 0?void 0:_window19$xfi.ethereum).netVersion||((_window20=window)===null||_window20===void 0?void 0:(_window20$xfi=_window20.xfi)===null||_window20$xfi===void 0?void 0:_window20$xfi.ethereum).networkVersion||((_window21=window)===null||_window21===void 0?void 0:(_window21$xfi=_window21.xfi)===null||_window21$xfi===void 0?void 0:_window21$xfi.ethereum)._chainId;}}return chainId;}async getAccount(){var _window22,_window22$xfi;if(!((_window22=window)===null||_window22===void 0?void 0:(_window22$xfi=_window22.xfi)===null||_window22$xfi===void 0?void 0:_window22$xfi.ethereum)){throw new NoXdefiProviderError();}let account;try{var _window23,_window23$xfi;// account = await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n//   (sendReturn) => parseSendReturn(sendReturn)[0]\n// );\naccount=await((_window23=window)===null||_window23===void 0?void 0:(_window23$xfi=_window23.xfi)===null||_window23$xfi===void 0?void 0:_window23$xfi.ethereum.send('eth_accounts'));}catch{warning(false,\"eth_accounts was unsuccessful, falling back to enable\");}if(!account){try{var _window24,_window24$xfi;account=await((_window24=window)===null||_window24===void 0?void 0:(_window24$xfi=_window24.xfi)===null||_window24$xfi===void 0?void 0:_window24$xfi.ethereum.enable().then(sendReturn=>parseSendReturn(sendReturn)[0]));}catch{warning(false,\"enable was unsuccessful, falling back to eth_accounts v2\");}}if(!account){var _window25,_window25$xfi;account=parseSendReturn(((_window25=window)===null||_window25===void 0?void 0:(_window25$xfi=_window25.xfi)===null||_window25$xfi===void 0?void 0:_window25$xfi.ethereum.send)({method:\"eth_accounts\"}))[0];}return account;}deactivate(){var _window26,_window26$xfi,_window27,_window27$xfi;if(((_window26=window)===null||_window26===void 0?void 0:(_window26$xfi=_window26.xfi)===null||_window26$xfi===void 0?void 0:_window26$xfi.ethereum)&&((_window27=window)===null||_window27===void 0?void 0:(_window27$xfi=_window27.xfi)===null||_window27$xfi===void 0?void 0:_window27$xfi.ethereum.removeListener)){var _window28,_window28$xfi,_window29,_window29$xfi,_window30,_window30$xfi,_window31,_window31$xfi;(_window28=window)===null||_window28===void 0?void 0:(_window28$xfi=_window28.xfi)===null||_window28$xfi===void 0?void 0:_window28$xfi.ethereum.removeListener(\"chainChanged\",this.handleChainChanged);(_window29=window)===null||_window29===void 0?void 0:(_window29$xfi=_window29.xfi)===null||_window29$xfi===void 0?void 0:_window29$xfi.ethereum.removeListener(\"accountsChanged\",this.handleAccountsChanged);(_window30=window)===null||_window30===void 0?void 0:(_window30$xfi=_window30.xfi)===null||_window30$xfi===void 0?void 0:_window30$xfi.ethereum.removeListener(\"close\",this.handleClose);(_window31=window)===null||_window31===void 0?void 0:(_window31$xfi=_window31.xfi)===null||_window31$xfi===void 0?void 0:_window31$xfi.ethereum.removeListener(\"networkChanged\",this.handleNetworkChanged);}}async isAuthorized(){var _window32,_window32$xfi;if(!((_window32=window)===null||_window32===void 0?void 0:(_window32$xfi=_window32.xfi)===null||_window32$xfi===void 0?void 0:_window32$xfi.ethereum)){return false;}try{var _window33,_window33$xfi;return await((_window33=window)===null||_window33===void 0?void 0:(_window33$xfi=_window33.xfi)===null||_window33$xfi===void 0?void 0:_window33$xfi.ethereum.send)(\"eth_accounts\").then(sendReturn=>{if(parseSendReturn(sendReturn).length>0){return true;}else{return false;}});}catch{return false;}}}","map":{"version":3,"names":["AbstractConnector","warning","parseSendReturn","sendReturn","hasOwnProperty","result","NoXdefiProviderError","Error","constructor","_this$constructor$nam","_this$constructor","name","message","UserRejectedRequestError","_this$constructor$nam2","_this$constructor2","XdefiConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","__DEV__","console","log","emitUpdate","provider","window","xfi","ethereum","accounts","length","emitDeactivate","account","code","reason","networkId","activate","_window","_window$xfi","_window6","_window6$xfi","_window10","_window10$xfi","on","_window2","_window2$xfi","_window3","_window3$xfi","_window4","_window4$xfi","_window5","_window5$xfi","isMetaMask","_window7","_window7$xfi","autoRefreshOnNetworkChange","_window8","_window8$xfi","send","then","error","_window9","_window9$xfi","enable","getProvider","_window11","_window11$xfi","getChainId","_window12","_window12$xfi","_window13","_window13$xfi","_window14","_window14$xfi","_window15","_window15$xfi","_window16","_window16$xfi","isDapper","_window17","_window17$xfi","cachedResults","net_version","_window18","_window18$xfi","_window19","_window19$xfi","_window20","_window20$xfi","_window21","_window21$xfi","netVersion","networkVersion","_chainId","getAccount","_window22","_window22$xfi","_window23","_window23$xfi","_window24","_window24$xfi","_window25","_window25$xfi","method","deactivate","_window26","_window26$xfi","_window27","_window27$xfi","removeListener","_window28","_window28$xfi","_window29","_window29$xfi","_window30","_window30$xfi","_window31","_window31$xfi","isAuthorized","_window32","_window32$xfi","_window33","_window33$xfi"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/connectors/xdefi/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from \"@web3-react/types\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\n// import { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\nexport type SendReturnResult = { result: any }\nexport type SendReturn = any\n\nexport type Send = (method: string, params?: any[]) => Promise<SendReturnResult | SendReturn>\nexport type SendOld = ({ method }: { method: string }) => Promise<SendReturnResult | SendReturn>\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\n\nexport class NoXdefiProviderError extends Error {\n  public constructor() {\n    super();\n    this.name = this?.constructor?.name ?? '';\n    this.message = \"No Xdefi provider was found on window.xfi.\";\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super();\n    this.name = this?.constructor?.name ?? '';\n    this.message = \"The user rejected the request.\";\n  }\n}\n\nexport class XdefiConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({ chainId, provider: window.xfi.ethereum });\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({ account: accounts[0] });\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({ chainId: networkId, provider: window.xfi.ethereum });\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    if (window.xfi.ethereum.on) {\n      window?.xfi?.ethereum.on(\"chainChanged\", this.handleChainChanged);\n      window?.xfi?.ethereum.on(\"accountsChanged\", this.handleAccountsChanged);\n      window?.xfi?.ethereum.on(\"close\", this.handleClose);\n      window?.xfi?.ethereum.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n\n    if ((window?.xfi?.ethereum as any).isMetaMask) {\n      (window?.xfi?.ethereum as any).autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await (window?.xfi?.ethereum.send as Send)(\n        \"eth_requestAccounts\"\n      ).then((sendReturn) => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(\n        false,\n        \"eth_requestAccounts was unsuccessful, falling back to enable\"\n      );\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window?.xfi?.ethereum.enable().then(\n        (sendReturn:any) => sendReturn && parseSendReturn(sendReturn)[0]\n      );\n    }\n\n    return { provider: window?.xfi?.ethereum, ...(account ? { account } : {}) };\n  }\n\n  public async getProvider(): Promise<any> {\n    return window?.xfi?.ethereum;\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    let chainId;\n    try {\n      chainId = await (window?.xfi?.ethereum.send as Send)(\"eth_chainId\").then(\n        parseSendReturn\n      );\n    } catch {\n      warning(\n        false,\n        \"eth_chainId was unsuccessful, falling back to net_version\"\n      );\n    }\n\n    if (!chainId) {\n      try {\n        // window?.xfi?.ethereum.send('net_version').then((res:any) => {\n        //   console.log(res)\n        // })\n        // chainId = await (window?.xfi?.ethereum.send as Send)(\"net_version\").then(\n        //   parseSendReturn\n        // );\n        chainId = await window?.xfi?.ethereum.send('net_version')\n      } catch {\n        warning(\n          false,\n          \"net_version was unsuccessful, falling back to net version v2\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      try {\n        // chainId = parseSendReturn(\n        //   (window?.xfi?.ethereum.send as any)({ method: \"net_version\" })\n        // );\n        chainId = await window?.xfi?.ethereum.send('net_version')\n      } catch {\n        warning(\n          false,\n          \"net_version v2 was unsuccessful, falling back to manual matches and static properties\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      if ((window?.xfi?.ethereum as any).isDapper) {\n        chainId = parseSendReturn(\n          (window?.xfi?.ethereum as any).cachedResults.net_version\n        );\n      } else {\n        chainId =\n          (window?.xfi?.ethereum as any).chainId ||\n          (window?.xfi?.ethereum as any).netVersion ||\n          (window?.xfi?.ethereum as any).networkVersion ||\n          (window?.xfi?.ethereum as any)._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    let account;\n    try {\n      // account = await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n      //   (sendReturn) => parseSendReturn(sendReturn)[0]\n      // );\n      account = await window?.xfi?.ethereum.send('eth_accounts')\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n\n    if (!account) {\n      try {\n        account = await window?.xfi?.ethereum.enable().then(\n          (sendReturn:any) => parseSendReturn(sendReturn)[0]\n        );\n      } catch {\n        warning(\n          false,\n          \"enable was unsuccessful, falling back to eth_accounts v2\"\n        );\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(\n        (window?.xfi?.ethereum.send as SendOld)({ method: \"eth_accounts\" })\n      )[0];\n    }\n\n    return account;\n  }\n\n  public deactivate() {\n    if (window?.xfi?.ethereum && window?.xfi?.ethereum.removeListener) {\n      window?.xfi?.ethereum.removeListener(\n        \"chainChanged\",\n        this.handleChainChanged\n      );\n      window?.xfi?.ethereum.removeListener(\n        \"accountsChanged\",\n        this.handleAccountsChanged\n      );\n      window?.xfi?.ethereum.removeListener(\"close\", this.handleClose);\n      window?.xfi?.ethereum.removeListener(\n        \"networkChanged\",\n        this.handleNetworkChanged\n      );\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window?.xfi?.ethereum) {\n      return false;\n    }\n\n    try {\n      return await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      );\n    } catch {\n      return false;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}