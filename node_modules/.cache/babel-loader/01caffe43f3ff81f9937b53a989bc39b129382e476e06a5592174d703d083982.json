{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.p2sh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  (0, types_1.typeforce)({\n    network: types_1.typeforce.maybe(types_1.typeforce.Object),\n    address: types_1.typeforce.maybe(types_1.typeforce.String),\n    hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n    output: types_1.typeforce.maybe(types_1.typeforce.BufferN(23)),\n    redeem: types_1.typeforce.maybe({\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      witness: types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.typeforce.Buffer))\n    }),\n    input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    witness: types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.typeforce.Buffer))\n  }, a);\n  let network = a.network;\n  if (!network) {\n    network = a.redeem && a.redeem.network || networks_1.bitcoin;\n  }\n  const o = {\n    network\n  };\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return {\n      version,\n      hash\n    };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Buffer.from([]) : lastChunk,\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || []\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile([].concat(bscript.decompile(a.redeem.input), a.redeem.output));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined) nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n    if (a.output) {\n      if (a.output.length !== 23 || a.output[0] !== OPS.OP_HASH160 || a.output[1] !== 0x14 || a.output[22] !== OPS.OP_EQUAL) throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1) throw new TypeError('Redeem.output too short');\n        if (redeem.output.byteLength > 520) throw new TypeError('Redeem.output unspendable if larger than 520 bytes');\n        if (bscript.countNonPushOnlyOPs(decompile) > 201) throw new TypeError('Redeem.output unspendable with more than 201 non-push ops');\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness) throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks)) throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output)) throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output)) throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input)) throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (a.redeem && a.redeem.witness && !stacksEqual(a.redeem.witness, a.witness)) throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;","map":{"version":3,"names":["Object","defineProperty","exports","value","p2sh","bcrypto","require","networks_1","bscript","types_1","lazy","bs58check","OPS","stacksEqual","a","b","length","every","x","i","equals","opts","address","hash","output","redeem","input","TypeError","assign","validate","typeforce","network","maybe","String","BufferN","Buffer","witness","arrayOf","bitcoin","o","_address","payload","from","decode","version","readUInt8","slice","_chunks","decompile","_redeem","chunks","lastChunk","OP_FALSE","compile","prop","allocUnsafe","writeUInt8","scriptHash","copy","encode","hash160","OP_HASH160","OP_EQUAL","concat","nameParts","undefined","name","push","join","hash2","checkRedeem","byteLength","countNonPushOnlyOPs","hasInput","hasWitness","richunks","isPushOnly","isBuffer"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/payments/p2sh.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2sh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(23)),\n      redeem: types_1.typeforce.maybe({\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Buffer.from([]) : lastChunk,\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        if (redeem.output.byteLength > 520)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 520 bytes',\n          );\n        if (bscript.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}