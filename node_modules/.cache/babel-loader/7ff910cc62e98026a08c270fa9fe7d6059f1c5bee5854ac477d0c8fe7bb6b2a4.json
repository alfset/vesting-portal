{"ast":null,"code":"import { useCallback,\n// useEffect,\nuseMemo\n// useState\n} from \"react\";\n// import axios from \"axios\";\nimport { useTranslation } from 'react-i18next';\nimport { useVeMULTIContract, useVeShareContract } from '../../hooks/useContract';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useTxnsErrorTipOpen } from '../../state/application/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { BigAmount } from '../../utils/formatBignumber';\nimport { ChainId } from \"../../config/chainConfig/chainId\";\nimport { spportChainArr } from '../../config/chainConfig';\nimport { getNftImage } from '../../utils/getNFTimage';\nexport let WrapType = /*#__PURE__*/function (WrapType) {\n  WrapType[WrapType[\"NOT_APPLICABLE\"] = 0] = \"NOT_APPLICABLE\";\n  WrapType[WrapType[\"WRAP\"] = 1] = \"WRAP\";\n  WrapType[WrapType[\"UNWRAP\"] = 2] = \"UNWRAP\";\n  WrapType[WrapType[\"NOCONNECT\"] = 3] = \"NOCONNECT\";\n  return WrapType;\n}({});\nconst NOT_APPLICABLE = {\n  wrapType: WrapType.NOT_APPLICABLE\n};\nfunction useChain(data) {\n  const list = {};\n  // console.log(spportChainArr)\n  for (const c in data) {\n    if (!spportChainArr.includes(c)) continue;\n    list[c] = {\n      ...data[c]\n    };\n  }\n  return list;\n}\nexport const VENFT_BASE_INFO = {\n  name: 'veDELTA NFT',\n  symbol: 'veDELTA',\n  decimals: 18\n};\nexport const veSHARE = useChain({\n  [ChainId.BNB_TEST]: {\n    ...VENFT_BASE_INFO,\n    address: '0x4d2E8b5FA1bB62C2e9bBA2b2b23902bf06230345'\n  },\n  [ChainId.BNB]: {\n    ...VENFT_BASE_INFO,\n    address: '0x55F8D898760240E6Eff3c2cc23974Ae8C8fcEEfD'\n  }\n});\nexport const REWARD_TOKEN = useChain({\n  [ChainId.BNB_TEST]: {\n    name: 'USDCoin',\n    symbol: 'USDC',\n    decimals: 18,\n    address: '0x86e2c741Bf2BC6772Fed68a75eaa5bfab4a76d16'\n  },\n  [ChainId.BNB]: {\n    name: 'USDCoin',\n    symbol: 'USDC',\n    decimals: 18,\n    address: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\n  }\n});\nexport const VESHARE = useChain({\n  [ChainId.BNB_TEST]: {\n    address: '0x76c11a1de011de898802b1C81bce768d22B431b1'\n  },\n  [ChainId.BNB]: {\n    address: '0x13Ee726D95742D437ebb664Bf0d3fEff8Dbe2a26'\n  }\n});\nexport function useVeshare() {\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  // const useLockToken:any = useMemo(() => {\n  //   // console.log(MULTI_TOKEN)\n  //   // console.log(chainId)\n  //   if (chainId && MULTI_TOKEN[chainId]) {\n  //     return MULTI_TOKEN[chainId]\n  //   }\n  //   return undefined\n  // }, [chainId])\n  const useVeMultiToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && veSHARE[chainId]) return veSHARE[chainId];\n    return undefined;\n  }, [chainId]);\n  const useVeshareToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && VESHARE[chainId]) return VESHARE[chainId];\n    return undefined;\n  }, [chainId]);\n  const useRewardToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && REWARD_TOKEN[chainId]) return REWARD_TOKEN[chainId];\n    return undefined;\n  }, [chainId]);\n  const veshareMultiContract = useVeMULTIContract(useVeMultiToken === null || useVeMultiToken === void 0 ? void 0 : useVeMultiToken.address);\n  // const rewardContract = useVeMULTIRewardContract(useVeMultiRewardToken?.address)\n  const veshareContract = useVeShareContract(useVeshareToken === null || useVeshareToken === void 0 ? void 0 : useVeshareToken.address);\n  const getVeshareNFTs = useCallback(async () => {\n    return new Promise(async resolve => {\n      if (veshareMultiContract && account && veshareContract) {\n        let nftsLength = '';\n        try {\n          nftsLength = await veshareMultiContract.balanceOf(account);\n        } catch (error) {\n          console.log(error);\n        }\n        const arr = Array.from({\n          length: parseInt(nftsLength)\n        }, (v, i) => i);\n        try {\n          const nfts = await Promise.all(arr.map(async idx => {\n            var _reward;\n            const tokenIndex = await veshareMultiContract.tokenOfOwnerByIndex(account, idx);\n            const locked = await veshareContract.tokenInfo(tokenIndex);\n            const endTime = locked['endTime'].toNumber();\n            const tokenURI = await veshareMultiContract.tokenURI(tokenIndex);\n            const data = await getNftImage(tokenURI);\n            // console.log(tokenURI)\n            // console.log(test)\n            // const url = tokenURI.indexOf('ipfs://') === 0 ? tokenURI.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/') : ''\n            // const {data} = await axios.get(url)\n            // console.log(data)\n            let reward;\n            try {\n              // reward = await veshareContract.claimable(idx)\n              reward = await veshareContract.claimable(tokenIndex);\n            } catch (error) {\n              console.log(error);\n            }\n            return {\n              // ...data,ipfs://QmdfCJixsGErp33CTCom3QiZt24N4q8qFZ58zkVbxQzcyF\n              // image: tokenURI.indexOf('ipfs://') === 0 ? tokenURI.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/') : '',\n              // image: 'https://bafybeifin45dnnplmrtj66yxl4xkp6yxoxc52mh64pg5gck7kbuaeeri3u.ipfs.dweb.link/',\n              image: data.imageUrl,\n              index: idx,\n              id: tokenIndex === null || tokenIndex === void 0 ? void 0 : tokenIndex.toString(),\n              lockEnds: endTime,\n              lockStart: locked['startTime'].toNumber(),\n              lockAmount: BigAmount.format(useVeMultiToken.decimals, locked['share'].toString()).toExact(),\n              reward: reward ? BigAmount.format(useRewardToken.decimals, (_reward = reward) === null || _reward === void 0 ? void 0 : _reward.toString()).toExact() : 0,\n              type: 'VESHARE'\n            };\n          }));\n          console.log(nfts);\n          // setvestNFTs(nfts)\n          resolve(nfts);\n        } catch (error) {\n          console.log(error);\n          resolve([]);\n        }\n      } else {\n        resolve([]);\n      }\n    });\n  }, [veshareMultiContract, account, veshareContract, useRewardToken]);\n  // useEffect(() => {\n  //   getVestNFTs()\n  // }, [veshareMultiContract, account, useLockToken, veshareContract, useRewardToken])\n  // useInterval(getVestNFTs, 1000 * 10)\n  return {\n    getVeshareNFTs,\n    useVeshareRewardToken: useRewardToken\n  };\n}\nexport function useClaimVeshareRewardCallback(claimReward) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const rewardToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && VESHARE[chainId]) return VESHARE[chainId].address;\n    return undefined;\n  }, [chainId]);\n  const contract = useVeShareContract(rewardToken);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !claimReward) return NOT_APPLICABLE;\n    console.log(claimReward);\n    return {\n      wrapType: WrapType.WRAP,\n      execute: async () => {\n        const results = {};\n        try {\n          const txReceipt = await contract.claimReward(Number(claimReward.id));\n          addTransaction(txReceipt, {\n            summary: \"Claim Reward\"\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      },\n      inputError: undefined\n    };\n  }, [contract, chainId, addTransaction, t, claimReward]);\n}","map":{"version":3,"names":["useCallback","useMemo","useTranslation","useVeMULTIContract","useVeShareContract","useActiveWeb3React","useTxnsErrorTipOpen","useTransactionAdder","BigAmount","ChainId","spportChainArr","getNftImage","WrapType","NOT_APPLICABLE","wrapType","useChain","data","list","c","includes","VENFT_BASE_INFO","name","symbol","decimals","veSHARE","BNB_TEST","address","BNB","REWARD_TOKEN","VESHARE","useVeshare","account","chainId","useVeMultiToken","undefined","useVeshareToken","useRewardToken","veshareMultiContract","veshareContract","getVeshareNFTs","Promise","resolve","nftsLength","balanceOf","error","console","log","arr","Array","from","length","parseInt","v","i","nfts","all","map","idx","_reward","tokenIndex","tokenOfOwnerByIndex","locked","tokenInfo","endTime","toNumber","tokenURI","reward","claimable","image","imageUrl","index","id","toString","lockEnds","lockStart","lockAmount","format","toExact","type","useVeshareRewardToken","useClaimVeshareRewardCallback","claimReward","rewardToken","contract","onChangeViewErrorTip","t","addTransaction","WRAP","execute","results","txReceipt","Number","summary","hash","inputError"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/pages/Vest/veshare.ts"],"sourcesContent":["import {\n  useCallback,\n  // useEffect,\n  useMemo,\n  // useState\n} from \"react\";\n// import axios from \"axios\";\nimport { useTranslation } from 'react-i18next'\n\nimport { \n  useVeMULTIContract,\n  useVeShareContract\n} from '../../hooks/useContract'\nimport { useActiveWeb3React } from '../../hooks'\nimport {useTxnsErrorTipOpen} from '../../state/application/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport {BigAmount} from '../../utils/formatBignumber'\n\nimport { ChainId } from \"../../config/chainConfig/chainId\"\nimport {spportChainArr} from '../../config/chainConfig'\n\nimport {getNftImage} from '../../utils/getNFTimage'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n  NOCONNECT\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n\nfunction useChain (data:any) {\n  const list:any = {}\n  // console.log(spportChainArr)\n  for (const c in  data) {\n    if (!spportChainArr.includes(c)) continue\n    list[c] = {\n      ...data[c]\n    }\n  }\n  return list\n}\n\nexport const VENFT_BASE_INFO = {\n  name: 'veDELTA NFT',\n  symbol: 'veDELTA',\n  decimals: 18\n}\n\n\nexport const veSHARE:any = useChain({\n  [ChainId.BNB_TEST]: {\n    ...VENFT_BASE_INFO,\n    address: '0x4d2E8b5FA1bB62C2e9bBA2b2b23902bf06230345'\n  },\n  [ChainId.BNB]: {\n    ...VENFT_BASE_INFO,\n    address: '0x55F8D898760240E6Eff3c2cc23974Ae8C8fcEEfD'\n  },\n})\n\nexport const REWARD_TOKEN:any = useChain({\n  [ChainId.BNB_TEST]: {\n    name: 'USDCoin',\n    symbol: 'USDC',\n    decimals: 18,\n    address: '0x86e2c741Bf2BC6772Fed68a75eaa5bfab4a76d16'\n  },\n  [ChainId.BNB]: {\n    name: 'USDCoin',\n    symbol: 'USDC',\n    decimals: 18,\n    address: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d'\n  },\n})\n\nexport const VESHARE:any = useChain({\n  [ChainId.BNB_TEST]: {\n    address: '0x76c11a1de011de898802b1C81bce768d22B431b1'\n  },\n  [ChainId.BNB]: {\n    address: '0x13Ee726D95742D437ebb664Bf0d3fEff8Dbe2a26'\n  },\n})\n\nexport function useVeshare () {\n  const { account, chainId } = useActiveWeb3React()\n  // const useLockToken:any = useMemo(() => {\n  //   // console.log(MULTI_TOKEN)\n  //   // console.log(chainId)\n  //   if (chainId && MULTI_TOKEN[chainId]) {\n  //     return MULTI_TOKEN[chainId]\n  //   }\n  //   return undefined\n  // }, [chainId])\n  const useVeMultiToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && veSHARE[chainId]) return veSHARE[chainId]\n    return undefined\n  }, [chainId])\n  const useVeshareToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && VESHARE[chainId]) return VESHARE[chainId]\n    return undefined\n  }, [chainId])\n  const useRewardToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && REWARD_TOKEN[chainId]) return REWARD_TOKEN[chainId]\n    return undefined\n  }, [chainId])\n  \n  const veshareMultiContract = useVeMULTIContract(useVeMultiToken?.address)\n  // const rewardContract = useVeMULTIRewardContract(useVeMultiRewardToken?.address)\n  const veshareContract = useVeShareContract(useVeshareToken?.address)\n  const getVeshareNFTs = useCallback(async() => {\n    return new Promise(async(resolve) => {\n\n      if (\n        veshareMultiContract\n        && account\n        && veshareContract\n      ) {\n        let nftsLength:any = ''\n        try {\n          nftsLength = await veshareMultiContract.balanceOf(account)\n        } catch (error) {\n          console.log(error)\n        }\n        \n        const arr = Array.from({length: parseInt(nftsLength)}, (v, i) => i)\n        try {\n          const nfts = await Promise.all(\n            arr.map(async (idx) => {\n      \n              const tokenIndex = await veshareMultiContract.tokenOfOwnerByIndex(account, idx)\n              const locked = await veshareContract.tokenInfo(tokenIndex)\n              const endTime = locked['endTime'].toNumber()\n              const tokenURI = await veshareMultiContract.tokenURI(tokenIndex)\n              const data:any = await getNftImage(tokenURI)\n              // console.log(tokenURI)\n              // console.log(test)\n              // const url = tokenURI.indexOf('ipfs://') === 0 ? tokenURI.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/') : ''\n              // const {data} = await axios.get(url)\n              // console.log(data)\n              let reward:any\n              try {\n                // reward = await veshareContract.claimable(idx)\n                reward = await veshareContract.claimable(tokenIndex)\n              } catch (error) {\n                \n                console.log(error)\n              }\n              return {\n                // ...data,ipfs://QmdfCJixsGErp33CTCom3QiZt24N4q8qFZ58zkVbxQzcyF\n                // image: tokenURI.indexOf('ipfs://') === 0 ? tokenURI.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/') : '',\n                // image: 'https://bafybeifin45dnnplmrtj66yxl4xkp6yxoxc52mh64pg5gck7kbuaeeri3u.ipfs.dweb.link/',\n                image: data.imageUrl,\n                index: idx,\n                id: tokenIndex?.toString(),\n                lockEnds: endTime,\n                lockStart: locked['startTime'].toNumber(),\n                lockAmount: BigAmount.format(useVeMultiToken.decimals, locked['share'].toString()).toExact(),\n                reward: reward ? BigAmount.format(useRewardToken.decimals, reward?.toString()).toExact() : 0,\n                type: 'VESHARE'\n              }\n            })\n          )\n          console.log(nfts)\n          // setvestNFTs(nfts)\n          resolve(nfts)\n        } catch (error) {\n          console.log(error)\n          resolve([])\n        }\n      } else {\n        resolve([])\n      }\n    })\n  }, [veshareMultiContract, account, veshareContract, useRewardToken])\n  // useEffect(() => {\n  //   getVestNFTs()\n  // }, [veshareMultiContract, account, useLockToken, veshareContract, useRewardToken])\n  // useInterval(getVestNFTs, 1000 * 10)\n  return {\n    getVeshareNFTs,\n    useVeshareRewardToken: useRewardToken\n  }\n}\n\nexport function useClaimVeshareRewardCallback(\n  claimReward: any,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const rewardToken = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (chainId && VESHARE[chainId]) return VESHARE[chainId].address\n    return undefined\n  }, [chainId])\n  const contract = useVeShareContract(rewardToken)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !claimReward) return NOT_APPLICABLE\n    console.log(claimReward)\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async () => {\n          const results:any = {}\n          try {\n            const txReceipt = await contract.claimReward( Number(claimReward.id) )\n            addTransaction(txReceipt, {\n              summary: `Claim Reward`,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, addTransaction, t, claimReward])\n}"],"mappings":"AAAA,SACEA,WAAW;AACX;AACAC;AACA;AAAA,OACK,OAAO;AACd;AACA,SAASC,cAAc,QAAQ,eAAe;AAE9C,SACEC,kBAAkB,EAClBC,kBAAkB,QACb,yBAAyB;AAChC,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAAQC,mBAAmB,QAAO,+BAA+B;AACjE,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAAQC,SAAS,QAAO,6BAA6B;AAErD,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAAQC,cAAc,QAAO,0BAA0B;AAEvD,SAAQC,WAAW,QAAO,yBAAyB;AAEnD,WAAYC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAOpB,MAAMC,cAAc,GAAG;EAAEC,QAAQ,EAAEF,QAAQ,CAACC;AAAe,CAAC;AAE5D,SAASE,QAAQA,CAAEC,IAAQ,EAAE;EAC3B,MAAMC,IAAQ,GAAG,CAAC,CAAC;EACnB;EACA,KAAK,MAAMC,CAAC,IAAKF,IAAI,EAAE;IACrB,IAAI,CAACN,cAAc,CAACS,QAAQ,CAACD,CAAC,CAAC,EAAE;IACjCD,IAAI,CAACC,CAAC,CAAC,GAAG;MACR,GAAGF,IAAI,CAACE,CAAC;IACX,CAAC;EACH;EACA,OAAOD,IAAI;AACb;AAEA,OAAO,MAAMG,eAAe,GAAG;EAC7BC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAGD,OAAO,MAAMC,OAAW,GAAGT,QAAQ,CAAC;EAClC,CAACN,OAAO,CAACgB,QAAQ,GAAG;IAClB,GAAGL,eAAe;IAClBM,OAAO,EAAE;EACX,CAAC;EACD,CAACjB,OAAO,CAACkB,GAAG,GAAG;IACb,GAAGP,eAAe;IAClBM,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,YAAgB,GAAGb,QAAQ,CAAC;EACvC,CAACN,OAAO,CAACgB,QAAQ,GAAG;IAClBJ,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,EAAE;IACZG,OAAO,EAAE;EACX,CAAC;EACD,CAACjB,OAAO,CAACkB,GAAG,GAAG;IACbN,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,EAAE;IACZG,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,OAAW,GAAGd,QAAQ,CAAC;EAClC,CAACN,OAAO,CAACgB,QAAQ,GAAG;IAClBC,OAAO,EAAE;EACX,CAAC;EACD,CAACjB,OAAO,CAACkB,GAAG,GAAG;IACbD,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,OAAO,SAASI,UAAUA,CAAA,EAAI;EAC5B,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAG3B,kBAAkB,CAAC,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM4B,eAAe,GAAGhC,OAAO,CAAC,MAAM;IACpC;IACA;IACA,IAAI+B,OAAO,IAAIR,OAAO,CAACQ,OAAO,CAAC,EAAE,OAAOR,OAAO,CAACQ,OAAO,CAAC;IACxD,OAAOE,SAAS;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EACb,MAAMG,eAAe,GAAGlC,OAAO,CAAC,MAAM;IACpC;IACA;IACA,IAAI+B,OAAO,IAAIH,OAAO,CAACG,OAAO,CAAC,EAAE,OAAOH,OAAO,CAACG,OAAO,CAAC;IACxD,OAAOE,SAAS;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EACb,MAAMI,cAAc,GAAGnC,OAAO,CAAC,MAAM;IACnC;IACA;IACA,IAAI+B,OAAO,IAAIJ,YAAY,CAACI,OAAO,CAAC,EAAE,OAAOJ,YAAY,CAACI,OAAO,CAAC;IAClE,OAAOE,SAAS;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMK,oBAAoB,GAAGlC,kBAAkB,CAAC8B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEP,OAAO,CAAC;EACzE;EACA,MAAMY,eAAe,GAAGlC,kBAAkB,CAAC+B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAET,OAAO,CAAC;EACpE,MAAMa,cAAc,GAAGvC,WAAW,CAAC,YAAW;IAC5C,OAAO,IAAIwC,OAAO,CAAC,MAAMC,OAAO,IAAK;MAEnC,IACEJ,oBAAoB,IACjBN,OAAO,IACPO,eAAe,EAClB;QACA,IAAII,UAAc,GAAG,EAAE;QACvB,IAAI;UACFA,UAAU,GAAG,MAAML,oBAAoB,CAACM,SAAS,CAACZ,OAAO,CAAC;QAC5D,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;QAEA,MAAMG,GAAG,GAAGC,KAAK,CAACC,IAAI,CAAC;UAACC,MAAM,EAAEC,QAAQ,CAACT,UAAU;QAAC,CAAC,EAAE,CAACU,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;QACnE,IAAI;UACF,MAAMC,IAAI,GAAG,MAAMd,OAAO,CAACe,GAAG,CAC5BR,GAAG,CAACS,GAAG,CAAC,MAAOC,GAAG,IAAK;YAAA,IAAAC,OAAA;YAErB,MAAMC,UAAU,GAAG,MAAMtB,oBAAoB,CAACuB,mBAAmB,CAAC7B,OAAO,EAAE0B,GAAG,CAAC;YAC/E,MAAMI,MAAM,GAAG,MAAMvB,eAAe,CAACwB,SAAS,CAACH,UAAU,CAAC;YAC1D,MAAMI,OAAO,GAAGF,MAAM,CAAC,SAAS,CAAC,CAACG,QAAQ,CAAC,CAAC;YAC5C,MAAMC,QAAQ,GAAG,MAAM5B,oBAAoB,CAAC4B,QAAQ,CAACN,UAAU,CAAC;YAChE,MAAM3C,IAAQ,GAAG,MAAML,WAAW,CAACsD,QAAQ,CAAC;YAC5C;YACA;YACA;YACA;YACA;YACA,IAAIC,MAAU;YACd,IAAI;cACF;cACAA,MAAM,GAAG,MAAM5B,eAAe,CAAC6B,SAAS,CAACR,UAAU,CAAC;YACtD,CAAC,CAAC,OAAOf,KAAK,EAAE;cAEdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;YACpB;YACA,OAAO;cACL;cACA;cACA;cACAwB,KAAK,EAAEpD,IAAI,CAACqD,QAAQ;cACpBC,KAAK,EAAEb,GAAG;cACVc,EAAE,EAAEZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,QAAQ,CAAC,CAAC;cAC1BC,QAAQ,EAAEV,OAAO;cACjBW,SAAS,EAAEb,MAAM,CAAC,WAAW,CAAC,CAACG,QAAQ,CAAC,CAAC;cACzCW,UAAU,EAAEnE,SAAS,CAACoE,MAAM,CAAC3C,eAAe,CAACV,QAAQ,EAAEsC,MAAM,CAAC,OAAO,CAAC,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;cAC5FX,MAAM,EAAEA,MAAM,GAAG1D,SAAS,CAACoE,MAAM,CAACxC,cAAc,CAACb,QAAQ,GAAAmC,OAAA,GAAEQ,MAAM,cAAAR,OAAA,uBAANA,OAAA,CAAQc,QAAQ,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,GAAG,CAAC;cAC5FC,IAAI,EAAE;YACR,CAAC;UACH,CAAC,CACH,CAAC;UACDjC,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;UACjB;UACAb,OAAO,CAACa,IAAI,CAAC;QACf,CAAC,CAAC,OAAOV,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClBH,OAAO,CAAC,EAAE,CAAC;QACb;MACF,CAAC,MAAM;QACLA,OAAO,CAAC,EAAE,CAAC;MACb;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACJ,oBAAoB,EAAEN,OAAO,EAAEO,eAAe,EAAEF,cAAc,CAAC,CAAC;EACpE;EACA;EACA;EACA;EACA,OAAO;IACLG,cAAc;IACdwC,qBAAqB,EAAE3C;EACzB,CAAC;AACH;AAEA,OAAO,SAAS4C,6BAA6BA,CAC3CC,WAAgB,EACyE;EACzF,MAAM;IAAEjD;EAAQ,CAAC,GAAG3B,kBAAkB,CAAC,CAAC;EACxC,MAAM6E,WAAW,GAAGjF,OAAO,CAAC,MAAM;IAChC;IACA;IACA,IAAI+B,OAAO,IAAIH,OAAO,CAACG,OAAO,CAAC,EAAE,OAAOH,OAAO,CAACG,OAAO,CAAC,CAACN,OAAO;IAChE,OAAOQ,SAAS;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EACb,MAAMmD,QAAQ,GAAG/E,kBAAkB,CAAC8E,WAAW,CAAC;EAChD;EACA,MAAM;IAACE;EAAoB,CAAC,GAAG9E,mBAAmB,CAAC,CAAC;EACpD,MAAM;IAAE+E;EAAE,CAAC,GAAGnF,cAAc,CAAC,CAAC;EAC9B;EACA;EACA;EACA,MAAMoF,cAAc,GAAG/E,mBAAmB,CAAC,CAAC;EAC5C,OAAON,OAAO,CAAC,MAAM;IACnB;IACA;IACA,IAAI,CAACkF,QAAQ,IAAI,CAACnD,OAAO,IAAI,CAACiD,WAAW,EAAE,OAAOpE,cAAc;IAChEgC,OAAO,CAACC,GAAG,CAACmC,WAAW,CAAC;IACxB,OAAO;MACLnE,QAAQ,EAAEF,QAAQ,CAAC2E,IAAI;MACvBC,OAAO,EACL,MAAAA,CAAA,KAAY;QACV,MAAMC,OAAW,GAAG,CAAC,CAAC;QACtB,IAAI;UACF,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACF,WAAW,CAAEU,MAAM,CAACV,WAAW,CAACV,EAAE,CAAE,CAAC;UACtEe,cAAc,CAACI,SAAS,EAAE;YACxBE,OAAO;UACT,CAAC,CAAC;UACFH,OAAO,CAACI,IAAI,GAAGH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,IAAI;UAC9B;QACF,CAAC,CAAC,OAAOjD,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzCwC,oBAAoB,CAACxC,KAAK,EAAE,IAAI,CAAC;QACnC;QACA,OAAO6C,OAAO;MAChB,CAAC;MACHK,UAAU,EAAE5D;IACd,CAAC;EACH,CAAC,EAAE,CAACiD,QAAQ,EAAEnD,OAAO,EAAEsD,cAAc,EAAED,CAAC,EAAEJ,WAAW,CAAC,CAAC;AACzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}