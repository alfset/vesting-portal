{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nimport { useTokenContract } from '../hooks/useContract';\nimport { useSingleCallResult } from '../state/multicall/hooks';\nimport { useActiveWeb3React } from '../hooks';\nimport { getErcContract } from '../utils/tools/web3UtilsV2';\nimport { BigAmount } from '../utils/formatBignumber';\nexport function useTokenAllowance(token, owner, spender) {\n  const {\n    library\n  } = useActiveWeb3React();\n  const tokenAddress = token === null || token === void 0 ? void 0 : token.address;\n  const contract = useTokenContract(tokenAddress, false);\n  const [ercAllowance, setErcAllowance] = useState();\n  const ercContract = getErcContract(library === null || library === void 0 ? void 0 : library.provider);\n  const inputs = useMemo(() => [owner, spender], [owner, spender]);\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result;\n  useEffect(() => {\n    // console.log(token)\n    // console.log(ercContract, tokenAddress, owner, spender)\n    if (ercContract && tokenAddress && owner && spender) {\n      // setErcAllowance('')\n      ercContract.options.address = tokenAddress;\n      ercContract.methods.allowance(owner, spender).call((err, res) => {\n        // console.log(err)\n        // console.log(res)\n        if (!err) {\n          setErcAllowance(res);\n        } else {\n          setErcAllowance('');\n        }\n      });\n    } else {\n      setErcAllowance('');\n    }\n  }, [ercContract, tokenAddress, owner, spender]);\n  return useMemo(() => {\n    if (token) {\n      const a = allowance ? allowance : ercAllowance;\n      // console.log(allowance)\n      // console.log(ercAllowance)\n      if (a || a === 0) {\n        // return new TokenAmount(token, a.toString())\n        return BigAmount.format(token.decimals, a.toString());\n      }\n      return undefined;\n    } else {\n      return undefined;\n    }\n    // return (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined)\n  }, [token, allowance, ercAllowance]);\n}","map":{"version":3,"names":["useEffect","useMemo","useState","useTokenContract","useSingleCallResult","useActiveWeb3React","getErcContract","BigAmount","useTokenAllowance","token","owner","spender","library","tokenAddress","address","contract","ercAllowance","setErcAllowance","ercContract","provider","inputs","allowance","result","options","methods","call","err","res","a","format","decimals","toString","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/data/Allowances.ts"],"sourcesContent":["\nimport { useEffect, useMemo, useState } from 'react'\n\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useActiveWeb3React } from '../hooks'\n\nimport {getErcContract} from '../utils/tools/web3UtilsV2'\n\nimport {BigAmount} from  '../utils/formatBignumber'\n\nexport function useTokenAllowance(token?: any, owner?: string, spender?: string): any | undefined {\n  const { library } = useActiveWeb3React()\n  const tokenAddress = token?.address\n  const contract = useTokenContract(tokenAddress, false)\n\n  const [ercAllowance, setErcAllowance] = useState<any>()\n  const ercContract = getErcContract(library?.provider)\n  \n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n  \n\n  useEffect(() => {\n    // console.log(token)\n    // console.log(ercContract, tokenAddress, owner, spender)\n    if (\n      ercContract\n      && tokenAddress\n      && owner\n      && spender\n    ) {\n      // setErcAllowance('')\n      ercContract.options.address = tokenAddress\n      ercContract.methods.allowance(owner, spender).call((err:any, res:any) => {\n        // console.log(err)\n        // console.log(res)\n        if (!err) {\n          setErcAllowance(res)\n        } else {\n          setErcAllowance('')\n        }\n      })\n    } else {\n      setErcAllowance('')\n    }\n  }, [ercContract, tokenAddress, owner, spender])\n\n  return useMemo(() => {\n    if (token) {\n      const a = allowance ? allowance : ercAllowance\n      // console.log(allowance)\n      // console.log(ercAllowance)\n      if (a || a === 0) {\n        // return new TokenAmount(token, a.toString())\n        return BigAmount.format(token.decimals, a.toString())\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n    // return (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined)\n  }, [\n    token,\n    allowance,\n    ercAllowance\n  ])\n}\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAEpD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,QAAQ,UAAU;AAE7C,SAAQC,cAAc,QAAO,4BAA4B;AAEzD,SAAQC,SAAS,QAAQ,0BAA0B;AAEnD,OAAO,SAASC,iBAAiBA,CAACC,KAAW,EAAEC,KAAc,EAAEC,OAAgB,EAAmB;EAChG,MAAM;IAAEC;EAAQ,CAAC,GAAGP,kBAAkB,CAAC,CAAC;EACxC,MAAMQ,YAAY,GAAGJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO;EACnC,MAAMC,QAAQ,GAAGZ,gBAAgB,CAACU,YAAY,EAAE,KAAK,CAAC;EAEtD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAM,CAAC;EACvD,MAAMgB,WAAW,GAAGZ,cAAc,CAACM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,QAAQ,CAAC;EAErD,MAAMC,MAAM,GAAGnB,OAAO,CAAC,MAAM,CAACS,KAAK,EAAEC,OAAO,CAAC,EAAE,CAACD,KAAK,EAAEC,OAAO,CAAC,CAAC;EAChE,MAAMU,SAAS,GAAGjB,mBAAmB,CAACW,QAAQ,EAAE,WAAW,EAAEK,MAAM,CAAC,CAACE,MAAM;EAG3EtB,SAAS,CAAC,MAAM;IACd;IACA;IACA,IACEkB,WAAW,IACRL,YAAY,IACZH,KAAK,IACLC,OAAO,EACV;MACA;MACAO,WAAW,CAACK,OAAO,CAACT,OAAO,GAAGD,YAAY;MAC1CK,WAAW,CAACM,OAAO,CAACH,SAAS,CAACX,KAAK,EAAEC,OAAO,CAAC,CAACc,IAAI,CAAC,CAACC,GAAO,EAAEC,GAAO,KAAK;QACvE;QACA;QACA,IAAI,CAACD,GAAG,EAAE;UACRT,eAAe,CAACU,GAAG,CAAC;QACtB,CAAC,MAAM;UACLV,eAAe,CAAC,EAAE,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLA,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACC,WAAW,EAAEL,YAAY,EAAEH,KAAK,EAAEC,OAAO,CAAC,CAAC;EAE/C,OAAOV,OAAO,CAAC,MAAM;IACnB,IAAIQ,KAAK,EAAE;MACT,MAAMmB,CAAC,GAAGP,SAAS,GAAGA,SAAS,GAAGL,YAAY;MAC9C;MACA;MACA,IAAIY,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAE;QAChB;QACA,OAAOrB,SAAS,CAACsB,MAAM,CAACpB,KAAK,CAACqB,QAAQ,EAAEF,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;MACvD;MACA,OAAOC,SAAS;IAClB,CAAC,MAAM;MACL,OAAOA,SAAS;IAClB;IACA;EACF,CAAC,EAAE,CACDvB,KAAK,EACLY,SAAS,EACTL,YAAY,CACb,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}