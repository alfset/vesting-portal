{"ast":null,"code":"import { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { tryParseAmount } from '../../state/swap/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useCurrencyBalance } from '../../state/wallet/hooks';\nimport { useTxnsErrorTipOpen } from '../../state/application/hooks';\n// import { useAddPopup } from '../state/application/hooks'\nimport { useActiveWeb3React } from '../../hooks';\nimport { useVeMULTIContract, useVeMULTIRewardContract } from '../../hooks/useContract';\nimport { MIN_DAY } from './data';\nexport let WrapType = /*#__PURE__*/function (WrapType) {\n  WrapType[WrapType[\"NOT_APPLICABLE\"] = 0] = \"NOT_APPLICABLE\";\n  WrapType[WrapType[\"WRAP\"] = 1] = \"WRAP\";\n  WrapType[WrapType[\"UNWRAP\"] = 2] = \"UNWRAP\";\n  WrapType[WrapType[\"NOCONNECT\"] = 3] = \"NOCONNECT\";\n  return WrapType;\n}({});\nconst NOT_APPLICABLE = {\n  wrapType: WrapType.NOT_APPLICABLE\n};\nexport function useCreateLockCallback(veMULTI, inputCurrency, typedValue, lockDuration) {\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const contract = useVeMULTIContract(veMULTI);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, inputCurrency);\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue]);\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !lockDuration) return NOT_APPLICABLE;\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount);\n    return {\n      wrapType: WrapType.WRAP,\n      execute: sufficientBalance && inputAmount ? async () => {\n        const results = {};\n        try {\n          // console.log(contract)\n          const time = Number(lockDuration) - parseInt(Date.now() / 1000 + '');\n          console.log(lockDuration);\n          const txReceipt = await contract.create_lock(\"0x\".concat(inputAmount.raw.toString(16)), time + '');\n          addTransaction(txReceipt, {\n            summary: \"Create lock \".concat(typedValue, \" \").concat(inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol),\n            value: inputAmount.toSignificant(6),\n            symbol: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol,\n            token: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.address\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      } : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {\n        symbol: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol\n      })\n    };\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, lockDuration]);\n}\nexport function useInCreaseAmountCallback(veMULTI, inputCurrency, typedValue, tokenid) {\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const contract = useVeMULTIContract(veMULTI);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, inputCurrency);\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue]);\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid) return NOT_APPLICABLE;\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount);\n    return {\n      wrapType: WrapType.WRAP,\n      execute: sufficientBalance && inputAmount ? async () => {\n        const results = {};\n        try {\n          const txReceipt = await contract.increase_amount(tokenid + '', \"0x\".concat(inputAmount.raw.toString(16)));\n          addTransaction(txReceipt, {\n            summary: \"Increase amount \".concat(typedValue, \" \").concat(inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol),\n            value: inputAmount.toSignificant(6),\n            symbol: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol,\n            token: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.address\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      } : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {\n        symbol: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol\n      })\n    };\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, tokenid]);\n}\nexport function useInCreaseUnlockTimeCallback(veMULTI, inputCurrency, lockDuration, tokenid, lockEnds) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const contract = useVeMULTIContract(veMULTI);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  // console.log(balance?.raw.toString(16))\n  // console.log(lockDuration)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid || !lockDuration || !lockEnds) return NOT_APPLICABLE;\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute: async () => {\n        const results = {};\n        try {\n          console.log(lockDuration);\n          const now = parseInt(Date.now() / 1000 + '');\n          const time = Number(lockDuration) - now;\n          const oldtime = lockEnds - now;\n          if (time - oldtime < 60 * 60 * 24 * 7) {\n            onChangeViewErrorTip('Selection time must be greater than:' + moment.unix(lockEnds).add(7, 'days').format('YYYY-MM-DD'), true);\n            return results;\n          }\n          // console.log(lockDuration)\n          // console.log(now)\n          // console.log(lockDuration-now)\n          // const now = moment()\n          // const expiry = moment(selectedDate).add(1, 'days')\n          // const secondsToExpire = expiry.diff(now, 'seconds')\n          const txReceipt = await contract.increase_unlock_time(tokenid + '', time + '');\n          addTransaction(txReceipt, {\n            summary: \"Add lock time\",\n            symbol: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol,\n            token: inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.address\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      },\n      inputError: undefined\n    };\n  }, [contract, chainId, inputCurrency, addTransaction, t, tokenid, lockDuration, lockEnds]);\n}\nexport function useWithdrawCallback(veMULTI) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const contract = useVeMULTIContract(veMULTI);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  // console.log(veMULTI)\n  // console.log(contract)\n  // console.log(tokenid)\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    if (!contract || !chainId) return NOT_APPLICABLE;\n    return {\n      wrapType: WrapType.WRAP,\n      execute: async tokenid => {\n        const results = {};\n        try {\n          const txReceipt = await contract.withdraw(tokenid + '');\n          addTransaction(txReceipt, {\n            summary: \"Withdraw\"\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          // console.log(error)\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      },\n      inputError: undefined\n    };\n  }, [contract, chainId, addTransaction, t]);\n}\nexport function useClaimRewardCallback(rewardToken, tokenid, epoch) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const contract = useVeMULTIRewardContract(rewardToken);\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const {\n    t\n  } = useTranslation();\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder();\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !tokenid || !epoch) return NOT_APPLICABLE;\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute: async () => {\n        const results = {};\n        try {\n          const txReceipt = await contract.claimReward(tokenid + '', epoch.map(_ref => {\n            let {\n              startEpoch,\n              endEpoch\n            } = _ref;\n            return [startEpoch, endEpoch];\n          }));\n          addTransaction(txReceipt, {\n            summary: \"Claim Reward\"\n          });\n          results.hash = txReceipt === null || txReceipt === void 0 ? void 0 : txReceipt.hash;\n          // onChangeViewDtil(txReceipt?.hash, true)\n        } catch (error) {\n          console.error('Could not swapout', error);\n          onChangeViewErrorTip(error, true);\n        }\n        return results;\n      },\n      inputError: undefined\n    };\n  }, [contract, chainId, epoch, addTransaction, t, tokenid]);\n}\nexport function useLockDurationTip(selectTime, min, max) {\n  return useMemo(() => {\n    // const now = moment()\n    if (selectTime) {\n      const st = moment(selectTime).unix();\n      if (min) {\n        const mt = moment.unix(min).add(MIN_DAY, 'days').unix();\n        if (st < mt) {\n          return 'Locking time is too short';\n        }\n      } else {\n        const now = moment().add(MIN_DAY, 'days').unix();\n        if (st < now) {\n          return 'Locking time is too short';\n        }\n      }\n      if (max) {\n        const mt = moment.unix(max).add(1461, 'days').unix();\n        if (st > mt) {\n          return 'The maximum locking time is 4 years';\n        }\n        return undefined;\n      }\n      //  else {\n      //   const now = moment().add(1461, 'days').unix()\n      //   if (st > now) {\n      //     return 'The maximum locking time is 4 years'\n      //   }\n      // }\n    }\n\n    return undefined;\n  }, [min, selectTime, max]);\n}","map":{"version":3,"names":["useMemo","useTranslation","moment","tryParseAmount","useTransactionAdder","useCurrencyBalance","useTxnsErrorTipOpen","useActiveWeb3React","useVeMULTIContract","useVeMULTIRewardContract","MIN_DAY","WrapType","NOT_APPLICABLE","wrapType","useCreateLockCallback","veMULTI","inputCurrency","typedValue","lockDuration","chainId","account","contract","onChangeViewErrorTip","t","balance","undefined","inputAmount","addTransaction","sufficientBalance","lessThan","WRAP","execute","results","time","Number","parseInt","Date","now","console","log","txReceipt","create_lock","concat","raw","toString","summary","symbol","value","toSignificant","token","address","hash","error","inputError","useInCreaseAmountCallback","tokenid","increase_amount","useInCreaseUnlockTimeCallback","lockEnds","oldtime","unix","add","format","increase_unlock_time","useWithdrawCallback","withdraw","useClaimRewardCallback","rewardToken","epoch","claimReward","map","_ref","startEpoch","endEpoch","useLockDurationTip","selectTime","min","max","st","mt"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/pages/Vest/hooks.ts"],"sourcesContent":["\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport moment from 'moment';\nimport { tryParseAmount } from '../../state/swap/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport {useTxnsErrorTipOpen} from '../../state/application/hooks'\n// import { useAddPopup } from '../state/application/hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useVeMULTIContract, useVeMULTIRewardContract } from '../../hooks/useContract'\n\nimport {\n  MIN_DAY\n} from './data'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n  NOCONNECT\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n\n\n\nexport function useCreateLockCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  typedValue: string | undefined,\n  lockDuration: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !lockDuration) return NOT_APPLICABLE\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        sufficientBalance && inputAmount\n          ? async () => {\n              const results:any = {}\n              try {\n                // console.log(contract)\n                const time = Number(lockDuration) - parseInt((Date.now() / 1000) + '')\n                console.log(lockDuration)\n                const txReceipt = await contract.create_lock(\n                  `0x${inputAmount.raw.toString(16)}`,\n                  time + '',\n                )\n                addTransaction(txReceipt, {\n                  summary: `Create lock ${typedValue} ${inputCurrency?.symbol}`,\n                  value: inputAmount.toSignificant(6),\n                  symbol: inputCurrency?.symbol,\n                  token: inputCurrency?.address,\n                })\n                results.hash = txReceipt?.hash\n                // onChangeViewDtil(txReceipt?.hash, true)\n              } catch (error) {\n                console.error('Could not swapout', error)\n                onChangeViewErrorTip(error, true)\n              }\n              return results\n            }\n          : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n    }\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, lockDuration])\n}\n\n\n\nexport function useInCreaseAmountCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  typedValue: string | undefined,\n  tokenid: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid) return NOT_APPLICABLE\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        sufficientBalance && inputAmount\n          ? async () => {\n              const results:any = {}\n              try {\n                const txReceipt = await contract.increase_amount(\n                  tokenid + '',\n                  `0x${inputAmount.raw.toString(16)}`,\n                )\n                addTransaction(txReceipt, {\n                  summary: `Increase amount ${typedValue} ${inputCurrency?.symbol}`,\n                  value: inputAmount.toSignificant(6),\n                  symbol: inputCurrency?.symbol,\n                  token: inputCurrency?.address,\n                })\n                results.hash = txReceipt?.hash\n                // onChangeViewDtil(txReceipt?.hash, true)\n              } catch (error) {\n                console.error('Could not swapout', error)\n                onChangeViewErrorTip(error, true)\n              }\n              return results\n            }\n          : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n    }\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, tokenid])\n}\n\n\nexport function useInCreaseUnlockTimeCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  lockDuration: number | undefined,\n  tokenid: number | undefined,\n  lockEnds: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(lockDuration)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid || !lockDuration || !lockEnds) return NOT_APPLICABLE\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async () => {\n          const results:any = {}\n          try {\n            console.log(lockDuration)\n            const now = parseInt((Date.now() / 1000) + '')\n            const time = Number(lockDuration) - now\n            const oldtime = lockEnds - now\n            if ((time - oldtime) < (60*60*24*7)) {\n              onChangeViewErrorTip('Selection time must be greater than:' + moment.unix(lockEnds).add(7, 'days').format('YYYY-MM-DD'), true)\n              return results\n            }\n            // console.log(lockDuration)\n            // console.log(now)\n            // console.log(lockDuration-now)\n            // const now = moment()\n            // const expiry = moment(selectedDate).add(1, 'days')\n            // const secondsToExpire = expiry.diff(now, 'seconds')\n            const txReceipt = await contract.increase_unlock_time(\n              tokenid + '',\n              time + '',\n            )\n            addTransaction(txReceipt, {\n              summary: `Add lock time`,\n              symbol: inputCurrency?.symbol,\n              token: inputCurrency?.address,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, inputCurrency, addTransaction, t, tokenid, lockDuration, lockEnds])\n}\n\nexport function useWithdrawCallback(\n  veMULTI: string | undefined,\n): { wrapType: WrapType; execute?: undefined | ((tokenid: number | undefined) => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  // console.log(veMULTI)\n  // console.log(contract)\n  // console.log(tokenid)\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    if (!contract || !chainId) return NOT_APPLICABLE\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async (tokenid: number | undefined) => {\n          const results:any = {}\n          try {\n            const txReceipt = await contract.withdraw(\n              tokenid + '',\n            )\n            addTransaction(txReceipt, {\n              summary: `Withdraw`,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            // console.log(error)\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, addTransaction, t])\n}\n\n\nexport function useClaimRewardCallback(\n  rewardToken: string | undefined,\n  tokenid: number | undefined,\n  epoch: any,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIRewardContract(rewardToken)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !tokenid || !epoch) return NOT_APPLICABLE\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async () => {\n          const results:any = {}\n          try {\n            const txReceipt = await contract.claimReward(\n              tokenid + '',\n              epoch.map(({startEpoch, endEpoch}: {startEpoch:any, endEpoch:any}) => [startEpoch, endEpoch])\n            )\n            addTransaction(txReceipt, {\n              summary: `Claim Reward`,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, epoch, addTransaction, t, tokenid])\n}\n\nexport function useLockDurationTip (\n  selectTime:any,\n  min?:any,\n  max?:any\n) {\n  return useMemo(() => {\n    // const now = moment()\n    if ( selectTime ) {\n      const st = moment(selectTime).unix()\n      if (min) {\n        const mt = moment.unix(min).add(MIN_DAY, 'days').unix()\n        if (st < mt) {\n          return 'Locking time is too short'\n        }\n      } else {\n        const now = moment().add(MIN_DAY, 'days').unix()\n        if (st < now) {\n          return 'Locking time is too short'\n        }\n      }\n      if (max) {\n        const mt = moment.unix(max).add(1461, 'days').unix()\n        if (st > mt) {\n          return 'The maximum locking time is 4 years'\n        }\n        return undefined\n      }\n      //  else {\n      //   const now = moment().add(1461, 'days').unix()\n      //   if (st > now) {\n      //     return 'The maximum locking time is 4 years'\n      //   }\n      // }\n    }\n    return undefined\n  }, [min, selectTime, max])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}