{"ast":null,"code":"import{useMemo}from'react';import{useTranslation}from'react-i18next';import moment from'moment';import{tryParseAmount}from'../../state/swap/hooks';import{useTransactionAdder}from'../../state/transactions/hooks';import{useCurrencyBalance}from'../../state/wallet/hooks';import{useTxnsErrorTipOpen}from'../../state/application/hooks';// import { useAddPopup } from '../state/application/hooks'\nimport{useActiveWeb3React}from'../../hooks';import{useVeMULTIContract,useVeMULTIRewardContract}from'../../hooks/useContract';import{MIN_DAY}from'./data';export let WrapType=/*#__PURE__*/function(WrapType){WrapType[WrapType[\"NOT_APPLICABLE\"]=0]=\"NOT_APPLICABLE\";WrapType[WrapType[\"WRAP\"]=1]=\"WRAP\";WrapType[WrapType[\"UNWRAP\"]=2]=\"UNWRAP\";WrapType[WrapType[\"NOCONNECT\"]=3]=\"NOCONNECT\";return WrapType;}({});const NOT_APPLICABLE={wrapType:WrapType.NOT_APPLICABLE};export function useCreateLockCallback(veMULTI,inputCurrency,typedValue,lockDuration){const{chainId,account}=useActiveWeb3React();const contract=useVeMULTIContract(veMULTI);// const {onChangeViewDtil} = useTxnsDtilOpen()\nconst{onChangeViewErrorTip}=useTxnsErrorTipOpen();const{t}=useTranslation();const balance=useCurrencyBalance(account!==null&&account!==void 0?account:undefined,inputCurrency);// console.log(balance?.raw.toString(16))\n// console.log(inputCurrency)\n// 我们总是可以解析输入货币的金额，因为包装是1:1\nconst inputAmount=useMemo(()=>tryParseAmount(typedValue,inputCurrency),[inputCurrency,typedValue]);const addTransaction=useTransactionAdder();return useMemo(()=>{// console.log(veMULTI)\n// console.log(contract)\nif(!contract||!chainId||!inputCurrency||!lockDuration)return NOT_APPLICABLE;// console.log(typedValue)\nconst sufficientBalance=inputAmount&&balance&&!balance.lessThan(inputAmount);return{wrapType:WrapType.WRAP,execute:sufficientBalance&&inputAmount?async()=>{const results={};try{// console.log(contract)\nconst time=Number(lockDuration)-parseInt(Date.now()/1000+'');console.log(lockDuration);const txReceipt=await contract.create_lock(\"0x\".concat(inputAmount.raw.toString(16)),time+'');addTransaction(txReceipt,{summary:\"Create lock \".concat(typedValue,\" \").concat(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol),value:inputAmount.toSignificant(6),symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,token:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address});results.hash=txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash;// onChangeViewDtil(txReceipt?.hash, true)\n}catch(error){console.error('Could not swapout',error);onChangeViewErrorTip(error,true);}return results;}:undefined,inputError:sufficientBalance?undefined:t('Insufficient',{symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol})};},[contract,chainId,inputCurrency,inputAmount,balance,addTransaction,t,lockDuration]);}export function useInCreaseAmountCallback(veMULTI,inputCurrency,typedValue,tokenid){const{chainId,account}=useActiveWeb3React();const contract=useVeMULTIContract(veMULTI);// const {onChangeViewDtil} = useTxnsDtilOpen()\nconst{onChangeViewErrorTip}=useTxnsErrorTipOpen();const{t}=useTranslation();const balance=useCurrencyBalance(account!==null&&account!==void 0?account:undefined,inputCurrency);// console.log(balance?.raw.toString(16))\n// console.log(inputCurrency)\n// 我们总是可以解析输入货币的金额，因为包装是1:1\nconst inputAmount=useMemo(()=>tryParseAmount(typedValue,inputCurrency),[inputCurrency,typedValue]);const addTransaction=useTransactionAdder();return useMemo(()=>{// console.log(veMULTI)\n// console.log(contract)\nif(!contract||!chainId||!inputCurrency||!tokenid)return NOT_APPLICABLE;// console.log(typedValue)\nconst sufficientBalance=inputAmount&&balance&&!balance.lessThan(inputAmount);return{wrapType:WrapType.WRAP,execute:sufficientBalance&&inputAmount?async()=>{const results={};try{const txReceipt=await contract.increase_amount(tokenid+'',\"0x\".concat(inputAmount.raw.toString(16)));addTransaction(txReceipt,{summary:\"Increase amount \".concat(typedValue,\" \").concat(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol),value:inputAmount.toSignificant(6),symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,token:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address});results.hash=txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash;// onChangeViewDtil(txReceipt?.hash, true)\n}catch(error){console.error('Could not swapout',error);onChangeViewErrorTip(error,true);}return results;}:undefined,inputError:sufficientBalance?undefined:t('Insufficient',{symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol})};},[contract,chainId,inputCurrency,inputAmount,balance,addTransaction,t,tokenid]);}export function useInCreaseUnlockTimeCallback(veMULTI,inputCurrency,lockDuration,tokenid,lockEnds){const{chainId}=useActiveWeb3React();const contract=useVeMULTIContract(veMULTI);// const {onChangeViewDtil} = useTxnsDtilOpen()\nconst{onChangeViewErrorTip}=useTxnsErrorTipOpen();const{t}=useTranslation();// console.log(balance?.raw.toString(16))\n// console.log(lockDuration)\n// 我们总是可以解析输入货币的金额，因为包装是1:1\nconst addTransaction=useTransactionAdder();return useMemo(()=>{// console.log(veMULTI)\n// console.log(contract)\nif(!contract||!chainId||!inputCurrency||!tokenid||!lockDuration||!lockEnds)return NOT_APPLICABLE;// console.log(typedValue)\nreturn{wrapType:WrapType.WRAP,execute:async()=>{const results={};try{console.log(lockDuration);const now=parseInt(Date.now()/1000+'');const time=Number(lockDuration)-now;const oldtime=lockEnds-now;if(time-oldtime<60*60*24*7){onChangeViewErrorTip('Selection time must be greater than:'+moment.unix(lockEnds).add(7,'days').format('YYYY-MM-DD'),true);return results;}// console.log(lockDuration)\n// console.log(now)\n// console.log(lockDuration-now)\n// const now = moment()\n// const expiry = moment(selectedDate).add(1, 'days')\n// const secondsToExpire = expiry.diff(now, 'seconds')\nconst txReceipt=await contract.increase_unlock_time(tokenid+'',time+'');addTransaction(txReceipt,{summary:\"Add lock time\",symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,token:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address});results.hash=txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash;// onChangeViewDtil(txReceipt?.hash, true)\n}catch(error){console.error('Could not swapout',error);onChangeViewErrorTip(error,true);}return results;},inputError:undefined};},[contract,chainId,inputCurrency,addTransaction,t,tokenid,lockDuration,lockEnds]);}export function useWithdrawCallback(veMULTI){const{chainId}=useActiveWeb3React();const contract=useVeMULTIContract(veMULTI);// const {onChangeViewDtil} = useTxnsDtilOpen()\nconst{onChangeViewErrorTip}=useTxnsErrorTipOpen();const{t}=useTranslation();// console.log(balance?.raw.toString(16))\n// console.log(inputCurrency)\n// 我们总是可以解析输入货币的金额，因为包装是1:1\n// console.log(veMULTI)\n// console.log(contract)\n// console.log(tokenid)\nconst addTransaction=useTransactionAdder();return useMemo(()=>{if(!contract||!chainId)return NOT_APPLICABLE;return{wrapType:WrapType.WRAP,execute:async tokenid=>{const results={};try{const txReceipt=await contract.withdraw(tokenid+'');addTransaction(txReceipt,{summary:\"Withdraw\"});results.hash=txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash;// onChangeViewDtil(txReceipt?.hash, true)\n}catch(error){// console.log(error)\nconsole.error('Could not swapout',error);onChangeViewErrorTip(error,true);}return results;},inputError:undefined};},[contract,chainId,addTransaction,t]);}export function useClaimRewardCallback(rewardToken,tokenid,epoch){const{chainId}=useActiveWeb3React();const contract=useVeMULTIRewardContract(rewardToken);// const {onChangeViewDtil} = useTxnsDtilOpen()\nconst{onChangeViewErrorTip}=useTxnsErrorTipOpen();const{t}=useTranslation();// console.log(balance?.raw.toString(16))\n// console.log(inputCurrency)\n// 我们总是可以解析输入货币的金额，因为包装是1:1\nconst addTransaction=useTransactionAdder();return useMemo(()=>{// console.log(veMULTI)\n// console.log(contract)\nif(!contract||!chainId||!tokenid||!epoch)return NOT_APPLICABLE;// console.log(typedValue)\nreturn{wrapType:WrapType.WRAP,execute:async()=>{const results={};try{const txReceipt=await contract.claimReward(tokenid+'',epoch.map(_ref=>{let{startEpoch,endEpoch}=_ref;return[startEpoch,endEpoch];}));addTransaction(txReceipt,{summary:\"Claim Reward\"});results.hash=txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash;// onChangeViewDtil(txReceipt?.hash, true)\n}catch(error){console.error('Could not swapout',error);onChangeViewErrorTip(error,true);}return results;},inputError:undefined};},[contract,chainId,epoch,addTransaction,t,tokenid]);}export function useLockDurationTip(selectTime,min,max){return useMemo(()=>{// const now = moment()\nif(selectTime){const st=moment(selectTime).unix();if(min){const mt=moment.unix(min).add(MIN_DAY,'days').unix();if(st<mt){return'Locking time is too short';}}else{const now=moment().add(MIN_DAY,'days').unix();if(st<now){return'Locking time is too short';}}if(max){const mt=moment.unix(max).add(1461,'days').unix();if(st>mt){return'The maximum locking time is 4 years';}return undefined;}//  else {\n//   const now = moment().add(1461, 'days').unix()\n//   if (st > now) {\n//     return 'The maximum locking time is 4 years'\n//   }\n// }\n}return undefined;},[min,selectTime,max]);}","map":{"version":3,"names":["useMemo","useTranslation","moment","tryParseAmount","useTransactionAdder","useCurrencyBalance","useTxnsErrorTipOpen","useActiveWeb3React","useVeMULTIContract","useVeMULTIRewardContract","MIN_DAY","WrapType","NOT_APPLICABLE","wrapType","useCreateLockCallback","veMULTI","inputCurrency","typedValue","lockDuration","chainId","account","contract","onChangeViewErrorTip","t","balance","undefined","inputAmount","addTransaction","sufficientBalance","lessThan","WRAP","execute","results","time","Number","parseInt","Date","now","console","log","txReceipt","create_lock","concat","raw","toString","summary","symbol","value","toSignificant","token","address","hash","error","inputError","useInCreaseAmountCallback","tokenid","increase_amount","useInCreaseUnlockTimeCallback","lockEnds","oldtime","unix","add","format","increase_unlock_time","useWithdrawCallback","withdraw","useClaimRewardCallback","rewardToken","epoch","claimReward","map","_ref","startEpoch","endEpoch","useLockDurationTip","selectTime","min","max","st","mt"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/pages/Vest/hooks.ts"],"sourcesContent":["\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport moment from 'moment';\nimport { tryParseAmount } from '../../state/swap/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport {useTxnsErrorTipOpen} from '../../state/application/hooks'\n// import { useAddPopup } from '../state/application/hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useVeMULTIContract, useVeMULTIRewardContract } from '../../hooks/useContract'\n\nimport {\n  MIN_DAY\n} from './data'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n  NOCONNECT\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n\n\n\nexport function useCreateLockCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  typedValue: string | undefined,\n  lockDuration: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !lockDuration) return NOT_APPLICABLE\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        sufficientBalance && inputAmount\n          ? async () => {\n              const results:any = {}\n              try {\n                // console.log(contract)\n                const time = Number(lockDuration) - parseInt((Date.now() / 1000) + '')\n                console.log(lockDuration)\n                const txReceipt = await contract.create_lock(\n                  `0x${inputAmount.raw.toString(16)}`,\n                  time + '',\n                )\n                addTransaction(txReceipt, {\n                  summary: `Create lock ${typedValue} ${inputCurrency?.symbol}`,\n                  value: inputAmount.toSignificant(6),\n                  symbol: inputCurrency?.symbol,\n                  token: inputCurrency?.address,\n                })\n                results.hash = txReceipt?.hash\n                // onChangeViewDtil(txReceipt?.hash, true)\n              } catch (error) {\n                console.error('Could not swapout', error)\n                onChangeViewErrorTip(error, true)\n              }\n              return results\n            }\n          : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n    }\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, lockDuration])\n}\n\n\n\nexport function useInCreaseAmountCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  typedValue: string | undefined,\n  tokenid: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid) return NOT_APPLICABLE\n    // console.log(typedValue)\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        sufficientBalance && inputAmount\n          ? async () => {\n              const results:any = {}\n              try {\n                const txReceipt = await contract.increase_amount(\n                  tokenid + '',\n                  `0x${inputAmount.raw.toString(16)}`,\n                )\n                addTransaction(txReceipt, {\n                  summary: `Increase amount ${typedValue} ${inputCurrency?.symbol}`,\n                  value: inputAmount.toSignificant(6),\n                  symbol: inputCurrency?.symbol,\n                  token: inputCurrency?.address,\n                })\n                results.hash = txReceipt?.hash\n                // onChangeViewDtil(txReceipt?.hash, true)\n              } catch (error) {\n                console.error('Could not swapout', error)\n                onChangeViewErrorTip(error, true)\n              }\n              return results\n            }\n          : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n    }\n  }, [contract, chainId, inputCurrency, inputAmount, balance, addTransaction, t, tokenid])\n}\n\n\nexport function useInCreaseUnlockTimeCallback(\n  veMULTI: string | undefined,\n  inputCurrency: any | undefined,\n  lockDuration: number | undefined,\n  tokenid: number | undefined,\n  lockEnds: number | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(lockDuration)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !inputCurrency || !tokenid || !lockDuration || !lockEnds) return NOT_APPLICABLE\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async () => {\n          const results:any = {}\n          try {\n            console.log(lockDuration)\n            const now = parseInt((Date.now() / 1000) + '')\n            const time = Number(lockDuration) - now\n            const oldtime = lockEnds - now\n            if ((time - oldtime) < (60*60*24*7)) {\n              onChangeViewErrorTip('Selection time must be greater than:' + moment.unix(lockEnds).add(7, 'days').format('YYYY-MM-DD'), true)\n              return results\n            }\n            // console.log(lockDuration)\n            // console.log(now)\n            // console.log(lockDuration-now)\n            // const now = moment()\n            // const expiry = moment(selectedDate).add(1, 'days')\n            // const secondsToExpire = expiry.diff(now, 'seconds')\n            const txReceipt = await contract.increase_unlock_time(\n              tokenid + '',\n              time + '',\n            )\n            addTransaction(txReceipt, {\n              summary: `Add lock time`,\n              symbol: inputCurrency?.symbol,\n              token: inputCurrency?.address,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, inputCurrency, addTransaction, t, tokenid, lockDuration, lockEnds])\n}\n\nexport function useWithdrawCallback(\n  veMULTI: string | undefined,\n): { wrapType: WrapType; execute?: undefined | ((tokenid: number | undefined) => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIContract(veMULTI)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  // console.log(veMULTI)\n  // console.log(contract)\n  // console.log(tokenid)\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    if (!contract || !chainId) return NOT_APPLICABLE\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async (tokenid: number | undefined) => {\n          const results:any = {}\n          try {\n            const txReceipt = await contract.withdraw(\n              tokenid + '',\n            )\n            addTransaction(txReceipt, {\n              summary: `Withdraw`,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            // console.log(error)\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, addTransaction, t])\n}\n\n\nexport function useClaimRewardCallback(\n  rewardToken: string | undefined,\n  tokenid: number | undefined,\n  epoch: any,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<any>); inputError?: string } {\n  const { chainId } = useActiveWeb3React()\n  const contract = useVeMULTIRewardContract(rewardToken)\n  // const {onChangeViewDtil} = useTxnsDtilOpen()\n  const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const { t } = useTranslation()\n  // console.log(balance?.raw.toString(16))\n  // console.log(inputCurrency)\n  // 我们总是可以解析输入货币的金额，因为包装是1:1\n  const addTransaction = useTransactionAdder()\n  return useMemo(() => {\n    // console.log(veMULTI)\n    // console.log(contract)\n    if (!contract || !chainId || !tokenid || !epoch) return NOT_APPLICABLE\n    // console.log(typedValue)\n    return {\n      wrapType: WrapType.WRAP,\n      execute:\n        async () => {\n          const results:any = {}\n          try {\n            const txReceipt = await contract.claimReward(\n              tokenid + '',\n              epoch.map(({startEpoch, endEpoch}: {startEpoch:any, endEpoch:any}) => [startEpoch, endEpoch])\n            )\n            addTransaction(txReceipt, {\n              summary: `Claim Reward`,\n            })\n            results.hash = txReceipt?.hash\n            // onChangeViewDtil(txReceipt?.hash, true)\n          } catch (error) {\n            console.error('Could not swapout', error)\n            onChangeViewErrorTip(error, true)\n          }\n          return results\n        },\n      inputError: undefined\n    }\n  }, [contract, chainId, epoch, addTransaction, t, tokenid])\n}\n\nexport function useLockDurationTip (\n  selectTime:any,\n  min?:any,\n  max?:any\n) {\n  return useMemo(() => {\n    // const now = moment()\n    if ( selectTime ) {\n      const st = moment(selectTime).unix()\n      if (min) {\n        const mt = moment.unix(min).add(MIN_DAY, 'days').unix()\n        if (st < mt) {\n          return 'Locking time is too short'\n        }\n      } else {\n        const now = moment().add(MIN_DAY, 'days').unix()\n        if (st < now) {\n          return 'Locking time is too short'\n        }\n      }\n      if (max) {\n        const mt = moment.unix(max).add(1461, 'days').unix()\n        if (st > mt) {\n          return 'The maximum locking time is 4 years'\n        }\n        return undefined\n      }\n      //  else {\n      //   const now = moment().add(1461, 'days').unix()\n      //   if (st > now) {\n      //     return 'The maximum locking time is 4 years'\n      //   }\n      // }\n    }\n    return undefined\n  }, [min, selectTime, max])\n}"],"mappings":"AACA,OAASA,OAAO,KAAQ,OAAO,CAC/B,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAC3B,OAASC,cAAc,KAAQ,wBAAwB,CACvD,OAASC,mBAAmB,KAAQ,gCAAgC,CACpE,OAASC,kBAAkB,KAAQ,0BAA0B,CAC7D,OAAQC,mBAAmB,KAAO,+BAA+B,CACjE;AACA,OAASC,kBAAkB,KAAQ,aAAa,CAChD,OAASC,kBAAkB,CAAEC,wBAAwB,KAAQ,yBAAyB,CAEtF,OACEC,OAAO,KACF,QAAQ,CAEf,UAAY,CAAAC,QAAQ,uBAARA,QAAQ,EAARA,QAAQ,CAARA,QAAQ,uCAARA,QAAQ,CAARA,QAAQ,mBAARA,QAAQ,CAARA,QAAQ,uBAARA,QAAQ,CAARA,QAAQ,mCAAR,CAAAA,QAAQ,OAOpB,KAAM,CAAAC,cAAc,CAAG,CAAEC,QAAQ,CAAEF,QAAQ,CAACC,cAAe,CAAC,CAI5D,MAAO,SAAS,CAAAE,qBAAqBA,CACnCC,OAA2B,CAC3BC,aAA8B,CAC9BC,UAA8B,CAC9BC,YAAgC,CACyD,CACzF,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGb,kBAAkB,CAAC,CAAC,CACjD,KAAM,CAAAc,QAAQ,CAAGb,kBAAkB,CAACO,OAAO,CAAC,CAC5C;AACA,KAAM,CAACO,oBAAoB,CAAC,CAAGhB,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAEiB,CAAE,CAAC,CAAGtB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAuB,OAAO,CAAGnB,kBAAkB,CAACe,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAIK,SAAS,CAAET,aAAa,CAAC,CACvE;AACA;AACA;AACA,KAAM,CAAAU,WAAW,CAAG1B,OAAO,CAAC,IAAMG,cAAc,CAACc,UAAU,CAAED,aAAa,CAAC,CAAE,CAACA,aAAa,CAAEC,UAAU,CAAC,CAAC,CACzG,KAAM,CAAAU,cAAc,CAAGvB,mBAAmB,CAAC,CAAC,CAC5C,MAAO,CAAAJ,OAAO,CAAC,IAAM,CACnB;AACA;AACA,GAAI,CAACqB,QAAQ,EAAI,CAACF,OAAO,EAAI,CAACH,aAAa,EAAI,CAACE,YAAY,CAAE,MAAO,CAAAN,cAAc,CACnF;AAEA,KAAM,CAAAgB,iBAAiB,CAAGF,WAAW,EAAIF,OAAO,EAAI,CAACA,OAAO,CAACK,QAAQ,CAACH,WAAW,CAAC,CAElF,MAAO,CACLb,QAAQ,CAAEF,QAAQ,CAACmB,IAAI,CACvBC,OAAO,CACLH,iBAAiB,EAAIF,WAAW,CAC5B,SAAY,CACV,KAAM,CAAAM,OAAW,CAAG,CAAC,CAAC,CACtB,GAAI,CACF;AACA,KAAM,CAAAC,IAAI,CAAGC,MAAM,CAAChB,YAAY,CAAC,CAAGiB,QAAQ,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAI,EAAE,CAAC,CACtEC,OAAO,CAACC,GAAG,CAACrB,YAAY,CAAC,CACzB,KAAM,CAAAsB,SAAS,CAAG,KAAM,CAAAnB,QAAQ,CAACoB,WAAW,MAAAC,MAAA,CACrChB,WAAW,CAACiB,GAAG,CAACC,QAAQ,CAAC,EAAE,CAAC,EACjCX,IAAI,CAAG,EACT,CAAC,CACDN,cAAc,CAACa,SAAS,CAAE,CACxBK,OAAO,gBAAAH,MAAA,CAAiBzB,UAAU,MAAAyB,MAAA,CAAI1B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAAE,CAC7DC,KAAK,CAAErB,WAAW,CAACsB,aAAa,CAAC,CAAC,CAAC,CACnCF,MAAM,CAAE9B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAC7BG,KAAK,CAAEjC,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEkC,OACxB,CAAC,CAAC,CACFlB,OAAO,CAACmB,IAAI,CAAGX,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEW,IAAI,CAC9B;AACF,CAAE,MAAOC,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC9B,oBAAoB,CAAC8B,KAAK,CAAE,IAAI,CAAC,CACnC,CACA,MAAO,CAAApB,OAAO,CAChB,CAAC,CACDP,SAAS,CACf4B,UAAU,CAAEzB,iBAAiB,CAAGH,SAAS,CAAGF,CAAC,CAAC,cAAc,CAAE,CAACuB,MAAM,CAAE9B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAAC,CAC/F,CAAC,CACH,CAAC,CAAE,CAACzB,QAAQ,CAAEF,OAAO,CAAEH,aAAa,CAAEU,WAAW,CAAEF,OAAO,CAAEG,cAAc,CAAEJ,CAAC,CAAEL,YAAY,CAAC,CAAC,CAC/F,CAIA,MAAO,SAAS,CAAAoC,yBAAyBA,CACvCvC,OAA2B,CAC3BC,aAA8B,CAC9BC,UAA8B,CAC9BsC,OAA2B,CAC8D,CACzF,KAAM,CAAEpC,OAAO,CAAEC,OAAQ,CAAC,CAAGb,kBAAkB,CAAC,CAAC,CACjD,KAAM,CAAAc,QAAQ,CAAGb,kBAAkB,CAACO,OAAO,CAAC,CAC5C;AACA,KAAM,CAACO,oBAAoB,CAAC,CAAGhB,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAEiB,CAAE,CAAC,CAAGtB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAuB,OAAO,CAAGnB,kBAAkB,CAACe,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAIK,SAAS,CAAET,aAAa,CAAC,CACvE;AACA;AACA;AACA,KAAM,CAAAU,WAAW,CAAG1B,OAAO,CAAC,IAAMG,cAAc,CAACc,UAAU,CAAED,aAAa,CAAC,CAAE,CAACA,aAAa,CAAEC,UAAU,CAAC,CAAC,CACzG,KAAM,CAAAU,cAAc,CAAGvB,mBAAmB,CAAC,CAAC,CAC5C,MAAO,CAAAJ,OAAO,CAAC,IAAM,CACnB;AACA;AACA,GAAI,CAACqB,QAAQ,EAAI,CAACF,OAAO,EAAI,CAACH,aAAa,EAAI,CAACuC,OAAO,CAAE,MAAO,CAAA3C,cAAc,CAC9E;AAEA,KAAM,CAAAgB,iBAAiB,CAAGF,WAAW,EAAIF,OAAO,EAAI,CAACA,OAAO,CAACK,QAAQ,CAACH,WAAW,CAAC,CAElF,MAAO,CACLb,QAAQ,CAAEF,QAAQ,CAACmB,IAAI,CACvBC,OAAO,CACLH,iBAAiB,EAAIF,WAAW,CAC5B,SAAY,CACV,KAAM,CAAAM,OAAW,CAAG,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAQ,SAAS,CAAG,KAAM,CAAAnB,QAAQ,CAACmC,eAAe,CAC9CD,OAAO,CAAG,EAAE,MAAAb,MAAA,CACPhB,WAAW,CAACiB,GAAG,CAACC,QAAQ,CAAC,EAAE,CAAC,CACnC,CAAC,CACDjB,cAAc,CAACa,SAAS,CAAE,CACxBK,OAAO,oBAAAH,MAAA,CAAqBzB,UAAU,MAAAyB,MAAA,CAAI1B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAAE,CACjEC,KAAK,CAAErB,WAAW,CAACsB,aAAa,CAAC,CAAC,CAAC,CACnCF,MAAM,CAAE9B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAC7BG,KAAK,CAAEjC,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEkC,OACxB,CAAC,CAAC,CACFlB,OAAO,CAACmB,IAAI,CAAGX,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEW,IAAI,CAC9B;AACF,CAAE,MAAOC,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC9B,oBAAoB,CAAC8B,KAAK,CAAE,IAAI,CAAC,CACnC,CACA,MAAO,CAAApB,OAAO,CAChB,CAAC,CACDP,SAAS,CACf4B,UAAU,CAAEzB,iBAAiB,CAAGH,SAAS,CAAGF,CAAC,CAAC,cAAc,CAAE,CAACuB,MAAM,CAAE9B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAAC,CAC/F,CAAC,CACH,CAAC,CAAE,CAACzB,QAAQ,CAAEF,OAAO,CAAEH,aAAa,CAAEU,WAAW,CAAEF,OAAO,CAAEG,cAAc,CAAEJ,CAAC,CAAEgC,OAAO,CAAC,CAAC,CAC1F,CAGA,MAAO,SAAS,CAAAE,6BAA6BA,CAC3C1C,OAA2B,CAC3BC,aAA8B,CAC9BE,YAAgC,CAChCqC,OAA2B,CAC3BG,QAA4B,CAC6D,CACzF,KAAM,CAAEvC,OAAQ,CAAC,CAAGZ,kBAAkB,CAAC,CAAC,CACxC,KAAM,CAAAc,QAAQ,CAAGb,kBAAkB,CAACO,OAAO,CAAC,CAC5C;AACA,KAAM,CAACO,oBAAoB,CAAC,CAAGhB,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAEiB,CAAE,CAAC,CAAGtB,cAAc,CAAC,CAAC,CAC9B;AACA;AACA;AACA,KAAM,CAAA0B,cAAc,CAAGvB,mBAAmB,CAAC,CAAC,CAC5C,MAAO,CAAAJ,OAAO,CAAC,IAAM,CACnB;AACA;AACA,GAAI,CAACqB,QAAQ,EAAI,CAACF,OAAO,EAAI,CAACH,aAAa,EAAI,CAACuC,OAAO,EAAI,CAACrC,YAAY,EAAI,CAACwC,QAAQ,CAAE,MAAO,CAAA9C,cAAc,CAC5G;AACA,MAAO,CACLC,QAAQ,CAAEF,QAAQ,CAACmB,IAAI,CACvBC,OAAO,CACL,KAAAA,CAAA,GAAY,CACV,KAAM,CAAAC,OAAW,CAAG,CAAC,CAAC,CACtB,GAAI,CACFM,OAAO,CAACC,GAAG,CAACrB,YAAY,CAAC,CACzB,KAAM,CAAAmB,GAAG,CAAGF,QAAQ,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAI,EAAE,CAAC,CAC9C,KAAM,CAAAJ,IAAI,CAAGC,MAAM,CAAChB,YAAY,CAAC,CAAGmB,GAAG,CACvC,KAAM,CAAAsB,OAAO,CAAGD,QAAQ,CAAGrB,GAAG,CAC9B,GAAKJ,IAAI,CAAG0B,OAAO,CAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CACnCrC,oBAAoB,CAAC,sCAAsC,CAAGpB,MAAM,CAAC0D,IAAI,CAACF,QAAQ,CAAC,CAACG,GAAG,CAAC,CAAC,CAAE,MAAM,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC,CAAE,IAAI,CAAC,CAC9H,MAAO,CAAA9B,OAAO,CAChB,CACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAQ,SAAS,CAAG,KAAM,CAAAnB,QAAQ,CAAC0C,oBAAoB,CACnDR,OAAO,CAAG,EAAE,CACZtB,IAAI,CAAG,EACT,CAAC,CACDN,cAAc,CAACa,SAAS,CAAE,CACxBK,OAAO,gBAAiB,CACxBC,MAAM,CAAE9B,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8B,MAAM,CAC7BG,KAAK,CAAEjC,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEkC,OACxB,CAAC,CAAC,CACFlB,OAAO,CAACmB,IAAI,CAAGX,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEW,IAAI,CAC9B;AACF,CAAE,MAAOC,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC9B,oBAAoB,CAAC8B,KAAK,CAAE,IAAI,CAAC,CACnC,CACA,MAAO,CAAApB,OAAO,CAChB,CAAC,CACHqB,UAAU,CAAE5B,SACd,CAAC,CACH,CAAC,CAAE,CAACJ,QAAQ,CAAEF,OAAO,CAAEH,aAAa,CAAEW,cAAc,CAAEJ,CAAC,CAAEgC,OAAO,CAAErC,YAAY,CAAEwC,QAAQ,CAAC,CAAC,CAC5F,CAEA,MAAO,SAAS,CAAAM,mBAAmBA,CACjCjD,OAA2B,CACyF,CACpH,KAAM,CAAEI,OAAQ,CAAC,CAAGZ,kBAAkB,CAAC,CAAC,CACxC,KAAM,CAAAc,QAAQ,CAAGb,kBAAkB,CAACO,OAAO,CAAC,CAC5C;AACA,KAAM,CAACO,oBAAoB,CAAC,CAAGhB,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAEiB,CAAE,CAAC,CAAGtB,cAAc,CAAC,CAAC,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAA0B,cAAc,CAAGvB,mBAAmB,CAAC,CAAC,CAC5C,MAAO,CAAAJ,OAAO,CAAC,IAAM,CACnB,GAAI,CAACqB,QAAQ,EAAI,CAACF,OAAO,CAAE,MAAO,CAAAP,cAAc,CAChD,MAAO,CACLC,QAAQ,CAAEF,QAAQ,CAACmB,IAAI,CACvBC,OAAO,CACL,KAAO,CAAAwB,OAA2B,EAAK,CACrC,KAAM,CAAAvB,OAAW,CAAG,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAQ,SAAS,CAAG,KAAM,CAAAnB,QAAQ,CAAC4C,QAAQ,CACvCV,OAAO,CAAG,EACZ,CAAC,CACD5B,cAAc,CAACa,SAAS,CAAE,CACxBK,OAAO,WACT,CAAC,CAAC,CACFb,OAAO,CAACmB,IAAI,CAAGX,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEW,IAAI,CAC9B;AACF,CAAE,MAAOC,KAAK,CAAE,CACd;AACAd,OAAO,CAACc,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC9B,oBAAoB,CAAC8B,KAAK,CAAE,IAAI,CAAC,CACnC,CACA,MAAO,CAAApB,OAAO,CAChB,CAAC,CACHqB,UAAU,CAAE5B,SACd,CAAC,CACH,CAAC,CAAE,CAACJ,QAAQ,CAAEF,OAAO,CAAEQ,cAAc,CAAEJ,CAAC,CAAC,CAAC,CAC5C,CAGA,MAAO,SAAS,CAAA2C,sBAAsBA,CACpCC,WAA+B,CAC/BZ,OAA2B,CAC3Ba,KAAU,CAC+E,CACzF,KAAM,CAAEjD,OAAQ,CAAC,CAAGZ,kBAAkB,CAAC,CAAC,CACxC,KAAM,CAAAc,QAAQ,CAAGZ,wBAAwB,CAAC0D,WAAW,CAAC,CACtD;AACA,KAAM,CAAC7C,oBAAoB,CAAC,CAAGhB,mBAAmB,CAAC,CAAC,CACpD,KAAM,CAAEiB,CAAE,CAAC,CAAGtB,cAAc,CAAC,CAAC,CAC9B;AACA;AACA;AACA,KAAM,CAAA0B,cAAc,CAAGvB,mBAAmB,CAAC,CAAC,CAC5C,MAAO,CAAAJ,OAAO,CAAC,IAAM,CACnB;AACA;AACA,GAAI,CAACqB,QAAQ,EAAI,CAACF,OAAO,EAAI,CAACoC,OAAO,EAAI,CAACa,KAAK,CAAE,MAAO,CAAAxD,cAAc,CACtE;AACA,MAAO,CACLC,QAAQ,CAAEF,QAAQ,CAACmB,IAAI,CACvBC,OAAO,CACL,KAAAA,CAAA,GAAY,CACV,KAAM,CAAAC,OAAW,CAAG,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAQ,SAAS,CAAG,KAAM,CAAAnB,QAAQ,CAACgD,WAAW,CAC1Cd,OAAO,CAAG,EAAE,CACZa,KAAK,CAACE,GAAG,CAACC,IAAA,MAAC,CAACC,UAAU,CAAEC,QAAwC,CAAC,CAAAF,IAAA,OAAK,CAACC,UAAU,CAAEC,QAAQ,CAAC,GAC9F,CAAC,CACD9C,cAAc,CAACa,SAAS,CAAE,CACxBK,OAAO,eACT,CAAC,CAAC,CACFb,OAAO,CAACmB,IAAI,CAAGX,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEW,IAAI,CAC9B;AACF,CAAE,MAAOC,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC9B,oBAAoB,CAAC8B,KAAK,CAAE,IAAI,CAAC,CACnC,CACA,MAAO,CAAApB,OAAO,CAChB,CAAC,CACHqB,UAAU,CAAE5B,SACd,CAAC,CACH,CAAC,CAAE,CAACJ,QAAQ,CAAEF,OAAO,CAAEiD,KAAK,CAAEzC,cAAc,CAAEJ,CAAC,CAAEgC,OAAO,CAAC,CAAC,CAC5D,CAEA,MAAO,SAAS,CAAAmB,kBAAkBA,CAChCC,UAAc,CACdC,GAAQ,CACRC,GAAQ,CACR,CACA,MAAO,CAAA7E,OAAO,CAAC,IAAM,CACnB;AACA,GAAK2E,UAAU,CAAG,CAChB,KAAM,CAAAG,EAAE,CAAG5E,MAAM,CAACyE,UAAU,CAAC,CAACf,IAAI,CAAC,CAAC,CACpC,GAAIgB,GAAG,CAAE,CACP,KAAM,CAAAG,EAAE,CAAG7E,MAAM,CAAC0D,IAAI,CAACgB,GAAG,CAAC,CAACf,GAAG,CAACnD,OAAO,CAAE,MAAM,CAAC,CAACkD,IAAI,CAAC,CAAC,CACvD,GAAIkB,EAAE,CAAGC,EAAE,CAAE,CACX,MAAO,2BAA2B,CACpC,CACF,CAAC,IAAM,CACL,KAAM,CAAA1C,GAAG,CAAGnC,MAAM,CAAC,CAAC,CAAC2D,GAAG,CAACnD,OAAO,CAAE,MAAM,CAAC,CAACkD,IAAI,CAAC,CAAC,CAChD,GAAIkB,EAAE,CAAGzC,GAAG,CAAE,CACZ,MAAO,2BAA2B,CACpC,CACF,CACA,GAAIwC,GAAG,CAAE,CACP,KAAM,CAAAE,EAAE,CAAG7E,MAAM,CAAC0D,IAAI,CAACiB,GAAG,CAAC,CAAChB,GAAG,CAAC,IAAI,CAAE,MAAM,CAAC,CAACD,IAAI,CAAC,CAAC,CACpD,GAAIkB,EAAE,CAAGC,EAAE,CAAE,CACX,MAAO,qCAAqC,CAC9C,CACA,MAAO,CAAAtD,SAAS,CAClB,CACA;AACA;AACA;AACA;AACA;AACA;AACF,CACA,MAAO,CAAAA,SAAS,CAClB,CAAC,CAAE,CAACmD,GAAG,CAAED,UAAU,CAAEE,GAAG,CAAC,CAAC,CAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}