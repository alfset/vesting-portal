{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpBatchClient = void 0;\nconst json_rpc_1 = require(\"@cosmjs/json-rpc\");\nconst http_1 = require(\"./http\");\nconst rpcclient_1 = require(\"./rpcclient\");\n// Those values are private and can change any time.\n// Does a user need to know them? I don't think so. You either set\n// a custom value or leave the option field unset.\nconst defaultHttpBatchClientOptions = {\n  dispatchInterval: 20,\n  batchSizeLimit: 20\n};\nclass HttpBatchClient {\n  constructor(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a, _b;\n    this.queue = [];\n    this.options = {\n      batchSizeLimit: (_a = options.batchSizeLimit) !== null && _a !== void 0 ? _a : defaultHttpBatchClientOptions.batchSizeLimit,\n      dispatchInterval: (_b = options.dispatchInterval) !== null && _b !== void 0 ? _b : defaultHttpBatchClientOptions.dispatchInterval\n    };\n    if (typeof endpoint === \"string\") {\n      // accept host.name:port and assume http protocol\n      this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : \"http://\" + endpoint;\n    } else {\n      this.url = endpoint.url;\n      this.headers = endpoint.headers;\n    }\n    this.timer = setInterval(() => this.tick(), options.dispatchInterval);\n    this.validate();\n  }\n  disconnect() {\n    this.timer && clearInterval(this.timer);\n    this.timer = undefined;\n  }\n  async execute(request) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({\n        request,\n        resolve,\n        reject\n      });\n      if (this.queue.length >= this.options.batchSizeLimit) {\n        // this train is full, let's go\n        this.tick();\n      }\n    });\n  }\n  validate() {\n    if (!this.options.batchSizeLimit || !Number.isSafeInteger(this.options.batchSizeLimit) || this.options.batchSizeLimit < 1) {\n      throw new Error(\"batchSizeLimit must be a safe integer >= 1\");\n    }\n  }\n  /**\n   * This is called in an interval where promise rejections cannot be handled.\n   * So this is not async and HTTP errors need to be handled by the queued promises.\n   */\n  tick() {\n    // Avoid race conditions\n    const batch = this.queue.splice(0, this.options.batchSizeLimit);\n    if (!batch.length) return;\n    const requests = batch.map(s => s.request);\n    const requestIds = requests.map(request => request.id);\n    (0, http_1.http)(\"POST\", this.url, this.headers, requests).then(raw => {\n      // Requests with a single entry return as an object\n      const arr = Array.isArray(raw) ? raw : [raw];\n      arr.forEach(el => {\n        const req = batch.find(s => s.request.id === el.id);\n        if (!req) return;\n        const {\n          reject,\n          resolve\n        } = req;\n        const response = (0, json_rpc_1.parseJsonRpcResponse)(el);\n        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n          reject(new Error(JSON.stringify(response.error)));\n        } else {\n          resolve(response);\n        }\n      });\n    }, error => {\n      for (const requestId of requestIds) {\n        const req = batch.find(s => s.request.id === requestId);\n        if (!req) return;\n        req.reject(error);\n      }\n    });\n  }\n}\nexports.HttpBatchClient = HttpBatchClient;","map":{"version":3,"names":["json_rpc_1","require","http_1","rpcclient_1","defaultHttpBatchClientOptions","dispatchInterval","batchSizeLimit","HttpBatchClient","constructor","endpoint","options","arguments","length","undefined","queue","_a","_b","url","hasProtocol","headers","timer","setInterval","tick","validate","disconnect","clearInterval","execute","request","Promise","resolve","reject","push","Number","isSafeInteger","Error","batch","splice","requests","map","s","requestIds","id","http","then","raw","arr","Array","isArray","forEach","el","req","find","response","parseJsonRpcResponse","isJsonRpcErrorResponse","JSON","stringify","error","requestId","exports"],"sources":["../../src/rpcclients/httpbatchclient.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}