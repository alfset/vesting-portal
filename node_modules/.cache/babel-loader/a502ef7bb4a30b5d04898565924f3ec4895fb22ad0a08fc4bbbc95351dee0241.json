{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompressedNonExistenceProof = exports.CompressedExistenceProof = exports.CompressedBatchEntry = exports.CompressedBatchProof = exports.BatchEntry = exports.BatchProof = exports.InnerSpec = exports.ProofSpec = exports.InnerOp = exports.LeafOp = exports.CommitmentProof = exports.NonExistenceProof = exports.ExistenceProof = exports.lengthOpToJSON = exports.lengthOpFromJSON = exports.LengthOp = exports.hashOpToJSON = exports.hashOpFromJSON = exports.HashOp = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"ics23\";\nvar HashOp;\n(function (HashOp) {\n  /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n  HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n  HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n  HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n  HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n  HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n  /** BITCOIN - ripemd160(sha256(x)) */\n  HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n  HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp = exports.HashOp || (exports.HashOp = {}));\nfunction hashOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_HASH\":\n      return HashOp.NO_HASH;\n    case 1:\n    case \"SHA256\":\n      return HashOp.SHA256;\n    case 2:\n    case \"SHA512\":\n      return HashOp.SHA512;\n    case 3:\n    case \"KECCAK\":\n      return HashOp.KECCAK;\n    case 4:\n    case \"RIPEMD160\":\n      return HashOp.RIPEMD160;\n    case 5:\n    case \"BITCOIN\":\n      return HashOp.BITCOIN;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return HashOp.UNRECOGNIZED;\n  }\n}\nexports.hashOpFromJSON = hashOpFromJSON;\nfunction hashOpToJSON(object) {\n  switch (object) {\n    case HashOp.NO_HASH:\n      return \"NO_HASH\";\n    case HashOp.SHA256:\n      return \"SHA256\";\n    case HashOp.SHA512:\n      return \"SHA512\";\n    case HashOp.KECCAK:\n      return \"KECCAK\";\n    case HashOp.RIPEMD160:\n      return \"RIPEMD160\";\n    case HashOp.BITCOIN:\n      return \"BITCOIN\";\n    case HashOp.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.hashOpToJSON = hashOpToJSON;\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nvar LengthOp;\n(function (LengthOp) {\n  /** NO_PREFIX - NO_PREFIX don't include any length info */\n  LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n  /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n  LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n  /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n  LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n  /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n  LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n  /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n  LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n  /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n  LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n  /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n  LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n  /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n  LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n  /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n  LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n  LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp = exports.LengthOp || (exports.LengthOp = {}));\nfunction lengthOpFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"NO_PREFIX\":\n      return LengthOp.NO_PREFIX;\n    case 1:\n    case \"VAR_PROTO\":\n      return LengthOp.VAR_PROTO;\n    case 2:\n    case \"VAR_RLP\":\n      return LengthOp.VAR_RLP;\n    case 3:\n    case \"FIXED32_BIG\":\n      return LengthOp.FIXED32_BIG;\n    case 4:\n    case \"FIXED32_LITTLE\":\n      return LengthOp.FIXED32_LITTLE;\n    case 5:\n    case \"FIXED64_BIG\":\n      return LengthOp.FIXED64_BIG;\n    case 6:\n    case \"FIXED64_LITTLE\":\n      return LengthOp.FIXED64_LITTLE;\n    case 7:\n    case \"REQUIRE_32_BYTES\":\n      return LengthOp.REQUIRE_32_BYTES;\n    case 8:\n    case \"REQUIRE_64_BYTES\":\n      return LengthOp.REQUIRE_64_BYTES;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LengthOp.UNRECOGNIZED;\n  }\n}\nexports.lengthOpFromJSON = lengthOpFromJSON;\nfunction lengthOpToJSON(object) {\n  switch (object) {\n    case LengthOp.NO_PREFIX:\n      return \"NO_PREFIX\";\n    case LengthOp.VAR_PROTO:\n      return \"VAR_PROTO\";\n    case LengthOp.VAR_RLP:\n      return \"VAR_RLP\";\n    case LengthOp.FIXED32_BIG:\n      return \"FIXED32_BIG\";\n    case LengthOp.FIXED32_LITTLE:\n      return \"FIXED32_LITTLE\";\n    case LengthOp.FIXED64_BIG:\n      return \"FIXED64_BIG\";\n    case LengthOp.FIXED64_LITTLE:\n      return \"FIXED64_LITTLE\";\n    case LengthOp.REQUIRE_32_BYTES:\n      return \"REQUIRE_32_BYTES\";\n    case LengthOp.REQUIRE_64_BYTES:\n      return \"REQUIRE_64_BYTES\";\n    case LengthOp.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.lengthOpToJSON = lengthOpToJSON;\nfunction createBaseExistenceProof() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    leaf: undefined,\n    path: []\n  };\n}\nexports.ExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.path) {\n      exports.InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExistenceProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.path.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n      leaf: isSet(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : undefined,\n      path: Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map(e => exports.InnerOp.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n    if (message.path) {\n      obj.path = message.path.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.path = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseExistenceProof();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;\n    message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map(e => exports.InnerOp.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseNonExistenceProof() {\n  return {\n    key: new Uint8Array(),\n    left: undefined,\n    right: undefined\n  };\n}\nexports.NonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.left !== undefined) {\n      exports.ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.right !== undefined) {\n      exports.ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseNonExistenceProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.left = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.right = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      left: isSet(object.left) ? exports.ExistenceProof.fromJSON(object.left) : undefined,\n      right: isSet(object.right) ? exports.ExistenceProof.fromJSON(object.right) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.ExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.ExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseNonExistenceProof();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.ExistenceProof.fromPartial(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.ExistenceProof.fromPartial(object.right) : undefined;\n    return message;\n  }\n};\nfunction createBaseCommitmentProof() {\n  return {\n    exist: undefined,\n    nonexist: undefined,\n    batch: undefined,\n    compressed: undefined\n  };\n}\nexports.CommitmentProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.batch !== undefined) {\n      exports.BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.compressed !== undefined) {\n      exports.CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCommitmentProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.batch = exports.BatchProof.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.compressed = exports.CompressedBatchProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      exist: isSet(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : undefined,\n      nonexist: isSet(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined,\n      batch: isSet(object.batch) ? exports.BatchProof.fromJSON(object.batch) : undefined,\n      compressed: isSet(object.compressed) ? exports.CompressedBatchProof.fromJSON(object.compressed) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    message.batch !== undefined && (obj.batch = message.batch ? exports.BatchProof.toJSON(message.batch) : undefined);\n    message.compressed !== undefined && (obj.compressed = message.compressed ? exports.CompressedBatchProof.toJSON(message.compressed) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseCommitmentProof();\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;\n    message.batch = object.batch !== undefined && object.batch !== null ? exports.BatchProof.fromPartial(object.batch) : undefined;\n    message.compressed = object.compressed !== undefined && object.compressed !== null ? exports.CompressedBatchProof.fromPartial(object.compressed) : undefined;\n    return message;\n  }\n};\nfunction createBaseLeafOp() {\n  return {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n    prefix: new Uint8Array()\n  };\n}\nexports.LeafOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n    if (message.prehashKey !== 0) {\n      writer.uint32(16).int32(message.prehashKey);\n    }\n    if (message.prehashValue !== 0) {\n      writer.uint32(24).int32(message.prehashValue);\n    }\n    if (message.length !== 0) {\n      writer.uint32(32).int32(message.length);\n    }\n    if (message.prefix.length !== 0) {\n      writer.uint32(42).bytes(message.prefix);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLeafOp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n        case 2:\n          message.prehashKey = reader.int32();\n          break;\n        case 3:\n          message.prehashValue = reader.int32();\n          break;\n        case 4:\n          message.length = reader.int32();\n          break;\n        case 5:\n          message.prefix = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0,\n      prehashKey: isSet(object.prehashKey) ? hashOpFromJSON(object.prehashKey) : 0,\n      prehashValue: isSet(object.prehashValue) ? hashOpFromJSON(object.prehashValue) : 0,\n      length: isSet(object.length) ? lengthOpFromJSON(object.length) : 0,\n      prefix: isSet(object.prefix) ? bytesFromBase64(object.prefix) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prehashKey !== undefined && (obj.prehashKey = hashOpToJSON(message.prehashKey));\n    message.prehashValue !== undefined && (obj.prehashValue = hashOpToJSON(message.prehashValue));\n    message.length !== undefined && (obj.length = lengthOpToJSON(message.length));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e;\n    const message = createBaseLeafOp();\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prehashKey = (_b = object.prehashKey) !== null && _b !== void 0 ? _b : 0;\n    message.prehashValue = (_c = object.prehashValue) !== null && _c !== void 0 ? _c : 0;\n    message.length = (_d = object.length) !== null && _d !== void 0 ? _d : 0;\n    message.prefix = (_e = object.prefix) !== null && _e !== void 0 ? _e : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseInnerOp() {\n  return {\n    hash: 0,\n    prefix: new Uint8Array(),\n    suffix: new Uint8Array()\n  };\n}\nexports.InnerOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.hash !== 0) {\n      writer.uint32(8).int32(message.hash);\n    }\n    if (message.prefix.length !== 0) {\n      writer.uint32(18).bytes(message.prefix);\n    }\n    if (message.suffix.length !== 0) {\n      writer.uint32(26).bytes(message.suffix);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInnerOp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.int32();\n          break;\n        case 2:\n          message.prefix = reader.bytes();\n          break;\n        case 3:\n          message.suffix = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0,\n      prefix: isSet(object.prefix) ? bytesFromBase64(object.prefix) : new Uint8Array(),\n      suffix: isSet(object.suffix) ? bytesFromBase64(object.suffix) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    message.prefix !== undefined && (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n    message.suffix !== undefined && (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseInnerOp();\n    message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : 0;\n    message.prefix = (_b = object.prefix) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.suffix = (_c = object.suffix) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseProofSpec() {\n  return {\n    leafSpec: undefined,\n    innerSpec: undefined,\n    maxDepth: 0,\n    minDepth: 0\n  };\n}\nexports.ProofSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.leafSpec !== undefined) {\n      exports.LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.innerSpec !== undefined) {\n      exports.InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.maxDepth !== 0) {\n      writer.uint32(24).int32(message.maxDepth);\n    }\n    if (message.minDepth !== 0) {\n      writer.uint32(32).int32(message.minDepth);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProofSpec();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.leafSpec = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.innerSpec = exports.InnerSpec.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.maxDepth = reader.int32();\n          break;\n        case 4:\n          message.minDepth = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      leafSpec: isSet(object.leafSpec) ? exports.LeafOp.fromJSON(object.leafSpec) : undefined,\n      innerSpec: isSet(object.innerSpec) ? exports.InnerSpec.fromJSON(object.innerSpec) : undefined,\n      maxDepth: isSet(object.maxDepth) ? Number(object.maxDepth) : 0,\n      minDepth: isSet(object.minDepth) ? Number(object.minDepth) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.leafSpec !== undefined && (obj.leafSpec = message.leafSpec ? exports.LeafOp.toJSON(message.leafSpec) : undefined);\n    message.innerSpec !== undefined && (obj.innerSpec = message.innerSpec ? exports.InnerSpec.toJSON(message.innerSpec) : undefined);\n    message.maxDepth !== undefined && (obj.maxDepth = Math.round(message.maxDepth));\n    message.minDepth !== undefined && (obj.minDepth = Math.round(message.minDepth));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseProofSpec();\n    message.leafSpec = object.leafSpec !== undefined && object.leafSpec !== null ? exports.LeafOp.fromPartial(object.leafSpec) : undefined;\n    message.innerSpec = object.innerSpec !== undefined && object.innerSpec !== null ? exports.InnerSpec.fromPartial(object.innerSpec) : undefined;\n    message.maxDepth = (_a = object.maxDepth) !== null && _a !== void 0 ? _a : 0;\n    message.minDepth = (_b = object.minDepth) !== null && _b !== void 0 ? _b : 0;\n    return message;\n  }\n};\nfunction createBaseInnerSpec() {\n  return {\n    childOrder: [],\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    emptyChild: new Uint8Array(),\n    hash: 0\n  };\n}\nexports.InnerSpec = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    writer.uint32(10).fork();\n    for (const v of message.childOrder) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.childSize !== 0) {\n      writer.uint32(16).int32(message.childSize);\n    }\n    if (message.minPrefixLength !== 0) {\n      writer.uint32(24).int32(message.minPrefixLength);\n    }\n    if (message.maxPrefixLength !== 0) {\n      writer.uint32(32).int32(message.maxPrefixLength);\n    }\n    if (message.emptyChild.length !== 0) {\n      writer.uint32(42).bytes(message.emptyChild);\n    }\n    if (message.hash !== 0) {\n      writer.uint32(48).int32(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseInnerSpec();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.childOrder.push(reader.int32());\n            }\n          } else {\n            message.childOrder.push(reader.int32());\n          }\n          break;\n        case 2:\n          message.childSize = reader.int32();\n          break;\n        case 3:\n          message.minPrefixLength = reader.int32();\n          break;\n        case 4:\n          message.maxPrefixLength = reader.int32();\n          break;\n        case 5:\n          message.emptyChild = reader.bytes();\n          break;\n        case 6:\n          message.hash = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      childOrder: Array.isArray(object === null || object === void 0 ? void 0 : object.childOrder) ? object.childOrder.map(e => Number(e)) : [],\n      childSize: isSet(object.childSize) ? Number(object.childSize) : 0,\n      minPrefixLength: isSet(object.minPrefixLength) ? Number(object.minPrefixLength) : 0,\n      maxPrefixLength: isSet(object.maxPrefixLength) ? Number(object.maxPrefixLength) : 0,\n      emptyChild: isSet(object.emptyChild) ? bytesFromBase64(object.emptyChild) : new Uint8Array(),\n      hash: isSet(object.hash) ? hashOpFromJSON(object.hash) : 0\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.childOrder) {\n      obj.childOrder = message.childOrder.map(e => Math.round(e));\n    } else {\n      obj.childOrder = [];\n    }\n    message.childSize !== undefined && (obj.childSize = Math.round(message.childSize));\n    message.minPrefixLength !== undefined && (obj.minPrefixLength = Math.round(message.minPrefixLength));\n    message.maxPrefixLength !== undefined && (obj.maxPrefixLength = Math.round(message.maxPrefixLength));\n    message.emptyChild !== undefined && (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n    message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c, _d, _e, _f;\n    const message = createBaseInnerSpec();\n    message.childOrder = ((_a = object.childOrder) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    message.childSize = (_b = object.childSize) !== null && _b !== void 0 ? _b : 0;\n    message.minPrefixLength = (_c = object.minPrefixLength) !== null && _c !== void 0 ? _c : 0;\n    message.maxPrefixLength = (_d = object.maxPrefixLength) !== null && _d !== void 0 ? _d : 0;\n    message.emptyChild = (_e = object.emptyChild) !== null && _e !== void 0 ? _e : new Uint8Array();\n    message.hash = (_f = object.hash) !== null && _f !== void 0 ? _f : 0;\n    return message;\n  }\n};\nfunction createBaseBatchProof() {\n  return {\n    entries: []\n  };\n}\nexports.BatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.entries) {\n      exports.BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBatchProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.BatchEntry.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      entries: Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map(e => exports.BatchEntry.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.BatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseBatchProof();\n    message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(e => exports.BatchEntry.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseBatchEntry() {\n  return {\n    exist: undefined,\n    nonexist: undefined\n  };\n}\nexports.BatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.exist !== undefined) {\n      exports.ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.nonexist !== undefined) {\n      exports.NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBatchEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.ExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.nonexist = exports.NonExistenceProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      exist: isSet(object.exist) ? exports.ExistenceProof.fromJSON(object.exist) : undefined,\n      nonexist: isSet(object.nonexist) ? exports.NonExistenceProof.fromJSON(object.nonexist) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.ExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.NonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseBatchEntry();\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.ExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.NonExistenceProof.fromPartial(object.nonexist) : undefined;\n    return message;\n  }\n};\nfunction createBaseCompressedBatchProof() {\n  return {\n    entries: [],\n    lookupInners: []\n  };\n}\nexports.CompressedBatchProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.entries) {\n      exports.CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.lookupInners) {\n      exports.InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCompressedBatchProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.entries.push(exports.CompressedBatchEntry.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.lookupInners.push(exports.InnerOp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      entries: Array.isArray(object === null || object === void 0 ? void 0 : object.entries) ? object.entries.map(e => exports.CompressedBatchEntry.fromJSON(e)) : [],\n      lookupInners: Array.isArray(object === null || object === void 0 ? void 0 : object.lookupInners) ? object.lookupInners.map(e => exports.InnerOp.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.entries) {\n      obj.entries = message.entries.map(e => e ? exports.CompressedBatchEntry.toJSON(e) : undefined);\n    } else {\n      obj.entries = [];\n    }\n    if (message.lookupInners) {\n      obj.lookupInners = message.lookupInners.map(e => e ? exports.InnerOp.toJSON(e) : undefined);\n    } else {\n      obj.lookupInners = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseCompressedBatchProof();\n    message.entries = ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(e => exports.CompressedBatchEntry.fromPartial(e))) || [];\n    message.lookupInners = ((_b = object.lookupInners) === null || _b === void 0 ? void 0 : _b.map(e => exports.InnerOp.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseCompressedBatchEntry() {\n  return {\n    exist: undefined,\n    nonexist: undefined\n  };\n}\nexports.CompressedBatchEntry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.exist !== undefined) {\n      exports.CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.nonexist !== undefined) {\n      exports.CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCompressedBatchEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.exist = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.nonexist = exports.CompressedNonExistenceProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      exist: isSet(object.exist) ? exports.CompressedExistenceProof.fromJSON(object.exist) : undefined,\n      nonexist: isSet(object.nonexist) ? exports.CompressedNonExistenceProof.fromJSON(object.nonexist) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.exist !== undefined && (obj.exist = message.exist ? exports.CompressedExistenceProof.toJSON(message.exist) : undefined);\n    message.nonexist !== undefined && (obj.nonexist = message.nonexist ? exports.CompressedNonExistenceProof.toJSON(message.nonexist) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseCompressedBatchEntry();\n    message.exist = object.exist !== undefined && object.exist !== null ? exports.CompressedExistenceProof.fromPartial(object.exist) : undefined;\n    message.nonexist = object.nonexist !== undefined && object.nonexist !== null ? exports.CompressedNonExistenceProof.fromPartial(object.nonexist) : undefined;\n    return message;\n  }\n};\nfunction createBaseCompressedExistenceProof() {\n  return {\n    key: new Uint8Array(),\n    value: new Uint8Array(),\n    leaf: undefined,\n    path: []\n  };\n}\nexports.CompressedExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    if (message.leaf !== undefined) {\n      exports.LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n    }\n    writer.uint32(34).fork();\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCompressedExistenceProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        case 3:\n          message.leaf = exports.LeafOp.decode(reader, reader.uint32());\n          break;\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n          } else {\n            message.path.push(reader.int32());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n      leaf: isSet(object.leaf) ? exports.LeafOp.fromJSON(object.leaf) : undefined,\n      path: Array.isArray(object === null || object === void 0 ? void 0 : object.path) ? object.path.map(e => Number(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    message.leaf !== undefined && (obj.leaf = message.leaf ? exports.LeafOp.toJSON(message.leaf) : undefined);\n    if (message.path) {\n      obj.path = message.path.map(e => Math.round(e));\n    } else {\n      obj.path = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b, _c;\n    const message = createBaseCompressedExistenceProof();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.leaf = object.leaf !== undefined && object.leaf !== null ? exports.LeafOp.fromPartial(object.leaf) : undefined;\n    message.path = ((_c = object.path) === null || _c === void 0 ? void 0 : _c.map(e => e)) || [];\n    return message;\n  }\n};\nfunction createBaseCompressedNonExistenceProof() {\n  return {\n    key: new Uint8Array(),\n    left: undefined,\n    right: undefined\n  };\n}\nexports.CompressedNonExistenceProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.left !== undefined) {\n      exports.CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.right !== undefined) {\n      exports.CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCompressedNonExistenceProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.left = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.right = exports.CompressedExistenceProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      left: isSet(object.left) ? exports.CompressedExistenceProof.fromJSON(object.left) : undefined,\n      right: isSet(object.right) ? exports.CompressedExistenceProof.fromJSON(object.right) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.left !== undefined && (obj.left = message.left ? exports.CompressedExistenceProof.toJSON(message.left) : undefined);\n    message.right !== undefined && (obj.right = message.right ? exports.CompressedExistenceProof.toJSON(message.right) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseCompressedNonExistenceProof();\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.left = object.left !== undefined && object.left !== null ? exports.CompressedExistenceProof.fromPartial(object.left) : undefined;\n    message.right = object.right !== undefined && object.right !== null ? exports.CompressedExistenceProof.fromPartial(object.right) : undefined;\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","HashOp","hashOpFromJSON","object","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","UNRECOGNIZED","hashOpToJSON","LengthOp","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","createBaseExistenceProof","key","Uint8Array","value","leaf","undefined","path","ExistenceProof","encode","message","writer","arguments","length","default","Writer","create","uint32","bytes","LeafOp","fork","ldelim","v","InnerOp","decode","input","reader","Reader","end","len","pos","tag","push","skipType","fromJSON","isSet","bytesFromBase64","Array","isArray","map","e","toJSON","obj","base64FromBytes","fromPartial","_a","_b","_c","createBaseNonExistenceProof","left","right","NonExistenceProof","createBaseCommitmentProof","exist","nonexist","batch","compressed","CommitmentProof","BatchProof","CompressedBatchProof","createBaseLeafOp","hash","prehashKey","prehashValue","prefix","int32","_d","_e","createBaseInnerOp","suffix","createBaseProofSpec","leafSpec","innerSpec","maxDepth","minDepth","ProofSpec","InnerSpec","Number","Math","round","createBaseInnerSpec","childOrder","childSize","minPrefixLength","maxPrefixLength","emptyChild","end2","_f","createBaseBatchProof","entries","BatchEntry","createBaseBatchEntry","createBaseCompressedBatchProof","lookupInners","CompressedBatchEntry","createBaseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","createBaseCompressedExistenceProof","createBaseCompressedNonExistenceProof","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","toString","forEach","byte","String","fromCharCode","btoa","join","util","Long","configure"],"sources":["../../src/confio/proofs.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}