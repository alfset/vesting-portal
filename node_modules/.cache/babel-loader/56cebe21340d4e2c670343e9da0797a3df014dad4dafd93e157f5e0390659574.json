{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgDelegateFeedConsent = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@classic-terra/terra.proto/terra/oracle/v1beta1/tx\");\n/**\n * A **feeeder** is an account which is responsible for signing transactions with Oracle vote\n * and prevote messages on behalf of the validator. The blockchain will reject\n * [[MsgExchangeRateVote]] and [[MsgExchangeRatePrevote]] messages in transactions\n * signed by an\n * account different than the registered feeder.\n *\n * The following message registers a validator's feeder address.\n */\nvar MsgDelegateFeedConsent = /** @class */function (_super) {\n  __extends(MsgDelegateFeedConsent, _super);\n  /**\n   * @param operator validator's operator address\n   * @param delegate account address to set to feeder\n   */\n  function MsgDelegateFeedConsent(operator, delegate) {\n    var _this = _super.call(this) || this;\n    _this.operator = operator;\n    _this.delegate = delegate;\n    return _this;\n  }\n  MsgDelegateFeedConsent.fromAmino = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      operator = _a.operator,\n      delegate = _a.delegate;\n    return new MsgDelegateFeedConsent(operator, delegate);\n  };\n  MsgDelegateFeedConsent.prototype.toAmino = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      operator = _a.operator,\n      delegate = _a.delegate;\n    return {\n      type: 'oracle/MsgDelegateFeedConsent',\n      value: {\n        operator: operator,\n        delegate: delegate\n      }\n    };\n  };\n  MsgDelegateFeedConsent.fromData = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var operator = data.operator,\n      delegate = data.delegate;\n    return new MsgDelegateFeedConsent(operator, delegate);\n  };\n  MsgDelegateFeedConsent.prototype.toData = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      operator = _a.operator,\n      delegate = _a.delegate;\n    return {\n      '@type': '/terra.oracle.v1beta1.MsgDelegateFeedConsent',\n      operator: operator,\n      delegate: delegate\n    };\n  };\n  MsgDelegateFeedConsent.fromProto = function (proto, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new MsgDelegateFeedConsent(proto.operator, proto.delegate);\n  };\n  MsgDelegateFeedConsent.prototype.toProto = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      operator = _a.operator,\n      delegate = _a.delegate;\n    return tx_1.MsgDelegateFeedConsent.fromPartial({\n      delegate: delegate,\n      operator: operator\n    });\n  };\n  MsgDelegateFeedConsent.prototype.packAny = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/terra.oracle.v1beta1.MsgDelegateFeedConsent',\n      value: tx_1.MsgDelegateFeedConsent.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  MsgDelegateFeedConsent.unpackAny = function (msgAny, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return MsgDelegateFeedConsent.fromProto(tx_1.MsgDelegateFeedConsent.decode(msgAny.value), isClassic);\n  };\n  return MsgDelegateFeedConsent;\n}(json_1.JSONSerializable);\nexports.MsgDelegateFeedConsent = MsgDelegateFeedConsent;","map":{"version":3,"names":["json_1","require","any_1","tx_1","MsgDelegateFeedConsent","_super","__extends","operator","delegate","_this","call","fromAmino","data","isClassic","Error","_a","value","prototype","toAmino","type","fromData","toData","fromProto","proto","toProto","fromPartial","packAny","Any","typeUrl","encode","finish","unpackAny","msgAny","decode","JSONSerializable","exports"],"sources":["../../../../src/core/oracle/msgs/MsgDelegateFeedConsent.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}