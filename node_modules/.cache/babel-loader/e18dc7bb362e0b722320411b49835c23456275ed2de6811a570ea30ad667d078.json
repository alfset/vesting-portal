{"ast":null,"code":"import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\n// import { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\n\nfunction parseSendReturn(sendReturn) {\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\nexport class NoXdefiProviderError extends Error {\n  constructor() {\n    var _this$constructor$nam, _this$constructor;\n    super();\n    this.name = (_this$constructor$nam = this === null || this === void 0 ? void 0 : (_this$constructor = this.constructor) === null || _this$constructor === void 0 ? void 0 : _this$constructor.name) !== null && _this$constructor$nam !== void 0 ? _this$constructor$nam : '';\n    this.message = \"No Xdefi provider was found on window.xfi.\";\n  }\n}\nexport class UserRejectedRequestError extends Error {\n  constructor() {\n    var _this$constructor$nam2, _this$constructor2;\n    super();\n    this.name = (_this$constructor$nam2 = this === null || this === void 0 ? void 0 : (_this$constructor2 = this.constructor) === null || _this$constructor2 === void 0 ? void 0 : _this$constructor2.name) !== null && _this$constructor$nam2 !== void 0 ? _this$constructor$nam2 : '';\n    this.message = \"The user rejected the request.\";\n  }\n}\nexport class XdefiConnector extends AbstractConnector {\n  constructor(kwargs) {\n    super(kwargs);\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  handleChainChanged(chainId) {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId,\n      provider: window.xfi.ethereum\n    });\n  }\n  handleAccountsChanged(accounts) {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  }\n  handleClose(code, reason) {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  }\n  handleNetworkChanged(networkId) {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({\n      chainId: networkId,\n      provider: window.xfi.ethereum\n    });\n  }\n  async activate() {\n    var _window, _window$xfi, _window6, _window6$xfi, _window10, _window10$xfi;\n    if (!((_window = window) === null || _window === void 0 ? void 0 : (_window$xfi = _window.xfi) === null || _window$xfi === void 0 ? void 0 : _window$xfi.ethereum)) {\n      throw new NoXdefiProviderError();\n    }\n    if (window.xfi.ethereum.on) {\n      var _window2, _window2$xfi, _window3, _window3$xfi, _window4, _window4$xfi, _window5, _window5$xfi;\n      (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$xfi = _window2.xfi) === null || _window2$xfi === void 0 ? void 0 : _window2$xfi.ethereum.on(\"chainChanged\", this.handleChainChanged);\n      (_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$xfi = _window3.xfi) === null || _window3$xfi === void 0 ? void 0 : _window3$xfi.ethereum.on(\"accountsChanged\", this.handleAccountsChanged);\n      (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$xfi = _window4.xfi) === null || _window4$xfi === void 0 ? void 0 : _window4$xfi.ethereum.on(\"close\", this.handleClose);\n      (_window5 = window) === null || _window5 === void 0 ? void 0 : (_window5$xfi = _window5.xfi) === null || _window5$xfi === void 0 ? void 0 : _window5$xfi.ethereum.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n    if (((_window6 = window) === null || _window6 === void 0 ? void 0 : (_window6$xfi = _window6.xfi) === null || _window6$xfi === void 0 ? void 0 : _window6$xfi.ethereum).isMetaMask) {\n      var _window7, _window7$xfi;\n      ((_window7 = window) === null || _window7 === void 0 ? void 0 : (_window7$xfi = _window7.xfi) === null || _window7$xfi === void 0 ? void 0 : _window7$xfi.ethereum).autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      var _window8, _window8$xfi;\n      account = await ((_window8 = window) === null || _window8 === void 0 ? void 0 : (_window8$xfi = _window8.xfi) === null || _window8$xfi === void 0 ? void 0 : _window8$xfi.ethereum.send)(\"eth_requestAccounts\").then(sendReturn => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if (error.code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(false, \"eth_requestAccounts was unsuccessful, falling back to enable\");\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      var _window9, _window9$xfi;\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await ((_window9 = window) === null || _window9 === void 0 ? void 0 : (_window9$xfi = _window9.xfi) === null || _window9$xfi === void 0 ? void 0 : _window9$xfi.ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0]));\n    }\n    return {\n      provider: (_window10 = window) === null || _window10 === void 0 ? void 0 : (_window10$xfi = _window10.xfi) === null || _window10$xfi === void 0 ? void 0 : _window10$xfi.ethereum,\n      ...(account ? {\n        account\n      } : {})\n    };\n  }\n  async getProvider() {\n    var _window11, _window11$xfi;\n    return (_window11 = window) === null || _window11 === void 0 ? void 0 : (_window11$xfi = _window11.xfi) === null || _window11$xfi === void 0 ? void 0 : _window11$xfi.ethereum;\n  }\n  async getChainId() {\n    var _window12, _window12$xfi;\n    if (!((_window12 = window) === null || _window12 === void 0 ? void 0 : (_window12$xfi = _window12.xfi) === null || _window12$xfi === void 0 ? void 0 : _window12$xfi.ethereum)) {\n      throw new NoXdefiProviderError();\n    }\n    let chainId;\n    try {\n      var _window13, _window13$xfi;\n      chainId = await ((_window13 = window) === null || _window13 === void 0 ? void 0 : (_window13$xfi = _window13.xfi) === null || _window13$xfi === void 0 ? void 0 : _window13$xfi.ethereum.send)(\"eth_chainId\").then(parseSendReturn);\n    } catch {\n      warning(false, \"eth_chainId was unsuccessful, falling back to net_version\");\n    }\n    if (!chainId) {\n      try {\n        var _window14, _window14$xfi;\n        // window?.xfi?.ethereum.send('net_version').then((res:any) => {\n        //   console.log(res)\n        // })\n        // chainId = await (window?.xfi?.ethereum.send as Send)(\"net_version\").then(\n        //   parseSendReturn\n        // );\n        chainId = await ((_window14 = window) === null || _window14 === void 0 ? void 0 : (_window14$xfi = _window14.xfi) === null || _window14$xfi === void 0 ? void 0 : _window14$xfi.ethereum.send('net_version'));\n      } catch {\n        warning(false, \"net_version was unsuccessful, falling back to net version v2\");\n      }\n    }\n    if (!chainId) {\n      try {\n        var _window15, _window15$xfi;\n        // chainId = parseSendReturn(\n        //   (window?.xfi?.ethereum.send as any)({ method: \"net_version\" })\n        // );\n        chainId = await ((_window15 = window) === null || _window15 === void 0 ? void 0 : (_window15$xfi = _window15.xfi) === null || _window15$xfi === void 0 ? void 0 : _window15$xfi.ethereum.send('net_version'));\n      } catch {\n        warning(false, \"net_version v2 was unsuccessful, falling back to manual matches and static properties\");\n      }\n    }\n    if (!chainId) {\n      var _window16, _window16$xfi;\n      if (((_window16 = window) === null || _window16 === void 0 ? void 0 : (_window16$xfi = _window16.xfi) === null || _window16$xfi === void 0 ? void 0 : _window16$xfi.ethereum).isDapper) {\n        var _window17, _window17$xfi;\n        chainId = parseSendReturn(((_window17 = window) === null || _window17 === void 0 ? void 0 : (_window17$xfi = _window17.xfi) === null || _window17$xfi === void 0 ? void 0 : _window17$xfi.ethereum).cachedResults.net_version);\n      } else {\n        var _window18, _window18$xfi, _window19, _window19$xfi, _window20, _window20$xfi, _window21, _window21$xfi;\n        chainId = ((_window18 = window) === null || _window18 === void 0 ? void 0 : (_window18$xfi = _window18.xfi) === null || _window18$xfi === void 0 ? void 0 : _window18$xfi.ethereum).chainId || ((_window19 = window) === null || _window19 === void 0 ? void 0 : (_window19$xfi = _window19.xfi) === null || _window19$xfi === void 0 ? void 0 : _window19$xfi.ethereum).netVersion || ((_window20 = window) === null || _window20 === void 0 ? void 0 : (_window20$xfi = _window20.xfi) === null || _window20$xfi === void 0 ? void 0 : _window20$xfi.ethereum).networkVersion || ((_window21 = window) === null || _window21 === void 0 ? void 0 : (_window21$xfi = _window21.xfi) === null || _window21$xfi === void 0 ? void 0 : _window21$xfi.ethereum)._chainId;\n      }\n    }\n    return chainId;\n  }\n  async getAccount() {\n    var _window22, _window22$xfi;\n    if (!((_window22 = window) === null || _window22 === void 0 ? void 0 : (_window22$xfi = _window22.xfi) === null || _window22$xfi === void 0 ? void 0 : _window22$xfi.ethereum)) {\n      throw new NoXdefiProviderError();\n    }\n    let account;\n    try {\n      var _window23, _window23$xfi;\n      // account = await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n      //   (sendReturn) => parseSendReturn(sendReturn)[0]\n      // );\n      account = await ((_window23 = window) === null || _window23 === void 0 ? void 0 : (_window23$xfi = _window23.xfi) === null || _window23$xfi === void 0 ? void 0 : _window23$xfi.ethereum.send('eth_accounts'));\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n    if (!account) {\n      try {\n        var _window24, _window24$xfi;\n        account = await ((_window24 = window) === null || _window24 === void 0 ? void 0 : (_window24$xfi = _window24.xfi) === null || _window24$xfi === void 0 ? void 0 : _window24$xfi.ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0]));\n      } catch {\n        warning(false, \"enable was unsuccessful, falling back to eth_accounts v2\");\n      }\n    }\n    if (!account) {\n      var _window25, _window25$xfi;\n      account = parseSendReturn(((_window25 = window) === null || _window25 === void 0 ? void 0 : (_window25$xfi = _window25.xfi) === null || _window25$xfi === void 0 ? void 0 : _window25$xfi.ethereum.send)({\n        method: \"eth_accounts\"\n      }))[0];\n    }\n    return account;\n  }\n  deactivate() {\n    var _window26, _window26$xfi, _window27, _window27$xfi;\n    if (((_window26 = window) === null || _window26 === void 0 ? void 0 : (_window26$xfi = _window26.xfi) === null || _window26$xfi === void 0 ? void 0 : _window26$xfi.ethereum) && ((_window27 = window) === null || _window27 === void 0 ? void 0 : (_window27$xfi = _window27.xfi) === null || _window27$xfi === void 0 ? void 0 : _window27$xfi.ethereum.removeListener)) {\n      var _window28, _window28$xfi, _window29, _window29$xfi, _window30, _window30$xfi, _window31, _window31$xfi;\n      (_window28 = window) === null || _window28 === void 0 ? void 0 : (_window28$xfi = _window28.xfi) === null || _window28$xfi === void 0 ? void 0 : _window28$xfi.ethereum.removeListener(\"chainChanged\", this.handleChainChanged);\n      (_window29 = window) === null || _window29 === void 0 ? void 0 : (_window29$xfi = _window29.xfi) === null || _window29$xfi === void 0 ? void 0 : _window29$xfi.ethereum.removeListener(\"accountsChanged\", this.handleAccountsChanged);\n      (_window30 = window) === null || _window30 === void 0 ? void 0 : (_window30$xfi = _window30.xfi) === null || _window30$xfi === void 0 ? void 0 : _window30$xfi.ethereum.removeListener(\"close\", this.handleClose);\n      (_window31 = window) === null || _window31 === void 0 ? void 0 : (_window31$xfi = _window31.xfi) === null || _window31$xfi === void 0 ? void 0 : _window31$xfi.ethereum.removeListener(\"networkChanged\", this.handleNetworkChanged);\n    }\n  }\n  async isAuthorized() {\n    var _window32, _window32$xfi;\n    if (!((_window32 = window) === null || _window32 === void 0 ? void 0 : (_window32$xfi = _window32.xfi) === null || _window32$xfi === void 0 ? void 0 : _window32$xfi.ethereum)) {\n      return false;\n    }\n    try {\n      var _window33, _window33$xfi;\n      return await ((_window33 = window) === null || _window33 === void 0 ? void 0 : (_window33$xfi = _window33.xfi) === null || _window33$xfi === void 0 ? void 0 : _window33$xfi.ethereum.send)(\"eth_accounts\").then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    } catch {\n      return false;\n    }\n  }\n}","map":{"version":3,"names":["AbstractConnector","warning","parseSendReturn","sendReturn","hasOwnProperty","result","NoXdefiProviderError","Error","constructor","_this$constructor$nam","_this$constructor","name","message","UserRejectedRequestError","_this$constructor$nam2","_this$constructor2","XdefiConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","__DEV__","console","log","emitUpdate","provider","window","xfi","ethereum","accounts","length","emitDeactivate","account","code","reason","networkId","activate","_window","_window$xfi","_window6","_window6$xfi","_window10","_window10$xfi","on","_window2","_window2$xfi","_window3","_window3$xfi","_window4","_window4$xfi","_window5","_window5$xfi","isMetaMask","_window7","_window7$xfi","autoRefreshOnNetworkChange","_window8","_window8$xfi","send","then","error","_window9","_window9$xfi","enable","getProvider","_window11","_window11$xfi","getChainId","_window12","_window12$xfi","_window13","_window13$xfi","_window14","_window14$xfi","_window15","_window15$xfi","_window16","_window16$xfi","isDapper","_window17","_window17$xfi","cachedResults","net_version","_window18","_window18$xfi","_window19","_window19$xfi","_window20","_window20$xfi","_window21","_window21$xfi","netVersion","networkVersion","_chainId","getAccount","_window22","_window22$xfi","_window23","_window23$xfi","_window24","_window24$xfi","_window25","_window25$xfi","method","deactivate","_window26","_window26$xfi","_window27","_window27$xfi","removeListener","_window28","_window28$xfi","_window29","_window29$xfi","_window30","_window30$xfi","_window31","_window31$xfi","isAuthorized","_window32","_window32$xfi","_window33","_window33$xfi"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/connectors/xdefi/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from \"@web3-react/types\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\n// import { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\nexport type SendReturnResult = { result: any }\nexport type SendReturn = any\n\nexport type Send = (method: string, params?: any[]) => Promise<SendReturnResult | SendReturn>\nexport type SendOld = ({ method }: { method: string }) => Promise<SendReturnResult | SendReturn>\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\n\nexport class NoXdefiProviderError extends Error {\n  public constructor() {\n    super();\n    this.name = this?.constructor?.name ?? '';\n    this.message = \"No Xdefi provider was found on window.xfi.\";\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super();\n    this.name = this?.constructor?.name ?? '';\n    this.message = \"The user rejected the request.\";\n  }\n}\n\nexport class XdefiConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({ chainId, provider: window.xfi.ethereum });\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({ account: accounts[0] });\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({ chainId: networkId, provider: window.xfi.ethereum });\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    if (window.xfi.ethereum.on) {\n      window?.xfi?.ethereum.on(\"chainChanged\", this.handleChainChanged);\n      window?.xfi?.ethereum.on(\"accountsChanged\", this.handleAccountsChanged);\n      window?.xfi?.ethereum.on(\"close\", this.handleClose);\n      window?.xfi?.ethereum.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n\n    if ((window?.xfi?.ethereum as any).isMetaMask) {\n      (window?.xfi?.ethereum as any).autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await (window?.xfi?.ethereum.send as Send)(\n        \"eth_requestAccounts\"\n      ).then((sendReturn) => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(\n        false,\n        \"eth_requestAccounts was unsuccessful, falling back to enable\"\n      );\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window?.xfi?.ethereum.enable().then(\n        (sendReturn:any) => sendReturn && parseSendReturn(sendReturn)[0]\n      );\n    }\n\n    return { provider: window?.xfi?.ethereum, ...(account ? { account } : {}) };\n  }\n\n  public async getProvider(): Promise<any> {\n    return window?.xfi?.ethereum;\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    let chainId;\n    try {\n      chainId = await (window?.xfi?.ethereum.send as Send)(\"eth_chainId\").then(\n        parseSendReturn\n      );\n    } catch {\n      warning(\n        false,\n        \"eth_chainId was unsuccessful, falling back to net_version\"\n      );\n    }\n\n    if (!chainId) {\n      try {\n        // window?.xfi?.ethereum.send('net_version').then((res:any) => {\n        //   console.log(res)\n        // })\n        // chainId = await (window?.xfi?.ethereum.send as Send)(\"net_version\").then(\n        //   parseSendReturn\n        // );\n        chainId = await window?.xfi?.ethereum.send('net_version')\n      } catch {\n        warning(\n          false,\n          \"net_version was unsuccessful, falling back to net version v2\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      try {\n        // chainId = parseSendReturn(\n        //   (window?.xfi?.ethereum.send as any)({ method: \"net_version\" })\n        // );\n        chainId = await window?.xfi?.ethereum.send('net_version')\n      } catch {\n        warning(\n          false,\n          \"net_version v2 was unsuccessful, falling back to manual matches and static properties\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      if ((window?.xfi?.ethereum as any).isDapper) {\n        chainId = parseSendReturn(\n          (window?.xfi?.ethereum as any).cachedResults.net_version\n        );\n      } else {\n        chainId =\n          (window?.xfi?.ethereum as any).chainId ||\n          (window?.xfi?.ethereum as any).netVersion ||\n          (window?.xfi?.ethereum as any).networkVersion ||\n          (window?.xfi?.ethereum as any)._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window?.xfi?.ethereum) {\n      throw new NoXdefiProviderError();\n    }\n\n    let account;\n    try {\n      // account = await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n      //   (sendReturn) => parseSendReturn(sendReturn)[0]\n      // );\n      account = await window?.xfi?.ethereum.send('eth_accounts')\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n\n    if (!account) {\n      try {\n        account = await window?.xfi?.ethereum.enable().then(\n          (sendReturn:any) => parseSendReturn(sendReturn)[0]\n        );\n      } catch {\n        warning(\n          false,\n          \"enable was unsuccessful, falling back to eth_accounts v2\"\n        );\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(\n        (window?.xfi?.ethereum.send as SendOld)({ method: \"eth_accounts\" })\n      )[0];\n    }\n\n    return account;\n  }\n\n  public deactivate() {\n    if (window?.xfi?.ethereum && window?.xfi?.ethereum.removeListener) {\n      window?.xfi?.ethereum.removeListener(\n        \"chainChanged\",\n        this.handleChainChanged\n      );\n      window?.xfi?.ethereum.removeListener(\n        \"accountsChanged\",\n        this.handleAccountsChanged\n      );\n      window?.xfi?.ethereum.removeListener(\"close\", this.handleClose);\n      window?.xfi?.ethereum.removeListener(\n        \"networkChanged\",\n        this.handleNetworkChanged\n      );\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window?.xfi?.ethereum) {\n      return false;\n    }\n\n    try {\n      return await (window?.xfi?.ethereum.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      );\n    } catch {\n      return false;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}