{"ast":null,"code":"// import { useEffect, useMemo, useRef } from 'react'\nimport{useCallback,useEffect,useMemo,useRef}from'react';import{useDispatch}from'react-redux';import{formatUnits}from'@ethersproject/units';import{useActiveWeb3React}from'../../hooks';import{useActiveReact}from'../../hooks/useActiveReact';import useInterval from'../../hooks/useInterval';import{tokenBalanceList}from'./actions';// import {useTokenBalances} from './hooks'\nimport{useAllMergeBridgeTokenList}from'../lists/hooks';import{useAllTransactions,isTransactionRecent}from'../transactions/hooks';import ERC20_INTERFACE from'../../constants/abis/erc20';import{useRpcState}from'../rpc/hooks';import{getWeb3}from'../../utils/tools/multicall';import{useBatchData}from'../../utils/tools/useBatchData';import{isAddress}from'../../utils/isAddress/index';import{ChainId}from'../../config/chainConfig/chainId';// import config from '../../config'\n// import { fromWei } from '../../utils/tools/tools'\n// const startTime = Date.now()\nconst limit=80;// const limit = 3\n// function getAllBalance () {\n//   return new Promise(resolve => {\n//   })\n// }\nfunction newTransactionsFirst(a,b){return b.addedTime-a.addedTime;}const NON_ERC20={[ChainId.ETH]:['0x5cbe98480a790554403694b98bff71a525907f5d','0x80fd8e18cc59177b4dbd2fae9c0efb8bf87edc1f'],[ChainId.OPTIMISM]:['0xf5ed69abb9b31ec7bec5a089290724035e3edb2c'],[ChainId.CELO]:['0x5566b6e4962ba83e05a426ad89031ec18e9cadd3'],[ChainId.BNB]:['0x43ba383b9934d8d45ea6348d00dbc1bae97d6e74'],[ChainId.TT]:['0x332730a4f6e03d9c55829435f10360e13cfa41ff']};export default function Updater(){const{chainId,account}=useActiveReact();const{library}=useActiveWeb3React();const dispatch=useDispatch();// const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\nconst allTokens=useAllMergeBridgeTokenList('mergeTokenList',chainId);const rpcItem=useRpcState();const tokenListRef=useRef(0);const allTransactions=useAllTransactions();// console.log(library)\nconst sortedRecentTransactions=useMemo(()=>{const txs=Object.values(allTransactions);return txs.filter(isTransactionRecent).sort(newTransactionsFirst);},[allTransactions]);const pending=sortedRecentTransactions.filter(tx=>!tx.receipt).map(tx=>tx.hash);const pendingLength=pending.length;const calls=useMemo(()=>{const arr=[];const norepeat=[];const list=allTokens?Object.values(allTokens!==null&&allTokens!==void 0?allTokens:{}):[];// console.log(list)\nif(account&&!isNaN(chainId)){// for (const obj of list) {\nfor(let i=0,len=list.length;i<len;i++){const obj=list[i];const token=obj.address;if(isAddress(obj.address)){var _NON_ERC20$chainId;if(norepeat.includes(token))continue;if(NON_ERC20===null||NON_ERC20===void 0?void 0:(_NON_ERC20$chainId=NON_ERC20[chainId])===null||_NON_ERC20$chainId===void 0?void 0:_NON_ERC20$chainId.includes(token.toLowerCase()))continue;const destList=obj.destChains;for(const destChainid in destList){const destChainList=destList[destChainid];for(const destTokenKey in destChainList){var _NON_ERC20$chainId2;const destTokenItem=destChainList[destTokenKey];if(NON_ERC20===null||NON_ERC20===void 0?void 0:(_NON_ERC20$chainId2=NON_ERC20[chainId])===null||_NON_ERC20$chainId2===void 0?void 0:_NON_ERC20$chainId2.includes(destTokenItem.fromanytoken.address.toLowerCase()))continue;if(!norepeat.includes(destTokenItem.fromanytoken.address)&&isAddress(destTokenItem.fromanytoken.address)&&destTokenItem.isFromLiquidity){arr.push({dec:destTokenItem.fromanytoken.decimals,target:destTokenItem.fromanytoken.address,callData:ERC20_INTERFACE.encodeFunctionData('balanceOf',[account])});}}}arr.push({dec:obj.decimals,target:token,callData:ERC20_INTERFACE.encodeFunctionData('balanceOf',[account])});}}}// console.log(arr)\nreturn arr;},[allTokens,account,chainId]);const getBalance=useCallback(arr=>{return new Promise(resolve=>{if(!chainId||isNaN(chainId)||arr.length<=0){resolve('');return;}const provider=rpcItem&&rpcItem.origin==='wallet'&&library?library===null||library===void 0?void 0:library.provider:'';useBatchData({chainId,calls:arr.map(_ref=>{let{callData,target}=_ref;return{type:'TOKEN',callData,target};}),provider}).then(res=>{// console.log(res)\nif(res){const blList={};for(let i=0,len=arr.length;i<len;i++){const token=arr[i].target.toLowerCase();const dec=arr[i].dec;const results=res[i];let bl='';try{bl=results==='0x'?'0':ERC20_INTERFACE.decodeFunctionResult('balanceOf',results)[0].toString();}catch(error){// console.error(error)\n}blList[token]={// balance: fromWei(results, dec),\nbalance:bl?formatUnits(bl,dec):'',balancestr:bl,dec:dec// blocknumber: res.blockNumber\n};}dispatch(tokenBalanceList({chainId,account,tokenList:blList}));}resolve(res);});});},[rpcItem,chainId]);const getETHBalance=useCallback(()=>{return new Promise(resolve=>{if(account){if(!chainId||isNaN(chainId)// || !config.getCurChainInfo(chainId)?.multicalToken\n){resolve('');return;}const provider=library?library===null||library===void 0?void 0:library.provider:'';const web3=getWeb3('',provider);web3.eth.getBalance(account).then(res=>{// console.log(res)\nconst blList={};const dec=18;blList['NATIVE']={balance:formatUnits(res,dec),balancestr:res,dec:dec,blocknumber:''};dispatch(tokenBalanceList({chainId,account,tokenList:blList}));resolve(res);});}else{resolve('');}});},[rpcItem,chainId,account]);const getAllBalance=useCallback(()=>{const results=[];let useLimit=limit;// console.log(chainId)\nif([ChainId.ARBITRUM].includes(chainId.toString())){// useLimit = 3\nuseLimit=limit;}if(calls.length>useLimit){for(let i=0,len=calls.length;i<len;i+=useLimit){results.push(calls.slice(i,i+useLimit));}}else{results.push(calls);}// console.log(calls)\n// console.log(results)\nconst arr=[getETHBalance()];for(const item of results){arr.push(getBalance(item));}const st=Date.now();Promise.all(arr).then(res=>{console.log(Date.now()-st);console.log(res);});},[calls,chainId]);useEffect(()=>{if(library&&chainId&&!isNaN(chainId)&&account&&!tokenListRef.current){tokenListRef.current=1;console.log(chainId);getAllBalance();}},[library,calls,chainId,account,rpcItem,getAllBalance]);useEffect(()=>{if(account)tokenListRef.current=0;},[account]);// console.log(pending)\n// console.log(pendingLength)\nuseEffect(()=>{// console.log('pendingLength')\nif(chainId&&!isNaN(chainId)&&account&&calls.length>0){getAllBalance();}},[pendingLength,getAllBalance]);useInterval(getAllBalance,1000*60*10,false);return null;}","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useDispatch","formatUnits","useActiveWeb3React","useActiveReact","useInterval","tokenBalanceList","useAllMergeBridgeTokenList","useAllTransactions","isTransactionRecent","ERC20_INTERFACE","useRpcState","getWeb3","useBatchData","isAddress","ChainId","limit","newTransactionsFirst","a","b","addedTime","NON_ERC20","ETH","OPTIMISM","CELO","BNB","TT","Updater","chainId","account","library","dispatch","allTokens","rpcItem","tokenListRef","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","pending","tx","receipt","map","hash","pendingLength","length","calls","arr","norepeat","list","isNaN","i","len","obj","token","address","_NON_ERC20$chainId","includes","toLowerCase","destList","destChains","destChainid","destChainList","destTokenKey","_NON_ERC20$chainId2","destTokenItem","fromanytoken","isFromLiquidity","push","dec","decimals","target","callData","encodeFunctionData","getBalance","Promise","resolve","provider","origin","_ref","type","then","res","blList","results","bl","decodeFunctionResult","toString","error","balance","balancestr","tokenList","getETHBalance","web3","eth","blocknumber","getAllBalance","useLimit","ARBITRUM","slice","item","st","Date","now","all","console","log","current"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/wallet/updater.ts"],"sourcesContent":["// import { useEffect, useMemo, useRef } from 'react'\nimport { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { formatUnits } from '@ethersproject/units'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport useInterval from '../../hooks/useInterval'\nimport { AppDispatch } from '../index'\nimport { tokenBalanceList } from './actions'\n// import {useTokenBalances} from './hooks'\n\nimport { useAllMergeBridgeTokenList } from '../lists/hooks'\nimport {useAllTransactions, isTransactionRecent} from '../transactions/hooks'\nimport { TransactionDetails } from '../transactions/reducer'\n\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\n\nimport {useRpcState} from '../rpc/hooks'\n\nimport {getWeb3} from '../../utils/tools/multicall'\nimport {useBatchData} from '../../utils/tools/useBatchData'\nimport { isAddress } from '../../utils/isAddress/index'\nimport { ChainId } from '../../config/chainConfig/chainId'\n\n// import config from '../../config'\n// import { fromWei } from '../../utils/tools/tools'\n// const startTime = Date.now()\nconst limit = 80\n// const limit = 3\n\n// function getAllBalance () {\n//   return new Promise(resolve => {\n\n//   })\n// }\n\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst NON_ERC20:any = {\n  [ChainId.ETH]: [\n    '0x5cbe98480a790554403694b98bff71a525907f5d',\n    '0x80fd8e18cc59177b4dbd2fae9c0efb8bf87edc1f'\n  ],\n  [ChainId.OPTIMISM]: [\n    '0xf5ed69abb9b31ec7bec5a089290724035e3edb2c'\n  ],\n  [ChainId.CELO]: [\n    '0x5566b6e4962ba83e05a426ad89031ec18e9cadd3'\n  ],\n  [ChainId.BNB]: [\n    '0x43ba383b9934d8d45ea6348d00dbc1bae97d6e74'\n  ],\n  [ChainId.TT]: [\n    '0x332730a4f6e03d9c55829435f10360e13cfa41ff'\n  ],\n}\n\nexport default function Updater(): null {\n  const { chainId, account } = useActiveReact()\n  const { library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  // const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const allTokens = useAllMergeBridgeTokenList('mergeTokenList', chainId)\n  const rpcItem = useRpcState()\n  const tokenListRef = useRef<any>(0)\n\n  const allTransactions = useAllTransactions()\n  // console.log(library)\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const pendingLength = pending.length\n  \n  const calls = useMemo(() => {\n    const arr = []\n    const norepeat:any = []\n    const list = allTokens ? Object.values(allTokens ?? {}) : []\n    // console.log(list)\n    if (account && !isNaN(chainId)) {\n      // for (const obj of list) {\n      for (let i = 0, len = list.length; i < len; i++) {\n        const obj:any = list[i]\n        const token:any = obj.address\n        if (isAddress(obj.address)) {\n          if (norepeat.includes(token)) continue\n          if (\n            NON_ERC20?.[chainId]?.includes(token.toLowerCase())\n          ) continue\n          const destList = obj.destChains\n          for (const destChainid in destList) {\n            const destChainList = destList[destChainid]\n            for (const destTokenKey in destChainList) {\n              const destTokenItem = destChainList[destTokenKey]\n              if (\n                NON_ERC20?.[chainId]?.includes(destTokenItem.fromanytoken.address.toLowerCase())\n              ) continue\n              if (!norepeat.includes(destTokenItem.fromanytoken.address) && isAddress(destTokenItem.fromanytoken.address) && destTokenItem.isFromLiquidity) {\n                arr.push({\n                  dec: destTokenItem.fromanytoken.decimals,\n                  target: destTokenItem.fromanytoken.address,\n                  callData: ERC20_INTERFACE.encodeFunctionData('balanceOf', [account]),\n                })\n              }\n            }\n          }\n          arr.push({\n            dec: obj.decimals,\n            target: token,\n            callData: ERC20_INTERFACE.encodeFunctionData('balanceOf', [account]),\n          })\n        }\n      }\n    }\n    // console.log(arr)\n    return arr\n  }, [allTokens, account, chainId])\n  const getBalance = useCallback((arr) => {\n    return new Promise(resolve => {\n      if (\n        !chainId\n        || isNaN(chainId)\n        || arr.length <= 0\n      ) {\n        resolve('')\n        return\n      }\n      const provider = rpcItem && rpcItem.origin === 'wallet' && library ? library?.provider : ''\n      useBatchData({\n        chainId, \n        calls: arr.map(({callData, target}: {callData:string, target:string}) => ({type: 'TOKEN', callData, target})), \n        provider\n      }).then((res) => {\n        // console.log(res)\n        if (res) {\n          const blList:any = {}\n          for (let i = 0, len = arr.length; i < len; i++) {\n            const token = arr[i].target.toLowerCase()\n            const dec = arr[i].dec\n            const results = res[i]\n            let bl = ''\n            try {\n              bl = results === '0x' ? '0' : ERC20_INTERFACE.decodeFunctionResult('balanceOf', results)[0].toString()\n            } catch (error) {\n              // console.error(error)\n            }\n            blList[token] = {\n              // balance: fromWei(results, dec),\n              balance: bl ? formatUnits(bl, dec) : '',\n              balancestr: bl,\n              dec: dec,\n              // blocknumber: res.blockNumber\n            }\n          }\n          dispatch(tokenBalanceList({\n            chainId,\n            account,\n            tokenList: blList\n          }))\n        }\n        resolve(res)\n      })\n    })\n  }, [rpcItem, chainId])\n\n  const getETHBalance = useCallback(() => {\n    return new Promise(resolve => {\n      if (account) {\n        if (\n          !chainId\n          || isNaN(chainId)\n          // || !config.getCurChainInfo(chainId)?.multicalToken\n        ) {\n          resolve('')\n          return\n        }\n        const provider = library ? library?.provider : ''\n        const web3 = getWeb3('', provider)\n        web3.eth.getBalance(account).then((res:any) => {\n          // console.log(res)\n          const blList:any = {}\n          const dec = 18\n          blList['NATIVE'] = {\n            balance: formatUnits(res, dec),\n            balancestr: res,\n            dec: dec,\n            blocknumber: ''\n          }\n          dispatch(tokenBalanceList({\n            chainId,\n            account,\n            tokenList: blList\n          }))\n          resolve(res)\n        })\n      } else {\n        resolve('')\n      }\n    })\n  }, [rpcItem, chainId, account])\n\n  const getAllBalance = useCallback(() => {\n    const results = []\n    let useLimit = limit\n    // console.log(chainId)\n    if ([ChainId.ARBITRUM].includes(chainId.toString())) {\n      // useLimit = 3\n      useLimit = limit\n    }\n    if (calls.length > useLimit) {\n      for (let i = 0, len = calls.length; i < len; i += useLimit) {\n        results.push(calls.slice(i, i + useLimit))\n      }\n    } else {\n      results.push(calls)\n    }\n    // console.log(calls)\n    // console.log(results)\n    const arr = [getETHBalance()]\n    for (const item of results) {\n      arr.push(getBalance(item))\n    }\n    const st = Date.now()\n    Promise.all(arr).then(res => {\n      console.log(Date.now() - st)\n      console.log(res)\n    })\n  }, [calls, chainId])\n\n  useEffect(() => {\n    if (\n      library\n      && chainId\n      && !isNaN(chainId)\n      && account\n      && !tokenListRef.current\n    ) {\n      tokenListRef.current = 1\n      console.log(chainId)\n      getAllBalance()\n    }\n  }, [library, calls, chainId, account, rpcItem, getAllBalance])\n\n  useEffect(() => {\n    if (account) tokenListRef.current = 0\n  }, [account])\n\n  // console.log(pending)\n  // console.log(pendingLength)\n  useEffect(() => {\n    // console.log('pendingLength')\n    if (\n      chainId\n      && !isNaN(chainId)\n      && account\n      && calls.length > 0\n    ) {\n      getAllBalance()\n    }\n  }, [pendingLength, getAllBalance])\n\n  useInterval(getAllBalance, 1000 * 60 * 10, false)\n\n  return null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}