{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as utils from './utils.js';\nimport baseLogger from './logger.js';\nvar Interpolator = /*#__PURE__*/\nfunction () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Interpolator);\n    this.logger = baseLogger.create('interpolator');\n    this.init(options, true);\n  }\n  /* eslint no-param-reassign: 0 */\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var reset = arguments.length > 1 ? arguments[1] : undefined;\n      if (reset) {\n        this.options = options;\n        this.format = options.interpolation && options.interpolation.format || function (value) {\n          return value;\n        };\n      }\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : utils.escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? utils.regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? utils.regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? utils.regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || utils.regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? utils.regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || utils.regexEscape(')');\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000; // the regexp\n\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      // the regexp\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n      var match;\n      var value;\n      var replaces;\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) return utils.getPath(data, key);\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(utils.getPath(data, k), f, lng);\n      };\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      replaces = 0; // unescape if has unescapePrefix/Suffix\n\n      /* eslint no-cond-assign: 0 */\n\n      while (match = this.regexpUnescape.exec(str)) {\n        value = handleFormat(match[1].trim());\n        str = str.replace(match[0], value);\n        this.regexpUnescape.lastIndex = 0;\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n      replaces = 0; // regular escape on demand\n\n      while (match = this.regexp.exec(str)) {\n        value = handleFormat(match[1].trim());\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = utils.makeString(value);\n        }\n        value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n      var clonedOptions = _objectSpread({}, options);\n      clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n      // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n\n      function handleHasOptions(key, inheritedOptions) {\n        if (key.indexOf(',') < 0) return key;\n        var p = key.split(',');\n        key = p.shift();\n        var optionsString = p.join(',');\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.error(\"failed parsing options string in nesting for key \".concat(key), e);\n        }\n        return key;\n      } // regular escape on demand\n\n      while (match = this.nestingRegexp.exec(str)) {\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions); // is only the nesting key (key1 = '$(key2)') return the value without stringify\n\n        if (value && match[0] === str && typeof value !== 'string') return value; // no string to include or empty\n\n        if (typeof value !== 'string') value = utils.makeString(value);\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        } // Nested keys should not be escaped by default #854\n        // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }]);\n  return Interpolator;\n}();\nexport default Interpolator;","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","utils","baseLogger","Interpolator","options","arguments","length","undefined","logger","create","init","key","value","reset","format","interpolation","escapeValue","iOpts","escape","useRawValueToEscape","prefix","regexEscape","prefixEscaped","suffix","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","maxReplaces","resetRegExp","regexpStr","concat","regexp","RegExp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","nestingRegexp","interpolate","str","data","lng","_this","match","replaces","regexSafe","val","replace","handleFormat","indexOf","getPath","p","split","k","shift","trim","f","join","missingInterpolationHandler","exec","lastIndex","temp","warn","makeString","nest","fc","clonedOptions","applyPostProcessor","handleHasOptions","inheritedOptions","optionsString","JSON","parse","e","error","call"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/i18next/dist/es/Interpolator.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as utils from './utils.js';\nimport baseLogger from './logger.js';\n\nvar Interpolator =\n/*#__PURE__*/\nfunction () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.init(options, true);\n  }\n  /* eslint no-param-reassign: 0 */\n\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var reset = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (reset) {\n        this.options = options;\n\n        this.format = options.interpolation && options.interpolation.format || function (value) {\n          return value;\n        };\n      }\n\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : utils.escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? utils.regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? utils.regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? utils.regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || utils.regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? utils.regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || utils.regexEscape(')');\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000; // the regexp\n\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      // the regexp\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) return utils.getPath(data, key);\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(utils.getPath(data, k), f, lng);\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      replaces = 0; // unescape if has unescapePrefix/Suffix\n\n      /* eslint no-cond-assign: 0 */\n\n      while (match = this.regexpUnescape.exec(str)) {\n        value = handleFormat(match[1].trim());\n        str = str.replace(match[0], value);\n        this.regexpUnescape.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      replaces = 0; // regular escape on demand\n\n      while (match = this.regexp.exec(str)) {\n        value = handleFormat(match[1].trim());\n\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            var temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else {\n            this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = utils.makeString(value);\n        }\n\n        value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n        replaces++;\n\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n      // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n\n      function handleHasOptions(key, inheritedOptions) {\n        if (key.indexOf(',') < 0) return key;\n        var p = key.split(',');\n        key = p.shift();\n        var optionsString = p.join(',');\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.error(\"failed parsing options string in nesting for key \".concat(key), e);\n        }\n\n        return key;\n      } // regular escape on demand\n\n\n      while (match = this.nestingRegexp.exec(str)) {\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions); // is only the nesting key (key1 = '$(key2)') return the value without stringify\n\n        if (value && match[0] === str && typeof value !== 'string') return value; // no string to include or empty\n\n        if (typeof value !== 'string') value = utils.makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        } // Nested keys should not be escaped by default #854\n        // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nexport default Interpolator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}