{"ast":null,"code":"\"use strict\";\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst u8a = a => a instanceof Uint8Array;\n// Cast array to different type\nconst u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => word << 32 - shift | word >>> shift;\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => {};\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await (0, exports.nextTick)();\n    ts += diff;\n  }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error(\"utf8ToBytes expected string, got \".concat(typeof str));\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(\"expected Uint8Array, got \".concat(typeof data));\n  return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach(a => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n  const hashC = msg => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes() {\n  let bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n    return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;","map":{"version":3,"names":["crypto_1","require","u8a","a","Uint8Array","u8","arr","buffer","byteOffset","byteLength","exports","u32","Uint32Array","Math","floor","createView","DataView","rotr","word","shift","isLE","Error","hexes","Array","from","length","v","i","toString","padStart","bytesToHex","bytes","hex","hexToBytes","len","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","str","concat","TextEncoder","encode","toBytes","data","concatBytes","_len","arguments","arrays","_key","r","reduce","sum","pad","forEach","set","Hash","clone","_cloneInto","isPlainObject","obj","Object","prototype","call","constructor","checkOpts","defaults","opts","undefined","merged","assign","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","outputLen","blockLen","create","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","bytesLength","crypto","getRandomValues"],"sources":["src/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}