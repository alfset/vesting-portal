{"ast":null,"code":"import { createElement } from 'react';\nconst isHMR = (() => {\n  try {\n    // @ts-ignore prevent type warning\n    return process.env.NODE_ENV === 'development';\n    // TODO currenly CRA default babel config does not support import.meta\n    //return !!import.meta.hot || !!module.hot;\n  } catch (_a) {\n    return false;\n  }\n})();\nexport function fixHMR(Component) {\n  return isHMR ? props => /*#__PURE__*/createElement(Component, props) : Component;\n}","map":{"version":3,"names":["createElement","isHMR","process","env","NODE_ENV","_a","fixHMR","Component","props"],"sources":["../../../src/fix-hmr/index.ts"],"sourcesContent":["import { ComponentType, createElement } from 'react';\n\nconst isHMR = (() => {\n  try {\n    // @ts-ignore prevent type warning\n    return process.env.NODE_ENV === 'development';\n    // TODO currenly CRA default babel config does not support import.meta\n    //return !!import.meta.hot || !!module.hot;\n  } catch {\n    return false;\n  }\n})();\n\nexport function fixHMR<Props extends {}>(\n  Component: ComponentType<Props>,\n): ComponentType<Props> {\n  return isHMR ? (props: Props) => createElement(Component, props) : Component;\n}\n"],"mappings":"AAAA,SAAwBA,aAAa,QAAQ,OAAO;AAEpD,MAAMC,KAAK,GAAG,CAAC,MAAK;EAClB,IAAI;IACF;IACA,OAAOC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;IAC7C;IACA;GACD,CAAC,OAAAC,EAAA,EAAM;IACN,OAAO,KAAK;;AAEhB,CAAC,EAAC,CAAE;AAEJ,OAAM,SAAUC,MAAMA,CACpBC,SAA+B;EAE/B,OAAON,KAAK,GAAIO,KAAY,iBAAKR,aAAa,CAACO,SAAS,EAAEC,KAAK,CAAC,GAAGD,SAAS;AAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}