{"ast":null,"code":"// import { useCallback, useEffect, useState, useMemo } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { AppDispatch, AppState } from '../index'\nimport{useSelector}from'react-redux';// import { rpclist } from './actions'\nimport{useActiveReact}from'../../hooks/useActiveReact';export function useRpcState(){const{chainId}=useActiveReact();const list=useSelector(state=>state.rpc.rpclist);if(!chainId||!list[chainId])return{};return list[chainId];}","map":{"version":3,"names":["useSelector","useActiveReact","useRpcState","chainId","list","state","rpc","rpclist"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/rpc/hooks.ts"],"sourcesContent":["// import { useCallback, useEffect, useState, useMemo } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { AppDispatch, AppState } from '../index'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n// import { rpclist } from './actions'\n\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nexport function useRpcState(): any {\n  const { chainId } = useActiveReact()\n  const list:any = useSelector<AppState, AppState['rpc']>(state => state.rpc.rpclist)\n  if (!chainId || !list[chainId]) return {}\n\n  return list[chainId]\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAASA,WAAW,KAAQ,aAAa,CAEzC;AAEA,OAASC,cAAc,KAAQ,4BAA4B,CAE3D,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAQ,CACjC,KAAM,CAAEC,OAAQ,CAAC,CAAGF,cAAc,CAAC,CAAC,CACpC,KAAM,CAAAG,IAAQ,CAAGJ,WAAW,CAA4BK,KAAK,EAAIA,KAAK,CAACC,GAAG,CAACC,OAAO,CAAC,CACnF,GAAI,CAACJ,OAAO,EAAI,CAACC,IAAI,CAACD,OAAO,CAAC,CAAE,MAAO,CAAC,CAAC,CAEzC,MAAO,CAAAC,IAAI,CAACD,OAAO,CAAC,CACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}