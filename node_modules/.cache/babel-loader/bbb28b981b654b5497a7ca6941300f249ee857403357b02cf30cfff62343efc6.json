{"ast":null,"code":"import{AccAddress}from'@terra-money/terra.js';import{getAddress}from'@ethersproject/address';import nebulas from'nebulas';import{ChainId}from\"../../config/chainConfig/chainId\";import{isBTCAddress,BTCARR}from'./BTC';import{isTRXAddress}from'../../nonevm/trx';import{isSolAddress}from'../../nonevm/solana';import{isAptosAddress}from'../../nonevm/apt';import{isAtomAddress}from'../../nonevm/atom';export function isEvmAddress(value){try{return getAddress(value);}catch{return false;}}const IotaBech32Helper={BECH32_DEFAULT_HRP_MAIN:/^iota/,BECH32_DEFAULT_HRP_DEV:/^atoi/};const stellarAddress=/^[1-9A-Z]{56}$/;export function isAddress(address,chainId){// console.log(chainId, address)\nif(!address)return undefined;if(chainId){if([ChainId.TRX,ChainId.TRX_TEST].includes(chainId)){return isTRXAddress(address);}else if([ChainId.NAS].includes(chainId)){return nebulas.Account.isValidAddress(address)?address:false;}else if([ChainId.TERRA].includes(chainId)){return AccAddress.validate(address)?address:false;}else if([ChainId.XRP].includes(chainId)){return address&&address.indexOf('r')===0&&address.length===34?true:false;}else if([ChainId.NEAR,ChainId.NEAR_TEST].includes(chainId)){return address&&address.indexOf('0x')!==0?address:false;}else if(BTCARR.includes(chainId)){return isBTCAddress(address,chainId);}else if([ChainId.IOTA,ChainId.IOTA_TEST].includes(chainId)){if(chainId===ChainId.IOTA){if(IotaBech32Helper.BECH32_DEFAULT_HRP_MAIN.test(address)){return address;}return false;}else{if(IotaBech32Helper.BECH32_DEFAULT_HRP_DEV.test(address)){return address;}return false;}}else if([ChainId.XLM,ChainId.XLM_TEST].includes(chainId)){if(stellarAddress.test(address)){return address;}return false;}else if([ChainId.ADA,ChainId.ADA_TEST].includes(chainId)){if(chainId===ChainId.ADA){const pattern=/^addr[0-9a-zA-Z]{54,99}/;if(pattern.test(address)){return address;}}else{const pattern=/^addr_test[0-9a-zA-Z]{54,99}/;if(pattern.test(address)){return address;}}return false;}else if([ChainId.FLOW,ChainId.FLOW_TEST].includes(chainId)){const pattern=/^0x[0-9a-zA-Z]{16}/;if(pattern.test(address)){return address;}return false;}else if([ChainId.SOL,ChainId.SOL_TEST].includes(chainId)){return isSolAddress(address);}else if([ChainId.APT,ChainId.APT_TEST].includes(chainId)){return isAptosAddress(address);}else if([ChainId.ATOM_SEI,ChainId.ATOM_SEI_TEST,ChainId.ATOM_DCORE,ChainId.ATOM_DCORE_TEST].includes(chainId)){return isAtomAddress(address,chainId);}else{return isEvmAddress(address);}}else{return isEvmAddress(address);}}","map":{"version":3,"names":["AccAddress","getAddress","nebulas","ChainId","isBTCAddress","BTCARR","isTRXAddress","isSolAddress","isAptosAddress","isAtomAddress","isEvmAddress","value","IotaBech32Helper","BECH32_DEFAULT_HRP_MAIN","BECH32_DEFAULT_HRP_DEV","stellarAddress","isAddress","address","chainId","undefined","TRX","TRX_TEST","includes","NAS","Account","isValidAddress","TERRA","validate","XRP","indexOf","length","NEAR","NEAR_TEST","IOTA","IOTA_TEST","test","XLM","XLM_TEST","ADA","ADA_TEST","pattern","FLOW","FLOW_TEST","SOL","SOL_TEST","APT","APT_TEST","ATOM_SEI","ATOM_SEI_TEST","ATOM_DCORE","ATOM_DCORE_TEST"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/isAddress/index.ts"],"sourcesContent":["\nimport { AccAddress } from '@terra-money/terra.js'\nimport { getAddress } from '@ethersproject/address'\nimport nebulas from 'nebulas'\nimport { ChainId } from \"../../config/chainConfig/chainId\"\nimport {isBTCAddress, BTCARR} from './BTC'\n\nimport {isTRXAddress} from '../../nonevm/trx'\nimport {isSolAddress} from '../../nonevm/solana'\nimport {isAptosAddress} from '../../nonevm/apt'\nimport {isAtomAddress} from '../../nonevm/atom'\n\nexport function isEvmAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst IotaBech32Helper = {\n  BECH32_DEFAULT_HRP_MAIN: /^iota/,\n  BECH32_DEFAULT_HRP_DEV: /^atoi/\n}\n\nconst stellarAddress = /^[1-9A-Z]{56}$/\n\nexport function isAddress(address: any, chainId?: any) {\n  // console.log(chainId, address)\n  if (!address) return undefined\n  if (chainId) {\n    if ([ChainId.TRX, ChainId.TRX_TEST].includes(chainId)) {\n      return isTRXAddress(address)\n    } else if ([ChainId.NAS].includes(chainId)) {\n      return nebulas.Account.isValidAddress(address) ? address : false\n    } else if ([ChainId.TERRA].includes(chainId)) {\n      return AccAddress.validate(address) ? address : false\n    } else if ([ChainId.XRP].includes(chainId)) {\n      return address && address.indexOf('r') === 0 && address.length === 34 ? true : false\n    } else if ([ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) {\n      return address && address.indexOf('0x') !== 0 ? address : false\n    } else if (BTCARR.includes(chainId)) {\n      return isBTCAddress(address, chainId)\n    } else if ([ChainId.IOTA, ChainId.IOTA_TEST].includes(chainId)) {\n      if (chainId === ChainId.IOTA) {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_MAIN.test(address)) {\n          return address\n        }\n        return false\n      } else {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_DEV.test(address)) {\n          return address\n        }\n        return false\n      }\n    } else if ([ChainId.XLM, ChainId.XLM_TEST].includes(chainId)) {\n      if (stellarAddress.test(address)) {\n        return address\n      }\n      return false\n    } else if ([ChainId.ADA, ChainId.ADA_TEST].includes(chainId)) {\n      if (chainId === ChainId.ADA) {\n        const pattern = /^addr[0-9a-zA-Z]{54,99}/\n        if (pattern.test(address)) {\n          return address\n        }\n      } else {\n        const pattern = /^addr_test[0-9a-zA-Z]{54,99}/\n        if (pattern.test(address)) {\n          return address\n        }\n      }\n      return false\n    } else if ([ChainId.FLOW, ChainId.FLOW_TEST].includes(chainId)) {\n      const pattern = /^0x[0-9a-zA-Z]{16}/\n      if (pattern.test(address)) {\n        return address\n      }\n      return false\n    } else if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      return isSolAddress(address)\n    } else if ([ChainId.APT, ChainId.APT_TEST].includes(chainId)) {\n      return isAptosAddress(address)\n    } else if ([ChainId.ATOM_SEI, ChainId.ATOM_SEI_TEST, ChainId.ATOM_DCORE, ChainId.ATOM_DCORE_TEST].includes(chainId)) {\n      return isAtomAddress(address, chainId)\n    } else {\n      return isEvmAddress(address)\n    }\n  } else {\n    return isEvmAddress(address)\n  }\n}\n"],"mappings":"AACA,OAASA,UAAU,KAAQ,uBAAuB,CAClD,OAASC,UAAU,KAAQ,wBAAwB,CACnD,MAAO,CAAAC,OAAO,KAAM,SAAS,CAC7B,OAASC,OAAO,KAAQ,kCAAkC,CAC1D,OAAQC,YAAY,CAAEC,MAAM,KAAO,OAAO,CAE1C,OAAQC,YAAY,KAAO,kBAAkB,CAC7C,OAAQC,YAAY,KAAO,qBAAqB,CAChD,OAAQC,cAAc,KAAO,kBAAkB,CAC/C,OAAQC,aAAa,KAAO,mBAAmB,CAE/C,MAAO,SAAS,CAAAC,YAAYA,CAACC,KAAU,CAAkB,CACvD,GAAI,CACF,MAAO,CAAAV,UAAU,CAACU,KAAK,CAAC,CAC1B,CAAE,KAAM,CACN,MAAO,MAAK,CACd,CACF,CAEA,KAAM,CAAAC,gBAAgB,CAAG,CACvBC,uBAAuB,CAAE,OAAO,CAChCC,sBAAsB,CAAE,OAC1B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,gBAAgB,CAEvC,MAAO,SAAS,CAAAC,SAASA,CAACC,OAAY,CAAEC,OAAa,CAAE,CACrD;AACA,GAAI,CAACD,OAAO,CAAE,MAAO,CAAAE,SAAS,CAC9B,GAAID,OAAO,CAAE,CACX,GAAI,CAACf,OAAO,CAACiB,GAAG,CAAEjB,OAAO,CAACkB,QAAQ,CAAC,CAACC,QAAQ,CAACJ,OAAO,CAAC,CAAE,CACrD,MAAO,CAAAZ,YAAY,CAACW,OAAO,CAAC,CAC9B,CAAC,IAAM,IAAI,CAACd,OAAO,CAACoB,GAAG,CAAC,CAACD,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC1C,MAAO,CAAAhB,OAAO,CAACsB,OAAO,CAACC,cAAc,CAACR,OAAO,CAAC,CAAGA,OAAO,CAAG,KAAK,CAClE,CAAC,IAAM,IAAI,CAACd,OAAO,CAACuB,KAAK,CAAC,CAACJ,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC5C,MAAO,CAAAlB,UAAU,CAAC2B,QAAQ,CAACV,OAAO,CAAC,CAAGA,OAAO,CAAG,KAAK,CACvD,CAAC,IAAM,IAAI,CAACd,OAAO,CAACyB,GAAG,CAAC,CAACN,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC1C,MAAO,CAAAD,OAAO,EAAIA,OAAO,CAACY,OAAO,CAAC,GAAG,CAAC,GAAK,CAAC,EAAIZ,OAAO,CAACa,MAAM,GAAK,EAAE,CAAG,IAAI,CAAG,KAAK,CACtF,CAAC,IAAM,IAAI,CAAC3B,OAAO,CAAC4B,IAAI,CAAE5B,OAAO,CAAC6B,SAAS,CAAC,CAACV,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC9D,MAAO,CAAAD,OAAO,EAAIA,OAAO,CAACY,OAAO,CAAC,IAAI,CAAC,GAAK,CAAC,CAAGZ,OAAO,CAAG,KAAK,CACjE,CAAC,IAAM,IAAIZ,MAAM,CAACiB,QAAQ,CAACJ,OAAO,CAAC,CAAE,CACnC,MAAO,CAAAd,YAAY,CAACa,OAAO,CAAEC,OAAO,CAAC,CACvC,CAAC,IAAM,IAAI,CAACf,OAAO,CAAC8B,IAAI,CAAE9B,OAAO,CAAC+B,SAAS,CAAC,CAACZ,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC9D,GAAIA,OAAO,GAAKf,OAAO,CAAC8B,IAAI,CAAE,CAC5B,GAAIrB,gBAAgB,CAACC,uBAAuB,CAACsB,IAAI,CAAClB,OAAO,CAAC,CAAE,CAC1D,MAAO,CAAAA,OAAO,CAChB,CACA,MAAO,MAAK,CACd,CAAC,IAAM,CACL,GAAIL,gBAAgB,CAACE,sBAAsB,CAACqB,IAAI,CAAClB,OAAO,CAAC,CAAE,CACzD,MAAO,CAAAA,OAAO,CAChB,CACA,MAAO,MAAK,CACd,CACF,CAAC,IAAM,IAAI,CAACd,OAAO,CAACiC,GAAG,CAAEjC,OAAO,CAACkC,QAAQ,CAAC,CAACf,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC5D,GAAIH,cAAc,CAACoB,IAAI,CAAClB,OAAO,CAAC,CAAE,CAChC,MAAO,CAAAA,OAAO,CAChB,CACA,MAAO,MAAK,CACd,CAAC,IAAM,IAAI,CAACd,OAAO,CAACmC,GAAG,CAAEnC,OAAO,CAACoC,QAAQ,CAAC,CAACjB,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC5D,GAAIA,OAAO,GAAKf,OAAO,CAACmC,GAAG,CAAE,CAC3B,KAAM,CAAAE,OAAO,CAAG,yBAAyB,CACzC,GAAIA,OAAO,CAACL,IAAI,CAAClB,OAAO,CAAC,CAAE,CACzB,MAAO,CAAAA,OAAO,CAChB,CACF,CAAC,IAAM,CACL,KAAM,CAAAuB,OAAO,CAAG,8BAA8B,CAC9C,GAAIA,OAAO,CAACL,IAAI,CAAClB,OAAO,CAAC,CAAE,CACzB,MAAO,CAAAA,OAAO,CAChB,CACF,CACA,MAAO,MAAK,CACd,CAAC,IAAM,IAAI,CAACd,OAAO,CAACsC,IAAI,CAAEtC,OAAO,CAACuC,SAAS,CAAC,CAACpB,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC9D,KAAM,CAAAsB,OAAO,CAAG,oBAAoB,CACpC,GAAIA,OAAO,CAACL,IAAI,CAAClB,OAAO,CAAC,CAAE,CACzB,MAAO,CAAAA,OAAO,CAChB,CACA,MAAO,MAAK,CACd,CAAC,IAAM,IAAI,CAACd,OAAO,CAACwC,GAAG,CAAExC,OAAO,CAACyC,QAAQ,CAAC,CAACtB,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC5D,MAAO,CAAAX,YAAY,CAACU,OAAO,CAAC,CAC9B,CAAC,IAAM,IAAI,CAACd,OAAO,CAAC0C,GAAG,CAAE1C,OAAO,CAAC2C,QAAQ,CAAC,CAACxB,QAAQ,CAACJ,OAAO,CAAC,CAAE,CAC5D,MAAO,CAAAV,cAAc,CAACS,OAAO,CAAC,CAChC,CAAC,IAAM,IAAI,CAACd,OAAO,CAAC4C,QAAQ,CAAE5C,OAAO,CAAC6C,aAAa,CAAE7C,OAAO,CAAC8C,UAAU,CAAE9C,OAAO,CAAC+C,eAAe,CAAC,CAAC5B,QAAQ,CAACJ,OAAO,CAAC,CAAE,CACnH,MAAO,CAAAT,aAAa,CAACQ,OAAO,CAAEC,OAAO,CAAC,CACxC,CAAC,IAAM,CACL,MAAO,CAAAR,YAAY,CAACO,OAAO,CAAC,CAC9B,CACF,CAAC,IAAM,CACL,MAAO,CAAAP,YAAY,CAACO,OAAO,CAAC,CAC9B,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}