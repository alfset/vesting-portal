{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeTrust = changeTrust;\nvar _isUndefined = require('lodash/isUndefined');\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\nvar _jsXdr = require('js-xdr');\nvar _bignumber = require('bignumber.js');\nvar _bignumber2 = _interopRequireDefault(_bignumber);\nvar _xdr = require('../xdr');\nvar _xdr2 = _interopRequireDefault(_xdr);\nvar _asset = require('../asset');\nvar _liquidity_pool_asset = require('../liquidity_pool_asset');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MAX_INT64 = '9223372036854775807';\n\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\nfunction changeTrust(opts) {\n  var attributes = {};\n  if (opts.asset instanceof _asset.Asset) {\n    attributes.line = opts.asset.toChangeTrustXDRObject();\n  } else if (opts.asset instanceof _liquidity_pool_asset.LiquidityPoolAsset) {\n    attributes.line = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\n  }\n  if (!(0, _isUndefined2.default)(opts.limit) && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = _jsXdr.Hyper.fromString(new _bignumber2.default(MAX_INT64).toString());\n  }\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n  var changeTrustOP = new _xdr2.default.ChangeTrustOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _xdr2.default.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n  return new _xdr2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","changeTrust","_isUndefined","require","_isUndefined2","_interopRequireDefault","_jsXdr","_bignumber","_bignumber2","_xdr","_xdr2","_asset","_liquidity_pool_asset","obj","__esModule","default","MAX_INT64","opts","attributes","asset","Asset","line","toChangeTrustXDRObject","LiquidityPoolAsset","toXDRObject","TypeError","limit","isValidAmount","constructAmountRequirementsError","_toXDRAmount","Hyper","fromString","toString","source","masterKeypair","changeTrustOP","ChangeTrustOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/stellar-base/lib/operations/change_trust.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeTrust = changeTrust;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _xdr = require('../xdr');\n\nvar _xdr2 = _interopRequireDefault(_xdr);\n\nvar _asset = require('../asset');\n\nvar _liquidity_pool_asset = require('../liquidity_pool_asset');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MAX_INT64 = '9223372036854775807';\n\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\nfunction changeTrust(opts) {\n  var attributes = {};\n\n  if (opts.asset instanceof _asset.Asset) {\n    attributes.line = opts.asset.toChangeTrustXDRObject();\n  } else if (opts.asset instanceof _liquidity_pool_asset.LiquidityPoolAsset) {\n    attributes.line = opts.asset.toXDRObject();\n  } else {\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\n  }\n\n  if (!(0, _isUndefined2.default)(opts.limit) && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = _jsXdr.Hyper.fromString(new _bignumber2.default(MAX_INT64).toString());\n  }\n\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n  var changeTrustOP = new _xdr2.default.ChangeTrustOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _xdr2.default.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _xdr2.default.Operation(opAttributes);\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGA,WAAW;AAEjC,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEhD,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAY,CAAC;AAExD,IAAII,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAE9B,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAExC,IAAIK,WAAW,GAAGH,sBAAsB,CAACE,UAAU,CAAC;AAEpD,IAAIE,IAAI,GAAGN,OAAO,CAAC,QAAQ,CAAC;AAE5B,IAAIO,KAAK,GAAGL,sBAAsB,CAACI,IAAI,CAAC;AAExC,IAAIE,MAAM,GAAGR,OAAO,CAAC,UAAU,CAAC;AAEhC,IAAIS,qBAAqB,GAAGT,OAAO,CAAC,yBAAyB,CAAC;AAE9D,SAASE,sBAAsBA,CAACQ,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAE9F,IAAIG,SAAS,GAAG,qBAAqB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASf,WAAWA,CAACgB,IAAI,EAAE;EACzB,IAAIC,UAAU,GAAG,CAAC,CAAC;EAEnB,IAAID,IAAI,CAACE,KAAK,YAAYR,MAAM,CAACS,KAAK,EAAE;IACtCF,UAAU,CAACG,IAAI,GAAGJ,IAAI,CAACE,KAAK,CAACG,sBAAsB,CAAC,CAAC;EACvD,CAAC,MAAM,IAAIL,IAAI,CAACE,KAAK,YAAYP,qBAAqB,CAACW,kBAAkB,EAAE;IACzEL,UAAU,CAACG,IAAI,GAAGJ,IAAI,CAACE,KAAK,CAACK,WAAW,CAAC,CAAC;EAC5C,CAAC,MAAM;IACL,MAAM,IAAIC,SAAS,CAAC,2CAA2C,CAAC;EAClE;EAEA,IAAI,CAAC,CAAC,CAAC,EAAErB,aAAa,CAACW,OAAO,EAAEE,IAAI,CAACS,KAAK,CAAC,IAAI,CAAC,IAAI,CAACC,aAAa,CAACV,IAAI,CAACS,KAAK,EAAE,IAAI,CAAC,EAAE;IACpF,MAAM,IAAID,SAAS,CAAC,IAAI,CAACG,gCAAgC,CAAC,OAAO,CAAC,CAAC;EACrE;EAEA,IAAIX,IAAI,CAACS,KAAK,EAAE;IACdR,UAAU,CAACQ,KAAK,GAAG,IAAI,CAACG,YAAY,CAACZ,IAAI,CAACS,KAAK,CAAC;EAClD,CAAC,MAAM;IACLR,UAAU,CAACQ,KAAK,GAAGpB,MAAM,CAACwB,KAAK,CAACC,UAAU,CAAC,IAAIvB,WAAW,CAACO,OAAO,CAACC,SAAS,CAAC,CAACgB,QAAQ,CAAC,CAAC,CAAC;EAC3F;EAEA,IAAIf,IAAI,CAACgB,MAAM,EAAE;IACff,UAAU,CAACe,MAAM,GAAGhB,IAAI,CAACgB,MAAM,CAACC,aAAa;EAC/C;EACA,IAAIC,aAAa,GAAG,IAAIzB,KAAK,CAACK,OAAO,CAACqB,aAAa,CAAClB,UAAU,CAAC;EAE/D,IAAImB,YAAY,GAAG,CAAC,CAAC;EACrBA,YAAY,CAACC,IAAI,GAAG5B,KAAK,CAACK,OAAO,CAACwB,aAAa,CAACtC,WAAW,CAACkC,aAAa,CAAC;EAC1E,IAAI,CAACK,gBAAgB,CAACH,YAAY,EAAEpB,IAAI,CAAC;EAEzC,OAAO,IAAIP,KAAK,CAACK,OAAO,CAAC0B,SAAS,CAACJ,YAAY,CAAC;AAClD"},"metadata":{},"sourceType":"script","externalDependencies":[]}