{"ast":null,"code":"import { ChainId } from \"../../config/chainConfig/chainId\";\nimport { spportChainArr } from '../../config/chainConfig';\nfunction useChain(data) {\n  const list = {};\n  // console.log(spportChainArr)\n  for (const c in data) {\n    if (!spportChainArr.includes(c)) continue;\n    list[c] = {\n      ...data[c]\n    };\n  }\n  return list;\n}\nconst BASE_INFO = {\n  name: 'DELTA',\n  symbol: 'DELTA',\n  decimals: 18,\n  label: 'delta'\n};\nconst VENFT_BASE_INFO = {\n  name: 'veDELTA NFT',\n  symbol: 'veDELTA',\n  decimals: 18\n};\nconst veMULTI = useChain({\n  [ChainId.PLQ]: {\n    ...VENFT_BASE_INFO,\n    address: '0xFc04de084548a033D6fAB40e4CfB27C832f9f35E'\n  }\n});\nconst MULTI_TOKEN = useChain({\n  [ChainId.PLQ]: {\n    ...BASE_INFO,\n    address: '0x6aF48997671584672e084Bf2296473677598ee58'\n  }\n});\nconst REWARD_TOKEN = useChain({\n  [ChainId.PLQ]: {\n    name: 'Wrapped PLQ',\n    symbol: 'wPLQ',\n    decimals: 18,\n    address: '0x5ebcdf1de1781e8b5d41c016b0574ad53e2f6e1a'\n  }\n});\nconst REWARD = useChain({\n  [ChainId.PLQ]: {\n    address: '0xfB44597e54CE168A2D97b0cD19aAebc96d9F7684'\n  }\n});\nconst INIT_TIME = 365;\nconst MIN_DAY = 6;\n// const INIT_TIME = 0\n// const MIN_DAY = 0\n\nexport { BASE_INFO, VENFT_BASE_INFO, veMULTI, MULTI_TOKEN, REWARD_TOKEN, REWARD, INIT_TIME, MIN_DAY };","map":{"version":3,"names":["ChainId","spportChainArr","useChain","data","list","c","includes","BASE_INFO","name","symbol","decimals","label","VENFT_BASE_INFO","veMULTI","PLQ","address","MULTI_TOKEN","REWARD_TOKEN","REWARD","INIT_TIME","MIN_DAY"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/pages/Vest/data.ts"],"sourcesContent":["import { ChainId } from \"../../config/chainConfig/chainId\"\nimport {spportChainArr} from '../../config/chainConfig'\nfunction useChain (data:any) {\n  const list:any = {}\n  // console.log(spportChainArr)\n  for (const c in  data) {\n    if (!spportChainArr.includes(c)) continue\n    list[c] = {\n      ...data[c]\n    }\n  }\n  return list\n}\nconst BASE_INFO = {\n  name: 'DELTA',\n  symbol: 'DELTA',\n  decimals: 18,\n  label: 'delta'\n}\n\nconst VENFT_BASE_INFO = {\n  name: 'veDELTA NFT',\n  symbol: 'veDELTA',\n  decimals: 18\n}\n\n\nconst veMULTI:any = useChain({\n  [ChainId.PLQ]: {\n    ...VENFT_BASE_INFO,\n    address: '0xFc04de084548a033D6fAB40e4CfB27C832f9f35E'\n  },\n})\n\nconst MULTI_TOKEN:any = useChain({\n  [ChainId.PLQ]: {\n    ...BASE_INFO,\n    address: '0x6aF48997671584672e084Bf2296473677598ee58'\n  },\n})\n\nconst REWARD_TOKEN:any = useChain({\n  [ChainId.PLQ]: {\n    name: 'Wrapped PLQ',\n    symbol: 'wPLQ',\n    decimals: 18,\n    address: '0x5ebcdf1de1781e8b5d41c016b0574ad53e2f6e1a'\n  },\n})\n\nconst REWARD:any = useChain({\n  [ChainId.PLQ]: {\n    address: '0xfB44597e54CE168A2D97b0cD19aAebc96d9F7684'\n  },\n})\n\nconst INIT_TIME = 365\nconst MIN_DAY = 6\n// const INIT_TIME = 0\n// const MIN_DAY = 0\n\nexport {\n  BASE_INFO,\n  VENFT_BASE_INFO,\n  veMULTI,\n  MULTI_TOKEN,\n  REWARD_TOKEN,\n  REWARD,\n  INIT_TIME,\n  MIN_DAY\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kCAAkC;AAC1D,SAAQC,cAAc,QAAO,0BAA0B;AACvD,SAASC,QAAQA,CAAEC,IAAQ,EAAE;EAC3B,MAAMC,IAAQ,GAAG,CAAC,CAAC;EACnB;EACA,KAAK,MAAMC,CAAC,IAAKF,IAAI,EAAE;IACrB,IAAI,CAACF,cAAc,CAACK,QAAQ,CAACD,CAAC,CAAC,EAAE;IACjCD,IAAI,CAACC,CAAC,CAAC,GAAG;MACR,GAAGF,IAAI,CAACE,CAAC;IACX,CAAC;EACH;EACA,OAAOD,IAAI;AACb;AACA,MAAMG,SAAS,GAAG;EAChBC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,OAAO;EACfC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBJ,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAGD,MAAMG,OAAW,GAAGX,QAAQ,CAAC;EAC3B,CAACF,OAAO,CAACc,GAAG,GAAG;IACb,GAAGF,eAAe;IAClBG,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAMC,WAAe,GAAGd,QAAQ,CAAC;EAC/B,CAACF,OAAO,CAACc,GAAG,GAAG;IACb,GAAGP,SAAS;IACZQ,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAME,YAAgB,GAAGf,QAAQ,CAAC;EAChC,CAACF,OAAO,CAACc,GAAG,GAAG;IACbN,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,EAAE;IACZK,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAMG,MAAU,GAAGhB,QAAQ,CAAC;EAC1B,CAACF,OAAO,CAACc,GAAG,GAAG;IACbC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAMI,SAAS,GAAG,GAAG;AACrB,MAAMC,OAAO,GAAG,CAAC;AACjB;AACA;;AAEA,SACEb,SAAS,EACTK,eAAe,EACfC,OAAO,EACPG,WAAW,EACXC,YAAY,EACZC,MAAM,EACNC,SAAS,EACTC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}