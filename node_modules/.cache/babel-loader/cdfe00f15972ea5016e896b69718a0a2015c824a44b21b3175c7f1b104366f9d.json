{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n  return {\n    [name]() {\n      return body(...arguments);\n    }\n  }[name];\n}\nconst isUint8Array = x => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = x => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n  /**\n   * @param account NEAR account to sign change method transactions\n   * @param contractId NEAR account id where the contract is deployed\n   * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n   */\n  constructor(account, contractId, options) {\n    var _this = this;\n    this.account = account;\n    this.contractId = contractId;\n    const {\n      viewMethods = [],\n      changeMethods = []\n    } = options;\n    viewMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, async function () {\n          let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          if ((arguments.length <= 2 ? 0 : arguments.length - 2) || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n            throw new errors_1.PositionalArgsError();\n          }\n          return _this.account.viewFunction(_this.contractId, methodName, args, options);\n        })\n      });\n    });\n    changeMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, async function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n            throw new errors_1.PositionalArgsError();\n          }\n          if (args.length > 1 || !(args[0] && args[0].args)) {\n            const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n            deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n            return _this._changeMethod({\n              methodName,\n              args: args[0],\n              gas: args[1],\n              amount: args[2]\n            });\n          }\n          return _this._changeMethod({\n            methodName,\n            ...args[0]\n          });\n        })\n      });\n    });\n  }\n  async _changeMethod(_ref) {\n    let {\n      args,\n      methodName,\n      gas,\n      amount,\n      meta,\n      callbackUrl\n    } = _ref;\n    validateBNLike({\n      gas,\n      amount\n    });\n    const rawResult = await this.account.functionCall({\n      contractId: this.contractId,\n      methodName,\n      args,\n      gas,\n      attachedDeposit: amount,\n      walletMeta: meta,\n      walletCallbackUrl: callbackUrl\n    });\n    return providers_1.getTransactionLastResult(rawResult);\n  }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n  const bnLike = 'number, decimal string or BN';\n  for (const argName of Object.keys(argMap)) {\n    const argValue = argMap[argName];\n    if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n      throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n    }\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Contract","bn_js_1","require","depd_1","providers_1","errors_1","nameFunction","name","body","arguments","isUint8Array","x","byteLength","undefined","length","isObject","prototype","toString","call","constructor","account","contractId","options","_this","viewMethods","changeMethods","forEach","methodName","writable","enumerable","args","PositionalArgsError","viewFunction","_len","Array","_key","deprecate","default","_changeMethod","gas","amount","_ref","meta","callbackUrl","validateBNLike","rawResult","functionCall","attachedDeposit","walletMeta","walletCallbackUrl","getTransactionLastResult","argMap","bnLike","argName","keys","argValue","isBN","isNaN","ArgumentTypeError"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/near-api-js/lib/contract.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}