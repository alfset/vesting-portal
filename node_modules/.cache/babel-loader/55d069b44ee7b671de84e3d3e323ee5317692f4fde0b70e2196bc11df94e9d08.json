{"ast":null,"code":"// import { useCallback, useEffect } from 'react'\nimport{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import{useActiveWeb3React}from'../../hooks';// import {updateTerraHash} from '../../hooks/terra'\n// import {updateNasHash} from '../../hooks/nas'\nimport{getHashInfo}from'../../nonevm/getHash';import{useActiveReact}from'../../hooks/useActiveReact';import{useAddPopup,useBlockNumber}from'../application/hooks';import{checkedTransaction,finalizeTransaction,updateTransaction}from'./actions';import{useHashSwapInfo}from'./hooks';import useInterval from'../../hooks/useInterval';// import {TERRA_MAIN_CHAINID} from '../../config/chainConfig/terra'\n// import {NAS_MAIN_CHAINID} from '../../config/chainConfig/nas'\nimport{END_STATUS}from'../../config/status';export function shouldCheck(lastBlockNumber,// eslint-disable-next-line @typescript-eslint/ban-types\ntx){if(tx.info&&END_STATUS.includes(tx.info.status))return false;if(!tx.lastCheckedBlockNumber)return true;const blocksSinceCheck=lastBlockNumber-tx.lastCheckedBlockNumber;if(blocksSinceCheck<1)return false;const minutesPending=(new Date().getTime()-tx.addedTime)/1000/60;if(minutesPending>60){// every 10 blocks if pending for longer than an hour\nreturn blocksSinceCheck>9;}else if(minutesPending>5){// every 3 blocks if pending more than 5 minutes\nreturn blocksSinceCheck>2;}else{// otherwise every block\nreturn true;}}export default function Updater(){var _state$chainId;const{library}=useActiveWeb3React();const{chainId}=useActiveReact();const lastBlockNumber=useBlockNumber();const dispatch=useDispatch();const state=useSelector(state=>state.transactions);const transactions=chainId?(_state$chainId=state[chainId])!==null&&_state$chainId!==void 0?_state$chainId:{}:{};// show popup on confirm\nconst addPopup=useAddPopup();const updateNonEVMTxns=useCallback(()=>{// console.log(chainId)\n// console.log(transactions)\nif(!chainId||Object.keys(transactions).length<=0)return;if(isNaN(chainId)){Object.keys(transactions).filter(hash=>{const tx=transactions[hash];if(tx.info&&END_STATUS.includes(tx.info.status))return false;return true;}).forEach(hash=>{var _tx$info,_tx$receipt;// console.log(hash)\nconst tx=transactions[hash];if(!tx.receipt){getHashInfo(hash,chainId).then(receipt=>{// console.log(receipt)\nif(receipt.msg==='Success'||receipt.msg==='Failure'){dispatch(finalizeTransaction({chainId,hash,receipt:{blockHash:'',blockNumber:receipt.height,contractAddress:'',from:tx.from,status:receipt.msg==='Success'?1:0,to:tx.toAddress,transactionHash:hash,transactionIndex:''}}));if(!(tx===null||tx===void 0?void 0:tx.version)){var _transactions$hash;addPopup({txn:{hash,success:receipt.msg==='Success'?true:false,summary:(_transactions$hash=transactions[hash])===null||_transactions$hash===void 0?void 0:_transactions$hash.summary}},hash);}}});}else if(!(tx.info&&END_STATUS.includes(tx===null||tx===void 0?void 0:(_tx$info=tx.info)===null||_tx$info===void 0?void 0:_tx$info.status))&&(tx.receipt.status===1||typeof((_tx$receipt=tx.receipt)===null||_tx$receipt===void 0?void 0:_tx$receipt.status)==='undefined')&&(tx===null||tx===void 0?void 0:tx.version)){useHashSwapInfo(hash).then(receipt=>{if(receipt&&receipt.msg==='Success'&&receipt.info){dispatch(updateTransaction({chainId,hash,info:{...receipt.info}}));}});}});}else{if(!chainId||!library||!lastBlockNumber||isNaN(chainId))return;Object.keys(transactions).filter(hash=>shouldCheck(lastBlockNumber,transactions[hash])).forEach(hash=>{var _tx$info2,_tx$receipt2;const tx=transactions[hash];if(!tx.receipt){library.getTransactionReceipt(hash).then(receipt=>{if(receipt){dispatch(finalizeTransaction({chainId,hash,receipt:{blockHash:receipt.blockHash,blockNumber:receipt.blockNumber,contractAddress:receipt.contractAddress,from:receipt.from,status:receipt.status,to:receipt.to,transactionHash:receipt.transactionHash,transactionIndex:receipt.transactionIndex}}));if(!(tx===null||tx===void 0?void 0:tx.version)){var _transactions$hash2;addPopup({txn:{hash,success:receipt.status===1,summary:(_transactions$hash2=transactions[hash])===null||_transactions$hash2===void 0?void 0:_transactions$hash2.summary}},hash);}}else{dispatch(checkedTransaction({chainId,hash,blockNumber:lastBlockNumber}));}}).catch(error=>{console.error(\"failed to check transaction hash: \".concat(hash),error);});}else if(!(tx.info&&END_STATUS.includes(tx===null||tx===void 0?void 0:(_tx$info2=tx.info)===null||_tx$info2===void 0?void 0:_tx$info2.status))&&(tx.receipt.status===1||typeof((_tx$receipt2=tx.receipt)===null||_tx$receipt2===void 0?void 0:_tx$receipt2.status)==='undefined')&&(tx===null||tx===void 0?void 0:tx.version)){useHashSwapInfo(hash).then(receipt=>{if(receipt&&receipt.msg==='Success'&&receipt.info){dispatch(updateTransaction({chainId,hash,info:{...receipt.info}}));}});}});}},[chainId,library,transactions,lastBlockNumber,dispatch,addPopup]);useInterval(updateNonEVMTxns,1000*10);return null;}","map":{"version":3,"names":["useCallback","useDispatch","useSelector","useActiveWeb3React","getHashInfo","useActiveReact","useAddPopup","useBlockNumber","checkedTransaction","finalizeTransaction","updateTransaction","useHashSwapInfo","useInterval","END_STATUS","shouldCheck","lastBlockNumber","tx","info","includes","status","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","Updater","_state$chainId","library","chainId","dispatch","state","transactions","addPopup","updateNonEVMTxns","Object","keys","length","isNaN","filter","hash","forEach","_tx$info","_tx$receipt","receipt","then","msg","blockHash","blockNumber","height","contractAddress","from","to","toAddress","transactionHash","transactionIndex","version","_transactions$hash","txn","success","summary","_tx$info2","_tx$receipt2","getTransactionReceipt","_transactions$hash2","catch","error","console","concat"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/transactions/updater.tsx"],"sourcesContent":["// import { useCallback, useEffect } from 'react'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\n\n// import {updateTerraHash} from '../../hooks/terra'\n// import {updateNasHash} from '../../hooks/nas'\n\nimport {getHashInfo} from '../../nonevm/getHash'\n\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction, updateTransaction } from './actions'\nimport {useHashSwapInfo} from './hooks'\n\nimport useInterval from '../../hooks/useInterval'\n\n// import {TERRA_MAIN_CHAINID} from '../../config/chainConfig/terra'\n// import {NAS_MAIN_CHAINID} from '../../config/chainConfig/nas'\n\nimport {END_STATUS} from '../../config/status'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  tx: { addedTime: number; receipt?: {}; lastCheckedBlockNumber?: number; info?:any }\n): boolean {\n  if (tx.info && END_STATUS.includes(tx.info.status)) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  } else {\n    // otherwise every block\n    return true\n  }\n}\nexport default function Updater(): null {\n  const { library } = useActiveWeb3React()\n  const { chainId } = useActiveReact()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>(state => state.transactions)\n\n  const transactions = chainId ? state[chainId] ?? {} : {}\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n\n  const updateNonEVMTxns = useCallback(() => {\n    // console.log(chainId)\n    // console.log(transactions)\n    if (!chainId || Object.keys(transactions).length <= 0) return\n    if (isNaN(chainId)) {\n      Object.keys(transactions)\n      .filter(hash => {\n        const tx = transactions[hash]\n        if (tx.info && END_STATUS.includes(tx.info.status)) return false\n        return true\n      })\n      .forEach(hash => {\n        // console.log(hash)\n        const tx = transactions[hash]\n        if (!tx.receipt) {\n          getHashInfo(hash, chainId).then((receipt:any) => {\n            // console.log(receipt)\n            if (receipt.msg === 'Success' || receipt.msg === 'Failure') {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: '',\n                    blockNumber: receipt.height,\n                    contractAddress: '',\n                    from: tx.from,\n                    status: receipt.msg === 'Success' ? 1 : 0,\n                    to: tx.toAddress,\n                    transactionHash: hash,\n                    transactionIndex: ''\n                  }\n                })\n              )\n              if (!tx?.version) {\n                addPopup(\n                  {\n                    txn: {\n                      hash,\n                      success: receipt.msg === 'Success' ? true : false,\n                      summary: transactions[hash]?.summary\n                    }\n                  },\n                  hash\n                )\n              }\n            }\n          })\n        } else if (\n          !(tx.info && END_STATUS.includes(tx?.info?.status))\n          && (tx.receipt.status === 1 || typeof tx.receipt?.status === 'undefined')\n          && tx?.version\n        )  {\n          useHashSwapInfo(hash).then((receipt:any) => {\n            if (receipt && receipt.msg === 'Success' && receipt.info) {\n              dispatch(\n                updateTransaction({\n                  chainId,\n                  hash,\n                  info: {\n                    ...receipt.info\n                  }\n                })\n              )\n            }\n          })\n        }\n      })\n    \n    } else {\n      if (!chainId || !library || !lastBlockNumber || isNaN(chainId)) return\n      Object.keys(transactions)\n        .filter(hash => shouldCheck(lastBlockNumber, transactions[hash]))\n        .forEach(hash => {\n          const tx = transactions[hash]\n          if (!tx.receipt) {\n            library\n              .getTransactionReceipt(hash)\n              .then(receipt => {\n                if (receipt) {\n                  dispatch(\n                    finalizeTransaction({\n                      chainId,\n                      hash,\n                      receipt: {\n                        blockHash: receipt.blockHash,\n                        blockNumber: receipt.blockNumber,\n                        contractAddress: receipt.contractAddress,\n                        from: receipt.from,\n                        status: receipt.status,\n                        to: receipt.to,\n                        transactionHash: receipt.transactionHash,\n                        transactionIndex: receipt.transactionIndex\n                      }\n                    })\n                  )\n                  if (!tx?.version) {\n                    addPopup(\n                      {\n                        txn: {\n                          hash,\n                          success: receipt.status === 1,\n                          summary: transactions[hash]?.summary\n                        }\n                      },\n                      hash\n                    )\n                  }\n                } else {\n                  dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n                }\n              })\n              .catch(error => {\n                console.error(`failed to check transaction hash: ${hash}`, error)\n              })\n          } else if (\n            !(tx.info && END_STATUS.includes(tx?.info?.status))\n            && (tx.receipt.status === 1 || typeof tx.receipt?.status === 'undefined')\n            && tx?.version\n          )  {\n            useHashSwapInfo(hash).then((receipt:any) => {\n              if (receipt && receipt.msg === 'Success' && receipt.info) {\n                dispatch(\n                  updateTransaction({\n                    chainId,\n                    hash,\n                    info: {\n                      ...receipt.info\n                    }\n                  })\n                )\n              }\n            })\n          }\n        })\n    }\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\n\n  useInterval(updateNonEVMTxns, 1000 * 10)\n\n  return null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}