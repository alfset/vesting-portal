{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport { ChainId } from '../../config/chainConfig/chainId';\nimport { useNasLogin } from './index';\nexport default function Updater() {\n  const {\n    chainId\n  } = useActiveReact();\n  const {\n    loginNas\n  } = useNasLogin();\n  const getNasAddress = useCallback(() => {\n    if ([ChainId.NAS].includes(chainId)) {\n      // console.log(111)\n      loginNas(chainId, 1);\n    }\n  }, [chainId]);\n  useEffect(() => {\n    getNasAddress();\n  }, [chainId]);\n  return null;\n}","map":{"version":3,"names":["useCallback","useEffect","useActiveReact","ChainId","useNasLogin","Updater","chainId","loginNas","getNasAddress","NAS","includes"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/nas/updater.ts"],"sourcesContent":["\nimport { useCallback, useEffect } from 'react'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nimport { ChainId } from '../../config/chainConfig/chainId'\nimport {useNasLogin} from './index'\n\nexport default function Updater(): null {\n  const { chainId } = useActiveReact()\n  \n  const {loginNas} = useNasLogin()\n\n  const getNasAddress = useCallback(() => {\n    if ([ChainId.NAS].includes(chainId)) {\n      // console.log(111)\n      loginNas(chainId, 1)\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    getNasAddress()\n  }, [chainId])\n\n  return null\n}\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAAQC,WAAW,QAAO,SAAS;AAEnC,eAAe,SAASC,OAAOA,CAAA,EAAS;EACtC,MAAM;IAAEC;EAAQ,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAEpC,MAAM;IAACK;EAAQ,CAAC,GAAGH,WAAW,CAAC,CAAC;EAEhC,MAAMI,aAAa,GAAGR,WAAW,CAAC,MAAM;IACtC,IAAI,CAACG,OAAO,CAACM,GAAG,CAAC,CAACC,QAAQ,CAACJ,OAAO,CAAC,EAAE;MACnC;MACAC,QAAQ,CAACD,OAAO,EAAE,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbL,SAAS,CAAC,MAAM;IACdO,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}