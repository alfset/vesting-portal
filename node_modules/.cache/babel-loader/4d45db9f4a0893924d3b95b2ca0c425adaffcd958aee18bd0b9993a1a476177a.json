{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\n\n// axios.defaults.headers.common['Authorization'] = '0xC03033d8b833fF7ca08BF2A58C9BC9d711257249'\nexport function getUrlData(url) {\n  return new Promise(resolve => {\n    axios.get(url).then(res => {\n      if (res && (res.data || res.data === 0) && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        });\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        });\n      }\n    }).catch(err => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      });\n    });\n  });\n}\n// for (let i = 0; i < 100; i++) {\n\n//   getUrlData('http://stressapi.multichain.org/charts/total-history').then(res => console.log(res))\n// }\n// console.log(axios.post)\nexport function postUrlData(url, data, type) {\n  return new Promise(resolve => {\n    axios.post(url, type ? data : qs.stringify(data)).then(res => {\n      if (res && res.data && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        });\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        });\n      }\n    }).catch(err => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      });\n    });\n  });\n}","map":{"version":3,"names":["axios","qs","getUrlData","url","Promise","resolve","get","then","res","data","status","msg","catch","err","toString","postUrlData","type","post","stringify"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/tools/axios.ts"],"sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\n\n// axios.defaults.headers.common['Authorization'] = '0xC03033d8b833fF7ca08BF2A58C9BC9d711257249'\nexport function getUrlData (url:string) {\n  return new Promise(resolve => {\n    axios.get(url).then((res:any) => {\n      if (res && (res.data || res.data === 0) && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        })\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        })\n      }\n    }).catch((err:any) => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      })\n    })\n  })\n}\n// for (let i = 0; i < 100; i++) {\n\n//   getUrlData('http://stressapi.multichain.org/charts/total-history').then(res => console.log(res))\n// }\n// console.log(axios.post)\nexport function postUrlData (url:string, data:any, type?: any) {\n  return new Promise(resolve => {\n    axios.post(url, type ? data : qs.stringify(data)).then((res:any) => {\n      if (res && res.data && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        })\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        })\n      }\n    }).catch((err:any) => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      })\n    })\n  })\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;;AAGnB;AACA,OAAO,SAASC,UAAUA,CAAEC,GAAU,EAAE;EACtC,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC5BL,KAAK,CAACM,GAAG,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEC,GAAO,IAAK;MAC/B,IAAIA,GAAG,KAAKA,GAAG,CAACC,IAAI,IAAID,GAAG,CAACC,IAAI,KAAK,CAAC,CAAC,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;QAC7DL,OAAO,CAAC;UACNM,GAAG,EAAE,SAAS;UACdF,IAAI,EAAED,GAAG,CAACC;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,OAAO,CAAC;UACNM,GAAG,EAAE,OAAO;UACZF,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACG,KAAK,CAAEC,GAAO,IAAK;MACpBR,OAAO,CAAC;QACNM,GAAG,EAAE,OAAO;QACZF,IAAI,EAAEI,GAAG,CAACC,QAAQ,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAEZ,GAAU,EAAEM,IAAQ,EAAEO,IAAU,EAAE;EAC7D,OAAO,IAAIZ,OAAO,CAACC,OAAO,IAAI;IAC5BL,KAAK,CAACiB,IAAI,CAACd,GAAG,EAAEa,IAAI,GAAGP,IAAI,GAAGR,EAAE,CAACiB,SAAS,CAACT,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAO,IAAK;MAClE,IAAIA,GAAG,IAAIA,GAAG,CAACC,IAAI,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;QACzCL,OAAO,CAAC;UACNM,GAAG,EAAE,SAAS;UACdF,IAAI,EAAED,GAAG,CAACC;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,OAAO,CAAC;UACNM,GAAG,EAAE,OAAO;UACZF,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACG,KAAK,CAAEC,GAAO,IAAK;MACpBR,OAAO,CAAC;QACNM,GAAG,EAAE,OAAO;QACZF,IAAI,EAAEI,GAAG,CAACC,QAAQ,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}