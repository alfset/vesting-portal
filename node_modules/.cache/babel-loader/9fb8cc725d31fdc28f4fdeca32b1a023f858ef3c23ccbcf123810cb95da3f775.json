{"ast":null,"code":"import JSBI from'jsbi';// import { injected, terra } from '../connectors'\nimport{injected,walletconnect,walletlink,bsc,clover,xdefi,gnosissafe,bitkeep// tally\n}from'../connectors';// import { injected, walletconnect } from '../connectors'\nexport const ZERO_ADDRESS='0x0000000000000000000000000000000000000000';// console.log(injected)\nexport const SUPPORTED_WALLETS={INJECTED:{connector:injected,name:'Injected',iconName:'arrow-right.svg',description:'Injected web3 provider.',href:null,color:'#010101',primary:true},METAMASK:{connector:injected,name:'MetaMask',iconName:'metamask.svg',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},WALLET_CONNECT:{connector:walletconnect,name:'WalletConnect',iconName:'walletConnectIcon.svg',description:'Connect to Trust Wallet, Rainbow Wallet and more...',href:null,color:'#4196FC',mobile:true},WALLET_LINK:{connector:walletlink,name:'Coinbase Wallet',iconName:'coinbaseWalletIcon.svg',description:'Use Coinbase Wallet app on mobile device',href:null,color:'#315CF5'},BITKEEP:{connector:bitkeep,name:'BitKeep',iconName:'BitKeep.svg',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},tokenpocket:{connector:injected,name:'TokenPocket',iconName:'TPT.jpg',description:'Easy-to-use browser extension.',href:null,color:'#269964'},trustwallet:{connector:walletconnect,name:'Trust Wallet',iconName:'TWT.png',description:'Easy-to-use browser extension.',href:null,color:'#269964'},gnosissafe:{connector:gnosissafe,name:'Gnosis Safe',iconName:'GnosisSafe.svg',description:'Easy-to-use browser extension.',href:null,color:'#269964'},Binance:{connector:bsc,name:'Binance',iconName:'BNB.svg',description:'Login using Binance hosted wallet',href:null,color:'#F0B90B',mobile:true},OKEXCHAIN:{connector:injected,name:'OKX Wallet',iconName:'OKX.png',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},COIN98:{connector:injected,name:'Coin98',iconName:'Coin98.png',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},tally:{connector:injected,name:'Tally Ho',iconName:'tally.png',description:'Connect to Tally Ho Wallet.',href:null,color:'#4196FC',mobile:true},Clover:{connector:clover,name:'Clover',iconName:'clv.png',description:'Login using Clover hosted wallet',href:null,color:'#269964'},Xdefi:{// connector: injected,\nconnector:xdefi,name:'XDEFI',iconName:'XDEFI.png',description:'Easy-to-use browser extension.',href:null,color:'#269964'},huobi:{connector:walletconnect,name:'Huobi',iconName:'HT.png',description:'Connect to Huobi Wallet.',href:null,color:'#4196FC',mobile:true}};export const NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW=60*20;// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK=JSBI.BigInt(60*60*24*7);export const BIG_INT_ZERO=JSBI.BigInt(0);export const BIPS_BASE=JSBI.BigInt(10000);// used for warning states\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n// for non expert mode disable swaps above this\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 ETH\n// export const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))","map":{"version":3,"names":["JSBI","injected","walletconnect","walletlink","bsc","clover","xdefi","gnosissafe","bitkeep","ZERO_ADDRESS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","BITKEEP","tokenpocket","trustwallet","Binance","OKEXCHAIN","COIN98","tally","Clover","Xdefi","huobi","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","BIPS_BASE","MIN_ETH","exponentiate"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/constants/index.ts"],"sourcesContent":["\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport JSBI from 'jsbi'\n// import { injected, terra } from '../connectors'\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  bsc,\n  clover,\n  xdefi,\n  gnosissafe,\n  bitkeep,\n  // tally\n} from '../connectors'\n// import { injected, walletconnect } from '../connectors'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n// console.log(injected)\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.svg',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5'\n  },\n  BITKEEP: {\n    connector: bitkeep,\n    name: 'BitKeep',\n    iconName: 'BitKeep.svg',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  tokenpocket: {\n    connector: injected,\n    name: 'TokenPocket',\n    iconName: 'TPT.jpg',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#269964',\n  },\n  trustwallet: {\n    connector: walletconnect,\n    name: 'Trust Wallet',\n    iconName: 'TWT.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#269964',\n  },\n  gnosissafe: {\n    connector: gnosissafe,\n    name: 'Gnosis Safe',\n    iconName: 'GnosisSafe.svg',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#269964',\n  },\n  Binance: {\n    connector: bsc,\n    name: 'Binance',\n    iconName: 'BNB.svg',\n    description: 'Login using Binance hosted wallet',\n    href: null,\n    color: '#F0B90B',\n    mobile: true,\n  },\n  OKEXCHAIN: {\n    connector: injected,\n    name: 'OKX Wallet',\n    iconName: 'OKX.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  COIN98: {\n    connector: injected,\n    name: 'Coin98',\n    iconName: 'Coin98.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  tally: {\n    connector: injected,\n    name: 'Tally Ho',\n    iconName: 'tally.png',\n    description: 'Connect to Tally Ho Wallet.',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  Clover: {\n    connector: clover,\n    name: 'Clover',\n    iconName: 'clv.png',\n    description: 'Login using Clover hosted wallet',\n    href: null,\n    color: '#269964',\n  },\n  Xdefi: {\n    // connector: injected,\n    connector: xdefi,\n    name: 'XDEFI',\n    iconName: 'XDEFI.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#269964',\n  },\n  huobi: {\n    connector: walletconnect,\n    name: 'Huobi',\n    iconName: 'HT.png',\n    description: 'Connect to Huobi Wallet.',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n// for non expert mode disable swaps above this\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n// export const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}