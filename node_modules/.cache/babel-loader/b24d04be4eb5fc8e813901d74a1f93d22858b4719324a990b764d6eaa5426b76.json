{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgSwapSend = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar Coin_1 = require(\"../../Coin\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar tx_1 = require(\"@classic-terra/terra.proto/terra/market/v1beta1/tx\");\n/**\n * Executes a market swap send between 2 denominations at the exchange rate registered by the\n * Oracle module. The sender account will lose the amount of coins offered, and receiver will receive funds\n * in the requested denomination after a swap and send fee has been applied.\n */\nvar MsgSwapSend = /** @class */function (_super) {\n  __extends(MsgSwapSend, _super);\n  /**\n   * @param from_address sender's account address\n   * @param to_address receiver's account address\n   * @param offer_coin coin to be swapped (from)\n   * @param ask_denom desired denomination (to)\n   */\n  function MsgSwapSend(from_address, to_address, offer_coin, ask_denom) {\n    var _this = _super.call(this) || this;\n    _this.from_address = from_address;\n    _this.to_address = to_address;\n    _this.offer_coin = offer_coin;\n    _this.ask_denom = ask_denom;\n    return _this;\n  }\n  MsgSwapSend.fromAmino = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = data.value,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      offer_coin = _a.offer_coin,\n      ask_denom = _a.ask_denom;\n    return new MsgSwapSend(from_address, to_address, Coin_1.Coin.fromAmino(offer_coin), ask_denom);\n  };\n  MsgSwapSend.prototype.toAmino = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      offer_coin = _a.offer_coin,\n      ask_denom = _a.ask_denom;\n    return {\n      type: 'market/MsgSwapSend',\n      value: {\n        from_address: from_address,\n        to_address: to_address,\n        offer_coin: offer_coin.toAmino(),\n        ask_denom: ask_denom\n      }\n    };\n  };\n  MsgSwapSend.fromProto = function (proto, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return new MsgSwapSend(proto.fromAddress, proto.toAddress, Coin_1.Coin.fromProto(proto.offerCoin), proto.askDenom);\n  };\n  MsgSwapSend.prototype.toProto = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      offer_coin = _a.offer_coin,\n      ask_denom = _a.ask_denom;\n    return tx_1.MsgSwapSend.fromPartial({\n      askDenom: ask_denom,\n      fromAddress: from_address,\n      offerCoin: offer_coin.toProto(),\n      toAddress: to_address\n    });\n  };\n  MsgSwapSend.prototype.packAny = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return any_1.Any.fromPartial({\n      typeUrl: '/terra.market.v1beta1.MsgSwapSend',\n      value: tx_1.MsgSwapSend.encode(this.toProto(isClassic)).finish()\n    });\n  };\n  MsgSwapSend.unpackAny = function (msgAny, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    return MsgSwapSend.fromProto(tx_1.MsgSwapSend.decode(msgAny.value), isClassic);\n  };\n  MsgSwapSend.fromData = function (data, isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var from_address = data.from_address,\n      to_address = data.to_address,\n      offer_coin = data.offer_coin,\n      ask_denom = data.ask_denom;\n    return new MsgSwapSend(from_address, to_address, Coin_1.Coin.fromData(offer_coin), ask_denom);\n  };\n  MsgSwapSend.prototype.toData = function (isClassic) {\n    if (!isClassic) {\n      throw new Error('Not supported for the network');\n    }\n    var _a = this,\n      from_address = _a.from_address,\n      to_address = _a.to_address,\n      offer_coin = _a.offer_coin,\n      ask_denom = _a.ask_denom;\n    return {\n      '@type': '/terra.market.v1beta1.MsgSwapSend',\n      from_address: from_address,\n      to_address: to_address,\n      offer_coin: offer_coin.toData(),\n      ask_denom: ask_denom\n    };\n  };\n  return MsgSwapSend;\n}(json_1.JSONSerializable);\nexports.MsgSwapSend = MsgSwapSend;","map":{"version":3,"names":["json_1","require","Coin_1","any_1","tx_1","MsgSwapSend","_super","__extends","from_address","to_address","offer_coin","ask_denom","_this","call","fromAmino","data","isClassic","Error","_a","value","Coin","prototype","toAmino","type","fromProto","proto","fromAddress","toAddress","offerCoin","askDenom","toProto","fromPartial","packAny","Any","typeUrl","encode","finish","unpackAny","msgAny","decode","fromData","toData","JSONSerializable","exports"],"sources":["../../../../src/core/market/msgs/MsgSwapSend.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}