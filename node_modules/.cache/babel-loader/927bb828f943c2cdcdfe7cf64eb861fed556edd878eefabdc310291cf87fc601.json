{"ast":null,"code":"import{useCallback,useMemo}from'react';import{shallowEqual,useDispatch,useSelector}from'react-redux';// import { useDispatch, useSelector } from 'react-redux'\nimport{useActiveReact}from'../../hooks/useActiveReact';import{useActiveWeb3React}from'../../hooks';import{addSerializedToken,removeSerializedToken,updateUserDarkMode,updateUserDeadline,// updatePairAddress,\nupdateUserExpertMode,updateUserSlippageTolerance,toggleURLWarning,selectNetworkId,updateUserBetaMessage,starChain,starToken,addTokenToWallet,removeTokenToWallet,changeStarTab,updateInterfaceMode,updateInterfaceBalanceValid}from'./actions';// import config from '../../config'\n// import {ChainId} from '../../config/chainConfig/chainId'\nfunction serializeToken(token){return{chainId:token.chainId,address:token.address,decimals:token.decimals,symbol:token.symbol,name:token.name};}function deserializeToken(serializedToken){return{chainId:serializedToken.chainId,address:serializedToken.address,decimals:serializedToken.decimals,symbol:serializedToken.symbol,name:serializedToken.name};}export function useIsDarkMode(){const{userDarkMode,matchesDarkMode}=useSelector(_ref=>{let{user:{matchesDarkMode,userDarkMode}}=_ref;return{userDarkMode,matchesDarkMode};},shallowEqual);// return false\nreturn userDarkMode===null?matchesDarkMode:userDarkMode;}export function useDarkModeManager(){const dispatch=useDispatch();const darkMode=useIsDarkMode();const toggleSetDarkMode=useCallback(()=>{dispatch(updateUserDarkMode({userDarkMode:!darkMode}));},[darkMode,dispatch]);return[darkMode,toggleSetDarkMode];}export function useIsExpertMode(){return useSelector(state=>state.user.userExpertMode);}export function useExpertModeManager(){const dispatch=useDispatch();const expertMode=useIsExpertMode();const toggleSetExpertMode=useCallback(()=>{dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useInterfaceModeManager(){const dispatch=useDispatch();const userInterfaceMode=useSelector(state=>state.user.userInterfaceMode);const toggleSetInterfaceMode=useCallback(()=>{dispatch(updateInterfaceMode({userInterfaceMode:!userInterfaceMode}));},[userInterfaceMode,dispatch]);return[userInterfaceMode,toggleSetInterfaceMode];}export function useInterfaceBalanceValidManager(){const dispatch=useDispatch();const userInterfaceBalanceValid=useSelector(state=>state.user.userInterfaceBalanceValid);const toggleSetInterfaceBalanceValid=useCallback(()=>{dispatch(updateInterfaceBalanceValid({userInterfaceBalanceValid:!userInterfaceBalanceValid}));},[userInterfaceBalanceValid,dispatch]);return[userInterfaceBalanceValid,toggleSetInterfaceBalanceValid];}export function useUserSlippageTolerance(){const dispatch=useDispatch();const userSlippageTolerance=useSelector(state=>{return state.user.userSlippageTolerance;});const setUserSlippageTolerance=useCallback(userSlippageTolerance=>{dispatch(updateUserSlippageTolerance({userSlippageTolerance}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useBetaMessageManager(){const dispatch=useDispatch();const showBetaMessage=useSelector(state=>{return state.user.showBetaMessage;});const dismissBetaMessage=useCallback(()=>{dispatch(updateUserBetaMessage({showBetaMessage:false}));},[dispatch]);return[showBetaMessage,dismissBetaMessage];}export function useUserTransactionTTL(){const dispatch=useDispatch();const userDeadline=useSelector(state=>{return state.user.userDeadline;});const setUserDeadline=useCallback(userDeadline=>{dispatch(updateUserDeadline({userDeadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){const dispatch=useDispatch();return useCallback(token=>{dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){const dispatch=useDispatch();return useCallback((chainId,address)=>{dispatch(removeSerializedToken({chainId,address}));},[dispatch]);}export function useUserAddedTokens(){const{chainId}=useActiveWeb3React();const serializedTokensMap=useSelector(_ref2=>{let{user:{tokens}}=_ref2;return tokens;});return useMemo(()=>{var _serializedTokensMap$;if(!chainId)return[];// @ts-ignore\nreturn Object.values((_serializedTokensMap$=serializedTokensMap[chainId])!==null&&_serializedTokensMap$!==void 0?_serializedTokensMap$:{}).map(deserializeToken);},[serializedTokensMap,chainId]);}export function useURLWarningVisible(){return useSelector(state=>state.user.URLWarningVisible);}export function useURLWarningToggle(){const dispatch=useDispatch();return useCallback(()=>dispatch(toggleURLWarning()),[dispatch]);}export function useUserSelectChainId(){const dispatch=useDispatch();const selectNetworkInfo=useSelector(state=>{return state.user.selectNetworkId;});const setUserSelectNetwork=useCallback(selectNetworkInfo=>{dispatch(selectNetworkId(selectNetworkInfo));},[dispatch]);return{selectNetworkInfo,setUserSelectNetwork};}export function useStarChain(){const{account}=useActiveReact();const starChainResult=useSelector(state=>state.user.starChain);const dispatch=useDispatch();const onChangeStarChain=useCallback(chainId=>{dispatch(starChain({account,chainId}));},[dispatch]);// console.log(starChainResult)\nreturn{// starChainList: account && starChainResult?.[account] ? starChainResult[account] : (starChainResult?.['all'] ? starChainResult['all'] : {}),\nstarChainList:account&&(starChainResult===null||starChainResult===void 0?void 0:starChainResult[account])?starChainResult[account]:{},onChangeStarChain};}export function useStarToken(){const{chainId}=useActiveReact();const starTokenResult=useSelector(state=>state.user.starToken);const dispatch=useDispatch();const onChangeStarToken=useCallback(token=>{dispatch(starToken({chainId,token}));},[dispatch]);// console.log(starChainResult)\nreturn{starTokenList:chainId&&(starTokenResult===null||starTokenResult===void 0?void 0:starTokenResult[chainId])?starTokenResult[chainId]:(starTokenResult===null||starTokenResult===void 0?void 0:starTokenResult['all'])?starTokenResult['all']:{},onChangeStarToken};}export function useChangeTokenOnWallet(){// const { chainId } = useActiveReact()\nconst addTokenToWalletResult=useSelector(state=>state.user.addTokenToWallet);const dispatch=useDispatch();const onAddToken=useCallback((chainId,tokenInfo)=>{dispatch(addTokenToWallet({chainId,tokenInfo}));},[dispatch]);const onRemoveToken=useCallback(()=>{dispatch(removeTokenToWallet({}));},[dispatch]);// console.log(starChainResult)\nreturn{tokeninfo:addTokenToWalletResult,onAddToken,onRemoveToken};}export function useChangeStarTab(type){// const { chainId } = useActiveReact()\nconst changeStarTabResult=useSelector(state=>state.user.changeStarTab);const dispatch=useDispatch();const onChangeStarTab=useCallback(index=>{dispatch(changeStarTab({type,index}));},[dispatch]);return{starTabIndex:(changeStarTabResult===null||changeStarTabResult===void 0?void 0:changeStarTabResult[type])||(changeStarTabResult===null||changeStarTabResult===void 0?void 0:changeStarTabResult[type])===0?changeStarTabResult===null||changeStarTabResult===void 0?void 0:changeStarTabResult[type]:1,onChangeStarTab};}","map":{"version":3,"names":["useCallback","useMemo","shallowEqual","useDispatch","useSelector","useActiveReact","useActiveWeb3React","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","toggleURLWarning","selectNetworkId","updateUserBetaMessage","starChain","starToken","addTokenToWallet","removeTokenToWallet","changeStarTab","updateInterfaceMode","updateInterfaceBalanceValid","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useInterfaceModeManager","userInterfaceMode","toggleSetInterfaceMode","useInterfaceBalanceValidManager","userInterfaceBalanceValid","toggleSetInterfaceBalanceValid","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useBetaMessageManager","showBetaMessage","dismissBetaMessage","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","_ref2","tokens","_serializedTokensMap$","Object","values","map","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","useUserSelectChainId","selectNetworkInfo","setUserSelectNetwork","useStarChain","account","starChainResult","onChangeStarChain","starChainList","useStarToken","starTokenResult","onChangeStarToken","starTokenList","useChangeTokenOnWallet","addTokenToWalletResult","onAddToken","tokenInfo","onRemoveToken","tokeninfo","useChangeStarTab","type","changeStarTabResult","onChangeStarTab","index","starTabIndex"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/user/hooks.tsx"],"sourcesContent":["\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  // updatePairAddress,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  toggleURLWarning,\n  selectNetworkId,\n  updateUserBetaMessage,\n  starChain,\n  starToken,\n  addTokenToWallet,\n  removeTokenToWallet,\n  changeStarTab,\n  updateInterfaceMode,\n  updateInterfaceBalanceValid\n} from './actions'\n\n// import config from '../../config'\n// import {ChainId} from '../../config/chainConfig/chainId'\n\nfunction serializeToken(token: any): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): any {\n  return {\n    chainId: serializedToken.chainId,\n    address: serializedToken.address,\n    decimals: serializedToken.decimals,\n    symbol: serializedToken.symbol,\n    name: serializedToken.name\n  }\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode\n    }),\n    shallowEqual\n  )\n\n  // return false\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>(state => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useInterfaceModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userInterfaceMode = useSelector<AppState, AppState['user']['userInterfaceMode']>(state => state.user.userInterfaceMode)\n\n  const toggleSetInterfaceMode = useCallback(() => {\n    dispatch(updateInterfaceMode({ userInterfaceMode: !userInterfaceMode }))\n  }, [userInterfaceMode, dispatch])\n\n  return [userInterfaceMode, toggleSetInterfaceMode]\n}\n\nexport function useInterfaceBalanceValidManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userInterfaceBalanceValid = useSelector<AppState, AppState['user']['userInterfaceBalanceValid']>(state => state.user.userInterfaceBalanceValid)\n\n  const toggleSetInterfaceBalanceValid = useCallback(() => {\n    dispatch(updateInterfaceBalanceValid({ userInterfaceBalanceValid: !userInterfaceBalanceValid }))\n  }, [userInterfaceBalanceValid, dispatch])\n\n  return [userInterfaceBalanceValid, toggleSetInterfaceBalanceValid]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>(state => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useBetaMessageManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const showBetaMessage = useSelector<AppState, AppState['user']['showBetaMessage']>(state => {\n    return state.user.showBetaMessage\n  })\n\n  const dismissBetaMessage = useCallback(\n    () => {\n      dispatch(updateUserBetaMessage({ showBetaMessage: false }))\n    },\n    [dispatch]\n  )\n\n  return [showBetaMessage, dismissBetaMessage]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>(state => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: any) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: any) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): any[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    // @ts-ignore\n    return Object.values(serializedTokensMap[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n\nexport function useUserSelectChainId(): {selectNetworkInfo?:any, setUserSelectNetwork?: (selectChainInfo: any) => void} {\n  const dispatch = useDispatch<AppDispatch>()\n  const selectNetworkInfo:any = useSelector<AppState, AppState['user']['selectNetworkId']>(state => {\n    return state.user.selectNetworkId\n  })\n\n  const setUserSelectNetwork = useCallback(\n    (selectNetworkInfo: any) => {\n      dispatch(selectNetworkId(selectNetworkInfo))\n    },\n    [dispatch]\n  )\n\n  return {\n    selectNetworkInfo, setUserSelectNetwork\n  }\n}\n\n\nexport function useStarChain(): any {\n  const { account } = useActiveReact()\n  const starChainResult = useSelector((state: AppState) => state.user.starChain)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarChain = useCallback(\n    (chainId: any) => {\n      dispatch(starChain({ account, chainId }))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    // starChainList: account && starChainResult?.[account] ? starChainResult[account] : (starChainResult?.['all'] ? starChainResult['all'] : {}),\n    starChainList: account && starChainResult?.[account] ? starChainResult[account] : {},\n    onChangeStarChain\n  }\n}\n\nexport function useStarToken(): any {\n  const { chainId } = useActiveReact()\n  const starTokenResult = useSelector((state: AppState) => state.user.starToken)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarToken = useCallback(\n    (token: any) => {\n      dispatch(starToken({ chainId, token }))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    starTokenList: chainId && starTokenResult?.[chainId] ? starTokenResult[chainId] : (starTokenResult?.['all'] ? starTokenResult['all'] : {}),\n    onChangeStarToken\n  }\n}\n\nexport function useChangeTokenOnWallet(): any {\n  // const { chainId } = useActiveReact()\n  const addTokenToWalletResult = useSelector((state: AppState) => state.user.addTokenToWallet)\n  const dispatch = useDispatch<AppDispatch>()\n  const onAddToken = useCallback(\n    (chainId:any, tokenInfo: any) => {\n      dispatch(addTokenToWallet({ chainId, tokenInfo }))\n    },\n    [dispatch]\n  )\n  const onRemoveToken = useCallback(\n    () => {\n      dispatch(removeTokenToWallet({}))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    tokeninfo: addTokenToWalletResult,\n    onAddToken,\n    onRemoveToken\n  }\n}\n\nexport function useChangeStarTab(type:any): any {\n  // const { chainId } = useActiveReact()\n  const changeStarTabResult = useSelector((state: AppState) => state.user.changeStarTab)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarTab = useCallback(\n    (index: any) => {\n      dispatch(changeStarTab({ type, index }))\n    },\n    [dispatch]\n  )\n  return {\n    starTabIndex: changeStarTabResult?.[type] || changeStarTabResult?.[type] === 0 ? changeStarTabResult?.[type] : 1,\n    onChangeStarTab\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}