{"ast":null,"code":"// import { useCallback, useEffect, useState, useMemo } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { AppDispatch, AppState } from '../index'\nimport { useSelector } from 'react-redux';\n// import { rpclist } from './actions'\n\nimport { useActiveReact } from '../../hooks/useActiveReact';\nexport function useRpcState() {\n  const {\n    chainId\n  } = useActiveReact();\n  const list = useSelector(state => state.rpc.rpclist);\n  if (!chainId || !list[chainId]) return {};\n  return list[chainId];\n}","map":{"version":3,"names":["useSelector","useActiveReact","useRpcState","chainId","list","state","rpc","rpclist"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/rpc/hooks.ts"],"sourcesContent":["// import { useCallback, useEffect, useState, useMemo } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { AppDispatch, AppState } from '../index'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n// import { rpclist } from './actions'\n\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nexport function useRpcState(): any {\n  const { chainId } = useActiveReact()\n  const list:any = useSelector<AppState, AppState['rpc']>(state => state.rpc.rpclist)\n  if (!chainId || !list[chainId]) return {}\n\n  return list[chainId]\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,aAAa;AAEzC;;AAEA,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,OAAO,SAASC,WAAWA,CAAA,EAAQ;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,cAAc,CAAC,CAAC;EACpC,MAAMG,IAAQ,GAAGJ,WAAW,CAA4BK,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,OAAO,CAAC;EACnF,IAAI,CAACJ,OAAO,IAAI,CAACC,IAAI,CAACD,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;EAEzC,OAAOC,IAAI,CAACD,OAAO,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}