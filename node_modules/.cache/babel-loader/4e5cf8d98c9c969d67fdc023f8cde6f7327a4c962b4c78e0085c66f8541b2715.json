{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"/workspace/Planq-Dapps/vesting-portal/src/components/CrossChainPanelV2/txnsErrorTipModal.tsx\";\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useTxnsErrorTipOpen } from '../../state/application/hooks';\n// import {getParams} from '../../config/tools/getUrlParams'\n\nimport ModalContent from '../Modal/ModalContent';\nconst ErrorTipContent = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: 30px 20px;\\n  color: \", \";\\n\"])), _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.red1;\n});\nexport default function TxnsErrorTipModal() {\n  const {\n    errorTip,\n    isOpenModal,\n    onChangeViewErrorTip\n  } = useTxnsErrorTipOpen();\n  const errorTxt = useMemo(() => {\n    if ((errorTip === null || errorTip === void 0 ? void 0 : errorTip.toString().indexOf('cannot estimate gas; transaction may fail or may require manual gas limit')) !== -1) {\n      return 'cannot estimate gas; transaction may fail or may require manual gas limit';\n    } else if ((errorTip === null || errorTip === void 0 ? void 0 : errorTip.toString().indexOf('replacement transaction underpriced')) !== -1) {\n      return 'replacement transaction underpriced';\n    } else {\n      return errorTip.toString();\n    }\n  }, [errorTip]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalContent, {\n    isOpen: isOpenModal,\n    title: 'Transaction Error',\n    onDismiss: () => {\n      onChangeViewErrorTip('', false);\n    },\n    padding: '0rem',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ErrorTipContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, errorTxt, \" \")));\n}","map":{"version":3,"names":["React","useMemo","styled","useTxnsErrorTipOpen","ModalContent","ErrorTipContent","div","_templateObject","_taggedTemplateLiteral","_ref","theme","red1","TxnsErrorTipModal","errorTip","isOpenModal","onChangeViewErrorTip","errorTxt","toString","indexOf","createElement","Fragment","isOpen","title","onDismiss","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/CrossChainPanelV2/txnsErrorTipModal.tsx"],"sourcesContent":["import React, { useMemo } from \"react\"\nimport styled from \"styled-components\"\nimport {useTxnsErrorTipOpen} from '../../state/application/hooks'\n// import {getParams} from '../../config/tools/getUrlParams'\n\nimport ModalContent from '../Modal/ModalContent'\n\nconst ErrorTipContent = styled.div`\n  padding: 30px 20px;\n  color: ${({ theme }) => theme.red1};\n`\n\nexport default function TxnsErrorTipModal () {\n  const {errorTip, isOpenModal, onChangeViewErrorTip} = useTxnsErrorTipOpen()\n  const errorTxt = useMemo(() => {\n    if (errorTip?.toString().indexOf('cannot estimate gas; transaction may fail or may require manual gas limit') !== -1) {\n      return 'cannot estimate gas; transaction may fail or may require manual gas limit'\n    } else if (errorTip?.toString().indexOf('replacement transaction underpriced') !== -1) {\n      return 'replacement transaction underpriced'\n    } else {\n      return errorTip.toString()\n    }\n  }, [errorTip])\n  return (\n    <>\n      <ModalContent\n        isOpen={isOpenModal}\n        title={'Transaction Error'}\n        onDismiss={() => {\n          onChangeViewErrorTip('', false)\n        }}\n        padding={'0rem'}\n      >\n       <ErrorTipContent>{errorTxt} </ErrorTipContent>\n      </ModalContent>\n    </>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAQC,mBAAmB,QAAO,+BAA+B;AACjE;;AAEA,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAG,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,kDAEvBC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,IAAI;AAAA,EACnC;AAED,eAAe,SAASC,iBAAiBA,CAAA,EAAI;EAC3C,MAAM;IAACC,QAAQ;IAAEC,WAAW;IAAEC;EAAoB,CAAC,GAAGZ,mBAAmB,CAAC,CAAC;EAC3E,MAAMa,QAAQ,GAAGf,OAAO,CAAC,MAAM;IAC7B,IAAI,CAAAY,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,2EAA2E,CAAC,MAAK,CAAC,CAAC,EAAE;MACpH,OAAO,2EAA2E;IACpF,CAAC,MAAM,IAAI,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,qCAAqC,CAAC,MAAK,CAAC,CAAC,EAAE;MACrF,OAAO,qCAAqC;IAC9C,CAAC,MAAM;MACL,OAAOL,QAAQ,CAACI,QAAQ,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd,oBACEb,KAAA,CAAAmB,aAAA,CAAAnB,KAAA,CAAAoB,QAAA,qBACEpB,KAAA,CAAAmB,aAAA,CAACf,YAAY;IACXiB,MAAM,EAAEP,WAAY;IACpBQ,KAAK,EAAE,mBAAoB;IAC3BC,SAAS,EAAEA,CAAA,KAAM;MACfR,oBAAoB,CAAC,EAAE,EAAE,KAAK,CAAC;IACjC,CAAE;IACFS,OAAO,EAAE,MAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEjB9B,KAAA,CAAAmB,aAAA,CAACd,eAAe;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,QAAQ,EAAC,GAAkB,CAChC,CACd,CAAC;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}