{"ast":null,"code":"import axios from'axios';import qs from'qs';// axios.defaults.headers.common['Authorization'] = '0xC03033d8b833fF7ca08BF2A58C9BC9d711257249'\nexport function getUrlData(url){return new Promise(resolve=>{axios.get(url).then(res=>{if(res&&(res.data||res.data===0)&&res.status===200){resolve({msg:'Success',data:res.data});}else{resolve({msg:'Error',data:'Error'});}}).catch(err=>{resolve({msg:'Error',data:err.toString()});});});}// for (let i = 0; i < 100; i++) {\n//   getUrlData('http://stressapi.multichain.org/charts/total-history').then(res => console.log(res))\n// }\n// console.log(axios.post)\nexport function postUrlData(url,data,type){return new Promise(resolve=>{axios.post(url,type?data:qs.stringify(data)).then(res=>{if(res&&res.data&&res.status===200){resolve({msg:'Success',data:res.data});}else{resolve({msg:'Error',data:'Error'});}}).catch(err=>{resolve({msg:'Error',data:err.toString()});});});}","map":{"version":3,"names":["axios","qs","getUrlData","url","Promise","resolve","get","then","res","data","status","msg","catch","err","toString","postUrlData","type","post","stringify"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/tools/axios.ts"],"sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\n\n// axios.defaults.headers.common['Authorization'] = '0xC03033d8b833fF7ca08BF2A58C9BC9d711257249'\nexport function getUrlData (url:string) {\n  return new Promise(resolve => {\n    axios.get(url).then((res:any) => {\n      if (res && (res.data || res.data === 0) && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        })\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        })\n      }\n    }).catch((err:any) => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      })\n    })\n  })\n}\n// for (let i = 0; i < 100; i++) {\n\n//   getUrlData('http://stressapi.multichain.org/charts/total-history').then(res => console.log(res))\n// }\n// console.log(axios.post)\nexport function postUrlData (url:string, data:any, type?: any) {\n  return new Promise(resolve => {\n    axios.post(url, type ? data : qs.stringify(data)).then((res:any) => {\n      if (res && res.data && res.status === 200) {\n        resolve({\n          msg: 'Success',\n          data: res.data\n        })\n      } else {\n        resolve({\n          msg: 'Error',\n          data: 'Error'\n        })\n      }\n    }).catch((err:any) => {\n      resolve({\n        msg: 'Error',\n        data: err.toString()\n      })\n    })\n  })\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,EAAE,KAAM,IAAI,CAGnB;AACA,MAAO,SAAS,CAAAC,UAAUA,CAAEC,GAAU,CAAE,CACtC,MAAO,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAI,CAC5BL,KAAK,CAACM,GAAG,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEC,GAAO,EAAK,CAC/B,GAAIA,GAAG,GAAKA,GAAG,CAACC,IAAI,EAAID,GAAG,CAACC,IAAI,GAAK,CAAC,CAAC,EAAID,GAAG,CAACE,MAAM,GAAK,GAAG,CAAE,CAC7DL,OAAO,CAAC,CACNM,GAAG,CAAE,SAAS,CACdF,IAAI,CAAED,GAAG,CAACC,IACZ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLJ,OAAO,CAAC,CACNM,GAAG,CAAE,OAAO,CACZF,IAAI,CAAE,OACR,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAACG,KAAK,CAAEC,GAAO,EAAK,CACpBR,OAAO,CAAC,CACNM,GAAG,CAAE,OAAO,CACZF,IAAI,CAAEI,GAAG,CAACC,QAAQ,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACA;AAEA;AACA;AACA;AACA,MAAO,SAAS,CAAAC,WAAWA,CAAEZ,GAAU,CAAEM,IAAQ,CAAEO,IAAU,CAAE,CAC7D,MAAO,IAAI,CAAAZ,OAAO,CAACC,OAAO,EAAI,CAC5BL,KAAK,CAACiB,IAAI,CAACd,GAAG,CAAEa,IAAI,CAAGP,IAAI,CAAGR,EAAE,CAACiB,SAAS,CAACT,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEC,GAAO,EAAK,CAClE,GAAIA,GAAG,EAAIA,GAAG,CAACC,IAAI,EAAID,GAAG,CAACE,MAAM,GAAK,GAAG,CAAE,CACzCL,OAAO,CAAC,CACNM,GAAG,CAAE,SAAS,CACdF,IAAI,CAAED,GAAG,CAACC,IACZ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLJ,OAAO,CAAC,CACNM,GAAG,CAAE,OAAO,CACZF,IAAI,CAAE,OACR,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAACG,KAAK,CAAEC,GAAO,EAAK,CACpBR,OAAO,CAAC,CACNM,GAAG,CAAE,OAAO,CACZF,IAAI,CAAEI,GAAG,CAACC,QAAQ,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}