{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.SIGHASH_TYPE) {\n    throw new Error('Decode Error: could not decode sighashType with key 0x' + keyVal.key.toString('hex'));\n  }\n  return keyVal.value.readUInt32LE(0);\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.SIGHASH_TYPE]);\n  const value = Buffer.allocUnsafe(4);\n  value.writeUInt32LE(data, 0);\n  return {\n    key,\n    value\n  };\n}\nexports.encode = encode;\nexports.expected = 'number';\nfunction check(data) {\n  return typeof data === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.sighashType === undefined;\n}\nexports.canAdd = canAdd;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","decode","keyVal","key","InputTypes","SIGHASH_TYPE","Error","toString","readUInt32LE","encode","data","Buffer","from","allocUnsafe","writeUInt32LE","expected","check","canAdd","currentData","newData","sighashType","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/input/sighashType.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.SIGHASH_TYPE) {\n    throw new Error(\n      'Decode Error: could not decode sighashType with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value.readUInt32LE(0);\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.SIGHASH_TYPE]);\n  const value = Buffer.allocUnsafe(4);\n  value.writeUInt32LE(data, 0);\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected = 'number';\nfunction check(data) {\n  return typeof data === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.sighashType === undefined;\n}\nexports.canAdd = canAdd;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,YAAY,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,SAASC,MAAMA,CAACC,MAAM,EAAE;EACtB,IAAIA,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC,KAAKJ,YAAY,CAACK,UAAU,CAACC,YAAY,EAAE;IAC1D,MAAM,IAAIC,KAAK,CACb,wDAAwD,GACtDJ,MAAM,CAACC,GAAG,CAACI,QAAQ,CAAC,KAAK,CAC7B,CAAC;EACH;EACA,OAAOL,MAAM,CAACJ,KAAK,CAACU,YAAY,CAAC,CAAC,CAAC;AACrC;AACAX,OAAO,CAACI,MAAM,GAAGA,MAAM;AACvB,SAASQ,MAAMA,CAACC,IAAI,EAAE;EACpB,MAAMP,GAAG,GAAGQ,MAAM,CAACC,IAAI,CAAC,CAACb,YAAY,CAACK,UAAU,CAACC,YAAY,CAAC,CAAC;EAC/D,MAAMP,KAAK,GAAGa,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC;EACnCf,KAAK,CAACgB,aAAa,CAACJ,IAAI,EAAE,CAAC,CAAC;EAC5B,OAAO;IACLP,GAAG;IACHL;EACF,CAAC;AACH;AACAD,OAAO,CAACY,MAAM,GAAGA,MAAM;AACvBZ,OAAO,CAACkB,QAAQ,GAAG,QAAQ;AAC3B,SAASC,KAAKA,CAACN,IAAI,EAAE;EACnB,OAAO,OAAOA,IAAI,KAAK,QAAQ;AACjC;AACAb,OAAO,CAACmB,KAAK,GAAGA,KAAK;AACrB,SAASC,MAAMA,CAACC,WAAW,EAAEC,OAAO,EAAE;EACpC,OAAO,CAAC,CAACD,WAAW,IAAI,CAAC,CAACC,OAAO,IAAID,WAAW,CAACE,WAAW,KAAKC,SAAS;AAC5E;AACAxB,OAAO,CAACoB,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}