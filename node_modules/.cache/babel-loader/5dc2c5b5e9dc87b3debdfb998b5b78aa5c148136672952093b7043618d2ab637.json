{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useCallback,useState}from'react';import styled from'styled-components';import Popover from'../Popover';const TooltipContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 228px;\\n  padding: 0.6rem 1rem;\\n  line-height: 150%;\\n  font-weight: 400;\\n  font-size: 12px;\\n\"])));export default function Tooltip(_ref){let{text,...rest}=_ref;return/*#__PURE__*/React.createElement(Popover,Object.assign({content:/*#__PURE__*/React.createElement(TooltipContainer,null,text)},rest));}export function MouseoverTooltip(_ref2){let{children,...rest}=_ref2;const[show,setShow]=useState(false);const open=useCallback(()=>setShow(true),[setShow]);const close=useCallback(()=>setShow(false),[setShow]);return/*#__PURE__*/React.createElement(Tooltip,Object.assign({},rest,{show:show}),/*#__PURE__*/React.createElement(\"div\",{onMouseEnter:open,onMouseLeave:close},children));}","map":{"version":3,"names":["React","useCallback","useState","styled","Popover","TooltipContainer","div","_templateObject","_taggedTemplateLiteral","Tooltip","_ref","text","rest","createElement","Object","assign","content","MouseoverTooltip","_ref2","children","show","setShow","open","close","onMouseEnter","onMouseLeave"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/Tooltip/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n  font-size: 12px;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n"],"mappings":"gMAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CACpD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,OAAO,KAAwB,YAAY,CAElD,KAAM,CAAAC,gBAAgB,CAAGF,MAAM,CAACG,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,mHAMlC,CAMD,cAAe,SAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAkC,IAAjC,CAAEC,IAAI,CAAE,GAAGC,IAAmB,CAAC,CAAAF,IAAA,CAC7D,mBAAOV,KAAA,CAAAa,aAAA,CAACT,OAAO,CAAAU,MAAA,CAAAC,MAAA,EAACC,OAAO,cAAEhB,KAAA,CAAAa,aAAA,CAACR,gBAAgB,MAAEM,IAAuB,CAAE,EAAKC,IAAI,CAAG,CAAC,CACpF,CAEA,MAAO,SAAS,CAAAK,gBAAgBA,CAAAC,KAAA,CAAoD,IAAnD,CAAEC,QAAQ,CAAE,GAAGP,IAAiC,CAAC,CAAAM,KAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAoB,IAAI,CAAGrB,WAAW,CAAC,IAAMoB,OAAO,CAAC,IAAI,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CACxD,KAAM,CAAAE,KAAK,CAAGtB,WAAW,CAAC,IAAMoB,OAAO,CAAC,KAAK,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAC1D,mBACErB,KAAA,CAAAa,aAAA,CAACJ,OAAO,CAAAK,MAAA,CAAAC,MAAA,IAAKH,IAAI,EAAEQ,IAAI,CAAEA,IAAK,gBAC5BpB,KAAA,CAAAa,aAAA,QAAKW,YAAY,CAAEF,IAAK,CAACG,YAAY,CAAEF,KAAM,EAC1CJ,QACE,CACE,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}