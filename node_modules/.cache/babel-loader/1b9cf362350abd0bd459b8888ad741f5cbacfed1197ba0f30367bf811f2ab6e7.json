{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"/workspace/Planq-Dapps/vesting-portal/src/components/Popups/TransactionPopup.tsx\";\nimport React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport { TYPE } from '../../theme';\nimport { ExternalLink } from '../../theme/components';\nimport { getEtherscanLink } from '../../utils';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport config from '../../config';\nconst RowNoFlex = styled(AutoRow)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  flex-wrap: nowrap;\\n\"])));\nexport default function TransactionPopup(_ref) {\n  let {\n    hash,\n    success,\n    summary\n  } = _ref;\n  const {\n    chainId\n  } = useActiveReact();\n  const {\n    t\n  } = useTranslation();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(RowNoFlex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    color: theme.green1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(AlertCircle, {\n    color: theme.red1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, summary !== null && summary !== void 0 ? summary : 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)), chainId && /*#__PURE__*/React.createElement(React.Fragment, null, (summary === null || summary === void 0 ? void 0 : summary.indexOf('Cross bridge')) === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, t('txnsTip'), \"\\uFF1A\", /*#__PURE__*/React.createElement(ExternalLink, {\n    href: config.explorerUrl + '/tx?params=' + hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, config.explorerUrl + '/tx?params=' + hash.slice(0, 8) + '...' + hash.slice(58, 65))) : /*#__PURE__*/React.createElement(ExternalLink, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, t('ViewOn'), \" \", config.getCurChainInfo(chainId).name))));\n}","map":{"version":3,"names":["React","useContext","AlertCircle","CheckCircle","useTranslation","styled","ThemeContext","useActiveReact","TYPE","ExternalLink","getEtherscanLink","AutoColumn","AutoRow","config","RowNoFlex","_templateObject","_taggedTemplateLiteral","TransactionPopup","_ref","hash","success","summary","chainId","t","theme","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingRight","color","green1","size","red1","gap","body","fontWeight","text2","slice","Fragment","indexOf","href","explorerUrl","getCurChainInfo","name"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/Popups/TransactionPopup.tsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nimport config from '../../config'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveReact()\n  const { t } = useTranslation()\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500} color={theme.text2}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\n        {chainId && (\n          <>\n            {\n              summary?.indexOf('Cross bridge') === 0 ? (\n                <>\n                  {t('txnsTip')}ï¼š\n                  <ExternalLink href={config.explorerUrl + '/tx?params=' + hash}>{config.explorerUrl + '/tx?params=' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</ExternalLink>\n                </>\n              ) : (\n                <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>{t('ViewOn')} {config.getCurChainInfo(chainId).name}</ExternalLink>\n              )\n            }\n            {/* <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>{t('ViewOn')} {config.getCurChainInfo(chainId).name}</ExternalLink> */}\n          </>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}