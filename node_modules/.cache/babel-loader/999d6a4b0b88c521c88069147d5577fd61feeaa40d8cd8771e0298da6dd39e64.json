{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  (0, types_1.typeforce)({\n    network: types_1.typeforce.maybe(types_1.typeforce.Object),\n    address: types_1.typeforce.maybe(types_1.typeforce.String),\n    hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n    output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n    pubkey: types_1.typeforce.maybe(types_1.isPoint),\n    signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n    input: types_1.typeforce.maybe(types_1.typeforce.Buffer)\n  }, a);\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return {\n      version,\n      hash\n    };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = {\n    name: 'p2pkh',\n    network\n  };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_DUP, OPS.OP_HASH160, o.hash, OPS.OP_EQUALVERIFY, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n    if (a.output) {\n      if (a.output.length !== 25 || a.output[0] !== OPS.OP_DUP || a.output[1] !== OPS.OP_HASH160 || a.output[2] !== 0x14 || a.output[23] !== OPS.OP_EQUALVERIFY || a.output[24] !== OPS.OP_CHECKSIG) throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0])) throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1])) throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1])) throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;","map":{"version":3,"names":["Object","defineProperty","exports","value","p2pkh","bcrypto","require","networks_1","bscript","types_1","lazy","bs58check","OPS","a","opts","address","hash","output","pubkey","input","TypeError","assign","validate","typeforce","network","maybe","String","BufferN","isPoint","signature","isCanonicalScriptSignature","Buffer","_address","payload","from","decode","version","readUInt8","slice","_chunks","decompile","bitcoin","o","name","prop","allocUnsafe","writeUInt8","pubKeyHash","copy","encode","hash160","compile","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","length","equals","hash2","pkh","chunks"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/payments/p2pkh.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}