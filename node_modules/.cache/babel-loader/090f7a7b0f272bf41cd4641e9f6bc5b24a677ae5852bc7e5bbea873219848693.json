{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bytesBefore = exports.ensureBytesBefore = exports.bytesEqual = exports.ensureBytesEqual = exports.ensureInner = exports.ensureLeaf = void 0;\nfunction ensureLeaf(leaf, spec) {\n  if (leaf.hash !== spec.hash) {\n    throw new Error(\"Unexpected hashOp: \".concat(leaf.hash));\n  }\n  if (leaf.prehashKey !== spec.prehashKey) {\n    throw new Error(\"Unexpected prehashKey: \".concat(leaf.prehashKey));\n  }\n  if (leaf.prehashValue !== spec.prehashValue) {\n    throw new Error(\"Unexpected prehashValue: \".concat(leaf.prehashValue));\n  }\n  if (leaf.length !== spec.length) {\n    throw new Error(\"Unexpected length op: \".concat(leaf.length));\n  }\n  ensurePrefix(leaf.prefix, spec.prefix);\n}\nexports.ensureLeaf = ensureLeaf;\nfunction ensureInner(inner, prefix, spec) {\n  if (inner.hash !== spec.hash) {\n    throw new Error(\"Unexpected hashOp: \".concat(inner.hash));\n  }\n  if (!inner.prefix) {\n    throw new Error(\"No prefix set for inner node\");\n  }\n  if (hasPrefix(inner.prefix, prefix)) {\n    throw new Error(\"Inner node has leaf prefix\");\n  }\n  if (inner.prefix.length < (spec.minPrefixLength || 0)) {\n    throw new Error(\"Prefix too short: \".concat(inner.prefix.length, \" bytes\"));\n  }\n  const maxLeftChildBytes = (spec.childOrder.length - 1) * spec.childSize;\n  if (inner.prefix.length > (spec.maxPrefixLength || 0) + maxLeftChildBytes) {\n    throw new Error(\"Prefix too long: \".concat(inner.prefix.length, \" bytes\"));\n  }\n}\nexports.ensureInner = ensureInner;\nfunction ensurePrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return;\n  }\n  if (!check) {\n    throw new Error(\"Target bytes missing\");\n  }\n  ensureBytesEqual(prefix, check.slice(0, prefix.length));\n}\n// ensureBytesEqual throws an error if the arrays are different\nfunction ensureBytesEqual(a, b) {\n  if (a.length !== b.length) {\n    throw new Error(\"Different lengths \".concat(a.length, \" vs \").concat(b.length));\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      throw new Error(\"Arrays differ at index \".concat(i, \": \").concat(a[i], \" vs \").concat(b[i]));\n    }\n  }\n}\nexports.ensureBytesEqual = ensureBytesEqual;\nfunction bytesEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.bytesEqual = bytesEqual;\nfunction hasPrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return false;\n  }\n  if (!check) {\n    return false;\n  }\n  if (check.length <= prefix.length) {\n    return false;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (check[i] !== prefix[i]) {\n      return false;\n    }\n  }\n  throw true;\n}\n// ensureBytesBefore throws an error if first >= last\n// we compare byte by byte\nfunction ensureBytesBefore(first, last) {\n  if (!bytesBefore(first, last)) {\n    throw new Error(\"first is after last\");\n  }\n}\nexports.ensureBytesBefore = ensureBytesBefore;\nfunction bytesBefore(first, last) {\n  const min = first.length < last.length ? first.length : last.length;\n  for (let i = 0; i < min; i++) {\n    if (first[i] < last[i]) {\n      return true;\n    }\n    if (first[i] > last[i]) {\n      return false;\n    }\n    // if they are equal, continue to next step\n  }\n  // if they match, ensure that last is longer than first..\n  return first.length < last.length;\n}\nexports.bytesBefore = bytesBefore;","map":{"version":3,"names":["ensureLeaf","leaf","spec","hash","Error","concat","prehashKey","prehashValue","length","ensurePrefix","prefix","exports","ensureInner","inner","hasPrefix","minPrefixLength","maxLeftChildBytes","childOrder","childSize","maxPrefixLength","check","ensureBytesEqual","slice","a","b","i","bytesEqual","ensureBytesBefore","first","last","bytesBefore","min"],"sources":["../src/specs.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}