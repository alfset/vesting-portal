{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpClient = void 0;\nconst json_rpc_1 = require(\"@cosmjs/json-rpc\");\nconst http_1 = require(\"./http\");\nconst rpcclient_1 = require(\"./rpcclient\");\nclass HttpClient {\n  constructor(endpoint) {\n    if (typeof endpoint === \"string\") {\n      // accept host.name:port and assume http protocol\n      this.url = (0, rpcclient_1.hasProtocol)(endpoint) ? endpoint : \"http://\" + endpoint;\n    } else {\n      this.url = endpoint.url;\n      this.headers = endpoint.headers;\n    }\n  }\n  disconnect() {\n    // nothing to be done\n  }\n  async execute(request) {\n    const response = (0, json_rpc_1.parseJsonRpcResponse)(await (0, http_1.http)(\"POST\", this.url, this.headers, request));\n    if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n      throw new Error(JSON.stringify(response.error));\n    }\n    return response;\n  }\n}\nexports.HttpClient = HttpClient;","map":{"version":3,"names":["json_rpc_1","require","http_1","rpcclient_1","HttpClient","constructor","endpoint","url","hasProtocol","headers","disconnect","execute","request","response","parseJsonRpcResponse","http","isJsonRpcErrorResponse","Error","JSON","stringify","error","exports"],"sources":["../../src/rpcclients/httpclient.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AAOA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,WAAA,GAAAF,OAAA;AAgBA,MAAaG,UAAU;EAIrBC,YAAmBC,QAA+B;IAChD,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAChC;MACA,IAAI,CAACC,GAAG,GAAG,IAAAJ,WAAA,CAAAK,WAAW,EAACF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,SAAS,GAAGA,QAAQ;KACnE,MAAM;MACL,IAAI,CAACC,GAAG,GAAGD,QAAQ,CAACC,GAAG;MACvB,IAAI,CAACE,OAAO,GAAGH,QAAQ,CAACG,OAAO;;EAEnC;EAEOC,UAAUA,CAAA;IACf;EAAA;EAGK,MAAMC,OAAOA,CAACC,OAAuB;IAC1C,MAAMC,QAAQ,GAAG,IAAAb,UAAA,CAAAc,oBAAoB,EAAC,MAAM,IAAAZ,MAAA,CAAAa,IAAI,EAAC,MAAM,EAAE,IAAI,CAACR,GAAG,EAAE,IAAI,CAACE,OAAO,EAAEG,OAAO,CAAC,CAAC;IAC1F,IAAI,IAAAZ,UAAA,CAAAgB,sBAAsB,EAACH,QAAQ,CAAC,EAAE;MACpC,MAAM,IAAII,KAAK,CAACC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,KAAK,CAAC,CAAC;;IAEjD,OAAOP,QAAQ;EACjB;;AAxBFQ,OAAA,CAAAjB,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}