{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _templateObject2,\n  _templateObject3,\n  _templateObject4,\n  _templateObject5,\n  _jsxFileName = \"/workspace/Planq-Dapps/vesting-portal/src/components/Header/Polling.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { TYPE, ExternalLink } from '../../theme';\nimport { useBlockNumber } from '../../state/application/hooks';\nimport { getEtherscanLink } from '../../utils';\nimport { useActiveWeb3React } from '../../hooks';\nconst StyledPolling = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  display: flex;\\n  right: 0;\\n  bottom: 0;\\n  padding: 1rem;\\n  color: white;\\n  transition: opacity 0.25s ease;\\n  color: \", \";\\n  :hover {\\n    opacity: 1;\\n  }\\n\\n  \", \"\\n\"])), _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.green1;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mediaWidth.upToMedium(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    display: none;\\n  \"])));\n});\nconst StyledPollingDot = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  width: 8px;\\n  height: 8px;\\n  min-height: 8px;\\n  min-width: 8px;\\n  margin-left: 0.5rem;\\n  margin-top: 3px;\\n  border-radius: 50%;\\n  position: relative;\\n  background-color: \", \";\\n\"])), _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.green1;\n});\nconst rotate360 = keyframes(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n\"])));\nconst Spinner = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  animation: \", \" 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\\n  transform: translateZ(0);\\n\\n  border-top: 1px solid transparent;\\n  border-right: 1px solid transparent;\\n  border-bottom: 1px solid transparent;\\n  border-left: 2px solid \", \";\\n  background: transparent;\\n  width: 14px;\\n  height: 14px;\\n  border-radius: 50%;\\n  position: relative;\\n\\n  left: -3px;\\n  top: -3px;\\n\"])), rotate360, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.green1;\n});\nexport default function Polling() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const blockNumber = useBlockNumber();\n  const [isMounted, setIsMounted] = useState(true);\n  useEffect(() => {\n    const timer1 = setTimeout(() => setIsMounted(true), 1000);\n\n    // this will clear Timeout when component unmount like in willComponentUnmount\n    return () => {\n      setIsMounted(false);\n      clearTimeout(timer1);\n    };\n  }, [blockNumber] //useEffect will run only one time\n  //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n  );\n\n  return /*#__PURE__*/React.createElement(ExternalLink, {\n    href: chainId && blockNumber ? getEtherscanLink(chainId, blockNumber.toString(), 'block') : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledPolling, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.small, {\n    style: {\n      opacity: isMounted ? '0.2' : '0.6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, blockNumber), /*#__PURE__*/React.createElement(StyledPollingDot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, !isMounted && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 42\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","TYPE","ExternalLink","useBlockNumber","getEtherscanLink","useActiveWeb3React","StyledPolling","div","_templateObject","_taggedTemplateLiteral","_ref","theme","green1","_ref2","mediaWidth","upToMedium","_templateObject2","StyledPollingDot","_templateObject3","_ref3","rotate360","_templateObject4","Spinner","_templateObject5","_ref4","Polling","chainId","blockNumber","isMounted","setIsMounted","timer1","setTimeout","clearTimeout","createElement","href","toString","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","small","style","opacity"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/Header/Polling.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { TYPE, ExternalLink } from '../../theme'\n\nimport { useBlockNumber } from '../../state/application/hooks'\nimport { getEtherscanLink } from '../../utils'\nimport { useActiveWeb3React } from '../../hooks'\n\nconst StyledPolling = styled.div`\n  position: fixed;\n  display: flex;\n  right: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: white;\n  transition: opacity 0.25s ease;\n  color: ${({ theme }) => theme.green1};\n  :hover {\n    opacity: 1;\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\nconst StyledPollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-left: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  position: relative;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.div`\n  animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  transform: translateZ(0);\n\n  border-top: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-left: 2px solid ${({ theme }) => theme.green1};\n  background: transparent;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  position: relative;\n\n  left: -3px;\n  top: -3px;\n`\n\nexport default function Polling() {\n  const { chainId } = useActiveWeb3React()\n\n  const blockNumber = useBlockNumber()\n\n  const [isMounted, setIsMounted] = useState(true)\n\n  useEffect(\n    () => {\n      const timer1 = setTimeout(() => setIsMounted(true), 1000)\n\n      // this will clear Timeout when component unmount like in willComponentUnmount\n      return () => {\n        setIsMounted(false)\n        clearTimeout(timer1)\n      }\n    },\n    [blockNumber] //useEffect will run only one time\n    //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n  )\n\n  return (\n    <ExternalLink href={chainId && blockNumber ? getEtherscanLink(chainId, blockNumber.toString(), 'block') : ''}>\n      <StyledPolling>\n        <TYPE.small style={{ opacity: isMounted ? '0.2' : '0.6' }}>{blockNumber}</TYPE.small>\n        <StyledPollingDot>{!isMounted && <Spinner />}</StyledPollingDot>\n      </StyledPolling>\n    </ExternalLink>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}