{"ast":null,"code":"var _jsxFileName = \"/workspace/Planq-Dapps/vesting-portal/src/components/CrossChainPanelV2/txnsDtilsModal.tsx\";\nimport React, { useMemo } from \"react\";\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport { useAllTransactions } from '../../state/transactions/hooks';\nimport { useTxnsDtilOpen } from '../../state/application/hooks';\n// import {getParams} from '../../config/tools/getUrlParams'\n\nimport { Status, getStatus } from '../../config/status';\nimport HistoryDetails from \"../Transaction/details\";\nimport ModalContent from '../Modal/ModalContent';\nexport default function TxnsDtilsModal() {\n  var _tx$from, _txInfo$bind, _txInfo$fromChainID, _txInfo$toChainID, _txInfo$txid, _tx$info5, _tx$info6, _txInfo$formatvalue, _txInfo$historyType, _tx$info7;\n  const allTransactions = useAllTransactions();\n  const {\n    chainId\n  } = useActiveReact();\n  const {\n    hash,\n    isOpenModal,\n    onChangeViewDtil\n  } = useTxnsDtilOpen();\n\n  // console.log(isOpenModal)\n  // const hash = getParams('hash')\n  const tx = allTransactions === null || allTransactions === void 0 ? void 0 : allTransactions[hash];\n  // console.log(tx)\n  const fromStatus = useMemo(() => {\n    if (tx) {\n      var _tx$receipt, _tx$receipt2;\n      if (!tx.receipt) {\n        return Status.Pending;\n      } else if (((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1 || typeof ((_tx$receipt2 = tx.receipt) === null || _tx$receipt2 === void 0 ? void 0 : _tx$receipt2.status) === 'undefined') {\n        return Status.Success;\n      } else {\n        return Status.Failure;\n      }\n    } else {\n      return Status.Null;\n    }\n  }, [tx]);\n  const toStatus = useMemo(() => {\n    if (tx) {\n      var _tx$info, _tx$info2, _tx$info4;\n      if (fromStatus === Status.Failure) {\n        return Status.Failure;\n      } else if (!tx.info) {\n        return null;\n      } else if (((_tx$info = tx.info) === null || _tx$info === void 0 ? void 0 : _tx$info.status) || ((_tx$info2 = tx.info) === null || _tx$info2 === void 0 ? void 0 : _tx$info2.status) === 0) {\n        var _tx$info3;\n        const status = (_tx$info3 = tx.info) === null || _tx$info3 === void 0 ? void 0 : _tx$info3.status;\n        const statusType = getStatus(status);\n        return statusType;\n      } else if (((_tx$info4 = tx.info) === null || _tx$info4 === void 0 ? void 0 : _tx$info4.status) === '') {\n        return Status.Confirming;\n      } else {\n        return Status.Failure;\n      }\n    } else {\n      return null;\n    }\n  }, [tx, fromStatus]);\n  const txInfo = useMemo(() => {\n    return tx === null || tx === void 0 ? void 0 : tx.info;\n  }, [tx]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalContent, {\n    isOpen: isOpenModal,\n    title: 'Transaction Details',\n    onDismiss: () => {\n      onChangeViewDtil('', false);\n    },\n    padding: '0rem',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HistoryDetails, {\n    symbol: tx === null || tx === void 0 ? void 0 : tx.symbol,\n    from: (_tx$from = tx === null || tx === void 0 ? void 0 : tx.from) !== null && _tx$from !== void 0 ? _tx$from : txInfo === null || txInfo === void 0 ? void 0 : txInfo.from,\n    to: (_txInfo$bind = txInfo === null || txInfo === void 0 ? void 0 : txInfo.bind) !== null && _txInfo$bind !== void 0 ? _txInfo$bind : tx === null || tx === void 0 ? void 0 : tx.toAddress,\n    fromChainID: (_txInfo$fromChainID = txInfo === null || txInfo === void 0 ? void 0 : txInfo.fromChainID) !== null && _txInfo$fromChainID !== void 0 ? _txInfo$fromChainID : chainId,\n    toChainID: (_txInfo$toChainID = txInfo === null || txInfo === void 0 ? void 0 : txInfo.toChainID) !== null && _txInfo$toChainID !== void 0 ? _txInfo$toChainID : tx === null || tx === void 0 ? void 0 : tx.toChainId,\n    fromStatus: fromStatus,\n    toStatus: toStatus,\n    txid: (_txInfo$txid = txInfo === null || txInfo === void 0 ? void 0 : txInfo.txid) !== null && _txInfo$txid !== void 0 ? _txInfo$txid : tx === null || tx === void 0 ? void 0 : tx.hash,\n    swaptx: fromStatus === Status.Failure || toStatus === Status.Failure ? 'Null' : tx === null || tx === void 0 ? void 0 : (_tx$info5 = tx.info) === null || _tx$info5 === void 0 ? void 0 : _tx$info5.swaptx,\n    swapvalue: fromStatus === Status.Failure || toStatus === Status.Failure ? 'Null' : tx === null || tx === void 0 ? void 0 : (_tx$info6 = tx.info) === null || _tx$info6 === void 0 ? void 0 : _tx$info6.formatswapvalue,\n    timestamp: tx === null || tx === void 0 ? void 0 : tx.addedTime,\n    value: (_txInfo$formatvalue = txInfo === null || txInfo === void 0 ? void 0 : txInfo.formatvalue) !== null && _txInfo$formatvalue !== void 0 ? _txInfo$formatvalue : tx === null || tx === void 0 ? void 0 : tx.value,\n    version: (_txInfo$historyType = txInfo === null || txInfo === void 0 ? void 0 : txInfo.historyType) !== null && _txInfo$historyType !== void 0 ? _txInfo$historyType : tx === null || tx === void 0 ? void 0 : tx.version,\n    token: tx === null || tx === void 0 ? void 0 : tx.token,\n    isLiquidity: tx === null || tx === void 0 ? void 0 : tx.isLiquidity,\n    isReceiveAnyToken: tx === null || tx === void 0 ? void 0 : tx.isReceiveAnyToken,\n    avgTime: tx === null || tx === void 0 ? void 0 : (_tx$info7 = tx.info) === null || _tx$info7 === void 0 ? void 0 : _tx$info7.time,\n    logoUrl: tx === null || tx === void 0 ? void 0 : tx.logoUrl,\n    fromInfo: tx === null || tx === void 0 ? void 0 : tx.fromInfo,\n    toInfo: tx === null || tx === void 0 ? void 0 : tx.toInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useMemo","useActiveReact","useAllTransactions","useTxnsDtilOpen","Status","getStatus","HistoryDetails","ModalContent","TxnsDtilsModal","_tx$from","_txInfo$bind","_txInfo$fromChainID","_txInfo$toChainID","_txInfo$txid","_tx$info5","_tx$info6","_txInfo$formatvalue","_txInfo$historyType","_tx$info7","allTransactions","chainId","hash","isOpenModal","onChangeViewDtil","tx","fromStatus","_tx$receipt","_tx$receipt2","receipt","Pending","status","Success","Failure","Null","toStatus","_tx$info","_tx$info2","_tx$info4","info","_tx$info3","statusType","Confirming","txInfo","createElement","Fragment","isOpen","title","onDismiss","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","symbol","from","to","bind","toAddress","fromChainID","toChainID","toChainId","txid","swaptx","swapvalue","formatswapvalue","timestamp","addedTime","value","formatvalue","version","historyType","token","isLiquidity","isReceiveAnyToken","avgTime","time","logoUrl","fromInfo","toInfo"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/CrossChainPanelV2/txnsDtilsModal.tsx"],"sourcesContent":["import React, { useMemo } from \"react\"\n\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { useAllTransactions } from '../../state/transactions/hooks'\nimport {useTxnsDtilOpen} from '../../state/application/hooks'\n// import {getParams} from '../../config/tools/getUrlParams'\n\nimport {Status, getStatus} from '../../config/status'\n\nimport HistoryDetails from \"../Transaction/details\"\nimport ModalContent from '../Modal/ModalContent'\n\nexport default function TxnsDtilsModal () {\n  const allTransactions = useAllTransactions()\n  const { chainId } = useActiveReact()\n  const {hash, isOpenModal, onChangeViewDtil} = useTxnsDtilOpen()\n\n  // console.log(isOpenModal)\n  // const hash = getParams('hash')\n  const tx:any = allTransactions?.[hash]\n  // console.log(tx)\n  const fromStatus = useMemo(() => {\n    if (tx) {\n      if (!tx.receipt) {\n        return Status.Pending\n      } else if (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined') {\n        return Status.Success\n      } else {\n        return Status.Failure\n      }\n    } else {\n      return Status.Null\n    }\n  }, [tx])\n  const toStatus = useMemo(() => {\n    if (tx) {\n      if (fromStatus === Status.Failure) {\n        return Status.Failure\n      } else if (!tx.info) {\n        return null\n      } else if (tx.info?.status || tx.info?.status === 0) {\n        const status = tx.info?.status\n        const statusType = getStatus(status)\n        return statusType\n      } else if (tx.info?.status === '') {\n        return Status.Confirming\n      } else {\n        return Status.Failure\n      }\n    } else {\n      return null\n    }\n  }, [tx, fromStatus])\n\n  const txInfo = useMemo(() => {\n    return tx?.info\n  }, [tx])\n  return (\n    <>\n      <ModalContent\n        isOpen={isOpenModal}\n        title={'Transaction Details'}\n        onDismiss={() => {\n          onChangeViewDtil('', false)\n        }}\n        padding={'0rem'}\n      >\n        <HistoryDetails\n          symbol={tx?.symbol}\n          from={tx?.from ?? txInfo?.from}\n          to={txInfo?.bind ?? tx?.toAddress}\n          fromChainID={txInfo?.fromChainID ?? chainId}\n          toChainID={txInfo?.toChainID ?? tx?.toChainId}\n          fromStatus={fromStatus}\n          toStatus={toStatus}\n          txid={txInfo?.txid ?? tx?.hash}\n          swaptx={fromStatus === Status.Failure || toStatus === Status.Failure ? 'Null' : tx?.info?.swaptx}\n          swapvalue={fromStatus === Status.Failure || toStatus === Status.Failure ? 'Null' : tx?.info?.formatswapvalue}\n          timestamp={tx?.addedTime}\n          value={txInfo?.formatvalue ?? tx?.value}\n          version={txInfo?.historyType ?? tx?.version}\n          token={tx?.token}\n          isLiquidity={tx?.isLiquidity}\n          isReceiveAnyToken={tx?.isReceiveAnyToken}\n          avgTime={tx?.info?.time}\n          logoUrl={tx?.logoUrl}\n          fromInfo={tx?.fromInfo}\n          toInfo={tx?.toInfo}\n        />\n      </ModalContent>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}