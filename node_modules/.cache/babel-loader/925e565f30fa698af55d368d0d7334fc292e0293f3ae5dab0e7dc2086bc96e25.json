{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport SafeAppsSDK from '@gnosis.pm/safe-apps-sdk';\nimport { SafeAppProvider } from '@gnosis.pm/safe-apps-provider';\nclass SafeAppConnector extends AbstractConnector {\n  constructor(opts) {\n    super();\n    this.sdk = void 0;\n    this.safe = void 0;\n    this.provider = void 0;\n    this.sdk = new SafeAppsSDK(opts);\n  }\n  async activate() {\n    const runningAsSafeApp = await this.isSafeApp();\n    if (!runningAsSafeApp) {\n      throw new Error('The app is loaded outside safe context');\n    }\n    return {\n      provider: await this.getProvider(),\n      chainId: await this.getChainId(),\n      account: await this.getAccount()\n    };\n  }\n  async getSafeInfo() {\n    if (!this.safe) {\n      this.safe = await this.sdk.safe.getInfo();\n    }\n    return this.safe;\n  }\n  async getProvider() {\n    if (!this.provider) {\n      const safe = await this.getSafeInfo();\n      this.provider = new SafeAppProvider(safe, this.sdk);\n    }\n    return this.provider;\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    return provider.chainId;\n  }\n  async getAccount() {\n    const safe = await this.getSafeInfo();\n    return safe.safeAddress;\n  }\n  deactivate() {\n    return;\n  }\n  async isSafeApp() {\n    var _window;\n    // check if we're in an iframe\n    if (((_window = window) === null || _window === void 0 ? void 0 : _window.parent) === window) {\n      return false;\n    }\n    const safe = await Promise.race([this.getSafeInfo(), new Promise(resolve => setTimeout(resolve, 300))]);\n    return !!safe;\n  }\n}\nexport { SafeAppConnector };","map":{"version":3,"names":["AbstractConnector","SafeAppsSDK","SafeAppProvider","SafeAppConnector","constructor","opts","sdk","safe","provider","activate","runningAsSafeApp","isSafeApp","Error","getProvider","chainId","getChainId","account","getAccount","getSafeInfo","getInfo","safeAddress","deactivate","_window","window","parent","Promise","race","resolve","setTimeout"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/connectors/gnosis-safe/index.ts"],"sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector';\nimport { ConnectorUpdate } from '@web3-react/types';\nimport SafeAppsSDK, { Opts, SafeInfo } from '@gnosis.pm/safe-apps-sdk';\nimport { SafeAppProvider } from '@gnosis.pm/safe-apps-provider';\n\nclass SafeAppConnector extends AbstractConnector {\n  private readonly sdk: SafeAppsSDK;\n  private safe: SafeInfo | undefined;\n  private provider: SafeAppProvider | undefined;\n\n  constructor(opts?: Opts) {\n    super();\n    this.sdk = new SafeAppsSDK(opts);\n  }\n\n  async activate(): Promise<ConnectorUpdate> {\n    const runningAsSafeApp = await this.isSafeApp();\n    if (!runningAsSafeApp) {\n      throw new Error('The app is loaded outside safe context');\n    }\n\n    return { provider: await this.getProvider(), chainId: await this.getChainId(), account: await this.getAccount() };\n  }\n\n  public async getSafeInfo(): Promise<SafeInfo> {\n    if (!this.safe) {\n      this.safe = await this.sdk.safe.getInfo();\n    }\n    return this.safe;\n  }\n\n  public async getProvider(): Promise<SafeAppProvider> {\n    if (!this.provider) {\n      const safe = await this.getSafeInfo();\n      this.provider = new SafeAppProvider(safe, this.sdk);\n    }\n    return this.provider;\n  }\n\n  public async getChainId(): Promise<number> {\n    const provider = await this.getProvider();\n    return provider.chainId;\n  }\n\n  public async getAccount(): Promise<string> {\n    const safe = await this.getSafeInfo();\n    return safe.safeAddress;\n  }\n\n  public deactivate(): void {\n    return;\n  }\n\n  public async isSafeApp(): Promise<boolean> {\n    // check if we're in an iframe\n    if (window?.parent === window) {\n      return false;\n    }\n\n    const safe = await Promise.race([\n      this.getSafeInfo(),\n      new Promise<undefined>((resolve) => setTimeout(resolve, 300)),\n    ]);\n\n    return !!safe;\n  }\n}\n\nexport { SafeAppConnector };\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gCAAgC;AAElE,OAAOC,WAAW,MAA0B,0BAA0B;AACtE,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,gBAAgB,SAASH,iBAAiB,CAAC;EAK/CI,WAAWA,CAACC,IAAW,EAAE;IACvB,KAAK,CAAC,CAAC;IAAC,KALOC,GAAG;IAAA,KACZC,IAAI;IAAA,KACJC,QAAQ;IAId,IAAI,CAACF,GAAG,GAAG,IAAIL,WAAW,CAACI,IAAI,CAAC;EAClC;EAEA,MAAMI,QAAQA,CAAA,EAA6B;IACzC,MAAMC,gBAAgB,GAAG,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;IAC/C,IAAI,CAACD,gBAAgB,EAAE;MACrB,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,OAAO;MAAEJ,QAAQ,EAAE,MAAM,IAAI,CAACK,WAAW,CAAC,CAAC;MAAEC,OAAO,EAAE,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;MAAEC,OAAO,EAAE,MAAM,IAAI,CAACC,UAAU,CAAC;IAAE,CAAC;EACnH;EAEA,MAAaC,WAAWA,CAAA,EAAsB;IAC5C,IAAI,CAAC,IAAI,CAACX,IAAI,EAAE;MACd,IAAI,CAACA,IAAI,GAAG,MAAM,IAAI,CAACD,GAAG,CAACC,IAAI,CAACY,OAAO,CAAC,CAAC;IAC3C;IACA,OAAO,IAAI,CAACZ,IAAI;EAClB;EAEA,MAAaM,WAAWA,CAAA,EAA6B;IACnD,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAE;MAClB,MAAMD,IAAI,GAAG,MAAM,IAAI,CAACW,WAAW,CAAC,CAAC;MACrC,IAAI,CAACV,QAAQ,GAAG,IAAIN,eAAe,CAACK,IAAI,EAAE,IAAI,CAACD,GAAG,CAAC;IACrD;IACA,OAAO,IAAI,CAACE,QAAQ;EACtB;EAEA,MAAaO,UAAUA,CAAA,EAAoB;IACzC,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACK,WAAW,CAAC,CAAC;IACzC,OAAOL,QAAQ,CAACM,OAAO;EACzB;EAEA,MAAaG,UAAUA,CAAA,EAAoB;IACzC,MAAMV,IAAI,GAAG,MAAM,IAAI,CAACW,WAAW,CAAC,CAAC;IACrC,OAAOX,IAAI,CAACa,WAAW;EACzB;EAEOC,UAAUA,CAAA,EAAS;IACxB;EACF;EAEA,MAAaV,SAASA,CAAA,EAAqB;IAAA,IAAAW,OAAA;IACzC;IACA,IAAI,EAAAA,OAAA,GAAAC,MAAM,cAAAD,OAAA,uBAANA,OAAA,CAAQE,MAAM,MAAKD,MAAM,EAAE;MAC7B,OAAO,KAAK;IACd;IAEA,MAAMhB,IAAI,GAAG,MAAMkB,OAAO,CAACC,IAAI,CAAC,CAC9B,IAAI,CAACR,WAAW,CAAC,CAAC,EAClB,IAAIO,OAAO,CAAaE,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC,CAC9D,CAAC;IAEF,OAAO,CAAC,CAACpB,IAAI;EACf;AACF;AAEA,SAASJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}