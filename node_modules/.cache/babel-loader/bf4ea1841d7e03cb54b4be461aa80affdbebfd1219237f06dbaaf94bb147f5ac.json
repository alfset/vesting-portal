{"ast":null,"code":"import { getLocalRPC } from './methods';\nimport { VERSION, USE_VERSION, CHAIN_TYPE } from '../constant';\nimport { ChainId } from './chainId';\n// console.log(process.env)\n// alert(process.env.NODE_ENV)\n\n// const useNode = 'https://bsc-dataseed1.defibit.io/'\n// const useNode = 'https://bsc-dataseed2.defibit.io/'\n// const useNode = 'https://bsc-dataseed3.defibit.io/'\n// const useNode = 'https://bsc-dataseed4.defibit.io/'\n\n// const useNode = 'https://bsc-dataseed1.ninicoin.io/'\n// const useNode = 'https://bsc-dataseed2.ninicoin.io/'\nconst useNode = 'https://bsc-dataseed3.ninicoin.io/';\n// const useNode = 'https://bsc-dataseed4.ninicoin.io/'\n\n// const useNode = 'https://bsc-dataseed1.binance.org/'\n// const useNode = 'https://bsc-dataseed2.binance.org/'\n// const useNode = 'https://bsc-dataseed3.binance.org/'\n// const useNode = 'https://bsc-dataseed4.binance.org/'\n\nexport const BNB_MAIN_CHAINID = ChainId.BNB;\n// export const BNB_MAINNET = process.env.NODE_ENV === 'development' ? getLocalRPC(BNB_MAIN_CHAINID, useNode) : getLocalRPC(BNB_MAIN_CHAINID, 'https://bscnode1.anyswap.exchange')\nexport const BNB_MAINNET = process.env.NODE_ENV === 'development' ? getLocalRPC(BNB_MAIN_CHAINID, useNode) : getLocalRPC(BNB_MAIN_CHAINID, 'https://rpc.ankr.com/bsc');\nexport const BNB_MAIN_EXPLORER = 'https://bscscan.com';\n// console.log(BNB_MAINNET)\nexport const BNB_TEST_CHAINID = ChainId.BNB_TEST;\nexport const BNB_TESTNET = getLocalRPC(BNB_TEST_CHAINID, 'https://data-seed-prebsc-1-s1.binance.org:8545');\nexport const BNB_TEST_EXPLORER = 'https://testnet.bscscan.com';\nconst symbol = 'BNB';\nconst bridgeToken = {\n  [VERSION.V1]: {\n    bridgeInitToken: '0xb12c13e66ade1f72f71834f2fc5082db8c091358',\n    bridgeInitChain: '1'\n  },\n  [VERSION.V1_1]: {\n    bridgeInitToken: '0xb12c13e66ade1f72f71834f2fc5082db8c091358',\n    bridgeInitChain: '1'\n  },\n  [VERSION.V2]: {\n    bridgeInitToken: '0xaeddc4a469ace97e90c605e3f52eb89620e305c0',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_1]: {\n    bridgeInitToken: '0xaeddc4a469ace97e90c605e3f52eb89620e305c0',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_2]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_T1]: {\n    bridgeInitToken: '0x6fd2b7fc5db32a133a6824e1117d0f290ba43abc',\n    bridgeInitChain: '4'\n  },\n  [VERSION.V3_1]: {\n    bridgeInitToken: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n    bridgeInitChain: '42161',\n    nativeToken: ''\n  },\n  [VERSION.V4_MOVR]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    crossBridgeInitToken: 'BNB'\n  },\n  [VERSION.V5]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    nativeToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    crossBridgeInitToken: 'BNB'\n  },\n  [VERSION.V7]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    nativeToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    crossBridgeInitToken: ''\n  },\n  [VERSION.V7_BAS_TEST]: {\n    bridgeInitToken: '',\n    bridgeInitChain: '',\n    nativeToken: '',\n    crossBridgeInitToken: ''\n  }\n};\nexport default {\n  [BNB_MAIN_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n    multicalToken: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n    v1FactoryToken: '',\n    v2FactoryToken: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n    nodeRpc: BNB_MAINNET,\n    nodeRpcList: ['https://bsc-dataseed1.defibit.io/', 'https://bsc-dataseed2.defibit.io/', 'https://bsc-dataseed3.defibit.io/', 'https://bsc-dataseed4.defibit.io/', 'https://bsc-dataseed1.ninicoin.io/', 'https://bsc-dataseed2.ninicoin.io/', 'https://bsc-dataseed3.ninicoin.io/', 'https://bsc-dataseed4.ninicoin.io/', 'https://bsc-dataseed1.binance.org/', 'https://bsc-dataseed2.binance.org/', 'https://bsc-dataseed3.binance.org/', 'https://bsc-dataseed4.binance.org/', 'https://bsc-mainnet.nodereal.io/v1/60da44aa9d5747eaab321b08cce17cbc'],\n    chainID: BNB_MAIN_CHAINID,\n    lookHash: BNB_MAIN_EXPLORER + '/tx/',\n    lookAddr: BNB_MAIN_EXPLORER + '/address/',\n    lookBlock: BNB_MAIN_EXPLORER + '/block/',\n    explorer: BNB_MAIN_EXPLORER,\n    symbol: symbol,\n    symbolName: 'Binance',\n    name: 'BNB CHAIN',\n    networkName: 'BNB CHAIN mainnet',\n    walletName: 'Binance Smart Chain Mainnet',\n    type: 'main',\n    label: BNB_MAIN_CHAINID,\n    hotType: CHAIN_TYPE.HOT\n  },\n  [BNB_TEST_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n    multicalToken: '0xe348b292e8eA5FAB54340656f3D374b259D658b8',\n    v1FactoryToken: '',\n    v2FactoryToken: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n    nodeRpc: BNB_TESTNET,\n    nodeRpcList: [BNB_TESTNET],\n    chainID: BNB_TEST_CHAINID,\n    lookHash: BNB_TEST_EXPLORER + '/tx/',\n    lookAddr: BNB_TEST_EXPLORER + '/address/',\n    lookBlock: BNB_TEST_EXPLORER + '/block/',\n    explorer: BNB_TEST_EXPLORER,\n    symbol: symbol,\n    name: 'BNB CHAIN',\n    networkName: 'BNB CHAIN testnet',\n    walletName: 'Binance Smart Chain Testnet',\n    type: 'test',\n    label: BNB_TEST_CHAINID\n  }\n};","map":{"version":3,"names":["getLocalRPC","VERSION","USE_VERSION","CHAIN_TYPE","ChainId","useNode","BNB_MAIN_CHAINID","BNB","BNB_MAINNET","process","env","NODE_ENV","BNB_MAIN_EXPLORER","BNB_TEST_CHAINID","BNB_TEST","BNB_TESTNET","BNB_TEST_EXPLORER","symbol","bridgeToken","V1","bridgeInitToken","bridgeInitChain","V1_1","V2","V2_1","V2_2","V2_T1","V3_1","nativeToken","V4_MOVR","crossBridgeInitToken","V5","V7","V7_BAS_TEST","swapRouterToken","multicalToken","v1FactoryToken","v2FactoryToken","nodeRpc","nodeRpcList","chainID","lookHash","lookAddr","lookBlock","explorer","symbolName","name","networkName","walletName","type","label","hotType","HOT"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/chainConfig/bsc.js"],"sourcesContent":["import {getLocalRPC} from './methods'\nimport {VERSION, USE_VERSION, CHAIN_TYPE} from '../constant'\nimport {ChainId} from './chainId'\n// console.log(process.env)\n// alert(process.env.NODE_ENV)\n\n// const useNode = 'https://bsc-dataseed1.defibit.io/'\n// const useNode = 'https://bsc-dataseed2.defibit.io/'\n// const useNode = 'https://bsc-dataseed3.defibit.io/'\n// const useNode = 'https://bsc-dataseed4.defibit.io/'\n\n// const useNode = 'https://bsc-dataseed1.ninicoin.io/'\n// const useNode = 'https://bsc-dataseed2.ninicoin.io/'\nconst useNode = 'https://bsc-dataseed3.ninicoin.io/'\n// const useNode = 'https://bsc-dataseed4.ninicoin.io/'\n\n// const useNode = 'https://bsc-dataseed1.binance.org/'\n// const useNode = 'https://bsc-dataseed2.binance.org/'\n// const useNode = 'https://bsc-dataseed3.binance.org/'\n// const useNode = 'https://bsc-dataseed4.binance.org/'\n\nexport const BNB_MAIN_CHAINID = ChainId.BNB\n// export const BNB_MAINNET = process.env.NODE_ENV === 'development' ? getLocalRPC(BNB_MAIN_CHAINID, useNode) : getLocalRPC(BNB_MAIN_CHAINID, 'https://bscnode1.anyswap.exchange')\nexport const BNB_MAINNET = process.env.NODE_ENV === 'development' ? getLocalRPC(BNB_MAIN_CHAINID, useNode) : getLocalRPC(BNB_MAIN_CHAINID, 'https://rpc.ankr.com/bsc')\nexport const BNB_MAIN_EXPLORER = 'https://bscscan.com'\n// console.log(BNB_MAINNET)\nexport const BNB_TEST_CHAINID = ChainId.BNB_TEST\nexport const BNB_TESTNET = getLocalRPC(BNB_TEST_CHAINID, 'https://data-seed-prebsc-1-s1.binance.org:8545')\nexport const BNB_TEST_EXPLORER = 'https://testnet.bscscan.com'\n\n\nconst symbol = 'BNB'\n\nconst bridgeToken = {\n  [VERSION.V1]: {\n    bridgeInitToken: '0xb12c13e66ade1f72f71834f2fc5082db8c091358',\n    bridgeInitChain: '1'\n  },\n  [VERSION.V1_1]: {\n    bridgeInitToken: '0xb12c13e66ade1f72f71834f2fc5082db8c091358',\n    bridgeInitChain: '1'\n  },\n  [VERSION.V2]: {\n    bridgeInitToken: '0xaeddc4a469ace97e90c605e3f52eb89620e305c0',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_1]: {\n    bridgeInitToken: '0xaeddc4a469ace97e90c605e3f52eb89620e305c0',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_2]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137'\n  },\n  [VERSION.V2_T1]: {\n    bridgeInitToken: '0x6fd2b7fc5db32a133a6824e1117d0f290ba43abc',\n    bridgeInitChain: '4'\n  },\n  [VERSION.V3_1]: {\n    bridgeInitToken: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n    bridgeInitChain: '42161',\n    nativeToken: ''\n  },\n  [VERSION.V4_MOVR]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    crossBridgeInitToken: 'BNB'\n  },\n  [VERSION.V5]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    nativeToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    crossBridgeInitToken: 'BNB'\n  },\n  [VERSION.V7]: {\n    bridgeInitToken: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    bridgeInitChain: '137',\n    nativeToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    crossBridgeInitToken: ''\n  },\n  [VERSION.V7_BAS_TEST]: {\n    bridgeInitToken: '',\n    bridgeInitChain: '',\n    nativeToken: '',\n    crossBridgeInitToken: ''\n  },\n}\n\nexport default {\n  [BNB_MAIN_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n    multicalToken: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n    v1FactoryToken: '',\n    v2FactoryToken: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n    nodeRpc: BNB_MAINNET,\n    nodeRpcList: [\n      'https://bsc-dataseed1.defibit.io/',\n      'https://bsc-dataseed2.defibit.io/',\n      'https://bsc-dataseed3.defibit.io/',\n      'https://bsc-dataseed4.defibit.io/',\n      'https://bsc-dataseed1.ninicoin.io/',\n      'https://bsc-dataseed2.ninicoin.io/',\n      'https://bsc-dataseed3.ninicoin.io/',\n      'https://bsc-dataseed4.ninicoin.io/',\n      'https://bsc-dataseed1.binance.org/',\n      'https://bsc-dataseed2.binance.org/',\n      'https://bsc-dataseed3.binance.org/',\n      'https://bsc-dataseed4.binance.org/',\n      'https://bsc-mainnet.nodereal.io/v1/60da44aa9d5747eaab321b08cce17cbc',\n    ],\n    chainID: BNB_MAIN_CHAINID,\n    lookHash: BNB_MAIN_EXPLORER + '/tx/',\n    lookAddr: BNB_MAIN_EXPLORER + '/address/',\n    lookBlock: BNB_MAIN_EXPLORER + '/block/',\n    explorer: BNB_MAIN_EXPLORER,\n    symbol: symbol,\n    symbolName: 'Binance',\n    name: 'BNB CHAIN',\n    networkName: 'BNB CHAIN mainnet',\n    walletName: 'Binance Smart Chain Mainnet',\n    type: 'main',\n    label: BNB_MAIN_CHAINID,\n    hotType: CHAIN_TYPE.HOT\n  },\n  [BNB_TEST_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n    multicalToken: '0xe348b292e8eA5FAB54340656f3D374b259D658b8',\n    v1FactoryToken: '',\n    v2FactoryToken: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n    nodeRpc: BNB_TESTNET,\n    nodeRpcList: [\n      BNB_TESTNET\n    ],\n    chainID: BNB_TEST_CHAINID,\n    lookHash: BNB_TEST_EXPLORER + '/tx/',\n    lookAddr: BNB_TEST_EXPLORER + '/address/',\n    lookBlock: BNB_TEST_EXPLORER + '/block/',\n    explorer: BNB_TEST_EXPLORER,\n    symbol: symbol,\n    name: 'BNB CHAIN',\n    networkName: 'BNB CHAIN testnet',\n    walletName: 'Binance Smart Chain Testnet',\n    type: 'test',\n    label: BNB_TEST_CHAINID,\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}