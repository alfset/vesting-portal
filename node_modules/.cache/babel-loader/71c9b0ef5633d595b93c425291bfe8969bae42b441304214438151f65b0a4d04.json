{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n  switch (config.type) {\n    case undefined:\n      return config;\n    case 'JsonRpcProvider':\n      return new providers_1.JsonRpcProvider({\n        ...config.args\n      });\n    default:\n      throw new Error(\"Unknown provider type \".concat(config.type));\n  }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n  switch (config.type) {\n    case undefined:\n      return config;\n    case 'InMemorySigner':\n      {\n        return new signer_1.InMemorySigner(config.keyStore);\n      }\n    default:\n      throw new Error(\"Unknown signer type \".concat(config.type));\n  }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n  constructor(networkId, provider, signer) {\n    this.networkId = networkId;\n    this.provider = provider;\n    this.signer = signer;\n  }\n  /**\n   * @param config Contains connection info details\n   */\n  static fromConfig(config) {\n    const provider = getProvider(config.provider);\n    const signer = getSigner(config.signer);\n    return new Connection(config.networkId, provider, signer);\n  }\n}\nexports.Connection = Connection;","map":{"version":3,"names":["Object","defineProperty","exports","value","Connection","providers_1","require","signer_1","getProvider","config","type","undefined","JsonRpcProvider","args","Error","concat","getSigner","InMemorySigner","keyStore","constructor","networkId","provider","signer","fromConfig"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/near-api-js/lib/connection.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider({ ...config.args });\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC;AACA;AACA;AACA;AACA,SAASE,WAAWA,CAACC,MAAM,EAAE;EACzB,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKC,SAAS;MACV,OAAOF,MAAM;IACjB,KAAK,iBAAiB;MAAE,OAAO,IAAIJ,WAAW,CAACO,eAAe,CAAC;QAAE,GAAGH,MAAM,CAACI;MAAK,CAAC,CAAC;IAClF;MAAS,MAAM,IAAIC,KAAK,0BAAAC,MAAA,CAA0BN,MAAM,CAACC,IAAI,CAAE,CAAC;EACpE;AACJ;AACA;AACA;AACA;AACA;AACA,SAASM,SAASA,CAACP,MAAM,EAAE;EACvB,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKC,SAAS;MACV,OAAOF,MAAM;IACjB,KAAK,gBAAgB;MAAE;QACnB,OAAO,IAAIF,QAAQ,CAACU,cAAc,CAACR,MAAM,CAACS,QAAQ,CAAC;MACvD;IACA;MAAS,MAAM,IAAIJ,KAAK,wBAAAC,MAAA,CAAwBN,MAAM,CAACC,IAAI,CAAE,CAAC;EAClE;AACJ;AACA;AACA;AACA;AACA,MAAMN,UAAU,CAAC;EACbe,WAAWA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACrC,IAAI,CAACF,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;EACI,OAAOC,UAAUA,CAACd,MAAM,EAAE;IACtB,MAAMY,QAAQ,GAAGb,WAAW,CAACC,MAAM,CAACY,QAAQ,CAAC;IAC7C,MAAMC,MAAM,GAAGN,SAAS,CAACP,MAAM,CAACa,MAAM,CAAC;IACvC,OAAO,IAAIlB,UAAU,CAACK,MAAM,CAACW,SAAS,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EAC7D;AACJ;AACApB,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}