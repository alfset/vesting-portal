{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GrpcWebImpl = exports.MsgAcknowledgementDesc = exports.MsgTimeoutOnCloseDesc = exports.MsgTimeoutDesc = exports.MsgRecvPacketDesc = exports.MsgChannelCloseConfirmDesc = exports.MsgChannelCloseInitDesc = exports.MsgChannelOpenConfirmDesc = exports.MsgChannelOpenAckDesc = exports.MsgChannelOpenTryDesc = exports.MsgChannelOpenInitDesc = exports.MsgDesc = exports.MsgClientImpl = exports.MsgAcknowledgementResponse = exports.MsgAcknowledgement = exports.MsgTimeoutOnCloseResponse = exports.MsgTimeoutOnClose = exports.MsgTimeoutResponse = exports.MsgTimeout = exports.MsgRecvPacketResponse = exports.MsgRecvPacket = exports.MsgChannelCloseConfirmResponse = exports.MsgChannelCloseConfirm = exports.MsgChannelCloseInitResponse = exports.MsgChannelCloseInit = exports.MsgChannelOpenConfirmResponse = exports.MsgChannelOpenConfirm = exports.MsgChannelOpenAckResponse = exports.MsgChannelOpenAck = exports.MsgChannelOpenTryResponse = exports.MsgChannelOpenTry = exports.MsgChannelOpenInitResponse = exports.MsgChannelOpenInit = exports.responseResultTypeToJSON = exports.responseResultTypeFromJSON = exports.ResponseResultType = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst grpc_web_1 = require(\"@improbable-eng/grpc-web\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst channel_1 = require(\"../../../../ibc/core/channel/v1/channel\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nconst browser_headers_1 = require(\"browser-headers\");\nexports.protobufPackage = \"ibc.core.channel.v1\";\n/** ResponseResultType defines the possible outcomes of the execution of a message */\nvar ResponseResultType;\n(function (ResponseResultType) {\n  /** RESPONSE_RESULT_TYPE_UNSPECIFIED - Default zero value enumeration */\n  ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_UNSPECIFIED\"] = 0] = \"RESPONSE_RESULT_TYPE_UNSPECIFIED\";\n  /** RESPONSE_RESULT_TYPE_NOOP - The message did not call the IBC application callbacks (because, for example, the packet had already been relayed) */\n  ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_NOOP\"] = 1] = \"RESPONSE_RESULT_TYPE_NOOP\";\n  /** RESPONSE_RESULT_TYPE_SUCCESS - The message was executed successfully */\n  ResponseResultType[ResponseResultType[\"RESPONSE_RESULT_TYPE_SUCCESS\"] = 2] = \"RESPONSE_RESULT_TYPE_SUCCESS\";\n  ResponseResultType[ResponseResultType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseResultType = exports.ResponseResultType || (exports.ResponseResultType = {}));\nfunction responseResultTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"RESPONSE_RESULT_TYPE_UNSPECIFIED\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED;\n    case 1:\n    case \"RESPONSE_RESULT_TYPE_NOOP\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_NOOP;\n    case 2:\n    case \"RESPONSE_RESULT_TYPE_SUCCESS\":\n      return ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ResponseResultType.UNRECOGNIZED;\n  }\n}\nexports.responseResultTypeFromJSON = responseResultTypeFromJSON;\nfunction responseResultTypeToJSON(object) {\n  switch (object) {\n    case ResponseResultType.RESPONSE_RESULT_TYPE_UNSPECIFIED:\n      return \"RESPONSE_RESULT_TYPE_UNSPECIFIED\";\n    case ResponseResultType.RESPONSE_RESULT_TYPE_NOOP:\n      return \"RESPONSE_RESULT_TYPE_NOOP\";\n    case ResponseResultType.RESPONSE_RESULT_TYPE_SUCCESS:\n      return \"RESPONSE_RESULT_TYPE_SUCCESS\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.responseResultTypeToJSON = responseResultTypeToJSON;\nconst baseMsgChannelOpenInit = {\n  portId: \"\",\n  signer: \"\"\n};\nexports.MsgChannelOpenInit = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channel !== undefined) {\n      channel_1.Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenInit);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channel = channel_1.Channel.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelOpenInit);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channel !== undefined && object.channel !== null) {\n      message.channel = channel_1.Channel.fromJSON(object.channel);\n    } else {\n      message.channel = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channel !== undefined && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelOpenInit);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channel !== undefined && object.channel !== null) {\n      message.channel = channel_1.Channel.fromPartial(object.channel);\n    } else {\n      message.channel = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelOpenInitResponse = {\n  channelId: \"\"\n};\nexports.MsgChannelOpenInitResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.channelId !== \"\") {\n      writer.uint32(10).string(message.channelId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenInitResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelOpenInitResponse);\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = String(object.channelId);\n    } else {\n      message.channelId = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelOpenInitResponse);\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = object.channelId;\n    } else {\n      message.channelId = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelOpenTry = {\n  portId: \"\",\n  previousChannelId: \"\",\n  counterpartyVersion: \"\",\n  signer: \"\"\n};\nexports.MsgChannelOpenTry = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.previousChannelId !== \"\") {\n      writer.uint32(18).string(message.previousChannelId);\n    }\n    if (message.channel !== undefined) {\n      channel_1.Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(42).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenTry);\n    message.proofInit = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.previousChannelId = reader.string();\n          break;\n        case 3:\n          message.channel = channel_1.Channel.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofInit = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelOpenTry);\n    message.proofInit = new Uint8Array();\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.previousChannelId !== undefined && object.previousChannelId !== null) {\n      message.previousChannelId = String(object.previousChannelId);\n    } else {\n      message.previousChannelId = \"\";\n    }\n    if (object.channel !== undefined && object.channel !== null) {\n      message.channel = channel_1.Channel.fromJSON(object.channel);\n    } else {\n      message.channel = undefined;\n    }\n    if (object.counterpartyVersion !== undefined && object.counterpartyVersion !== null) {\n      message.counterpartyVersion = String(object.counterpartyVersion);\n    } else {\n      message.counterpartyVersion = \"\";\n    }\n    if (object.proofInit !== undefined && object.proofInit !== null) {\n      message.proofInit = bytesFromBase64(object.proofInit);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.previousChannelId !== undefined && (obj.previousChannelId = message.previousChannelId);\n    message.channel !== undefined && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n    message.counterpartyVersion !== undefined && (obj.counterpartyVersion = message.counterpartyVersion);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelOpenTry);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.previousChannelId !== undefined && object.previousChannelId !== null) {\n      message.previousChannelId = object.previousChannelId;\n    } else {\n      message.previousChannelId = \"\";\n    }\n    if (object.channel !== undefined && object.channel !== null) {\n      message.channel = channel_1.Channel.fromPartial(object.channel);\n    } else {\n      message.channel = undefined;\n    }\n    if (object.counterpartyVersion !== undefined && object.counterpartyVersion !== null) {\n      message.counterpartyVersion = object.counterpartyVersion;\n    } else {\n      message.counterpartyVersion = \"\";\n    }\n    if (object.proofInit !== undefined && object.proofInit !== null) {\n      message.proofInit = object.proofInit;\n    } else {\n      message.proofInit = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexports.MsgChannelOpenTryResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenTryResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgChannelOpenTryResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgChannelOpenTryResponse);\n    return message;\n  }\n};\nconst baseMsgChannelOpenAck = {\n  portId: \"\",\n  channelId: \"\",\n  counterpartyChannelId: \"\",\n  counterpartyVersion: \"\",\n  signer: \"\"\n};\nexports.MsgChannelOpenAck = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.counterpartyChannelId !== \"\") {\n      writer.uint32(26).string(message.counterpartyChannelId);\n    }\n    if (message.counterpartyVersion !== \"\") {\n      writer.uint32(34).string(message.counterpartyVersion);\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(42).bytes(message.proofTry);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(58).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenAck);\n    message.proofTry = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.counterpartyChannelId = reader.string();\n          break;\n        case 4:\n          message.counterpartyVersion = reader.string();\n          break;\n        case 5:\n          message.proofTry = reader.bytes();\n          break;\n        case 6:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelOpenAck);\n    message.proofTry = new Uint8Array();\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = String(object.channelId);\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.counterpartyChannelId !== undefined && object.counterpartyChannelId !== null) {\n      message.counterpartyChannelId = String(object.counterpartyChannelId);\n    } else {\n      message.counterpartyChannelId = \"\";\n    }\n    if (object.counterpartyVersion !== undefined && object.counterpartyVersion !== null) {\n      message.counterpartyVersion = String(object.counterpartyVersion);\n    } else {\n      message.counterpartyVersion = \"\";\n    }\n    if (object.proofTry !== undefined && object.proofTry !== null) {\n      message.proofTry = bytesFromBase64(object.proofTry);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.counterpartyChannelId !== undefined && (obj.counterpartyChannelId = message.counterpartyChannelId);\n    message.counterpartyVersion !== undefined && (obj.counterpartyVersion = message.counterpartyVersion);\n    message.proofTry !== undefined && (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelOpenAck);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = object.channelId;\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.counterpartyChannelId !== undefined && object.counterpartyChannelId !== null) {\n      message.counterpartyChannelId = object.counterpartyChannelId;\n    } else {\n      message.counterpartyChannelId = \"\";\n    }\n    if (object.counterpartyVersion !== undefined && object.counterpartyVersion !== null) {\n      message.counterpartyVersion = object.counterpartyVersion;\n    } else {\n      message.counterpartyVersion = \"\";\n    }\n    if (object.proofTry !== undefined && object.proofTry !== null) {\n      message.proofTry = object.proofTry;\n    } else {\n      message.proofTry = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexports.MsgChannelOpenAckResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenAckResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgChannelOpenAckResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgChannelOpenAckResponse);\n    return message;\n  }\n};\nconst baseMsgChannelOpenConfirm = {\n  portId: \"\",\n  channelId: \"\",\n  signer: \"\"\n};\nexports.MsgChannelOpenConfirm = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(26).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenConfirm);\n    message.proofAck = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofAck = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelOpenConfirm);\n    message.proofAck = new Uint8Array();\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = String(object.channelId);\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.proofAck !== undefined && object.proofAck !== null) {\n      message.proofAck = bytesFromBase64(object.proofAck);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.proofAck !== undefined && (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelOpenConfirm);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = object.channelId;\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.proofAck !== undefined && object.proofAck !== null) {\n      message.proofAck = object.proofAck;\n    } else {\n      message.proofAck = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexports.MsgChannelOpenConfirmResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelOpenConfirmResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgChannelOpenConfirmResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgChannelOpenConfirmResponse);\n    return message;\n  }\n};\nconst baseMsgChannelCloseInit = {\n  portId: \"\",\n  channelId: \"\",\n  signer: \"\"\n};\nexports.MsgChannelCloseInit = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(26).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelCloseInit);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelCloseInit);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = String(object.channelId);\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelCloseInit);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = object.channelId;\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexports.MsgChannelCloseInitResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelCloseInitResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgChannelCloseInitResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgChannelCloseInitResponse);\n    return message;\n  }\n};\nconst baseMsgChannelCloseConfirm = {\n  portId: \"\",\n  channelId: \"\",\n  signer: \"\"\n};\nexports.MsgChannelCloseConfirm = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(26).bytes(message.proofInit);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelCloseConfirm);\n    message.proofInit = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.proofInit = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgChannelCloseConfirm);\n    message.proofInit = new Uint8Array();\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = String(object.portId);\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = String(object.channelId);\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.proofInit !== undefined && object.proofInit !== null) {\n      message.proofInit = bytesFromBase64(object.proofInit);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.proofInit !== undefined && (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgChannelCloseConfirm);\n    if (object.portId !== undefined && object.portId !== null) {\n      message.portId = object.portId;\n    } else {\n      message.portId = \"\";\n    }\n    if (object.channelId !== undefined && object.channelId !== null) {\n      message.channelId = object.channelId;\n    } else {\n      message.channelId = \"\";\n    }\n    if (object.proofInit !== undefined && object.proofInit !== null) {\n      message.proofInit = object.proofInit;\n    } else {\n      message.proofInit = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexports.MsgChannelCloseConfirmResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgChannelCloseConfirmResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgChannelCloseConfirmResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgChannelCloseConfirmResponse);\n    return message;\n  }\n};\nconst baseMsgRecvPacket = {\n  signer: \"\"\n};\nexports.MsgRecvPacket = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.packet !== undefined) {\n      channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofCommitment.length !== 0) {\n      writer.uint32(18).bytes(message.proofCommitment);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRecvPacket);\n    message.proofCommitment = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = channel_1.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofCommitment = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgRecvPacket);\n    message.proofCommitment = new Uint8Array();\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromJSON(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofCommitment !== undefined && object.proofCommitment !== null) {\n      message.proofCommitment = bytesFromBase64(object.proofCommitment);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n    message.proofCommitment !== undefined && (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined ? message.proofCommitment : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgRecvPacket);\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromPartial(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofCommitment !== undefined && object.proofCommitment !== null) {\n      message.proofCommitment = object.proofCommitment;\n    } else {\n      message.proofCommitment = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgRecvPacketResponse = {\n  result: 0\n};\nexports.MsgRecvPacketResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRecvPacketResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgRecvPacketResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = responseResultTypeFromJSON(object.result);\n    } else {\n      message.result = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgRecvPacketResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = object.result;\n    } else {\n      message.result = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgTimeout = {\n  nextSequenceRecv: long_1.default.UZERO,\n  signer: \"\"\n};\nexports.MsgTimeout = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.packet !== undefined) {\n      channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(32).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgTimeout);\n    message.proofUnreceived = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = channel_1.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgTimeout);\n    message.proofUnreceived = new Uint8Array();\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromJSON(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofUnreceived !== undefined && object.proofUnreceived !== null) {\n      message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n      message.nextSequenceRecv = long_1.default.fromString(object.nextSequenceRecv);\n    } else {\n      message.nextSequenceRecv = long_1.default.UZERO;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n    message.proofUnreceived !== undefined && (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined ? message.proofUnreceived : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.nextSequenceRecv !== undefined && (obj.nextSequenceRecv = (message.nextSequenceRecv || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgTimeout);\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromPartial(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofUnreceived !== undefined && object.proofUnreceived !== null) {\n      message.proofUnreceived = object.proofUnreceived;\n    } else {\n      message.proofUnreceived = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n      message.nextSequenceRecv = object.nextSequenceRecv;\n    } else {\n      message.nextSequenceRecv = long_1.default.UZERO;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgTimeoutResponse = {\n  result: 0\n};\nexports.MsgTimeoutResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgTimeoutResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgTimeoutResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = responseResultTypeFromJSON(object.result);\n    } else {\n      message.result = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgTimeoutResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = object.result;\n    } else {\n      message.result = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgTimeoutOnClose = {\n  nextSequenceRecv: long_1.default.UZERO,\n  signer: \"\"\n};\nexports.MsgTimeoutOnClose = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.packet !== undefined) {\n      channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proofUnreceived.length !== 0) {\n      writer.uint32(18).bytes(message.proofUnreceived);\n    }\n    if (message.proofClose.length !== 0) {\n      writer.uint32(26).bytes(message.proofClose);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (!message.nextSequenceRecv.isZero()) {\n      writer.uint32(40).uint64(message.nextSequenceRecv);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(50).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgTimeoutOnClose);\n    message.proofUnreceived = new Uint8Array();\n    message.proofClose = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = channel_1.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proofUnreceived = reader.bytes();\n          break;\n        case 3:\n          message.proofClose = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.nextSequenceRecv = reader.uint64();\n          break;\n        case 6:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgTimeoutOnClose);\n    message.proofUnreceived = new Uint8Array();\n    message.proofClose = new Uint8Array();\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromJSON(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofUnreceived !== undefined && object.proofUnreceived !== null) {\n      message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n    }\n    if (object.proofClose !== undefined && object.proofClose !== null) {\n      message.proofClose = bytesFromBase64(object.proofClose);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n      message.nextSequenceRecv = long_1.default.fromString(object.nextSequenceRecv);\n    } else {\n      message.nextSequenceRecv = long_1.default.UZERO;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n    message.proofUnreceived !== undefined && (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined ? message.proofUnreceived : new Uint8Array()));\n    message.proofClose !== undefined && (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.nextSequenceRecv !== undefined && (obj.nextSequenceRecv = (message.nextSequenceRecv || long_1.default.UZERO).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgTimeoutOnClose);\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromPartial(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.proofUnreceived !== undefined && object.proofUnreceived !== null) {\n      message.proofUnreceived = object.proofUnreceived;\n    } else {\n      message.proofUnreceived = new Uint8Array();\n    }\n    if (object.proofClose !== undefined && object.proofClose !== null) {\n      message.proofClose = object.proofClose;\n    } else {\n      message.proofClose = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.nextSequenceRecv !== undefined && object.nextSequenceRecv !== null) {\n      message.nextSequenceRecv = object.nextSequenceRecv;\n    } else {\n      message.nextSequenceRecv = long_1.default.UZERO;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgTimeoutOnCloseResponse = {\n  result: 0\n};\nexports.MsgTimeoutOnCloseResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgTimeoutOnCloseResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgTimeoutOnCloseResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = responseResultTypeFromJSON(object.result);\n    } else {\n      message.result = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgTimeoutOnCloseResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = object.result;\n    } else {\n      message.result = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgAcknowledgement = {\n  signer: \"\"\n};\nexports.MsgAcknowledgement = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.packet !== undefined) {\n      channel_1.Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(18).bytes(message.acknowledgement);\n    }\n    if (message.proofAcked.length !== 0) {\n      writer.uint32(26).bytes(message.proofAcked);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAcknowledgement);\n    message.acknowledgement = new Uint8Array();\n    message.proofAcked = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.packet = channel_1.Packet.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 3:\n          message.proofAcked = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgAcknowledgement);\n    message.acknowledgement = new Uint8Array();\n    message.proofAcked = new Uint8Array();\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromJSON(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.acknowledgement !== undefined && object.acknowledgement !== null) {\n      message.acknowledgement = bytesFromBase64(object.acknowledgement);\n    }\n    if (object.proofAcked !== undefined && object.proofAcked !== null) {\n      message.proofAcked = bytesFromBase64(object.proofAcked);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = String(object.signer);\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.packet !== undefined && (obj.packet = message.packet ? channel_1.Packet.toJSON(message.packet) : undefined);\n    message.acknowledgement !== undefined && (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined ? message.acknowledgement : new Uint8Array()));\n    message.proofAcked !== undefined && (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgAcknowledgement);\n    if (object.packet !== undefined && object.packet !== null) {\n      message.packet = channel_1.Packet.fromPartial(object.packet);\n    } else {\n      message.packet = undefined;\n    }\n    if (object.acknowledgement !== undefined && object.acknowledgement !== null) {\n      message.acknowledgement = object.acknowledgement;\n    } else {\n      message.acknowledgement = new Uint8Array();\n    }\n    if (object.proofAcked !== undefined && object.proofAcked !== null) {\n      message.proofAcked = object.proofAcked;\n    } else {\n      message.proofAcked = new Uint8Array();\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n    if (object.signer !== undefined && object.signer !== null) {\n      message.signer = object.signer;\n    } else {\n      message.signer = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgAcknowledgementResponse = {\n  result: 0\n};\nexports.MsgAcknowledgementResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.result !== 0) {\n      writer.uint32(8).int32(message.result);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgAcknowledgementResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.result = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgAcknowledgementResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = responseResultTypeFromJSON(object.result);\n    } else {\n      message.result = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.result !== undefined && (obj.result = responseResultTypeToJSON(message.result));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgAcknowledgementResponse);\n    if (object.result !== undefined && object.result !== null) {\n      message.result = object.result;\n    } else {\n      message.result = 0;\n    }\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.ChannelOpenInit = this.ChannelOpenInit.bind(this);\n    this.ChannelOpenTry = this.ChannelOpenTry.bind(this);\n    this.ChannelOpenAck = this.ChannelOpenAck.bind(this);\n    this.ChannelOpenConfirm = this.ChannelOpenConfirm.bind(this);\n    this.ChannelCloseInit = this.ChannelCloseInit.bind(this);\n    this.ChannelCloseConfirm = this.ChannelCloseConfirm.bind(this);\n    this.RecvPacket = this.RecvPacket.bind(this);\n    this.Timeout = this.Timeout.bind(this);\n    this.TimeoutOnClose = this.TimeoutOnClose.bind(this);\n    this.Acknowledgement = this.Acknowledgement.bind(this);\n  }\n  ChannelOpenInit(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelOpenInitDesc, exports.MsgChannelOpenInit.fromPartial(request), metadata);\n  }\n  ChannelOpenTry(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelOpenTryDesc, exports.MsgChannelOpenTry.fromPartial(request), metadata);\n  }\n  ChannelOpenAck(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelOpenAckDesc, exports.MsgChannelOpenAck.fromPartial(request), metadata);\n  }\n  ChannelOpenConfirm(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelOpenConfirmDesc, exports.MsgChannelOpenConfirm.fromPartial(request), metadata);\n  }\n  ChannelCloseInit(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelCloseInitDesc, exports.MsgChannelCloseInit.fromPartial(request), metadata);\n  }\n  ChannelCloseConfirm(request, metadata) {\n    return this.rpc.unary(exports.MsgChannelCloseConfirmDesc, exports.MsgChannelCloseConfirm.fromPartial(request), metadata);\n  }\n  RecvPacket(request, metadata) {\n    return this.rpc.unary(exports.MsgRecvPacketDesc, exports.MsgRecvPacket.fromPartial(request), metadata);\n  }\n  Timeout(request, metadata) {\n    return this.rpc.unary(exports.MsgTimeoutDesc, exports.MsgTimeout.fromPartial(request), metadata);\n  }\n  TimeoutOnClose(request, metadata) {\n    return this.rpc.unary(exports.MsgTimeoutOnCloseDesc, exports.MsgTimeoutOnClose.fromPartial(request), metadata);\n  }\n  Acknowledgement(request, metadata) {\n    return this.rpc.unary(exports.MsgAcknowledgementDesc, exports.MsgAcknowledgement.fromPartial(request), metadata);\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nexports.MsgDesc = {\n  serviceName: \"ibc.core.channel.v1.Msg\"\n};\nexports.MsgChannelOpenInitDesc = {\n  methodName: \"ChannelOpenInit\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelOpenInit.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelOpenInitResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgChannelOpenTryDesc = {\n  methodName: \"ChannelOpenTry\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelOpenTry.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelOpenTryResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgChannelOpenAckDesc = {\n  methodName: \"ChannelOpenAck\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelOpenAck.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelOpenAckResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgChannelOpenConfirmDesc = {\n  methodName: \"ChannelOpenConfirm\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelOpenConfirm.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelOpenConfirmResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgChannelCloseInitDesc = {\n  methodName: \"ChannelCloseInit\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelCloseInit.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelCloseInitResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgChannelCloseConfirmDesc = {\n  methodName: \"ChannelCloseConfirm\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgChannelCloseConfirm.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgChannelCloseConfirmResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgRecvPacketDesc = {\n  methodName: \"RecvPacket\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgRecvPacket.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgRecvPacketResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgTimeoutDesc = {\n  methodName: \"Timeout\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgTimeout.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgTimeoutResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgTimeoutOnCloseDesc = {\n  methodName: \"TimeoutOnClose\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgTimeoutOnClose.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgTimeoutOnCloseResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nexports.MsgAcknowledgementDesc = {\n  methodName: \"Acknowledgement\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgAcknowledgement.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgAcknowledgementResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nclass GrpcWebImpl {\n  constructor(host, options) {\n    this.host = host;\n    this.options = options;\n  }\n  unary(methodDesc, _request, metadata) {\n    var _a;\n    const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n    const maybeCombinedMetadata = metadata && this.options.metadata ? new browser_headers_1.BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap)) : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc_web_1.grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc_web_1.grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage);\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        }\n      });\n    });\n  }\n}\nexports.GrpcWebImpl = GrpcWebImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","grpc_web_1","minimal_1","channel_1","client_1","browser_headers_1","exports","protobufPackage","ResponseResultType","responseResultTypeFromJSON","object","RESPONSE_RESULT_TYPE_UNSPECIFIED","RESPONSE_RESULT_TYPE_NOOP","RESPONSE_RESULT_TYPE_SUCCESS","UNRECOGNIZED","responseResultTypeToJSON","baseMsgChannelOpenInit","portId","signer","MsgChannelOpenInit","encode","message","writer","arguments","length","undefined","default","Writer","create","uint32","string","channel","Channel","fork","ldelim","decode","input","reader","Reader","end","len","pos","Object","assign","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgChannelOpenInitResponse","channelId","MsgChannelOpenInitResponse","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","MsgChannelOpenTry","proofInit","bytes","proofHeight","Height","Uint8Array","bytesFromBase64","base64FromBytes","baseMsgChannelOpenTryResponse","MsgChannelOpenTryResponse","_","baseMsgChannelOpenAck","counterpartyChannelId","MsgChannelOpenAck","proofTry","baseMsgChannelOpenAckResponse","MsgChannelOpenAckResponse","baseMsgChannelOpenConfirm","MsgChannelOpenConfirm","proofAck","baseMsgChannelOpenConfirmResponse","MsgChannelOpenConfirmResponse","baseMsgChannelCloseInit","MsgChannelCloseInit","baseMsgChannelCloseInitResponse","MsgChannelCloseInitResponse","baseMsgChannelCloseConfirm","MsgChannelCloseConfirm","baseMsgChannelCloseConfirmResponse","MsgChannelCloseConfirmResponse","baseMsgRecvPacket","MsgRecvPacket","packet","Packet","proofCommitment","baseMsgRecvPacketResponse","result","MsgRecvPacketResponse","int32","baseMsgTimeout","nextSequenceRecv","UZERO","MsgTimeout","proofUnreceived","isZero","uint64","fromString","toString","baseMsgTimeoutResponse","MsgTimeoutResponse","baseMsgTimeoutOnClose","MsgTimeoutOnClose","proofClose","baseMsgTimeoutOnCloseResponse","MsgTimeoutOnCloseResponse","baseMsgAcknowledgement","MsgAcknowledgement","acknowledgement","proofAcked","baseMsgAcknowledgementResponse","MsgAcknowledgementResponse","MsgClientImpl","constructor","rpc","ChannelOpenInit","bind","ChannelOpenTry","ChannelOpenAck","ChannelOpenConfirm","ChannelCloseInit","ChannelCloseConfirm","RecvPacket","Timeout","TimeoutOnClose","Acknowledgement","request","metadata","unary","MsgChannelOpenInitDesc","MsgChannelOpenTryDesc","MsgChannelOpenAckDesc","MsgChannelOpenConfirmDesc","MsgChannelCloseInitDesc","MsgChannelCloseConfirmDesc","MsgRecvPacketDesc","MsgTimeoutDesc","MsgTimeoutOnCloseDesc","MsgAcknowledgementDesc","MsgDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","data","toObject","GrpcWebImpl","host","options","methodDesc","_request","maybeCombinedMetadata","BrowserHeaders","_a","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","push","fromCharCode","join","util","Long","configure"],"sources":["../../../../../src/ibc/core/channel/v1/tx.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}