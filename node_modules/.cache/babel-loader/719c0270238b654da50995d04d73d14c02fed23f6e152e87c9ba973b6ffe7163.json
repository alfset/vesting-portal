{"ast":null,"code":"import { createReducer, nanoid } from '@reduxjs/toolkit';\nimport { addPopup, removePopup, updateBlockNumber, setOpenModal, viewTxnsDtils, viewTxnsErrorTip } from './actions';\nconst initialState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n  viewTxnsDtils: {\n    hash: '',\n    isOpenModal: ''\n  },\n  viewTxnsErrorTip: {\n    errorTip: '',\n    isOpenModal: ''\n  }\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(setOpenModal, (state, action) => {\n  state.openModal = action.payload;\n}).addCase(addPopup, (state, _ref) => {\n  let {\n    payload: {\n      content,\n      key,\n      removeAfterMs = 60 * 1000 * 2\n    }\n  } = _ref;\n  state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([{\n    key: key || nanoid(),\n    show: true,\n    content,\n    removeAfterMs\n  }]);\n}).addCase(removePopup, (state, _ref2) => {\n  let {\n    payload: {\n      key\n    }\n  } = _ref2;\n  state.popupList.forEach(p => {\n    if (p.key === key) {\n      p.show = false;\n    }\n  });\n}).addCase(viewTxnsDtils, (state, _ref3) => {\n  let {\n    payload: {\n      hash,\n      isOpenModal\n    }\n  } = _ref3;\n  state.viewTxnsDtils = {\n    hash,\n    isOpenModal\n  };\n}).addCase(viewTxnsErrorTip, (state, _ref4) => {\n  let {\n    payload: {\n      errorTip,\n      isOpenModal\n    }\n  } = _ref4;\n  state.viewTxnsErrorTip = {\n    errorTip,\n    isOpenModal\n  };\n}));","map":{"version":3,"names":["createReducer","nanoid","addPopup","removePopup","updateBlockNumber","setOpenModal","viewTxnsDtils","viewTxnsErrorTip","initialState","blockNumber","popupList","openModal","hash","isOpenModal","errorTip","builder","addCase","state","action","chainId","payload","Math","max","_ref","content","key","removeAfterMs","filter","popup","concat","show","_ref2","forEach","p","_ref3","_ref4"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/application/reducer.ts"],"sourcesContent":["import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal, viewTxnsDtils, viewTxnsErrorTip } from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n  readonly viewTxnsDtils: any\n  readonly viewTxnsErrorTip: any\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n  viewTxnsDtils: {\n    hash: '',\n    isOpenModal: ''\n  },\n  viewTxnsErrorTip: {\n    errorTip: '',\n    isOpenModal: ''\n  }\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(setOpenModal, (state, action) => {\n      state.openModal = action.payload\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 60 * 1000 * 2 } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n    .addCase(viewTxnsDtils, (state, { payload: { hash, isOpenModal } }) => {\n      state.viewTxnsDtils = {\n        hash,\n        isOpenModal\n      }\n    })\n    .addCase(viewTxnsErrorTip, (state, { payload: { errorTip, isOpenModal } }) => {\n      state.viewTxnsErrorTip = {\n        errorTip,\n        isOpenModal\n      }\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}