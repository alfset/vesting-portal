{"ast":null,"code":"import { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { injected } from '../connectors';\nimport { NetworkContextName } from '../constants';\nimport { chainInfo } from '../config/chainConfig';\nimport { ENV_NODE_CONFIG } from '../config/constant';\n// import { useConnectedWallet } from '@terra-money/wallet-provider'\n\nexport function useActiveWeb3React() {\n  const context = useWeb3ReactCore();\n  const contextNetwork = useWeb3ReactCore(NetworkContextName);\n  const EVM_CONTEXT = context.active ? context : contextNetwork;\n  // const connectedWallet = useConnectedWallet()\n  // const { connect } = useWallet()\n  // console.log(context)\n  // console.log(contextNetwork)\n  // console.log(connectedWallet)\n  return EVM_CONTEXT;\n  // return {\n  //   ...EVM_CONTEXT,\n  //   account: connectedWallet?.walletAddress\n  // }\n}\n\nexport function useEagerConnect() {\n  const {\n    activate,\n    active\n  } = useWeb3ReactCore(); // 特别是使用useWeb3ReactCore，因为这个钩子的作用\n  const [tried, setTried] = useState(false);\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true);\n          });\n        } else {\n          setTried(true);\n        }\n      }\n    });\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true);\n    }\n  }, [active]);\n  return tried;\n}\n\n/**\n * 用于网络和注入-在检查用户所在的网络后，将用户登录和注销\n */\nexport function useInactiveListener() {\n  let suppress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const {\n    active,\n    error,\n    activate,\n    chainId\n  } = useWeb3ReactCore(); // 特别是使用useWeb3React，因为这个钩子的作用\n\n  useEffect(() => {\n    if (chainId) {\n      window.localStorage.setItem(ENV_NODE_CONFIG, chainId.toString());\n    }\n  }, [chainId]);\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    // console.log(ethereum)\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = chainID => {\n        // console.log(chainID)\n        // console.log(parseInt(chainID))\n        if (chainID) {\n          window.localStorage.setItem(ENV_NODE_CONFIG, chainInfo[parseInt(chainID)].label);\n          history.go(0);\n        }\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error);\n        });\n      };\n      const handleAccountsChanged = accounts => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error);\n          });\n        }\n      };\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        }\n      };\n    }\n    return undefined;\n  }, [active, error, suppress, activate]);\n}","map":{"version":3,"names":["useWeb3React","useWeb3ReactCore","useEffect","useState","isMobile","injected","NetworkContextName","chainInfo","ENV_NODE_CONFIG","useActiveWeb3React","context","contextNetwork","EVM_CONTEXT","active","useEagerConnect","activate","tried","setTried","isAuthorized","then","undefined","catch","window","ethereum","useInactiveListener","suppress","arguments","length","error","chainId","localStorage","setItem","toString","on","handleChainChanged","chainID","parseInt","label","history","go","console","handleAccountsChanged","accounts","removeListener"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/hooks/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\nimport { chainInfo } from '../config/chainConfig'\nimport { ChainId } from '../config/chainConfig/chainId'\nimport {\n  ENV_NODE_CONFIG\n} from '../config/constant'\n// import { useConnectedWallet } from '@terra-money/wallet-provider'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  const EVM_CONTEXT:any = context.active ? context : contextNetwork\n  // const connectedWallet = useConnectedWallet()\n  // const { connect } = useWallet()\n  // console.log(context)\n  // console.log(contextNetwork)\n  // console.log(connectedWallet)\n  return EVM_CONTEXT\n  // return {\n  //   ...EVM_CONTEXT,\n  //   account: connectedWallet?.walletAddress\n  // }\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // 特别是使用useWeb3ReactCore，因为这个钩子的作用\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * 用于网络和注入-在检查用户所在的网络后，将用户登录和注销\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate, chainId } = useWeb3ReactCore() // 特别是使用useWeb3React，因为这个钩子的作用\n\n  useEffect(() => {\n    if (chainId) {\n      window.localStorage.setItem(ENV_NODE_CONFIG, chainId.toString())\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    const { ethereum } = window\n    // console.log(ethereum)\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = (chainID:any) => {\n        // console.log(chainID)\n        // console.log(parseInt(chainID))\n        if (chainID) {\n          window.localStorage.setItem(ENV_NODE_CONFIG, chainInfo[parseInt(chainID)].label)\n          history.go(0)\n        }\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}