{"ast":null,"code":"// import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport'inter-ui';import React,{StrictMode}from'react';// import { isMobile } from 'react-device-detect'\nimport ReactDOM from'react-dom';import{Provider}from'react-redux';// import { HashRouter } from 'react-router-dom'\n// import { NetworkContextName } from './constants'\nimport'./i18n';// import App from './pages/App'\nimport AppContainer from'./pages/AppContainer';import store from'./state';// import ApplicationUpdater from './state/application/updater'\n// import ListsUpdater from './state/lists/updater'\n// import MulticallUpdater from './state/multicall/updater'\n// import TransactionUpdater from './state/transactions/updater'\n// import UserUpdater from './state/user/updater'\n// import PoolsUpdater from './state/pools/updater'\n// import WalletUpdater from './state/wallet/updater'\n// import RpcUpdater from './state/rpc/updater'\nimport ThemeProvider,{FixedGlobalStyle,ThemedGlobalStyle,ThemeGlobalClassName}from'./theme';// import getLibrary from './utils/getLibrary'\n// import { WalletProvider, NetworkInfo } from '@terra-money/wallet-provider'\n// const Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n// if ('ethereum' in window) {\n//   ;(window.ethereum as any).autoRefreshOnNetworkChange = false\n// }\n// const mainnet = {\n//   name: 'mainnet',\n//   chainID: 'columbus-4',\n//   lcd: 'https://lcd.terra.dev',\n// };\n// const testnet = {\n//   name: 'testnet',\n//   chainID: 'tequila-0004',\n//   lcd: 'https://tequila-lcd.terra.dev',\n// };\n// const walletConnectChainIds: Record<number, NetworkInfo> = {\n//   0: testnet,\n//   1: mainnet,\n// }\n// function Updaters() {\n//   return (\n//     <>\n//       <ListsUpdater />\n//       <UserUpdater />\n//       <PoolsUpdater />\n//       <ApplicationUpdater />\n//       <TransactionUpdater />\n//       <MulticallUpdater />\n//       <WalletUpdater />\n//       <RpcUpdater />\n//       <MulticallUpdater type={1}/>\n//     </>\n//   )\n// }\n// ReactDOM.render(\n//   <StrictMode>\n//     <FixedGlobalStyle />\n//     <WalletProvider\n//       defaultNetwork={mainnet}\n//       walletConnectChainIds={walletConnectChainIds}\n//     >\n//       <Web3ReactProvider getLibrary={getLibrary}>\n//         <Web3ProviderNetwork getLibrary={getLibrary}>\n//           <Provider store={store}>\n//             <ThemeProvider>\n//               <ThemedGlobalStyle />\n//               <HashRouter>\n//                 <App />\n//               </HashRouter>\n//             </ThemeProvider>\n//             <Updaters />\n//           </Provider>\n//         </Web3ProviderNetwork>\n//       </Web3ReactProvider>\n//     </WalletProvider>\n//   </StrictMode>,\n//   document.getElementById('root')\n// )\nReactDOM.render(/*#__PURE__*/React.createElement(StrictMode,null,/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(FixedGlobalStyle,null),/*#__PURE__*/React.createElement(ThemeProvider,null,/*#__PURE__*/React.createElement(ThemeGlobalClassName,null),/*#__PURE__*/React.createElement(ThemedGlobalStyle,null),/*#__PURE__*/React.createElement(AppContainer,null)))),document.getElementById('root'));","map":{"version":3,"names":["React","StrictMode","ReactDOM","Provider","AppContainer","store","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","ThemeGlobalClassName","render","createElement","document","getElementById"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/index.tsx"],"sourcesContent":["// import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport 'inter-ui'\nimport React, { StrictMode } from 'react'\n// import { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n// import { HashRouter } from 'react-router-dom'\n// import { NetworkContextName } from './constants'\nimport './i18n'\n// import App from './pages/App'\nimport AppContainer from './pages/AppContainer'\nimport store from './state'\n// import ApplicationUpdater from './state/application/updater'\n// import ListsUpdater from './state/lists/updater'\n// import MulticallUpdater from './state/multicall/updater'\n// import TransactionUpdater from './state/transactions/updater'\n// import UserUpdater from './state/user/updater'\n// import PoolsUpdater from './state/pools/updater'\n// import WalletUpdater from './state/wallet/updater'\n// import RpcUpdater from './state/rpc/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle, ThemeGlobalClassName } from './theme'\n// import getLibrary from './utils/getLibrary'\n\n// import { WalletProvider, NetworkInfo } from '@terra-money/wallet-provider'\n\n// const Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\n// if ('ethereum' in window) {\n//   ;(window.ethereum as any).autoRefreshOnNetworkChange = false\n// }\n\n// const mainnet = {\n//   name: 'mainnet',\n//   chainID: 'columbus-4',\n//   lcd: 'https://lcd.terra.dev',\n// };\n\n// const testnet = {\n//   name: 'testnet',\n//   chainID: 'tequila-0004',\n//   lcd: 'https://tequila-lcd.terra.dev',\n// };\n\n// const walletConnectChainIds: Record<number, NetworkInfo> = {\n//   0: testnet,\n//   1: mainnet,\n// }\n\n// function Updaters() {\n//   return (\n//     <>\n//       <ListsUpdater />\n//       <UserUpdater />\n//       <PoolsUpdater />\n//       <ApplicationUpdater />\n//       <TransactionUpdater />\n//       <MulticallUpdater />\n//       <WalletUpdater />\n//       <RpcUpdater />\n//       <MulticallUpdater type={1}/>\n//     </>\n//   )\n// }\n\n// ReactDOM.render(\n//   <StrictMode>\n//     <FixedGlobalStyle />\n//     <WalletProvider\n//       defaultNetwork={mainnet}\n//       walletConnectChainIds={walletConnectChainIds}\n//     >\n//       <Web3ReactProvider getLibrary={getLibrary}>\n//         <Web3ProviderNetwork getLibrary={getLibrary}>\n//           <Provider store={store}>\n//             <ThemeProvider>\n//               <ThemedGlobalStyle />\n//               <HashRouter>\n//                 <App />\n//               </HashRouter>\n//             </ThemeProvider>\n//             <Updaters />\n//           </Provider>\n//         </Web3ProviderNetwork>\n//       </Web3ReactProvider>\n//     </WalletProvider>\n//   </StrictMode>,\n//   document.getElementById('root')\n// )\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <FixedGlobalStyle />\n      <ThemeProvider>\n        <ThemeGlobalClassName />\n        <ThemedGlobalStyle />\n        <AppContainer />\n      </ThemeProvider>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"mappings":"AAAA;AACA,MAAO,UAAU,CACjB,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC;AACA,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,OAASC,QAAQ,KAAQ,aAAa,CACtC;AACA;AACA,MAAO,QAAQ,CACf;AACA,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAAAC,aAAa,EAAIC,gBAAgB,CAAEC,iBAAiB,CAAEC,oBAAoB,KAAQ,SAAS,CAClG;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAP,QAAQ,CAACQ,MAAM,cACbV,KAAA,CAAAW,aAAA,CAACV,UAAU,mBACTD,KAAA,CAAAW,aAAA,CAACR,QAAQ,EAACE,KAAK,CAAEA,KAAM,eACrBL,KAAA,CAAAW,aAAA,CAACJ,gBAAgB,KAAE,CAAC,cACpBP,KAAA,CAAAW,aAAA,CAACL,aAAa,mBACZN,KAAA,CAAAW,aAAA,CAACF,oBAAoB,KAAE,CAAC,cACxBT,KAAA,CAAAW,aAAA,CAACH,iBAAiB,KAAE,CAAC,cACrBR,KAAA,CAAAW,aAAA,CAACP,YAAY,KAAE,CACF,CACP,CACA,CAAC,CACbQ,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}