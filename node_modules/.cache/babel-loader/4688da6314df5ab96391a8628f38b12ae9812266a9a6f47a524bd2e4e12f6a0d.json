{"ast":null,"code":"import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{useActiveWeb3React}from'../../hooks';import{addPopup,ApplicationModal,removePopup,setOpenModal,viewTxnsDtils,viewTxnsErrorTip}from'./actions';import{useIsSafeAppConnection}from'../../connectors/gnosis-safe/hooks';// import {gnosissafe} from '../../connectors'\nexport function useBlockNumber(initChainId){const{chainId}=useActiveWeb3React();const useChainId=initChainId?initChainId:chainId;// console.log(useChainId)\nreturn useSelector(state=>{// console.log(useChainId)\n// console.log(state.application.blockNumber)\n// console.log(state.application.blockNumber[useChainId ?? -1])\nreturn state.application.blockNumber[useChainId!==null&&useChainId!==void 0?useChainId:-1];});}export function useModalOpen(modal){const openModal=useSelector(state=>state.application.openModal);return openModal===modal;}export function useToggleModal(modal){const open=useModalOpen(modal);const dispatch=useDispatch();return useCallback(()=>dispatch(setOpenModal(open?null:modal)),[dispatch,modal,open]);}export function useOpenModal(modal){const dispatch=useDispatch();return useCallback(()=>dispatch(setOpenModal(modal)),[dispatch,modal]);}export function useCloseModals(){const dispatch=useDispatch();return useCallback(()=>dispatch(setOpenModal(null)),[dispatch]);}export function useWalletModalToggle(){return useToggleModal(ApplicationModal.WALLET);}export function useNoWalletModalToggle(){return useToggleModal(ApplicationModal.NO_WALLET);}export function useToggleSettingsMenu(){return useToggleModal(ApplicationModal.SETTINGS);}export function useToggleNavMenu(key){return useToggleModal(key);}export function useShowClaimPopup(){return useModalOpen(ApplicationModal.CLAIM_POPUP);}export function useToggleShowClaimPopup(){return useToggleModal(ApplicationModal.CLAIM_POPUP);}export function useToggleSelfClaimModal(){return useToggleModal(ApplicationModal.SELF_CLAIM);}export function useToggleDelegateModal(){return useToggleModal(ApplicationModal.DELEGATE);}export function useToggleVoteModal(){return useToggleModal(ApplicationModal.VOTE);}export function useToggleNetworkModal(){const isGnosisSafe=useIsSafeAppConnection();const modal=ApplicationModal.NETWORK;const open=useModalOpen(modal);const dispatch=useDispatch();return useCallback(()=>{// console.log(isGnosisSafe)\n// console.log(gnosissafe)\nif(isGnosisSafe){return dispatch(setOpenModal(null));}else{return dispatch(setOpenModal(open?null:modal));}},[dispatch,modal,open,isGnosisSafe]);// const dispatch = useDispatch<AppDispatch>()\n// const closeNetwork = useCallback(() => {\n//   dispatch(setOpenModal(null))\n// }, [dispatch, isGnosisSafe])\n// console.log(isGnosisSafe)\n// return isGnosisSafe ? closeNetwork : useToggleModal(ApplicationModal.NETWORK)\n}// returns a function that allows adding a popup\nexport function useAddPopup(){const dispatch=useDispatch();return useCallback((content,key)=>{dispatch(addPopup({content,key}));},[dispatch]);}// returns a function that allows removing a popup via its key\nexport function useRemovePopup(){const dispatch=useDispatch();return useCallback(key=>{dispatch(removePopup({key}));},[dispatch]);}// get the list of active popups\nexport function useActivePopups(){const list=useSelector(state=>state.application.popupList);return useMemo(()=>list.filter(item=>item.show),[list]);}export function useTxnsDtilOpen(){const viewTxnsDtilsData=useSelector(state=>state.application.viewTxnsDtils);const dispatch=useDispatch();const onChangeViewDtil=useCallback((hash,isOpenModal)=>{// console.log(field)\n// console.log(typedValue)\n// console.log(typeInput({ field, typedValue }))\ndispatch(viewTxnsDtils({hash,isOpenModal}));},[dispatch]);return{...(viewTxnsDtilsData?viewTxnsDtilsData:{hash:'',isOpenModal:''}),onChangeViewDtil};}export function useTxnsErrorTipOpen(){const viewTxnsErrorTipData=useSelector(state=>state.application.viewTxnsErrorTip);const dispatch=useDispatch();const onChangeViewErrorTip=useCallback((errorTip,isOpenModal)=>{var _errorTip$data;console.log(errorTip);// console.log(typedValue)\n// console.log(typeInput({ field, typedValue }))\nlet errorContent='';if(errorTip===null||errorTip===void 0?void 0:(_errorTip$data=errorTip.data)===null||_errorTip$data===void 0?void 0:_errorTip$data.data){var _errorTip$data2,_errorTip$data3;if((errorTip===null||errorTip===void 0?void 0:(_errorTip$data2=errorTip.data)===null||_errorTip$data2===void 0?void 0:_errorTip$data2.data.indexOf('burn amount exceeds minter total'))!==-1){errorContent='No bridging quota on conflux chain.';}else if(errorTip===null||errorTip===void 0?void 0:(_errorTip$data3=errorTip.data)===null||_errorTip$data3===void 0?void 0:_errorTip$data3.message){var _errorTip$data4;errorContent=errorTip===null||errorTip===void 0?void 0:(_errorTip$data4=errorTip.data)===null||_errorTip$data4===void 0?void 0:_errorTip$data4.message;}}else if(errorTip===null||errorTip===void 0?void 0:errorTip.message){errorContent=errorTip===null||errorTip===void 0?void 0:errorTip.message;}else{errorContent=errorTip.toString();}dispatch(viewTxnsErrorTip({errorTip:errorContent,isOpenModal}));},[dispatch]);return{...(viewTxnsErrorTipData?viewTxnsErrorTipData:{errorTip:'',isOpenModal:''}),onChangeViewErrorTip};}","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useActiveWeb3React","addPopup","ApplicationModal","removePopup","setOpenModal","viewTxnsDtils","viewTxnsErrorTip","useIsSafeAppConnection","useBlockNumber","initChainId","chainId","useChainId","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useOpenModal","useCloseModals","useWalletModalToggle","WALLET","useNoWalletModalToggle","NO_WALLET","useToggleSettingsMenu","SETTINGS","useToggleNavMenu","key","useShowClaimPopup","CLAIM_POPUP","useToggleShowClaimPopup","useToggleSelfClaimModal","SELF_CLAIM","useToggleDelegateModal","DELEGATE","useToggleVoteModal","VOTE","useToggleNetworkModal","isGnosisSafe","NETWORK","useAddPopup","content","useRemovePopup","useActivePopups","list","popupList","filter","item","show","useTxnsDtilOpen","viewTxnsDtilsData","onChangeViewDtil","hash","isOpenModal","useTxnsErrorTipOpen","viewTxnsErrorTipData","onChangeViewErrorTip","errorTip","_errorTip$data","console","log","errorContent","data","_errorTip$data2","_errorTip$data3","indexOf","message","_errorTip$data4","toString"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/application/hooks.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal, viewTxnsDtils, viewTxnsErrorTip } from './actions'\n\nimport {useIsSafeAppConnection} from '../../connectors/gnosis-safe/hooks'\n// import {gnosissafe} from '../../connectors'\n\nexport function useBlockNumber(initChainId?:any): number | undefined {\n  const { chainId } = useActiveWeb3React()\n  const useChainId = initChainId ? initChainId : chainId\n  // console.log(useChainId)\n  return useSelector((state: AppState) => { \n    // console.log(useChainId)\n    // console.log(state.application.blockNumber)\n    // console.log(state.application.blockNumber[useChainId ?? -1])\n    return state.application.blockNumber[useChainId ?? -1]\n  })\n}\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n  const openModal = useSelector((state: AppState) => state.application.openModal)\n  return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useCloseModals(): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useNoWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.NO_WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\nexport function useToggleNavMenu(key:any): () => void {\n  return useToggleModal(key)\n}\n\nexport function useShowClaimPopup(): boolean {\n  return useModalOpen(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleShowClaimPopup(): () => void {\n  return useToggleModal(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleSelfClaimModal(): () => void {\n  return useToggleModal(ApplicationModal.SELF_CLAIM)\n}\n\nexport function useToggleDelegateModal(): () => void {\n  return useToggleModal(ApplicationModal.DELEGATE)\n}\n\nexport function useToggleVoteModal(): () => void {\n  return useToggleModal(ApplicationModal.VOTE)\n}\n\n\nexport function useToggleNetworkModal(): () => void {\n  const isGnosisSafe = useIsSafeAppConnection()\n  const modal = ApplicationModal.NETWORK\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => {\n    // console.log(isGnosisSafe)\n    // console.log(gnosissafe)\n    if (isGnosisSafe) {\n      return dispatch(setOpenModal(null))\n    } else {\n      return dispatch(setOpenModal(open ? null : modal))\n    }\n  }, [dispatch, modal, open, isGnosisSafe])\n\n\n\n\n\n  // const dispatch = useDispatch<AppDispatch>()\n  // const closeNetwork = useCallback(() => {\n  //   dispatch(setOpenModal(null))\n  // }, [dispatch, isGnosisSafe])\n  // console.log(isGnosisSafe)\n  // return isGnosisSafe ? closeNetwork : useToggleModal(ApplicationModal.NETWORK)\n}\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n\n\nexport function useTxnsDtilOpen(): any {\n  const viewTxnsDtilsData = useSelector((state: AppState) => state.application.viewTxnsDtils)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeViewDtil = useCallback(\n    (hash: any, isOpenModal: any) => {\n      // console.log(field)\n      // console.log(typedValue)\n      // console.log(typeInput({ field, typedValue }))\n      dispatch(viewTxnsDtils({ hash, isOpenModal }))\n    },\n    [dispatch]\n  )\n\n  return {\n    ...(viewTxnsDtilsData ? viewTxnsDtilsData : {\n      hash: '',\n      isOpenModal: ''\n    }),\n    onChangeViewDtil\n  }\n}\nexport function useTxnsErrorTipOpen(): any {\n  const viewTxnsErrorTipData = useSelector((state: AppState) => state.application.viewTxnsErrorTip)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeViewErrorTip = useCallback(\n    (errorTip: any, isOpenModal: any) => {\n      console.log(errorTip)\n      // console.log(typedValue)\n      // console.log(typeInput({ field, typedValue }))\n      let errorContent = ''\n      if (errorTip?.data?.data) {\n        if (errorTip?.data?.data.indexOf('burn amount exceeds minter total') !== -1) {\n          errorContent = 'No bridging quota on conflux chain.'\n        } else if (errorTip?.data?.message) {\n          errorContent = errorTip?.data?.message\n        }\n      } else if (errorTip?.message) {\n        errorContent = errorTip?.message\n      } else {\n        errorContent = errorTip.toString()\n      }\n      dispatch(viewTxnsErrorTip({ errorTip: errorContent, isOpenModal }))\n    },\n    [dispatch]\n  )\n\n  return {\n    ...(viewTxnsErrorTipData ? viewTxnsErrorTipData : {\n      errorTip: '',\n      isOpenModal: ''\n    }),\n    onChangeViewErrorTip\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}