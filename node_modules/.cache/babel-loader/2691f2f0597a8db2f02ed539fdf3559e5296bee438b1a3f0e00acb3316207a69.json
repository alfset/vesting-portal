{"ast":null,"code":"// import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from'../../constants/abis/erc20.json';import multicallABI from'../../constants/multicall/abi.json';import config from'../../config';const Web3=require('web3');const TIMEOUT='timeout';export function getWeb3(_ref){let{rpc,provider}=_ref;rpc=rpc?rpc:'';if(provider){// console.log(library)\nconst wFn=new Web3(provider);// console.log(wFn)\nreturn wFn;}else{// console.log(rpc)\nconst wFn=new Web3(new Web3.providers.HttpProvider(rpc));return wFn;}}export function getContract(_ref2){let{abi,rpc,provider}=_ref2;const web3=getWeb3({rpc,provider});abi=abi?abi:ERC20_ABI;return new web3.eth.Contract(abi);}function timeoutWeb3(){return new Promise(resolve=>{setTimeout(()=>{resolve(TIMEOUT);},[1000*60]);});}function getBatchWeb3Data(_ref3){let{rpc,calls,provider}=_ref3;return new Promise((resolve,reject)=>{const web3=getWeb3({rpc,provider});const batch=new web3.BatchRequest();// console.log(calls)\nfor(const obj of calls){if(obj.callData){batch.add(web3.eth.call.request({data:obj.callData,to:obj.target},'latest'));}else{const property=obj.property?obj.property:'eth';batch.add(web3[property][obj.methods].request(...obj.input));}}batch.requestManager.sendBatch(batch.requests,(err,res)=>{if(err){reject(err);}else{// console.log(res)\nconst arr=res.map(_ref4=>{let{result}=_ref4;return result;});// console.log(arr)\nresolve(arr);}});});}export function getMulticallData(_ref5){let{chainId,rpc,calls,provider}=_ref5;return new Promise((resolve,reject)=>{const contract=getContract({abi:multicallABI,rpc:rpc,provider});contract.options.address=config.getCurChainInfo(chainId).multicalToken;// console.log(chainId)\n// console.log(rpc)\n// console.log(calls)\n// console.log(provider)\nconst arr=[];for(const obj of calls){if(obj.target){arr.push({target:obj.target,callData:obj.callData});}else{if(obj.methods==='getBalance'){// contract.methods.getEthBalance(...obj.input)\narr.push({target:config.getCurChainInfo(chainId).multicalToken,callData:contract.methods.getEthBalance(...obj.input).encodeABI()});}}}// arr.push({\n//   target: config.getCurChainInfo(chainId).multicalToken,\n//   callData: contract.methods.getEthBalance('0xC03033d8b833fF7ca08BF2A58C9BC9d711257249').encodeABI()\n// })\ncontract.methods.aggregate(arr).call((err,res)=>{// console.log(res)\nif(err){// console.log(err)\n// console.log(JSON.stringify(calls))\nreject(err);}else{resolve(res.returnData);}});});}function getBatchResult(_ref6){let{chainId,rpc,calls,provider}=_ref6;return new Promise((resolve,reject)=>{// console.log(config.getCurChainInfo(chainId).multicalToken)\n// console.log(calls)\nconst useMethods=config.getCurChainInfo(chainId).multicalToken?getMulticallData:getBatchWeb3Data;// const useMethods = getBatchWeb3Data\nPromise.race([timeoutWeb3(),useMethods({chainId,rpc,calls,provider})]).then(res=>{if(res===TIMEOUT){reject(res);}else{resolve(res);}}).catch(error=>{reject(error);});});}const useNode={};export async function useBatchData(_ref7){let{chainId,calls,provider}=_ref7;if(isNaN(chainId))return undefined;const rpcArr=config.getCurChainInfo(chainId).nodeRpcList;const len=rpcArr.length-1;if(!useNode[chainId]){useNode[chainId]={rpc:rpcArr[0],index:0};}let index=useNode[chainId].index;const rpc=rpcArr[useNode[chainId].index];let results='';try{results=await getBatchResult({chainId,rpc,calls,provider});}catch(error){console.log('error');console.log(error.toString());if(error.toString().indexOf('Error: Returned error: execution reverted: Multicall aggregate: call failed')!==-1){// console.log(JSON.stringify(calls))\n// console.log(calls.length)\nresults='';}else if(error.toString().indexOf('Invalid JSON RPC response')!==-1||error.toString().indexOf('Error: Returned error')!==-1||error===TIMEOUT){if(index<len&&!provider){index++;useNode[chainId]={rpc:rpcArr[index],index:index};results=await useBatchData({chainId,calls,provider});}else{useNode[chainId]={rpc:rpcArr[0],index:0};}}else{results=error;}}// console.log(results)\nreturn results;}/*\n[\n  {\n    callData: '',\n    target: '',\n    methods: '',\n    input: []\n  }\n]\n*/ // export async function init () {\n//   const arr = []\n//   const calls = [\n//     {\n//       \"type\": \"TOKEN\",\n//       \"callData\": \"0x70a08231000000000000000000000000c03033d8b833ff7ca08bf2a58c9bc9d711257249\",\n//       \"target\": \"0xe0eb31082bbf8252f7425c6dd72a8c6b3bfbe99f\"\n//     },\n//   ]\n//   const r = await useBatchData({\n//     chainId: '42161',\n//     calls\n//   })\n//   console.log(r)\n//   // for (const obj of calls) {\n//   //   const r = await useBatchData({\n//   //     chainId: '42161',\n//   //     calls: [obj]\n//   //   })\n//   //   console.log(r)\n//   //   if (!r) {\n//   //     arr.push(obj)\n//   //   }\n//   // }\n//   console.log(arr)\n// }\n// init()\n// export {\n//   getWeb3,\n//   useBatchData,\n//   getContract\n// }","map":{"version":3,"names":["ERC20_ABI","multicallABI","config","Web3","require","TIMEOUT","getWeb3","_ref","rpc","provider","wFn","providers","HttpProvider","getContract","_ref2","abi","web3","eth","Contract","timeoutWeb3","Promise","resolve","setTimeout","getBatchWeb3Data","_ref3","calls","reject","batch","BatchRequest","obj","callData","add","call","request","data","to","target","property","methods","input","requestManager","sendBatch","requests","err","res","arr","map","_ref4","result","getMulticallData","_ref5","chainId","contract","options","address","getCurChainInfo","multicalToken","push","getEthBalance","encodeABI","aggregate","returnData","getBatchResult","_ref6","useMethods","race","then","catch","error","useNode","useBatchData","_ref7","isNaN","undefined","rpcArr","nodeRpcList","len","length","index","results","console","log","toString","indexOf"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/tools/useBatchData.js"],"sourcesContent":["// import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from '../../constants/abis/erc20.json'\nimport multicallABI from '../../constants/multicall/abi.json'\nimport config from '../../config'\n\nconst Web3 = require('web3')\n\nconst TIMEOUT = 'timeout'\n\nexport function getWeb3 ({rpc, provider}) {\n  rpc = rpc ? rpc : ''\n  if (provider) {\n    // console.log(library)\n    const wFn = new Web3(provider)\n    // console.log(wFn)\n    return wFn\n  } else {\n    // console.log(rpc)\n    const wFn = new Web3(new Web3.providers.HttpProvider(rpc))\n    return wFn\n  }\n}\n\nexport function getContract({abi, rpc, provider}) {\n  const web3 = getWeb3({rpc, provider})\n  abi = abi ? abi : ERC20_ABI\n  return new web3.eth.Contract(abi)\n}\n\nfunction timeoutWeb3 () {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(TIMEOUT)\n    }, [1000 * 60])\n  })\n}\n\n\nfunction getBatchWeb3Data ({rpc, calls, provider}) {\n  return new Promise((resolve, reject) => {\n    const web3 = getWeb3({rpc, provider})\n    const batch = new web3.BatchRequest()\n    // console.log(calls)\n    for (const obj of calls) {\n      if (obj.callData) {\n        batch.add(web3.eth.call.request({data: obj.callData, to: obj.target}, 'latest'))\n      } else {\n        const property = obj.property ? obj.property : 'eth'\n        batch.add(web3[property][obj.methods].request(...obj.input))\n      }\n    }\n    batch.requestManager.sendBatch(batch.requests, (err, res) => {\n      if (err) {\n        reject(err)\n      } else {\n        // console.log(res)\n        const arr = res.map(({result}) => (result))\n        // console.log(arr)\n        resolve(arr)\n      }\n    })\n  })\n}\n\nexport function getMulticallData ({chainId, rpc, calls, provider}) {\n  return new Promise((resolve, reject) => {\n    const contract = getContract({abi: multicallABI, rpc: rpc, provider})\n    contract.options.address = config.getCurChainInfo(chainId).multicalToken\n    // console.log(chainId)\n    // console.log(rpc)\n    // console.log(calls)\n    // console.log(provider)\n    const arr = []\n    for (const obj of calls) {\n      if (obj.target) {\n        arr.push({\n          target: obj.target,\n          callData: obj.callData\n        })\n      } else {\n        if (obj.methods === 'getBalance') {\n          // contract.methods.getEthBalance(...obj.input)\n          arr.push({\n            target: config.getCurChainInfo(chainId).multicalToken,\n            callData: contract.methods.getEthBalance(...obj.input).encodeABI()\n          })\n        }\n      }\n    }\n    // arr.push({\n    //   target: config.getCurChainInfo(chainId).multicalToken,\n    //   callData: contract.methods.getEthBalance('0xC03033d8b833fF7ca08BF2A58C9BC9d711257249').encodeABI()\n    // })\n    contract.methods.aggregate(arr).call((err, res) => {\n      // console.log(res)\n      if (err) {\n        // console.log(err)\n        // console.log(JSON.stringify(calls))\n        reject(err)\n      } else {\n        resolve(res.returnData)\n      }\n    })\n  })\n}\n\nfunction getBatchResult ({chainId, rpc, calls, provider}) {\n  return new Promise((resolve, reject) => {\n    // console.log(config.getCurChainInfo(chainId).multicalToken)\n    // console.log(calls)\n    const useMethods = config.getCurChainInfo(chainId).multicalToken ? getMulticallData : getBatchWeb3Data\n    // const useMethods = getBatchWeb3Data\n    Promise.race([\n      timeoutWeb3(),\n      useMethods({chainId, rpc, calls, provider})\n    ]).then(res => {\n      if (res === TIMEOUT) {\n        reject(res)\n      } else {\n        resolve(res)\n      }\n    }).catch(error => {\n      reject(error)\n    })\n  })\n}\n\nconst useNode = {}\n\nexport async function useBatchData ({chainId, calls, provider}) {\n  if (isNaN(chainId)) return undefined\n  const rpcArr = config.getCurChainInfo(chainId).nodeRpcList\n  const len = rpcArr.length - 1\n  if (!useNode[chainId]) {\n    useNode[chainId] = {\n      rpc: rpcArr[0],\n      index: 0\n    }\n  }\n  let index = useNode[chainId].index\n  const rpc = rpcArr[useNode[chainId].index]\n  let results = ''\n  try {\n    results = await getBatchResult({chainId, rpc, calls, provider})\n  } catch (error) {\n    console.log('error')\n    console.log(error.toString())\n    if ( error.toString().indexOf('Error: Returned error: execution reverted: Multicall aggregate: call failed') !== -1) {\n      // console.log(JSON.stringify(calls))\n      // console.log(calls.length)\n      results = ''\n    } else if (\n      error.toString().indexOf('Invalid JSON RPC response') !== -1\n      || error.toString().indexOf('Error: Returned error') !== -1\n      || error === TIMEOUT\n    ) {\n      if (index < len && !provider) {\n        index ++\n        useNode[chainId] = {\n          rpc: rpcArr[index],\n          index: index\n        }\n        results = await useBatchData({chainId, calls, provider})\n      } else {\n        useNode[chainId] = {\n          rpc: rpcArr[0],\n          index: 0\n        }\n      }\n    } else {\n      results = error\n    }\n  }\n  // console.log(results)\n  return results\n}\n\n\n/*\n[\n  {\n    callData: '',\n    target: '',\n    methods: '',\n    input: []\n  }\n]\n*/\n\n// export async function init () {\n//   const arr = []\n//   const calls = [\n//     {\n//       \"type\": \"TOKEN\",\n//       \"callData\": \"0x70a08231000000000000000000000000c03033d8b833ff7ca08bf2a58c9bc9d711257249\",\n//       \"target\": \"0xe0eb31082bbf8252f7425c6dd72a8c6b3bfbe99f\"\n//     },\n//   ]\n//   const r = await useBatchData({\n//     chainId: '42161',\n//     calls\n//   })\n//   console.log(r)\n//   // for (const obj of calls) {\n\n//   //   const r = await useBatchData({\n//   //     chainId: '42161',\n//   //     calls: [obj]\n//   //   })\n//   //   console.log(r)\n//   //   if (!r) {\n//   //     arr.push(obj)\n//   //   }\n//   // }\n//   console.log(arr)\n// }\n// init()\n\n// export {\n//   getWeb3,\n//   useBatchData,\n//   getContract\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}