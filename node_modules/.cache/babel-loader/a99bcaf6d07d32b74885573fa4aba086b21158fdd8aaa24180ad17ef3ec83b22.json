{"ast":null,"code":"import{USE_VERSION}from'../constant';export function formatSwapTokenList(name,tokenlist){const arr=[];for(const obj of tokenlist){arr.push({...obj,address:obj.address.toLowerCase()});}return{\"keywords\":[\"roll\",\"default\",\"social money\",\"personal tokens\"],\"logoURI\":\"\",\"name\":name,\"timestamp\":\"\",\"tokens\":arr,\"version\":{\"major\":0,\"minor\":0,\"patch\":1}};}const LOCAL_RPC='LOCAL_RPC';export function getLocalRPC(chainId,initRpc){const lStr=window.localStorage.getItem(USE_VERSION+'_'+LOCAL_RPC);if(lStr){const lObj=JSON.parse(lStr);if(lObj[chainId]){return lObj[chainId];}else{return initRpc;}}else{return initRpc;}}export function setLocalRPC(chainId,initRpc){const lStr=window.localStorage.getItem(USE_VERSION+'_'+LOCAL_RPC);let lObj={};if(lStr){lObj=JSON.parse(lStr);lObj[chainId]=initRpc;}else{lObj[chainId]=initRpc;}window.localStorage.setItem(USE_VERSION+'_'+LOCAL_RPC,JSON.stringify(lObj));}","map":{"version":3,"names":["USE_VERSION","formatSwapTokenList","name","tokenlist","arr","obj","push","address","toLowerCase","LOCAL_RPC","getLocalRPC","chainId","initRpc","lStr","window","localStorage","getItem","lObj","JSON","parse","setLocalRPC","setItem","stringify"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/chainConfig/methods.js"],"sourcesContent":["import {\n  USE_VERSION\n} from '../constant'\n\nexport function formatSwapTokenList (name, tokenlist) {\n  const arr = []\n  for (const obj of tokenlist) {\n    arr.push({\n      ...obj,\n      address: obj.address.toLowerCase()\n    })\n  }\n  return {\n    \"keywords\": [\"roll\", \"default\", \"social money\", \"personal tokens\"],\n    \"logoURI\": \"\",\n    \"name\": name,\n    \"timestamp\": \"\",\n    \"tokens\": arr,\n    \"version\": {\"major\": 0, \"minor\": 0, \"patch\": 1}\n  }\n}\n\nconst LOCAL_RPC = 'LOCAL_RPC'\nexport function getLocalRPC (chainId, initRpc) {\n  const lStr = window.localStorage.getItem(USE_VERSION + '_' + LOCAL_RPC)\n  if (lStr) {\n    const lObj = JSON.parse(lStr)\n    if (lObj[chainId]) {\n      return lObj[chainId]\n    } else {\n      return initRpc\n    }\n  } else {\n    return initRpc\n  }\n}\n\nexport function setLocalRPC (chainId, initRpc) {\n  const lStr = window.localStorage.getItem(USE_VERSION + '_' + LOCAL_RPC)\n  let lObj ={}\n  if (lStr) {\n    lObj = JSON.parse(lStr)\n    lObj[chainId] = initRpc\n  } else {\n    lObj[chainId] = initRpc\n  }\n  window.localStorage.setItem(USE_VERSION + '_' + LOCAL_RPC, JSON.stringify(lObj))\n}"],"mappings":"AAAA,OACEA,WAAW,KACN,aAAa,CAEpB,MAAO,SAAS,CAAAC,mBAAmBA,CAAEC,IAAI,CAAEC,SAAS,CAAE,CACpD,KAAM,CAAAC,GAAG,CAAG,EAAE,CACd,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAF,SAAS,CAAE,CAC3BC,GAAG,CAACE,IAAI,CAAC,CACP,GAAGD,GAAG,CACNE,OAAO,CAAEF,GAAG,CAACE,OAAO,CAACC,WAAW,CAAC,CACnC,CAAC,CAAC,CACJ,CACA,MAAO,CACL,UAAU,CAAE,CAAC,MAAM,CAAE,SAAS,CAAE,cAAc,CAAE,iBAAiB,CAAC,CAClE,SAAS,CAAE,EAAE,CACb,MAAM,CAAEN,IAAI,CACZ,WAAW,CAAE,EAAE,CACf,QAAQ,CAAEE,GAAG,CACb,SAAS,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,CAChD,CAAC,CACH,CAEA,KAAM,CAAAK,SAAS,CAAG,WAAW,CAC7B,MAAO,SAAS,CAAAC,WAAWA,CAAEC,OAAO,CAAEC,OAAO,CAAE,CAC7C,KAAM,CAAAC,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAChB,WAAW,CAAG,GAAG,CAAGS,SAAS,CAAC,CACvE,GAAII,IAAI,CAAE,CACR,KAAM,CAAAI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAC7B,GAAII,IAAI,CAACN,OAAO,CAAC,CAAE,CACjB,MAAO,CAAAM,IAAI,CAACN,OAAO,CAAC,CACtB,CAAC,IAAM,CACL,MAAO,CAAAC,OAAO,CAChB,CACF,CAAC,IAAM,CACL,MAAO,CAAAA,OAAO,CAChB,CACF,CAEA,MAAO,SAAS,CAAAQ,WAAWA,CAAET,OAAO,CAAEC,OAAO,CAAE,CAC7C,KAAM,CAAAC,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAChB,WAAW,CAAG,GAAG,CAAGS,SAAS,CAAC,CACvE,GAAI,CAAAQ,IAAI,CAAE,CAAC,CAAC,CACZ,GAAIJ,IAAI,CAAE,CACRI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CACvBI,IAAI,CAACN,OAAO,CAAC,CAAGC,OAAO,CACzB,CAAC,IAAM,CACLK,IAAI,CAACN,OAAO,CAAC,CAAGC,OAAO,CACzB,CACAE,MAAM,CAACC,YAAY,CAACM,OAAO,CAACrB,WAAW,CAAG,GAAG,CAAGS,SAAS,CAAES,IAAI,CAACI,SAAS,CAACL,IAAI,CAAC,CAAC,CAClF"},"metadata":{},"sourceType":"module","externalDependencies":[]}