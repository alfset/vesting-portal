{"ast":null,"code":"import{useEffect,useMemo,useState,useCallback}from\"react\";import{BigNumber}from'@ethersproject/bignumber';import{MaxUint256}from'@ethersproject/constants';import{useTokenAllowance}from'../data/Allowances';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{calculateGasMargin}from'../utils';import{recordsApprove}from'../utils/bridge/register';import{useTokenContract}from'./useContract';import{useActiveWeb3React}from'./index';import config from'../config';export let ApprovalState=/*#__PURE__*/function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";return ApprovalState;}({});// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(amountToApprove,spender,token){const{account,chainId}=useActiveWeb3React();// const token = amountToApprove?.token ? amountToApprove.token : undefined\n// console.log(amountToApprove)\n// console.log(amountToApprove ? amountToApprove.raw.toString() : '')\nconst currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);const pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// console.log(currentAllowance)\n// console.log(amountToApprove)\n// console.log(token)\n// console.log(spender)\n// console.log(token)\n// check the current approval status\nconst approvalState=useMemo(()=>{if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);const tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);const addTransaction=useTransactionAdder();const approve=useCallback(async()=>{console.log(amountToApprove?amountToApprove.raw.toString():'');if(approvalState!==ApprovalState.NOT_APPROVED){console.error('approve was called unnecessarily');return;}if(!token){console.error('no token');return;}if(!tokenContract){console.error('tokenContract is null');return;}if(!amountToApprove){console.error('missing amount to approve');return;}if(!spender){console.error('no spender');return;}let useExact=false;const estimatedGas=await tokenContract.estimateGas.approve(spender,MaxUint256).catch(()=>{// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.raw.toString());});return tokenContract.approve(spender,useExact?amountToApprove.raw.toString():MaxUint256,{gasLimit:calculateGasMargin(estimatedGas)}).then(response=>{recordsApprove({token:token===null||token===void 0?void 0:token.address,spender:spender,account:account,amount:useExact?amountToApprove.raw.toString():MaxUint256,symbol:token.symbol,decimals:token.decimals,hash:response===null||response===void 0?void 0:response.hash,chainId:chainId,type:\"Approve\"});addTransaction(response,{summary:config.getBaseCoin(token.symbol,chainId)+' approved, you can continue the cross chain transaction',// summary: t('approvedTip', {\n//   symbol: config.getBaseCoin(amountToApprove.currency.symbol, chainId)\n// }),\napproval:{tokenAddress:token.address,spender:spender}});}).catch(error=>{console.debug('Failed to approve token',error);throw error;});},[approvalState,token,tokenContract,amountToApprove,spender,addTransaction]);return[approvalState,approve];}export function useNonApproveCallback(token,spender,symbol){const{account,chainId}=useActiveWeb3React();const addTransaction=useTransactionAdder();const pendingApproval=useHasPendingApproval(token!==null&&token!==void 0?token:undefined,spender!==null&&spender!==void 0?spender:undefined);const[isSetApprove,setIsSetApprove]=useState(false);// const contract = useTokenContract(token, false)\nconst tokenContract=useTokenContract(token);// if (!tokenContract || !spender || !account || !symbol || !chainId) return {\n//   isSetApprove: false,\n//   approve: () => {console.log()}\n// }\nuseEffect(()=>{if(tokenContract&&account&&chainId&&spender&&token){try{tokenContract.allowance(account,spender).then(res=>{console.log(res);if(res&&res._hex&&res.gt(BigNumber.from(0))){setIsSetApprove(true);}else{setIsSetApprove(false);}}).catch(error=>{console.debug('Failed to approve token',error);throw error;});}catch(error){console.debug('Failed to approve token',error);throw error;}}else{setIsSetApprove(false);}},[tokenContract,pendingApproval]);const approve=useCallback(async()=>{if(!tokenContract||!spender||!account||!symbol||!chainId)return;return tokenContract.approve(spender,'0x0').then(response=>{recordsApprove({token:token,spender:spender,account:account,amount:'0x0',symbol:symbol,decimals:18,hash:response===null||response===void 0?void 0:response.hash,chainId:chainId,type:\"Revoke\"});addTransaction(response,{summary:'Approve '+config.getBaseCoin(symbol,chainId),approval:{tokenAddress:token,spender:spender}});}).catch(error=>{console.debug('Failed to approve token',error);throw error;});},[tokenContract,spender,account,chainId,addTransaction]);return{isSetApprove,approve};// return useMemo(() => {\n// }, [isSetApprove, approve])\n}","map":{"version":3,"names":["useEffect","useMemo","useState","useCallback","BigNumber","MaxUint256","useTokenAllowance","useTransactionAdder","useHasPendingApproval","calculateGasMargin","recordsApprove","useTokenContract","useActiveWeb3React","config","ApprovalState","useApproveCallback","amountToApprove","spender","token","account","chainId","currentAllowance","undefined","pendingApproval","address","approvalState","UNKNOWN","lessThan","PENDING","NOT_APPROVED","APPROVED","tokenContract","addTransaction","approve","console","log","raw","toString","error","useExact","estimatedGas","estimateGas","catch","gasLimit","then","response","amount","symbol","decimals","hash","type","summary","getBaseCoin","approval","tokenAddress","debug","useNonApproveCallback","isSetApprove","setIsSetApprove","allowance","res","_hex","gt","from"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { useEffect, useMemo, useState, useCallback } from \"react\"\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { calculateGasMargin } from '../utils'\nimport {recordsApprove} from '../utils/bridge/register'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './index'\n\nimport config from '../config'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: any,\n  spender?: string,\n  token?: any\n): [ApprovalState, () => Promise<void>] {\n  const { account, chainId } = useActiveWeb3React()\n  // const token = amountToApprove?.token ? amountToApprove.token : undefined\n  // console.log(amountToApprove)\n  // console.log(amountToApprove ? amountToApprove.raw.toString() : '')\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n  // console.log(currentAllowance)\n  // console.log(amountToApprove)\n  // console.log(token)\n  // console.log(spender)\n  // console.log(token)\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    console.log(amountToApprove ? amountToApprove.raw.toString() : '')\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas)\n      })\n      .then((response: TransactionResponse) => {\n        recordsApprove({\n          token: token?.address,\n          spender: spender,\n          account: account,\n          amount: useExact ? amountToApprove.raw.toString() : MaxUint256,\n          symbol: token.symbol,\n          decimals: token.decimals,\n          hash: response?.hash,\n          chainId: chainId,\n          type: \"Approve\",\n        })\n        addTransaction(response, {\n          summary: config.getBaseCoin(token.symbol, chainId) + ' approved, you can continue the cross chain transaction',\n          // summary: t('approvedTip', {\n          //   symbol: config.getBaseCoin(amountToApprove.currency.symbol, chainId)\n          // }),\n          approval: { tokenAddress: token.address, spender: spender }\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\nexport function useNonApproveCallback(\n  token: any,\n  spender: any,\n  symbol: any,\n) {\n  const { account, chainId } = useActiveWeb3React()\n  const addTransaction = useTransactionAdder()\n  const pendingApproval = useHasPendingApproval(token ?? undefined, spender ?? undefined)\n\n  const [isSetApprove, setIsSetApprove] = useState<any>(false)\n\n  // const contract = useTokenContract(token, false)\n  const tokenContract = useTokenContract(token)\n  // if (!tokenContract || !spender || !account || !symbol || !chainId) return {\n  //   isSetApprove: false,\n  //   approve: () => {console.log()}\n  // }\n  useEffect(() => {\n    if (\n      tokenContract\n      && account\n      && chainId\n      && spender\n      && token\n    ) {\n      try {\n        tokenContract.allowance(account, spender).then((res:any) => {\n          console.log(res)\n          if (res && res._hex && res.gt(BigNumber.from(0))) {\n            setIsSetApprove(true)\n          } else {\n            setIsSetApprove(false)\n          }\n        }).catch((error: Error) => {\n          console.debug('Failed to approve token', error)\n          throw error\n        })\n      } catch (error) {\n        console.debug('Failed to approve token', error)\n          throw error\n      }\n    } else {\n      setIsSetApprove(false)\n    }\n  }, [tokenContract, pendingApproval])\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (!tokenContract || !spender || !account || !symbol || !chainId) return\n    return tokenContract.approve(spender, '0x0').then((response: TransactionResponse) => {\n      recordsApprove({\n        token: token,\n        spender: spender,\n        account: account,\n        amount: '0x0',\n        symbol: symbol,\n        decimals: 18,\n        hash: response?.hash,\n        chainId: chainId,\n        type: \"Revoke\",\n      })\n      addTransaction(response, {\n        summary: 'Approve ' + config.getBaseCoin(symbol, chainId),\n        approval: { tokenAddress: token, spender: spender }\n      })\n    })\n    .catch((error: Error) => {\n      console.debug('Failed to approve token', error)\n      throw error\n    })\n  }, [tokenContract, spender, account, chainId, addTransaction])\n\n  \n  return {\n    isSetApprove,\n    approve\n  }\n  // return useMemo(() => {\n  // }, [isSetApprove, approve])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}