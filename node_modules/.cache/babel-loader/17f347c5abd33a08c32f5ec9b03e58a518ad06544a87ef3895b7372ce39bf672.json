{"ast":null,"code":"\"use strict\";\n\nvar get = function (url, body) {\n  var obj = {\n    url: url,\n    method: \"GET\",\n    body: body\n  };\n  return request(obj);\n};\nvar post = function (url, body) {\n  var obj = {\n    url: url,\n    method: \"POST\",\n    body: body\n  };\n  return request(obj);\n};\nvar request = function (obj) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(obj.method || \"GET\", obj.url);\n    if (obj.headers) {\n      Object.keys(obj.headers).forEach(function (key) {\n        xhr.setRequestHeader(key, obj.headers[key]);\n      });\n    }\n    xhr.onload = function () {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject(xhr.statusText);\n      }\n    };\n    xhr.onerror = function () {\n      return reject(xhr.statusText);\n    };\n    xhr.send(obj.body);\n  });\n};\nmodule.exports = {\n  get: get,\n  post: post,\n  request: request\n};","map":{"version":3,"names":["get","url","body","obj","method","request","post","Promise","resolve","reject","xhr","XMLHttpRequest","open","headers","Object","keys","forEach","key","setRequestHeader","onload","status","response","statusText","onerror","send","module","exports"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/nebpay.js/libs/http.js"],"sourcesContent":["\"use strict\";\n\nvar get = function(url, body) {\n    var obj = {\n        url: url,\n        method: \"GET\",\n        body: body\n    };\n    return request(obj);\n};\n\nvar post = function (url, body) {\n    var obj = {\n        url: url,\n        method: \"POST\",\n        body: body\n    };\n    return request(obj);\n};\nvar request = function(obj) {\n    return new Promise(function(resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(obj.method || \"GET\", obj.url);\n        if (obj.headers) {\n            Object.keys(obj.headers).forEach(function(key) {\n                xhr.setRequestHeader(key, obj.headers[key]);\n            });\n        }\n        xhr.onload = function() {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject(xhr.statusText);\n            }\n        };\n        xhr.onerror = function() { return reject(xhr.statusText); };\n        xhr.send(obj.body);\n    });\n};\n\nmodule.exports = {\n    get: get,\n    post: post,\n    request: request\n};"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAG,SAAAA,CAASC,GAAG,EAAEC,IAAI,EAAE;EAC1B,IAAIC,GAAG,GAAG;IACNF,GAAG,EAAEA,GAAG;IACRG,MAAM,EAAE,KAAK;IACbF,IAAI,EAAEA;EACV,CAAC;EACD,OAAOG,OAAO,CAACF,GAAG,CAAC;AACvB,CAAC;AAED,IAAIG,IAAI,GAAG,SAAAA,CAAUL,GAAG,EAAEC,IAAI,EAAE;EAC5B,IAAIC,GAAG,GAAG;IACNF,GAAG,EAAEA,GAAG;IACRG,MAAM,EAAE,MAAM;IACdF,IAAI,EAAEA;EACV,CAAC;EACD,OAAOG,OAAO,CAACF,GAAG,CAAC;AACvB,CAAC;AACD,IAAIE,OAAO,GAAG,SAAAA,CAASF,GAAG,EAAE;EACxB,OAAO,IAAII,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IACzC,IAAIC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;IAC9BD,GAAG,CAACE,IAAI,CAACT,GAAG,CAACC,MAAM,IAAI,KAAK,EAAED,GAAG,CAACF,GAAG,CAAC;IACtC,IAAIE,GAAG,CAACU,OAAO,EAAE;MACbC,MAAM,CAACC,IAAI,CAACZ,GAAG,CAACU,OAAO,CAAC,CAACG,OAAO,CAAC,UAASC,GAAG,EAAE;QAC3CP,GAAG,CAACQ,gBAAgB,CAACD,GAAG,EAAEd,GAAG,CAACU,OAAO,CAACI,GAAG,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN;IACAP,GAAG,CAACS,MAAM,GAAG,YAAW;MACpB,IAAIT,GAAG,CAACU,MAAM,IAAI,GAAG,IAAIV,GAAG,CAACU,MAAM,GAAG,GAAG,EAAE;QACvCZ,OAAO,CAACE,GAAG,CAACW,QAAQ,CAAC;MACzB,CAAC,MAAM;QACHZ,MAAM,CAACC,GAAG,CAACY,UAAU,CAAC;MAC1B;IACJ,CAAC;IACDZ,GAAG,CAACa,OAAO,GAAG,YAAW;MAAE,OAAOd,MAAM,CAACC,GAAG,CAACY,UAAU,CAAC;IAAE,CAAC;IAC3DZ,GAAG,CAACc,IAAI,CAACrB,GAAG,CAACD,IAAI,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAEDuB,MAAM,CAACC,OAAO,GAAG;EACb1B,GAAG,EAAEA,GAAG;EACRM,IAAI,EAAEA,IAAI;EACVD,OAAO,EAAEA;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}