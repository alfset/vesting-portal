{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{flowAddress,flowBalanceList}from'./actions';const initialState={flowAddress:'',flowBalanceList:{}// adaWallet: '',\n};export default createReducer(initialState,builder=>builder.addCase(flowAddress,(state,_ref)=>{let{payload:{address}}=_ref;state.flowAddress=address;}).addCase(flowBalanceList,(state,_ref2)=>{let{payload:{list}}=_ref2;state.flowBalanceList=list;}));","map":{"version":3,"names":["createReducer","flowAddress","flowBalanceList","initialState","builder","addCase","state","_ref","payload","address","_ref2","list"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/flow/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { flowAddress, flowBalanceList } from './actions'\n\nexport interface BurnState {\n  readonly flowAddress: any\n  readonly flowBalanceList: any\n  // readonly adaWallet: any\n}\n\nconst initialState: BurnState = {\n  flowAddress: '',\n  flowBalanceList: {},\n  // adaWallet: '',\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(flowAddress, (state, { payload: { address } }) => {\n      state.flowAddress = address\n    })\n    .addCase(flowBalanceList, (state, { payload: { list } }) => {\n      state.flowBalanceList = list\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,WAAW,CAAEC,eAAe,KAAQ,WAAW,CAQxD,KAAM,CAAAC,YAAuB,CAAG,CAC9BF,WAAW,CAAE,EAAE,CACfC,eAAe,CAAE,CAAC,CAClB;AACF,CAAC,CAED,cAAe,CAAAF,aAAa,CAAYG,YAAY,CAAEC,OAAO,EAC3DA,OAAO,CACJC,OAAO,CAACJ,WAAW,CAAE,CAACK,KAAK,CAAAC,IAAA,GAA+B,IAA7B,CAAEC,OAAO,CAAE,CAAEC,OAAQ,CAAE,CAAC,CAAAF,IAAA,CACpDD,KAAK,CAACL,WAAW,CAAGQ,OAAO,CAC7B,CAAC,CAAC,CACDJ,OAAO,CAACH,eAAe,CAAE,CAACI,KAAK,CAAAI,KAAA,GAA4B,IAA1B,CAAEF,OAAO,CAAE,CAAEG,IAAK,CAAE,CAAC,CAAAD,KAAA,CACrDJ,KAAK,CAACJ,eAAe,CAAGS,IAAI,CAC9B,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}