{"ast":null,"code":"import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString } from '@walletconnect/utils';\nimport NetworkMonitor from './network';\n// @ts-ignore\nconst WS = typeof global.WebSocket !== 'undefined' ? global.WebSocket : require('ws');\n// -- SocketTransport ------------------------------------------------------ //\nclass SocketTransport {\n  // -- constructor ----------------------------------------------------- //\n  constructor(opts) {\n    this.opts = opts;\n    this._queue = [];\n    this._events = [];\n    this._subscriptions = [];\n    // -- public ---------------------------------------------------------- //\n    this.open = () => {\n      this._socketCreate();\n    };\n    this.close = () => {\n      this._socketClose();\n    };\n    this.send = (message, topic, silent) => {\n      if (!topic || typeof topic !== 'string') {\n        throw new Error('Missing or invalid topic field');\n      }\n      this._socketSend({\n        topic: topic,\n        type: 'pub',\n        payload: message,\n        silent: !!silent\n      });\n    };\n    this.subscribe = topic => {\n      this._socketSend({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true\n      });\n    };\n    this.on = (event, callback) => {\n      this._events.push({\n        event,\n        callback\n      });\n    };\n    // -- private ---------------------------------------------------------- //\n    this._socketCreate = () => {\n      if (this._nextSocket) {\n        return;\n      }\n      const url = getWebSocketUrl(this._url, this._protocol, this._version);\n      this._nextSocket = new WS(url);\n      if (!this._nextSocket) {\n        throw new Error('Failed to create socket');\n      }\n      this._nextSocket.onmessage = event => this._socketReceive(event);\n      this._nextSocket.onopen = () => this._socketOpen();\n      this._nextSocket.onerror = event => this._socketError(event);\n      this._nextSocket.onclose = () => {\n        this._nextSocket = null;\n        setTimeout(this._socketCreate, 500);\n      };\n    };\n    this._socketOpen = () => {\n      this._socketClose();\n      this._socket = this._nextSocket;\n      this._nextSocket = null;\n      this._queueSubscriptions();\n      this._pushQueue();\n    };\n    this._socketClose = () => {\n      if (this._socket) {\n        this._socket.onclose = () => {\n          // empty\n        };\n        this._socket.close();\n      }\n    };\n    this._socketSend = socketMessage => {\n      const message = JSON.stringify(socketMessage);\n      if (this._socket && this._socket.readyState === 1) {\n        this._socket.send(message);\n      } else {\n        this._setToQueue(socketMessage);\n        this._socketCreate();\n      }\n    };\n    this._socketReceive = async event => {\n      let socketMessage;\n      try {\n        socketMessage = JSON.parse(event.data);\n      } catch (error) {\n        return;\n      }\n      this._socketSend({\n        topic: socketMessage.topic,\n        type: 'ack',\n        payload: '',\n        silent: true\n      });\n      if (this._socket && this._socket.readyState === 1) {\n        const events = this._events.filter(itemEvent => itemEvent.event === 'message');\n        if (events && events.length) {\n          events.forEach(itemEvent => itemEvent.callback(socketMessage));\n        }\n      }\n    };\n    this._socketError = e => {\n      const events = this._events.filter(event => event.event === 'error');\n      if (events && events.length) {\n        events.forEach(event => event.callback(e));\n      }\n    };\n    this._queueSubscriptions = () => {\n      const subscriptions = this._subscriptions;\n      subscriptions.forEach(topic => this._queue.push({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true\n      }));\n      this._subscriptions = this.opts.subscriptions || [];\n    };\n    this._setToQueue = socketMessage => {\n      this._queue.push(socketMessage);\n    };\n    this._pushQueue = () => {\n      const queue = this._queue;\n      queue.forEach(socketMessage => this._socketSend(socketMessage));\n      this._queue = [];\n    };\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = '';\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n    if (!opts.url || typeof opts.url !== 'string') {\n      throw new Error('Missing or invalid WebSocket url');\n    }\n    this._url = opts.url;\n    this._netMonitor.on('online', () => this._socketCreate());\n  }\n  set readyState(value) {\n    // empty\n  }\n  get readyState() {\n    return this._socket ? this._socket.readyState : -1;\n  }\n  set connecting(value) {\n    // empty\n  }\n  get connecting() {\n    return this.readyState === 0;\n  }\n  set connected(value) {\n    // empty\n  }\n  get connected() {\n    return this.readyState === 1;\n  }\n  set closing(value) {\n    // empty\n  }\n  get closing() {\n    return this.readyState === 2;\n  }\n  set closed(value) {\n    // empty\n  }\n  get closed() {\n    return this.readyState === 3;\n  }\n}\nfunction getWebSocketUrl(webUrl, protocol, version) {\n  var _a, _b;\n  const url = webUrl.startsWith('https') ? webUrl.replace('https', 'wss') : webUrl.startsWith('http') ? webUrl.replace('http', 'ws') : webUrl;\n  const splitUrl = url.split('?');\n  const params = isBrowser() ? {\n    protocol,\n    version,\n    env: 'browser',\n    host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || ''\n  } : {\n    protocol,\n    version,\n    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || ''\n  };\n  const queryString = appendToQueryString(getQueryString(splitUrl[1] || ''), params);\n  return splitUrl[0] + '?' + queryString;\n}\nexport default SocketTransport;","map":{"version":3,"names":["isBrowser","getLocation","getQueryString","detectEnv","appendToQueryString","NetworkMonitor","WS","global","WebSocket","require","SocketTransport","constructor","opts","_queue","_events","_subscriptions","open","_socketCreate","close","_socketClose","send","message","topic","silent","Error","_socketSend","type","payload","subscribe","on","event","callback","push","_nextSocket","url","getWebSocketUrl","_url","_protocol","_version","onmessage","_socketReceive","onopen","_socketOpen","onerror","_socketError","onclose","setTimeout","_socket","_queueSubscriptions","_pushQueue","socketMessage","JSON","stringify","readyState","_setToQueue","parse","data","error","events","filter","itemEvent","length","forEach","e","subscriptions","queue","protocol","version","_netMonitor","netMonitor","value","connecting","connected","closing","closed","webUrl","startsWith","replace","splitUrl","split","params","env","host","_a","_b","name","queryString"],"sources":["../../../../../src/@terra-dev/walletconnect/impl/socket-transport/index.ts"],"sourcesContent":["import {\n  ISocketMessage,\n  ITransportEvent,\n  INetworkMonitor,\n  ITransportLib,\n  ISocketTransportOptions,\n} from '@walletconnect/types';\nimport {\n  isBrowser,\n  getLocation,\n  getQueryString,\n  detectEnv,\n  appendToQueryString,\n} from '@walletconnect/utils';\n\nimport NetworkMonitor from './network';\n\n// @ts-ignore\nconst WS =\n  typeof global.WebSocket !== 'undefined' ? global.WebSocket : require('ws');\n\n// -- SocketTransport ------------------------------------------------------ //\n\nclass SocketTransport implements ITransportLib {\n  private _protocol: string;\n  private _version: number;\n  private _url: string;\n  private _netMonitor: INetworkMonitor | null;\n  private _socket: WebSocket | null;\n  private _nextSocket: WebSocket | null;\n  private _queue: ISocketMessage[] = [];\n  private _events: ITransportEvent[] = [];\n  private _subscriptions: string[] = [];\n\n  // -- constructor ----------------------------------------------------- //\n\n  constructor(private opts: ISocketTransportOptions) {\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = '';\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n\n    if (!opts.url || typeof opts.url !== 'string') {\n      throw new Error('Missing or invalid WebSocket url');\n    }\n\n    this._url = opts.url;\n\n    this._netMonitor.on('online', () => this._socketCreate());\n  }\n\n  set readyState(value) {\n    // empty\n  }\n\n  get readyState(): number {\n    return this._socket ? this._socket.readyState : -1;\n  }\n\n  set connecting(value) {\n    // empty\n  }\n\n  get connecting(): boolean {\n    return this.readyState === 0;\n  }\n\n  set connected(value) {\n    // empty\n  }\n\n  get connected(): boolean {\n    return this.readyState === 1;\n  }\n\n  set closing(value) {\n    // empty\n  }\n\n  get closing(): boolean {\n    return this.readyState === 2;\n  }\n\n  set closed(value) {\n    // empty\n  }\n\n  get closed(): boolean {\n    return this.readyState === 3;\n  }\n\n  // -- public ---------------------------------------------------------- //\n\n  public open = () => {\n    this._socketCreate();\n  };\n\n  public close = () => {\n    this._socketClose();\n  };\n\n  public send = (message: string, topic?: string, silent?: boolean): void => {\n    if (!topic || typeof topic !== 'string') {\n      throw new Error('Missing or invalid topic field');\n    }\n\n    this._socketSend({\n      topic: topic,\n      type: 'pub',\n      payload: message,\n      silent: !!silent,\n    });\n  };\n\n  public subscribe = (topic: string) => {\n    this._socketSend({\n      topic: topic,\n      type: 'sub',\n      payload: '',\n      silent: true,\n    });\n  };\n\n  public on = (event: string, callback: (payload: any) => void) => {\n    this._events.push({ event, callback });\n  };\n\n  // -- private ---------------------------------------------------------- //\n\n  private _socketCreate = () => {\n    if (this._nextSocket) {\n      return;\n    }\n\n    const url = getWebSocketUrl(this._url, this._protocol, this._version);\n\n    this._nextSocket = new WS(url);\n\n    if (!this._nextSocket) {\n      throw new Error('Failed to create socket');\n    }\n\n    this._nextSocket.onmessage = (event: MessageEvent) =>\n      this._socketReceive(event);\n\n    this._nextSocket.onopen = () => this._socketOpen();\n\n    this._nextSocket.onerror = (event: Event) => this._socketError(event);\n\n    this._nextSocket.onclose = () => {\n      this._nextSocket = null;\n      setTimeout(this._socketCreate, 500);\n    };\n  };\n\n  private _socketOpen = () => {\n    this._socketClose();\n    this._socket = this._nextSocket;\n    this._nextSocket = null;\n    this._queueSubscriptions();\n    this._pushQueue();\n  };\n\n  private _socketClose = () => {\n    if (this._socket) {\n      this._socket.onclose = () => {\n        // empty\n      };\n      this._socket.close();\n    }\n  };\n\n  private _socketSend = (socketMessage: ISocketMessage) => {\n    const message: string = JSON.stringify(socketMessage);\n\n    if (this._socket && this._socket.readyState === 1) {\n      this._socket.send(message);\n    } else {\n      this._setToQueue(socketMessage);\n      this._socketCreate();\n    }\n  };\n\n  private _socketReceive = async (event: MessageEvent) => {\n    let socketMessage: ISocketMessage;\n\n    try {\n      socketMessage = JSON.parse(event.data);\n    } catch (error) {\n      return;\n    }\n\n    this._socketSend({\n      topic: socketMessage.topic,\n      type: 'ack',\n      payload: '',\n      silent: true,\n    });\n\n    if (this._socket && this._socket.readyState === 1) {\n      const events = this._events.filter(\n        (itemEvent) => itemEvent.event === 'message',\n      );\n      if (events && events.length) {\n        events.forEach((itemEvent) => itemEvent.callback(socketMessage));\n      }\n    }\n  };\n\n  private _socketError = (e: Event) => {\n    const events = this._events.filter((event) => event.event === 'error');\n    if (events && events.length) {\n      events.forEach((event) => event.callback(e));\n    }\n  };\n\n  private _queueSubscriptions = () => {\n    const subscriptions = this._subscriptions;\n\n    subscriptions.forEach((topic: string) =>\n      this._queue.push({\n        topic: topic,\n        type: 'sub',\n        payload: '',\n        silent: true,\n      }),\n    );\n\n    this._subscriptions = this.opts.subscriptions || [];\n  };\n\n  private _setToQueue = (socketMessage: ISocketMessage) => {\n    this._queue.push(socketMessage);\n  };\n\n  private _pushQueue = () => {\n    const queue = this._queue;\n\n    queue.forEach((socketMessage: ISocketMessage) =>\n      this._socketSend(socketMessage),\n    );\n\n    this._queue = [];\n  };\n}\n\nfunction getWebSocketUrl(\n  webUrl: string,\n  protocol: string,\n  version: number,\n): string {\n  const url = webUrl.startsWith('https')\n    ? webUrl.replace('https', 'wss')\n    : webUrl.startsWith('http')\n    ? webUrl.replace('http', 'ws')\n    : webUrl;\n  const splitUrl = url.split('?');\n  const params = isBrowser()\n    ? {\n        protocol,\n        version,\n        env: 'browser',\n        host: getLocation()?.host || '',\n      }\n    : {\n        protocol,\n        version,\n        env: detectEnv()?.name || '',\n      };\n  const queryString = appendToQueryString(\n    getQueryString(splitUrl[1] || ''),\n    params,\n  );\n  return splitUrl[0] + '?' + queryString;\n}\n\nexport default SocketTransport;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}