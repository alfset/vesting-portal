{"ast":null,"code":"import{useEffect}from'react';import{ChainId}from'../../config/chainConfig/chainId';import{useActiveReact}from'../../hooks/useActiveReact';// import useInterval from '../../hooks/useInterval'\nimport{useDispatch}from'react-redux';import{solAddress}from'./actions';import{useLoginSol// useSolBalance\n// getSolanaInfo\n// getSolTxnsStatus\n// useSolCreateAccount\n}from'./index';export default function Updater(){const{chainId,account}=useActiveReact();const dispatch=useDispatch();const{loginSol}=useLoginSol();// const {\n//   getSolAccountInfo,\n//   // getAccount\n// } = useSolCreateAccount()\n// const {getSolBalance, getSolTokenBalance, getSolTokenInfo} = useSolBalance()\n// const getBalance = useCallback(() => {\n//   const params = {chainId, account}\n//   // const params = {chainId: 'SOL', account: 'D2Wa6JtXeyqFMdoacpKMo86Pbr4YpfdVCtAhem8HjqfF'}\n//   // const params = {chainId, account: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'}\n//   // const params = {chainId, account: '2wmVCSfPxGPjrnMMn7rchp4uaeoTqN39mXFC2zhPdri9'}\n//   // const params = {chainId, account: 'B9htQ5ZFRTDGaND6bgS9ne5n1kQFBK6u9TZa178Ywao9'}\n//   console.log(params)\n//   Promise.all([\n//     getSolBalance(params),\n//     // getSolTokenBalance(params),\n//     getSolTokenInfo(params),\n//   ]).then((res) => {\n//     console.log(res)\n//   })\n// }, [getSolBalance, getSolTokenBalance, getSolTokenInfo, chainId, account])\n// useEffect(() => {\n//   getBalance()\n// }, [getSolBalance, getSolTokenBalance, chainId, account])\n// useInterval(getBalance, 1000 * 10)\nuseEffect(()=>{// getSolanaInfo('SOL_TEST', 'requestAirdrop', ['H7SFqpjjSsWxVsBuVbWspHq1yjymQmR9t6xmi1u34yfH']).then((res:any) => console.log(res))\nif([ChainId.SOL,ChainId.SOL_TEST].includes(chainId)){var _window,_window$solana;loginSol(1);// Promise.all([\n//   getSolAccountInfo({account, chainId}),\n//   getSolAccountInfo({account: 'DCLzsK2u5CNaeEgFv2f4SYsH85gR86C4N753wfD6V5Yy', chainId}),\n// ]).then((res:any) => {\n//   console.log(res)\n// })\n// getAccount('8fBfAE4gVbv253UgwkwBT5TaV5SaZ7JJWgmQoqbEEei5', 'GkzTnqZSasjZ5geL4cbvPErNVB9xWby4zYN7hpW5k5iX').then((res:any) => console.log(res.toBase58()))\n// setTimeout(() => {\n//   createAccount()\n// }, 1000 * 3)\n(_window=window)===null||_window===void 0?void 0:(_window$solana=_window.solana)===null||_window$solana===void 0?void 0:_window$solana.on('accountChanged',pub=>{console.log(pub.toBase58());if(pub){dispatch(solAddress({address:pub.toBase58()}));}});}},[chainId,account]);return null;}","map":{"version":3,"names":["useEffect","ChainId","useActiveReact","useDispatch","solAddress","useLoginSol","Updater","chainId","account","dispatch","loginSol","SOL","SOL_TEST","includes","_window","_window$solana","window","solana","on","pub","console","log","toBase58","address"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/solana/updater.ts"],"sourcesContent":["\nimport { useEffect } from 'react'\nimport { ChainId } from '../../config/chainConfig/chainId'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n// import useInterval from '../../hooks/useInterval'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport {solAddress} from './actions'\n\nimport {\n  useLoginSol,\n  // useSolBalance\n  // getSolanaInfo\n  // getSolTxnsStatus\n  // useSolCreateAccount\n} from './index'\n\nexport default function Updater(): null {\n  const { chainId, account } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n  \n  const {loginSol} = useLoginSol()\n  // const {\n  //   getSolAccountInfo,\n  //   // getAccount\n  // } = useSolCreateAccount()\n  // const {getSolBalance, getSolTokenBalance, getSolTokenInfo} = useSolBalance()\n\n  // const getBalance = useCallback(() => {\n  //   const params = {chainId, account}\n  //   // const params = {chainId: 'SOL', account: 'D2Wa6JtXeyqFMdoacpKMo86Pbr4YpfdVCtAhem8HjqfF'}\n  //   // const params = {chainId, account: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'}\n  //   // const params = {chainId, account: '2wmVCSfPxGPjrnMMn7rchp4uaeoTqN39mXFC2zhPdri9'}\n  //   // const params = {chainId, account: 'B9htQ5ZFRTDGaND6bgS9ne5n1kQFBK6u9TZa178Ywao9'}\n  //   console.log(params)\n  //   Promise.all([\n  //     getSolBalance(params),\n  //     // getSolTokenBalance(params),\n  //     getSolTokenInfo(params),\n  //   ]).then((res) => {\n  //     console.log(res)\n  //   })\n  // }, [getSolBalance, getSolTokenBalance, getSolTokenInfo, chainId, account])\n\n  // useEffect(() => {\n  //   getBalance()\n  // }, [getSolBalance, getSolTokenBalance, chainId, account])\n\n  // useInterval(getBalance, 1000 * 10)\n\n  useEffect(() => {\n    // getSolanaInfo('SOL_TEST', 'requestAirdrop', ['H7SFqpjjSsWxVsBuVbWspHq1yjymQmR9t6xmi1u34yfH']).then((res:any) => console.log(res))\n    if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      loginSol(1)\n      // Promise.all([\n      //   getSolAccountInfo({account, chainId}),\n      //   getSolAccountInfo({account: 'DCLzsK2u5CNaeEgFv2f4SYsH85gR86C4N753wfD6V5Yy', chainId}),\n      // ]).then((res:any) => {\n      //   console.log(res)\n      // })\n      // getAccount('8fBfAE4gVbv253UgwkwBT5TaV5SaZ7JJWgmQoqbEEei5', 'GkzTnqZSasjZ5geL4cbvPErNVB9xWby4zYN7hpW5k5iX').then((res:any) => console.log(res.toBase58()))\n      // setTimeout(() => {\n\n      //   createAccount()\n      // }, 1000 * 3)\n      window?.solana?.on('accountChanged', (pub:any) => {\n        console.log(pub.toBase58())\n        if (pub) {\n          dispatch(solAddress({address: pub.toBase58()}))\n        }\n      })\n    }\n  }, [chainId, account])\n\n  return null\n}\n"],"mappings":"AACA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,OAAO,KAAQ,kCAAkC,CAC1D,OAASC,cAAc,KAAQ,4BAA4B,CAC3D;AACA,OAASC,WAAW,KAAQ,aAAa,CAEzC,OAAQC,UAAU,KAAO,WAAW,CAEpC,OACEC,WACA;AACA;AACA;AACA;AAAA,KACK,SAAS,CAEhB,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAS,CACtC,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGN,cAAc,CAAC,CAAC,CAC7C,KAAM,CAAAO,QAAQ,CAAGN,WAAW,CAAc,CAAC,CAE3C,KAAM,CAACO,QAAQ,CAAC,CAAGL,WAAW,CAAC,CAAC,CAChC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEAL,SAAS,CAAC,IAAM,CACd;AACA,GAAI,CAACC,OAAO,CAACU,GAAG,CAAEV,OAAO,CAACW,QAAQ,CAAC,CAACC,QAAQ,CAACN,OAAO,CAAC,CAAE,KAAAO,OAAA,CAAAC,cAAA,CACrDL,QAAQ,CAAC,CAAC,CAAC,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,CAAAI,OAAA,CAAAE,MAAM,UAAAF,OAAA,kBAAAC,cAAA,CAAND,OAAA,CAAQG,MAAM,UAAAF,cAAA,iBAAdA,cAAA,CAAgBG,EAAE,CAAC,gBAAgB,CAAGC,GAAO,EAAK,CAChDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC,CAC3B,GAAIH,GAAG,CAAE,CACPV,QAAQ,CAACL,UAAU,CAAC,CAACmB,OAAO,CAAEJ,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACjD,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACf,OAAO,CAAEC,OAAO,CAAC,CAAC,CAEtB,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}