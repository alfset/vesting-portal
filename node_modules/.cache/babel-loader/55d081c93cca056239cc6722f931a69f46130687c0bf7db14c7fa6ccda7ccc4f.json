{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{MsgSend,Coins,// MsgExecuteContract,\nFee,LCDClient,Coin// CreateTxOptions,\n}from'@terra-money/terra.js';import axios from'axios';import BigNumber from'bignumber.js';import _ from'lodash';import currency from'./currency';import{useActiveReact}from'../../hooks/useActiveReact';import{ChainId}from'../../config/chainConfig/chainId';export let AssetNativeDenomEnum=/*#__PURE__*/function(AssetNativeDenomEnum){AssetNativeDenomEnum[\"ukrw\"]=\"ukrw\";AssetNativeDenomEnum[\"uusd\"]=\"uusd\";AssetNativeDenomEnum[\"uluna\"]=\"uluna\";AssetNativeDenomEnum[\"usdr\"]=\"usdr\";AssetNativeDenomEnum[\"umnt\"]=\"umnt\";return AssetNativeDenomEnum;}({});export const terraExt={chainID:\"columbus-5\",fcd:\"https://fcd.terra.dev\",lcd:\"https://lcd.terra.dev\",localterra:false,mantle:\"https://mantle.terra.dev\",name:\"mainnet\",walletconnectID:1,queryTx:'https://fcd.terra.dev/txs/'};// export const terraExt = {\n//   chainID: \"bombay-12\",\n//   fcd: \"https://bombay-fcd.terra.dev\",\n//   lcd: \"https://bombay-lcd.terra.dev\",\n//   localterra: false,\n//   mantle: \"https://bombay-mantle.terra.dev\",\n//   name: \"testnet\",\n//   walletconnectID: 0,\n//   queryTx: 'https://bombay-fcd.terra.dev/v1/tx/'\n// }\nconst isNativeTerra=str=>str.startsWith('u')&&currency.currencies.includes(str.slice(1).toUpperCase());export function useTerraSend(){const{chainId}=useActiveReact();const[gasPricesFromServer,setGasPricesFromServer]=useState();const getGasPricesFromServer=useCallback(async fcd=>{if(fcd&&chainId===ChainId.TERRA){const{data}=await axios.get(terraExt.fcd+'/v1/txs/gas_prices',{baseURL:fcd});// console.log(data)\nsetGasPricesFromServer(data);}},[chainId]);useEffect(()=>{getGasPricesFromServer(terraExt.fcd);return()=>{getGasPricesFromServer();};},[terraExt.fcd,chainId]);const getTerraSendTax=async props=>{const{denom,amount,feeDenom:_feeDenom}=props;if(terraExt&&denom&&amount){const lcd=new LCDClient({chainID:terraExt.chainID,URL:terraExt.lcd,gasPrices:{[_feeDenom]:gasPricesFromServer[_feeDenom]}});// tax\n// console.log(denom)\n// console.log(isNativeTerra(denom))\nreturn isNativeTerra(denom)?lcd.utils.calculateTax(new Coin(denom,amount)):new Coin(_feeDenom,0);}return undefined;};const getTerraFeeList=async(address,toAddress,Unit,inputAmount)=>{if(terraExt&&inputAmount&&address&&toAddress&&Unit){let gas=200000;const tax=await getTerraSendTax({denom:Unit,amount:inputAmount,feeDenom:Unit});// const tax = await getTerraSendTax({denom: Unit, amount: inputAmount, feeDenom: AssetNativeDenomEnum.uusd})\ntry{const feeDenoms=[AssetNativeDenomEnum.uluna];const msgs=new MsgSend(address,toAddress,{[Unit]:inputAmount});// console.log(msgs)\nconst lcd=new LCDClient({chainID:terraExt.chainID,URL:terraExt.lcd,gasPrices:gasPricesFromServer});// fee + tax\n// console.log(address)\n// console.log(msgs)\n// console.log(feeDenoms)\n// debugger\nconst unsignedTx=await lcd.tx.create(address,{msgs:[msgs],feeDenoms});gas=unsignedTx===null||unsignedTx===void 0?void 0:unsignedTx.fee.gas;console.log(unsignedTx);// debugger\n}catch(err){// gas is just default value\nconsole.log('error');console.log(err);}return _.map(AssetNativeDenomEnum,denom=>{const amount=new BigNumber(gasPricesFromServer[denom]).multipliedBy(gas).dp(0,BigNumber.ROUND_UP).toString(10);const gasFee=new Coins({[denom]:amount});const fee=new Fee(gas,gasFee);return{denom,fee,tax};});}return[];};return{getTerraFeeList};}export function updateTerraHash(hash){const data={msg:'Error',info:''};return new Promise(resolve=>{const url=\"\".concat(terraExt.queryTx).concat(hash);fetch(url).then(res=>res.json()).then(json=>{console.log(json);if(json){if(json.error||json.code){data.msg='Failure';data.error='Txns is failure!';}else{data.msg='Success';data.info=json;}}else{data.msg='Null';data.error='Query is empty!';}resolve(data);});});}// updateTerraHash('0D27A684885992D3F13BFB52B9DCF1D612C130001E5CD659A4E79A2BBC428A07').then(res => {\n//   console.log(res)\n// })","map":{"version":3,"names":["useState","useEffect","useCallback","MsgSend","Coins","Fee","LCDClient","Coin","axios","BigNumber","_","currency","useActiveReact","ChainId","AssetNativeDenomEnum","terraExt","chainID","fcd","lcd","localterra","mantle","name","walletconnectID","queryTx","isNativeTerra","str","startsWith","currencies","includes","slice","toUpperCase","useTerraSend","chainId","gasPricesFromServer","setGasPricesFromServer","getGasPricesFromServer","TERRA","data","get","baseURL","getTerraSendTax","props","denom","amount","feeDenom","_feeDenom","URL","gasPrices","utils","calculateTax","undefined","getTerraFeeList","address","toAddress","Unit","inputAmount","gas","tax","feeDenoms","uluna","msgs","unsignedTx","tx","create","fee","console","log","err","map","multipliedBy","dp","ROUND_UP","toString","gasFee","updateTerraHash","hash","msg","info","Promise","resolve","url","concat","fetch","then","res","json","error","code"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/terra/index.ts"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react'\nimport {\n  MsgSend,\n  Coins,\n  // MsgExecuteContract,\n  Fee,\n  LCDClient,\n  Coin,\n  // CreateTxOptions,\n} from '@terra-money/terra.js'\nimport axios from 'axios'\nimport BigNumber from 'bignumber.js'\nimport _ from 'lodash'\nimport currency from './currency'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { ChainId } from '../../config/chainConfig/chainId'\n\n\nexport enum AssetNativeDenomEnum {\n  ukrw = 'ukrw',\n  uusd = 'uusd',\n  uluna = 'uluna',\n  usdr = 'usdr',\n  umnt = 'umnt',\n}\n\nexport const terraExt = {\n  chainID: \"columbus-5\",\n  fcd: \"https://fcd.terra.dev\",\n  lcd: \"https://lcd.terra.dev\",\n  localterra: false,\n  mantle: \"https://mantle.terra.dev\",\n  name: \"mainnet\",\n  walletconnectID: 1,\n  queryTx: 'https://fcd.terra.dev/txs/'\n}\n\n\n// export const terraExt = {\n//   chainID: \"bombay-12\",\n//   fcd: \"https://bombay-fcd.terra.dev\",\n//   lcd: \"https://bombay-lcd.terra.dev\",\n//   localterra: false,\n//   mantle: \"https://bombay-mantle.terra.dev\",\n//   name: \"testnet\",\n//   walletconnectID: 0,\n//   queryTx: 'https://bombay-fcd.terra.dev/v1/tx/'\n// }\n\nconst isNativeTerra = (str: string): boolean =>\n  str.startsWith('u') &&\n  currency.currencies.includes(str.slice(1).toUpperCase())\n\nexport function useTerraSend () {\n  const {chainId} = useActiveReact()\n  const [gasPricesFromServer, setGasPricesFromServer] = useState<any>()\n\n  const getGasPricesFromServer = useCallback(\n    async (fcd?:any): Promise<void> => {\n      if (fcd && chainId === ChainId.TERRA) {\n        const { data } = await axios.get(terraExt.fcd + '/v1/txs/gas_prices', {\n          baseURL: fcd,\n        })\n        // console.log(data)\n        setGasPricesFromServer(data)\n      }\n    }, [chainId])\n\n  useEffect(() => {\n    getGasPricesFromServer(terraExt.fcd)\n    return (): void => {\n      getGasPricesFromServer()\n    }\n  }, [terraExt.fcd, chainId])\n\n  const getTerraSendTax = async (props: {\n    denom: AssetNativeDenomEnum\n    amount: string\n    feeDenom: string\n  }): Promise<Coin | undefined> => {\n    const { denom, amount, feeDenom: _feeDenom } = props\n    if (terraExt && denom && amount) {\n      const lcd = new LCDClient({\n        chainID: terraExt.chainID,\n        URL: terraExt.lcd,\n        gasPrices: { [_feeDenom]: gasPricesFromServer[_feeDenom] },\n      })\n      // tax\n      // console.log(denom)\n      // console.log(isNativeTerra(denom))\n      return isNativeTerra(denom)\n        ? lcd.utils.calculateTax(new Coin(denom, amount))\n        : new Coin(_feeDenom, 0)\n    }\n    return undefined\n  }\n\n  const getTerraFeeList = async (\n    address:any,\n    toAddress:any,\n    Unit:any,\n    inputAmount:any\n  ): Promise<\n    {\n      denom: AssetNativeDenomEnum\n      fee?: Fee\n      tax?: any\n    }[]\n  > => {\n    if (terraExt && inputAmount && address && toAddress && Unit) {\n      let gas = 200000\n      const tax = await getTerraSendTax({denom: Unit, amount: inputAmount, feeDenom: Unit})\n      // const tax = await getTerraSendTax({denom: Unit, amount: inputAmount, feeDenom: AssetNativeDenomEnum.uusd})\n      try {\n        const feeDenoms = [AssetNativeDenomEnum.uluna]\n\n        const msgs = new MsgSend(\n          address,\n          toAddress,\n          { [Unit]: \tinputAmount }\n        )\n        // console.log(msgs)\n        const lcd = new LCDClient({\n          chainID: terraExt.chainID,\n          URL: terraExt.lcd,\n          gasPrices: gasPricesFromServer,\n        })\n        // fee + tax\n        // console.log(address)\n        // console.log(msgs)\n        // console.log(feeDenoms)\n        // debugger\n        const unsignedTx:any = await lcd.tx.create(address, {\n          msgs: [msgs],\n          feeDenoms,\n        })\n        gas = unsignedTx?.fee.gas\n        console.log(unsignedTx)\n        // debugger\n      } catch (err) {\n        // gas is just default value\n        console.log('error')\n        console.log(err)\n      }\n\n      return _.map(AssetNativeDenomEnum, (denom) => {\n        const amount = new BigNumber(gasPricesFromServer[denom])\n          .multipliedBy(gas)\n          .dp(0, BigNumber.ROUND_UP)\n          .toString(10)\n        const gasFee = new Coins({ [denom]: amount })\n        const fee = new Fee(gas, gasFee)\n        return {\n          denom,\n          fee,\n          tax\n        }\n      })\n    }\n    return []\n  }\n  return {\n    getTerraFeeList\n  }\n}\n\nexport function updateTerraHash (hash:any): Promise<any> {\n  const data:any = {\n    msg: 'Error',\n    info: ''\n  }\n  return new Promise(resolve => {\n    const url = `${terraExt.queryTx}${hash}`\n    fetch(url).then(res => res.json()).then(json => {\n      console.log(json)\n      if (json) {\n        if (json.error || json.code) {\n          data.msg = 'Failure'\n          data.error = 'Txns is failure!'\n        } else {\n          data.msg = 'Success'\n          data.info = json\n        }\n      } else {\n        data.msg = 'Null'\n        data.error = 'Query is empty!'\n      }\n      resolve(data)\n    })\n  })\n}\n\n// updateTerraHash('0D27A684885992D3F13BFB52B9DCF1D612C130001E5CD659A4E79A2BBC428A07').then(res => {\n//   console.log(res)\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}