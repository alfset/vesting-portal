{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"cosmos.crypto.multisig.v1beta1\";\nconst baseMultiSignature = {};\nexports.MultiSignature = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      writer.uint32(10).bytes(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(bytesFromBase64(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(e);\n      }\n    }\n    return message;\n  }\n};\nconst baseCompactBitArray = {\n  extraBitsStored: 0\n};\nexports.CompactBitArray = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.extraBitsStored !== 0) {\n      writer.uint32(8).uint32(message.extraBitsStored);\n    }\n    if (message.elems.length !== 0) {\n      writer.uint32(18).bytes(message.elems);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompactBitArray);\n    message.elems = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.extraBitsStored = reader.uint32();\n          break;\n        case 2:\n          message.elems = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompactBitArray);\n    message.elems = new Uint8Array();\n    if (object.extraBitsStored !== undefined && object.extraBitsStored !== null) {\n      message.extraBitsStored = Number(object.extraBitsStored);\n    } else {\n      message.extraBitsStored = 0;\n    }\n    if (object.elems !== undefined && object.elems !== null) {\n      message.elems = bytesFromBase64(object.elems);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.extraBitsStored !== undefined && (obj.extraBitsStored = message.extraBitsStored);\n    message.elems !== undefined && (obj.elems = base64FromBytes(message.elems !== undefined ? message.elems : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseCompactBitArray);\n    if (object.extraBitsStored !== undefined && object.extraBitsStored !== null) {\n      message.extraBitsStored = object.extraBitsStored;\n    } else {\n      message.extraBitsStored = 0;\n    }\n    if (object.elems !== undefined && object.elems !== null) {\n      message.elems = object.elems;\n    } else {\n      message.elems = new Uint8Array();\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","baseMultiSignature","MultiSignature","encode","message","writer","arguments","length","undefined","default","Writer","create","v","signatures","uint32","bytes","decode","input","reader","Reader","end","len","pos","Object","assign","tag","push","skipType","fromJSON","object","e","bytesFromBase64","toJSON","obj","map","base64FromBytes","Uint8Array","fromPartial","baseCompactBitArray","extraBitsStored","CompactBitArray","elems","Number","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","String","fromCharCode","join","util","Long","configure"],"sources":["../../../../../src/cosmos/crypto/multisig/v1beta1/multisig.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}