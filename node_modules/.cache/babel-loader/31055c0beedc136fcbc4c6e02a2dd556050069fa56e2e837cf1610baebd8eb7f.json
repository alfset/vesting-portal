{"ast":null,"code":"import{useEffect,useState}from'react';import{useWeb3React}from'@web3-react/core';export function useSafeAppConnection(connector){const{activate,active}=useWeb3React();const[tried,setTried]=useState(false);useEffect(()=>{connector.isSafeApp().then(loadedInSafe=>{if(loadedInSafe){// On success active flag will change and in that case we'll set tried to true, check the hook below\nactivate(connector,undefined,true).catch(()=>{setTried(true);});}else{setTried(true);}});},[activate,connector]);// intentionally only running on mount (make sure it's only mounted once :))\n// if the connection worked, wait until we get confirmation of that to flip the flag\nuseEffect(()=>{console.log(active);if(active){setTried(true);}},[active]);return tried;}export function useIsSafeAppConnection(){const{connector}=useWeb3React();const[tried,setTried]=useState(false);useEffect(()=>{if(connector===null||connector===void 0?void 0:connector.isSafeApp){connector.isSafeApp().then(loadedInSafe=>{console.log(loadedInSafe);if(loadedInSafe){// On success active flag will change and in that case we'll set tried to true, check the hook below\nsetTried(true);}});}},[connector]);// intentionally only running on mount (make sure it's only mounted once :))\nreturn tried;}","map":{"version":3,"names":["useEffect","useState","useWeb3React","useSafeAppConnection","connector","activate","active","tried","setTried","isSafeApp","then","loadedInSafe","undefined","catch","console","log","useIsSafeAppConnection"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/connectors/gnosis-safe/hooks.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core'\nimport {SafeAppConnector} from './index'\n\nexport function useSafeAppConnection(connector: SafeAppConnector): boolean {\n  const { activate, active } = useWeb3React();\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    connector.isSafeApp().then((loadedInSafe) => {\n      if (loadedInSafe) {\n        // On success active flag will change and in that case we'll set tried to true, check the hook below\n        activate(connector, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate, connector]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    console.log(active)\n    if (active) {\n      setTried(true);\n    }\n  }, [active]);\n\n  return tried;\n}\n\nexport function useIsSafeAppConnection(): boolean {\n  const { connector }: any = useWeb3React();\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    if (connector?.isSafeApp) {\n\n      connector.isSafeApp().then((loadedInSafe:any) => {\n        console.log(loadedInSafe)\n        if (loadedInSafe) {\n          // On success active flag will change and in that case we'll set tried to true, check the hook below\n          setTried(true);\n        }\n      });\n    }\n  }, [connector]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  return tried;\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,YAAY,KAAQ,kBAAkB,CAG/C,MAAO,SAAS,CAAAC,oBAAoBA,CAACC,SAA2B,CAAW,CACzE,KAAM,CAAEC,QAAQ,CAAEC,MAAO,CAAC,CAAGJ,YAAY,CAAC,CAAC,CAC3C,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAEzCD,SAAS,CAAC,IAAM,CACdI,SAAS,CAACK,SAAS,CAAC,CAAC,CAACC,IAAI,CAAEC,YAAY,EAAK,CAC3C,GAAIA,YAAY,CAAE,CAChB;AACAN,QAAQ,CAACD,SAAS,CAAEQ,SAAS,CAAE,IAAI,CAAC,CAACC,KAAK,CAAC,IAAM,CAC/CL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLA,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACH,QAAQ,CAAED,SAAS,CAAC,CAAC,CAAE;AAE3B;AACAJ,SAAS,CAAC,IAAM,CACdc,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC,CACnB,GAAIA,MAAM,CAAE,CACVE,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAC,CAAE,CAACF,MAAM,CAAC,CAAC,CAEZ,MAAO,CAAAC,KAAK,CACd,CAEA,MAAO,SAAS,CAAAS,sBAAsBA,CAAA,CAAY,CAChD,KAAM,CAAEZ,SAAe,CAAC,CAAGF,YAAY,CAAC,CAAC,CACzC,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAEzCD,SAAS,CAAC,IAAM,CACd,GAAII,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEK,SAAS,CAAE,CAExBL,SAAS,CAACK,SAAS,CAAC,CAAC,CAACC,IAAI,CAAEC,YAAgB,EAAK,CAC/CG,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC,CACzB,GAAIA,YAAY,CAAE,CAChB;AACAH,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACJ,SAAS,CAAC,CAAC,CAAE;AAEjB,MAAO,CAAAG,KAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}