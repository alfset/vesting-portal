{"ast":null,"code":"import { useCallback, useEffect, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n// nftlist,\nnftlistinfo } from './actions';\nimport JSBI from 'jsbi';\n// import axios from 'axios'\nimport { useActiveWeb3React } from '../../hooks';\nimport { useMulticallContract } from '../../hooks/useContract';\n// import { useNFTContract, useNFT721Contract } from './useContract'\nimport ERC721_INTERFACE from '../../constants/abis/bridge/erc721';\nimport ERC1155_INTERFACE from '../../constants/abis/bridge/erc1155';\nimport { getNftlist, isSupportIndexedDB } from '../../utils/indexedDB';\nimport { getAllNftImage } from '../../utils/getNFTimage';\nimport useInterval from '../../hooks/useInterval';\nexport let ERC_TYPE = /*#__PURE__*/function (ERC_TYPE) {\n  ERC_TYPE[\"erc1155\"] = \"erc1155\";\n  ERC_TYPE[\"erc721\"] = \"erc721\";\n  return ERC_TYPE;\n}({});\nexport function useNftListState(chainId) {\n  const lists = useSelector(state => state.nft.nftlist);\n  // console.log(lists)\n  const updateNftlistTime = useSelector(state => state.nft.updateNftlistTime);\n  // console.log(updateTokenlistTime)\n  const [tokenlist, setTokenlist] = useState({});\n  const getCurTokenlist = useCallback(() => {\n    // console.log(chainId)\n    if (isSupportIndexedDB) {\n      getNftlist(chainId).then(res => {\n        // console.log(res)\n        if (res === null || res === void 0 ? void 0 : res.tokenList) {\n          setTokenlist(res.tokenList);\n        } else {\n          var _lists$chainId;\n          let current = (_lists$chainId = lists[chainId]) === null || _lists$chainId === void 0 ? void 0 : _lists$chainId.tokenList;\n          if (!current) current = {};\n          setTokenlist(current);\n        }\n      });\n    } else {\n      var _lists$chainId2;\n      let current = (_lists$chainId2 = lists[chainId]) === null || _lists$chainId2 === void 0 ? void 0 : _lists$chainId2.tokenList;\n      if (!current) current = {};\n      setTokenlist(current);\n    }\n  }, [chainId, updateNftlistTime]);\n  useEffect(() => {\n    getCurTokenlist();\n  }, [getCurTokenlist, chainId, updateNftlistTime]);\n  return tokenlist;\n}\nexport function useNftState() {\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const list = useSelector(state => state.nft.nftlist);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (!chainId || !account || !list[chainId] || !list[chainId][account]) return {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return list[chainId][account];\n}\nexport function useNftInfo() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const list = useSelector(state => state.nft.nftlistinfo);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (!chainId || !list[chainId] || !list[chainId] || !list[chainId].tokenList) return {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return list[chainId].tokenList;\n}\nexport function useNFT721GetAllTokenidListCallback(tokenList) {\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  // const { chainId, library } = useActiveWeb3React()\n  // const account = '0xcFA97Fb420fF5A0F8F5b5400a0fC5a94F3eaEc87'\n  const multicallContract = useMulticallContract();\n  const dispatch = useDispatch();\n  const tokenidInfo = useNftState();\n  const nftInfo = useNftInfo();\n  // console.log(nftInfo)\n  // const [tokenidList, setTokenidList] = useState<any>()\n  const [tokenidArr, setTokenidArr] = useState();\n  const [imageList, setImageList] = useState();\n\n  // const fragmentTURI:any = ERC721_INTERFACE?.getFunction('tokenURI')\n  const fragmentTURI = useMemo(() => ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.getFunction('tokenURI'), [ERC721_INTERFACE]);\n  const callsTURI = useMemo(() => {\n    const arr = [];\n    if (tokenidArr && ERC721_INTERFACE && tokenidArr.length > 0) {\n      for (let i = 0; i < tokenidArr.length; i++) {\n        var _nftInfo$tokenidArr$i, _nftInfo$tokenidArr$i2;\n        if (Boolean(nftInfo === null || nftInfo === void 0 ? void 0 : (_nftInfo$tokenidArr$i = nftInfo[tokenidArr[i].token]) === null || _nftInfo$tokenidArr$i === void 0 ? void 0 : (_nftInfo$tokenidArr$i2 = _nftInfo$tokenidArr$i[tokenidArr[i].tokenid]) === null || _nftInfo$tokenidArr$i2 === void 0 ? void 0 : _nftInfo$tokenidArr$i2.image)) continue;\n        arr.push({\n          address: tokenidArr[i].token,\n          callData: ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.encodeFunctionData(fragmentTURI, [tokenidArr[i].tokenid]),\n          tokenid: tokenidArr[i].tokenid\n        });\n      }\n    }\n    return arr;\n  }, [ERC721_INTERFACE, tokenidArr]);\n  useEffect(() => {\n    if (imageList) {\n      const arr = [];\n      const arr1 = [];\n      for (const obj of imageList) {\n        var _nftInfo$obj$token, _nftInfo$obj$token$ob;\n        if (Boolean(nftInfo === null || nftInfo === void 0 ? void 0 : (_nftInfo$obj$token = nftInfo[obj.token]) === null || _nftInfo$obj$token === void 0 ? void 0 : (_nftInfo$obj$token$ob = _nftInfo$obj$token[obj.tokenid]) === null || _nftInfo$obj$token$ob === void 0 ? void 0 : _nftInfo$obj$token$ob.image)) continue;\n        if (obj.uri) {\n          arr.push(obj.uri);\n          arr1.push(obj);\n        }\n      }\n      // console.log(arr)\n      if (arr.length > 0) {\n        getAllNftImage(arr).then(res => {\n          // console.log(res)\n          const list = {};\n          for (let i = 0; i < arr1.length; i++) {\n            const tokenid = arr1[i].tokenid;\n            const token = arr1[i].token;\n            if (!list[token]) list[token] = {};\n            list[token][tokenid] = {\n              ...(nftInfo[token] && nftInfo[token][tokenid] ? nftInfo[token][tokenid] : {}),\n              ...res[i]\n            };\n          }\n          dispatch(nftlistinfo({\n            chainId,\n            tokenList: list\n          }));\n        });\n      }\n    }\n  }, [imageList, chainId]);\n  useEffect(() => {\n    if (multicallContract && callsTURI.length > 0) {\n      multicallContract.aggregate(callsTURI.map(obj => [obj.address, obj.callData])).then(res => {\n        const arr = [];\n        const list = {};\n        for (let i = 0; i < callsTURI.length; i++) {\n          const obj = res.returnData[i];\n          const tokenid = callsTURI[i].tokenid;\n          const token = callsTURI[i].address;\n          const uri = ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.decodeFunctionResult(fragmentTURI, obj)[0];\n          arr.push({\n            uri: uri,\n            tokenid: tokenid,\n            token: token\n          });\n          if (!list[token]) list[token] = {};\n          list[token][tokenid] = {\n            ...(tokenidInfo[token] && tokenidInfo[token][tokenid] ? tokenidInfo[token][tokenid] : {}),\n            uri: uri\n          };\n        }\n        setImageList(arr);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [multicallContract, callsTURI]);\n\n  // useEffect(() => {\n  const getTokenIdByIndex = useCallback(tokenidList => {\n    if (multicallContract) {\n      const calls = [];\n      const fragment = ERC721_INTERFACE.getFunction('tokenOfOwnerByIndex');\n      for (const token in tokenidList) {\n        var _tokenidList$token;\n        const index = ((_tokenidList$token = tokenidList[token]) === null || _tokenidList$token === void 0 ? void 0 : _tokenidList$token.balance) ? Number(tokenidList[token].balance) : 0;\n        if (index > 0) {\n          for (let i = 0; i < index; i++) {\n            // console.log(i)\n            calls.push([token, ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.encodeFunctionData(fragment, [account, i])]);\n          }\n        }\n      }\n      multicallContract.aggregate(calls).then(res => {\n        const list = {};\n        const arr = [];\n        for (let i = 0, len = res.returnData.length; i < len; i++) {\n          const obj = res.returnData[i];\n          const tokenid = ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.decodeFunctionResult(fragment, obj)[0].toString();\n          const token = calls[i][0];\n          if (!list[token]) list[token] = {};\n          list[token][tokenid] = {\n            ...(tokenidInfo[token] && tokenidInfo[token][tokenid] ? tokenidInfo[token][tokenid] : {})\n          };\n          arr.push({\n            token: token,\n            tokenid: tokenid\n          });\n        }\n        // console.log(list)\n        setTokenidArr(arr);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [multicallContract, chainId, account]);\n  const getTokenidList = useCallback(() => {\n    if (multicallContract && account) {\n      const cList = [];\n      const callBLData = ERC721_INTERFACE.encodeFunctionData(ERC721_INTERFACE.getFunction('balanceOf'), [account]);\n      for (const tokenKey in tokenList) {\n        const obj = tokenList[tokenKey];\n        if (obj.nfttype === ERC_TYPE.erc1155) continue;\n        cList.push([obj.address, callBLData]);\n      }\n      multicallContract.aggregate(cList).then(res => {\n        const list = {};\n        for (let i = 0, len = res.returnData.length; i < len; i++) {\n          list[cList[i][0]] = {\n            balance: res.returnData[i] === '0x' ? '' : JSBI.BigInt(res.returnData[i]).toString()\n          };\n        }\n        console.log(list);\n        getTokenIdByIndex(list);\n      });\n    }\n  }, [multicallContract, account, chainId, tokenList]);\n\n  // useEffect(() => {\n  //   if (!library || !chainId) return undefined\n\n  //   library.on('block', getTokenidList)\n  //   return () => {\n  //     library.removeListener('block', getTokenidList)\n  //   }\n  // }, [account, chainId, library, getTokenidList, tokenList])\n\n  useEffect(() => {\n    getTokenidList();\n  }, [account, chainId]);\n  useInterval(getTokenidList, 1000 * 10);\n\n  // return tokenidInfo\n  return useMemo(() => {\n    const list = {};\n    if (tokenidArr) {\n      for (const obj of tokenidArr) {\n        list[obj.token] = {\n          ...(list[obj.token] ? list[obj.token] : {}),\n          [obj.tokenid]: {\n            ...(tokenidInfo[obj.token] && tokenidInfo[obj.token][obj.tokenid] ? tokenidInfo[obj.token][obj.tokenid] : {})\n          }\n        };\n      }\n    }\n    return list;\n  }, [tokenidArr, tokenidInfo, account]);\n}\nexport function useNFT1155GetAllTokenidListCallback(tokenlist) {\n  const {\n    chainId,\n    account,\n    library\n  } = useActiveWeb3React();\n  // const contract = useNFT1155Contract(selectCurrency)\n  const multicallContract = useMulticallContract();\n  const [tokenidInfo1155, setTokenidInfo1155] = useState();\n  // const dispatch = useDispatch<AppDispatch>()\n\n  const callBLData = useMemo(() => {\n    const arr = [];\n    if (ERC1155_INTERFACE && account && tokenlist) {\n      for (const tokenKey in tokenlist) {\n        const obj = tokenlist[tokenKey];\n        const token = obj.address;\n        if (obj.nfttype === ERC_TYPE.erc1155) {\n          const list = obj.tokenidList;\n          for (const tokenid in list) {\n            // console.log(tokenid)\n            arr.push({\n              address: token,\n              tokenid,\n              callData: ERC721_INTERFACE === null || ERC721_INTERFACE === void 0 ? void 0 : ERC721_INTERFACE.encodeFunctionData(ERC1155_INTERFACE.getFunction('balanceOf'), [account, tokenid])\n            });\n          }\n        }\n      }\n    }\n    return arr;\n  }, [ERC1155_INTERFACE, account, tokenlist]);\n  const getTokenidList = useCallback(() => {\n    if (multicallContract && callBLData && callBLData.length > 0) {\n      multicallContract.aggregate(callBLData.map(obj => [obj.address, obj.callData])).then(res => {\n        // console.log(res)\n        // for (const obj of res.returnData) {\n        const len = res.returnData.length;\n        const list = {};\n        for (let i = 0; i < len; i++) {\n          const obj = callBLData[i];\n          if (!list[obj.address]) list[obj.address] = {};\n          list[obj.address][obj.tokenid] = {\n            ...tokenlist[obj.address].tokenidList[obj.tokenid],\n            balance: JSBI.BigInt(res.returnData[i]).toString()\n          };\n        }\n        // console.log(list)\n        setTokenidInfo1155(list);\n      }).catch(err => {\n        console.log(err);\n        setTokenidInfo1155({});\n      });\n    }\n  }, [multicallContract, callBLData]);\n  useEffect(() => {\n    if (!library || !chainId) return undefined;\n    console.log(tokenlist);\n    // getTokenidList()\n    library.getBlockNumber().then(getTokenidList).catch(error => console.error(\"Failed to get block number for chainId: \".concat(chainId), error));\n    library.on('block', getTokenidList);\n    return () => {\n      library.removeListener('block', getTokenidList);\n    };\n  }, [library, getTokenidList]);\n  return tokenidInfo1155;\n}","map":{"version":3,"names":["useCallback","useEffect","useState","useMemo","useDispatch","useSelector","nftlistinfo","JSBI","useActiveWeb3React","useMulticallContract","ERC721_INTERFACE","ERC1155_INTERFACE","getNftlist","isSupportIndexedDB","getAllNftImage","useInterval","ERC_TYPE","useNftListState","chainId","lists","state","nft","nftlist","updateNftlistTime","tokenlist","setTokenlist","getCurTokenlist","then","res","tokenList","_lists$chainId","current","_lists$chainId2","useNftState","account","list","useNftInfo","useNFT721GetAllTokenidListCallback","multicallContract","dispatch","tokenidInfo","nftInfo","tokenidArr","setTokenidArr","imageList","setImageList","fragmentTURI","getFunction","callsTURI","arr","length","i","_nftInfo$tokenidArr$i","_nftInfo$tokenidArr$i2","Boolean","token","tokenid","image","push","address","callData","encodeFunctionData","arr1","obj","_nftInfo$obj$token","_nftInfo$obj$token$ob","uri","aggregate","map","returnData","decodeFunctionResult","catch","err","console","log","getTokenIdByIndex","tokenidList","calls","fragment","_tokenidList$token","index","balance","Number","len","toString","getTokenidList","cList","callBLData","tokenKey","nfttype","erc1155","BigInt","useNFT1155GetAllTokenidListCallback","library","tokenidInfo1155","setTokenidInfo1155","undefined","getBlockNumber","error","concat","on","removeListener"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/nft/hooks.ts"],"sourcesContent":["import { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  // nftlist,\n  nftlistinfo\n} from './actions'\n\nimport JSBI from 'jsbi'\n// import axios from 'axios'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useMulticallContract } from '../../hooks/useContract'\n// import { useNFTContract, useNFT721Contract } from './useContract'\nimport ERC721_INTERFACE from '../../constants/abis/bridge/erc721'\nimport ERC1155_INTERFACE from '../../constants/abis/bridge/erc1155'\nimport {getNftlist, isSupportIndexedDB} from '../../utils/indexedDB'\nimport {getAllNftImage} from '../../utils/getNFTimage'\nimport useInterval from '../../hooks/useInterval'\n\nexport enum ERC_TYPE {\n  erc1155 = 'erc1155',\n  erc721 = 'erc721'\n}\n\nexport function useNftListState(chainId?:any): any {\n  const lists:any = useSelector<AppState, AppState['nft']>(state => state.nft.nftlist)\n  // console.log(lists)\n  const updateNftlistTime:any = useSelector<AppState, AppState['nft']>(state => state.nft.updateNftlistTime)\n  // console.log(updateTokenlistTime)\n  const [tokenlist, setTokenlist] = useState<any>({})\n  const getCurTokenlist = useCallback(() => {\n    // console.log(chainId)\n    if (isSupportIndexedDB) {\n      getNftlist(chainId).then((res:any) => {\n        // console.log(res)\n        if (res?.tokenList) {\n          setTokenlist(res.tokenList)\n        } else {\n          let current = lists[chainId]?.tokenList\n          if (!current) current = {}\n          setTokenlist(current)\n        }\n      })\n    } else {\n      let current = lists[chainId]?.tokenList\n      if (!current) current = {}\n      setTokenlist(current)\n    }\n  }, [chainId, updateNftlistTime])\n\n  useEffect(() => {\n    getCurTokenlist()\n  }, [getCurTokenlist, chainId, updateNftlistTime])\n\n  return tokenlist\n}\n\nexport function useNftState(): any {\n  const { chainId, account } = useActiveWeb3React()\n  const list:any = useSelector<AppState, AppState['nft']>(state => state.nft.nftlist)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (!chainId || !account || !list[chainId] || !list[chainId][account]) return {}\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return list[chainId][account]\n}\nexport function useNftInfo(): any {\n  const { chainId } = useActiveWeb3React()\n  const list:any = useSelector<AppState, AppState['nft']>(state => state.nft.nftlistinfo)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (!chainId || !list[chainId] || !list[chainId] || !list[chainId].tokenList) return {}\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return list[chainId].tokenList\n}\n\nexport function useNFT721GetAllTokenidListCallback(\n  tokenList: any\n) {\n  const { chainId, account } = useActiveWeb3React()\n  // const { chainId, library } = useActiveWeb3React()\n  // const account = '0xcFA97Fb420fF5A0F8F5b5400a0fC5a94F3eaEc87'\n  const multicallContract = useMulticallContract()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const tokenidInfo:any = useNftState()\n  const nftInfo = useNftInfo()\n  // console.log(nftInfo)\n  // const [tokenidList, setTokenidList] = useState<any>()\n  const [tokenidArr, setTokenidArr] = useState<any>()\n  const [imageList, setImageList] = useState<any>()\n\n  // const fragmentTURI:any = ERC721_INTERFACE?.getFunction('tokenURI')\n  const fragmentTURI:any = useMemo(() => ERC721_INTERFACE?.getFunction('tokenURI'), [ERC721_INTERFACE])\n  const callsTURI = useMemo(\n    () => {\n      const arr:any = []\n      if (tokenidArr && ERC721_INTERFACE && tokenidArr.length > 0) {\n        for (let i = 0; i < tokenidArr.length; i++) {\n          if (Boolean(nftInfo?.[tokenidArr[i].token]?.[tokenidArr[i].tokenid]?.image)) continue\n          arr.push({\n            address: tokenidArr[i].token,\n            callData: ERC721_INTERFACE?.encodeFunctionData(fragmentTURI, [tokenidArr[i].tokenid]),\n            tokenid: tokenidArr[i].tokenid\n          })\n        }\n      }\n      return arr\n    },\n    [ERC721_INTERFACE, tokenidArr]\n  )\n  useEffect(() => {\n    if (imageList) {\n      const arr:any = []\n      const arr1:any = []\n      for (const obj of imageList) {\n        if (Boolean(nftInfo?.[obj.token]?.[obj.tokenid]?.image)) continue\n        if (\n          obj.uri\n        ) {\n          arr.push(obj.uri)\n          arr1.push(obj)\n        }\n      }\n      // console.log(arr)\n      if (arr.length > 0) {\n        getAllNftImage(arr).then((res:any) => {\n          // console.log(res)\n          const list:any = {}\n          for (let i = 0; i < arr1.length; i++) {\n            const tokenid = arr1[i].tokenid\n            const token = arr1[i].token\n            if (!list[token]) list[token] = {}\n            list[token][tokenid] = {\n              ...(nftInfo[token] && nftInfo[token][tokenid] ? nftInfo[token][tokenid] : {}),\n              ...res[i]\n            }\n          }\n          dispatch(nftlistinfo({ chainId, tokenList: list }))\n        })\n      }\n    }\n  }, [imageList, chainId])\n\n  useEffect(() => {\n    if (multicallContract && callsTURI.length > 0) {\n      multicallContract.aggregate(callsTURI.map((obj:any) => [obj.address, obj.callData])).then((res:any) => {\n        const arr = []\n        const list:any = {}\n        for (let i = 0; i < callsTURI.length; i++) {\n          const obj = res.returnData[i]\n          const tokenid = callsTURI[i].tokenid\n          const token = callsTURI[i].address\n          const uri = ERC721_INTERFACE?.decodeFunctionResult(fragmentTURI, obj)[0]\n          arr.push({uri: uri, tokenid: tokenid, token: token})\n          if (!list[token]) list[token] = {}\n          list[token][tokenid] = {\n            ...(tokenidInfo[token] && tokenidInfo[token][tokenid] ? tokenidInfo[token][tokenid] : {}),\n            uri: uri\n          }\n        }\n        setImageList(arr)\n      }).catch((err:any) => {\n        console.log(err)\n      })\n    }\n  }, [multicallContract, callsTURI])\n\n  // useEffect(() => {\n  const getTokenIdByIndex = useCallback((tokenidList) => {\n    if (multicallContract) {\n      const calls:any = []\n      const fragment = ERC721_INTERFACE.getFunction('tokenOfOwnerByIndex')\n      for (const token in tokenidList) {\n        const index = tokenidList[token]?.balance ? Number(tokenidList[token].balance) : 0\n        if (index > 0) {\n          for (let i = 0; i < index; i++) {\n            // console.log(i)\n            calls.push([token, ERC721_INTERFACE?.encodeFunctionData(fragment, [account, i])])\n          }\n        }\n      }\n      multicallContract.aggregate(calls).then((res:any) => {\n        const list:any = {}\n        const arr:any = []\n        for (let i =0, len = res.returnData.length; i < len; i++) {\n          const obj = res.returnData[i]\n          const tokenid = ERC721_INTERFACE?.decodeFunctionResult(fragment, obj)[0].toString()\n          const token = calls[i][0]\n          if (!list[token]) list[token] = {}\n          list[token][tokenid] = {\n            ...(tokenidInfo[token] && tokenidInfo[token][tokenid] ? tokenidInfo[token][tokenid] : {})\n          }\n          arr.push({\n            token: token,\n            tokenid: tokenid\n          })\n        }\n        // console.log(list)\n        setTokenidArr(arr)\n      }).catch((err:any) => {\n        console.log(err)\n      })\n    }\n  }, [multicallContract, chainId, account])\n\n  const getTokenidList = useCallback(() => {\n    if (multicallContract && account) {\n      const cList:any = []\n      const callBLData = ERC721_INTERFACE.encodeFunctionData(ERC721_INTERFACE.getFunction('balanceOf'), [account])\n      for (const tokenKey in tokenList) {\n        const obj = tokenList[tokenKey]\n        if (obj.nfttype === ERC_TYPE.erc1155) continue\n        cList.push([obj.address, callBLData])\n      }\n      multicallContract.aggregate(cList).then((res:any) => {\n        const list:any = {}\n        for (let i = 0, len = res.returnData.length; i < len; i++) {\n          list[cList[i][0]] = {balance: res.returnData[i] === '0x' ? '' : JSBI.BigInt(res.returnData[i]).toString()}\n        }\n        console.log(list)\n        getTokenIdByIndex(list)\n      })\n    }\n  }, [multicallContract, account, chainId, tokenList])\n\n  // useEffect(() => {\n  //   if (!library || !chainId) return undefined\n\n  //   library.on('block', getTokenidList)\n  //   return () => {\n  //     library.removeListener('block', getTokenidList)\n  //   }\n  // }, [account, chainId, library, getTokenidList, tokenList])\n\n  useEffect(() => {\n    getTokenidList()\n  }, [account, chainId])\n\n  useInterval(getTokenidList, 1000 * 10)\n\n  // return tokenidInfo\n  return useMemo(() => {\n    const list:any = {}\n    if (tokenidArr) {\n      for (const obj of tokenidArr) {\n        list[obj.token] = {\n          ...(list[obj.token] ? list[obj.token] : {}),\n          [obj.tokenid]: {\n            ...(tokenidInfo[obj.token] && tokenidInfo[obj.token][obj.tokenid] ? tokenidInfo[obj.token][obj.tokenid] : {})\n          }\n        }\n      }\n    }\n    return list\n  }, [tokenidArr, tokenidInfo, account])\n}\n\nexport function useNFT1155GetAllTokenidListCallback(\n  tokenlist: any\n) {\n  const { chainId, account, library } = useActiveWeb3React()\n  // const contract = useNFT1155Contract(selectCurrency)\n  const multicallContract = useMulticallContract()\n  const [tokenidInfo1155, setTokenidInfo1155] = useState<any>()\n  // const dispatch = useDispatch<AppDispatch>()\n\n  const callBLData: any = useMemo( () => {\n    const arr:any = []\n    if (ERC1155_INTERFACE && account && tokenlist) {\n      for (const tokenKey in tokenlist) {\n        const obj = tokenlist[tokenKey]\n        const token = obj.address\n        if (obj.nfttype === ERC_TYPE.erc1155) {\n          const list = obj.tokenidList\n          for (const tokenid in list) {\n            // console.log(tokenid)\n            arr.push({\n              address: token,\n              tokenid,\n              callData: ERC721_INTERFACE?.encodeFunctionData(ERC1155_INTERFACE.getFunction('balanceOf'), [account, tokenid])\n            })\n          }\n        }\n      }\n    }\n    return arr\n  }, [ERC1155_INTERFACE, account, tokenlist])\n\n  const getTokenidList = useCallback(() => {\n    if (multicallContract && callBLData && callBLData.length > 0) {\n      multicallContract.aggregate(callBLData.map((obj:any) => [obj.address, obj.callData])).then((res:any) => {\n        // console.log(res)\n        // for (const obj of res.returnData) {\n        const len = res.returnData.length\n        const list:any = {}\n        for (let i = 0; i < len; i++) {\n          const obj = callBLData[i]\n          if (!list[obj.address]) list[obj.address] = {}\n          list[obj.address][obj.tokenid] = {\n            ...tokenlist[obj.address].tokenidList[obj.tokenid],\n            balance: JSBI.BigInt(res.returnData[i]).toString()\n          }\n        }\n        // console.log(list)\n        setTokenidInfo1155(list)\n      }).catch((err:any) => {\n        console.log(err)\n        setTokenidInfo1155({})\n      })\n    }\n  }, [multicallContract, callBLData])\n\n  useEffect(() => {\n    if (!library || !chainId) return undefined\n    console.log(tokenlist)\n    // getTokenidList()\n    library\n      .getBlockNumber()\n      .then(getTokenidList)\n      .catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n    \n    library.on('block', getTokenidList)\n    return () => {\n      library.removeListener('block', getTokenidList)\n    }\n  }, [library, getTokenidList])\n\n  return tokenidInfo1155\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}