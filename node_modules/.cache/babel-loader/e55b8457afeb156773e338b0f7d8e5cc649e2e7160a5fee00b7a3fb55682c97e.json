{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst connection_1 = require(\"./connection\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseQueryConnectionRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionResponse() {\n  return {\n    connection: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connection !== undefined) {\n      connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connection: isSet(object.connection) ? connection_1.ConnectionEnd.fromJSON(object.connection) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionResponse();\n    message.connection = object.connection !== undefined && object.connection !== null ? connection_1.ConnectionEnd.fromPartial(object.connection) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryConnectionsRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      pagination: isSet(object.pagination) ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionsRequest();\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsResponse() {\n  return {\n    connections: [],\n    pagination: undefined,\n    height: undefined\n  };\n}\nexports.QueryConnectionsResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.connections) {\n      connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connections: Array.isArray(object === null || object === void 0 ? void 0 : object.connections) ? object.connections.map(e => connection_1.IdentifiedConnection.fromJSON(e)) : [],\n      pagination: isSet(object.pagination) ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined,\n      height: isSet(object.height) ? client_1.Height.fromJSON(object.height) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connections) {\n      obj.connections = message.connections.map(e => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n    } else {\n      obj.connections = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionsResponse();\n    message.connections = ((_a = object.connections) === null || _a === void 0 ? void 0 : _a.map(e => connection_1.IdentifiedConnection.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? client_1.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nexports.QueryClientConnectionsRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryClientConnectionsRequest();\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsResponse() {\n  return {\n    connectionPaths: [],\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryClientConnectionsResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.connectionPaths) {\n      writer.uint32(10).string(v);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionPaths: Array.isArray(object === null || object === void 0 ? void 0 : object.connectionPaths) ? object.connectionPaths.map(e => String(e)) : [],\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connectionPaths) {\n      obj.connectionPaths = message.connectionPaths.map(e => e);\n    } else {\n      obj.connectionPaths = [];\n    }\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseQueryClientConnectionsResponse();\n    message.connectionPaths = ((_a = object.connectionPaths) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionClientStateRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionClientStateRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateResponse() {\n  return {\n    identifiedClientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionClientStateResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      identifiedClientState: isSet(object.identifiedClientState) ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : undefined,\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionClientStateResponse();\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateRequest() {\n  return {\n    connectionId: \"\",\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO\n  };\n}\nexports.QueryConnectionConsensusStateRequest = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      connectionId: isSet(object.connectionId) ? String(object.connectionId) : \"\",\n      revisionNumber: isSet(object.revisionNumber) ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO,\n      revisionHeight: isSet(object.revisionHeight) ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: undefined\n  };\n}\nexports.QueryConnectionConsensusStateResponse = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      consensusState: isSet(object.consensusState) ? any_1.Any.fromJSON(object.consensusState) : undefined,\n      clientId: isSet(object.clientId) ? String(object.clientId) : \"\",\n      proof: isSet(object.proof) ? bytesFromBase64(object.proof) : new Uint8Array(),\n      proofHeight: isSet(object.proofHeight) ? client_1.Height.fromJSON(object.proofHeight) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Connection = this.Connection.bind(this);\n    this.Connections = this.Connections.bind(this);\n    this.ClientConnections = this.ClientConnections.bind(this);\n    this.ConnectionClientState = this.ConnectionClientState.bind(this);\n    this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);\n  }\n  Connection(request) {\n    const data = exports.QueryConnectionRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connection\", data);\n    return promise.then(data => exports.QueryConnectionResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  Connections(request) {\n    const data = exports.QueryConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connections\", data);\n    return promise.then(data => exports.QueryConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ClientConnections(request) {\n    const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ClientConnections\", data);\n    return promise.then(data => exports.QueryClientConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionClientState(request) {\n    const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionClientState\", data);\n    return promise.then(data => exports.QueryConnectionClientStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionConsensusState(request) {\n    const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionConsensusState\", data);\n    return promise.then(data => exports.QueryConnectionConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","pagination_1","any_1","client_1","connection_1","exports","protobufPackage","createBaseQueryConnectionRequest","connectionId","QueryConnectionRequest","encode","message","writer","arguments","length","undefined","default","Writer","create","uint32","string","decode","input","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","String","toJSON","obj","fromPartial","_a","createBaseQueryConnectionResponse","connection","proof","Uint8Array","proofHeight","QueryConnectionResponse","ConnectionEnd","fork","ldelim","bytes","Height","bytesFromBase64","base64FromBytes","createBaseQueryConnectionsRequest","pagination","QueryConnectionsRequest","PageRequest","createBaseQueryConnectionsResponse","connections","height","QueryConnectionsResponse","v","IdentifiedConnection","PageResponse","push","Array","isArray","map","e","createBaseQueryClientConnectionsRequest","clientId","QueryClientConnectionsRequest","createBaseQueryClientConnectionsResponse","connectionPaths","QueryClientConnectionsResponse","_b","createBaseQueryConnectionClientStateRequest","QueryConnectionClientStateRequest","createBaseQueryConnectionClientStateResponse","identifiedClientState","QueryConnectionClientStateResponse","IdentifiedClientState","createBaseQueryConnectionConsensusStateRequest","revisionNumber","UZERO","revisionHeight","QueryConnectionConsensusStateRequest","isZero","uint64","fromValue","toString","createBaseQueryConnectionConsensusStateResponse","consensusState","QueryConnectionConsensusStateResponse","Any","QueryClientImpl","constructor","rpc","Connection","bind","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","request","data","finish","promise","then","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/ibc/core/connection/v1/query.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}