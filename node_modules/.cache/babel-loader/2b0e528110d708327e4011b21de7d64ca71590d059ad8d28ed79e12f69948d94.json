{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxLog = exports.EventsByType = exports.TxInfo = void 0;\nvar Tx_1 = require(\"./Tx\");\nvar abci_1 = require(\"@terra-money/terra.proto/cosmos/base/abci/v1beta1/abci\");\n/**\n * A TxInfo data structure is used to capture information from a transaction lookup for\n * a transaction already included in a block\n */\nvar TxInfo = /** @class */function () {\n  /**\n   *\n   * @param height height of the block in which the transaction was included.\n   * @param txhash transaction's hash.\n   * @param raw_log raw log information, as a string.\n   * @param logs log information\n   * @param gas_wanted gas limited submitted in fee\n   * @param gas_used actual gas consumption\n   * @param tx transaction content\n   * @param timestamp time of inclusion\n   * @param code error code\n   */\n  function TxInfo(height, txhash, raw_log, logs, gas_wanted, gas_used, tx, timestamp, code, codespace) {\n    this.height = height;\n    this.txhash = txhash;\n    this.raw_log = raw_log;\n    this.logs = logs;\n    this.gas_wanted = gas_wanted;\n    this.gas_used = gas_used;\n    this.tx = tx;\n    this.timestamp = timestamp;\n    this.code = code;\n    this.codespace = codespace;\n  }\n  TxInfo.fromProto = function (proto) {\n    return new TxInfo(proto.height.toNumber(), proto.txhash, proto.rawLog, proto.logs.map(function (log) {\n      return TxLog.fromProto(log);\n    }), proto.gasWanted.toNumber(), proto.gasUsed.toNumber(), Tx_1.Tx.unpackAny(proto.tx), proto.timestamp, proto.code, proto.codespace);\n  };\n  TxInfo.fromData = function (data, isClassic) {\n    return new TxInfo(Number.parseInt(data.height), data.txhash, data.raw_log, data.logs.map(function (log) {\n      return TxLog.fromData(log);\n    }), Number.parseInt(data.gas_wanted), Number.parseInt(data.gas_used), Tx_1.Tx.fromData(data.tx, isClassic), data.timestamp, data.code, data.codespace);\n  };\n  return TxInfo;\n}();\nexports.TxInfo = TxInfo;\nvar EventsByType;\n(function (EventsByType) {\n  function parse(eventAmino) {\n    var events = {};\n    eventAmino.forEach(function (ev) {\n      ev.attributes.forEach(function (attr) {\n        if (!(ev.type in events)) {\n          events[ev.type] = {};\n        }\n        if (!(attr.key in events[ev.type])) {\n          events[ev.type][attr.key] = [];\n        }\n        events[ev.type][attr.key].push(attr.value);\n      });\n    });\n    return events;\n  }\n  EventsByType.parse = parse;\n})(EventsByType = exports.EventsByType || (exports.EventsByType = {}));\nvar TxLog = /** @class */function () {\n  function TxLog(msg_index, log, events) {\n    this.msg_index = msg_index;\n    this.log = log;\n    this.events = events;\n    this.eventsByType = EventsByType.parse(this.events);\n  }\n  TxLog.fromData = function (data) {\n    return new TxLog(data.msg_index, data.log, data.events.map(function (e) {\n      return {\n        type: e.type,\n        attributes: e.attributes.map(function (attr) {\n          return {\n            key: attr.key,\n            value: attr.value\n          };\n        })\n      };\n    }));\n  };\n  TxLog.prototype.toData = function () {\n    var _a = this,\n      msg_index = _a.msg_index,\n      log = _a.log,\n      events = _a.events;\n    return {\n      msg_index: msg_index,\n      log: log,\n      events: events\n    };\n  };\n  TxLog.fromProto = function (proto) {\n    return new TxLog(proto.msgIndex, proto.log, proto.events.map(function (e) {\n      return {\n        type: e.type,\n        attributes: e.attributes.map(function (attr) {\n          return {\n            key: attr.key,\n            value: attr.value\n          };\n        })\n      };\n    }));\n  };\n  TxLog.prototype.toProto = function () {\n    var _a = this,\n      msg_index = _a.msg_index,\n      log = _a.log,\n      events = _a.events;\n    return abci_1.ABCIMessageLog.fromPartial({\n      msgIndex: msg_index,\n      log: log,\n      events: events\n    });\n  };\n  return TxLog;\n}();\nexports.TxLog = TxLog;","map":{"version":3,"names":["Tx_1","require","abci_1","TxInfo","height","txhash","raw_log","logs","gas_wanted","gas_used","tx","timestamp","code","codespace","fromProto","proto","toNumber","rawLog","map","log","TxLog","gasWanted","gasUsed","Tx","unpackAny","fromData","data","isClassic","Number","parseInt","exports","EventsByType","parse","eventAmino","events","forEach","ev","attributes","attr","type","key","push","value","msg_index","eventsByType","e","prototype","toData","_a","msgIndex","toProto","ABCIMessageLog","fromPartial"],"sources":["../../src/core/TxInfo.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}