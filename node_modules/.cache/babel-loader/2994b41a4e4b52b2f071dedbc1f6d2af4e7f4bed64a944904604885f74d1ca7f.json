{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst parser_1 = require('../parser');\nfunction combine(psbts) {\n  const self = psbts[0];\n  const selfKeyVals = parser_1.psbtToKeyVals(self);\n  const others = psbts.slice(1);\n  if (others.length === 0) throw new Error('Combine: Nothing to combine');\n  const selfTx = getTx(self);\n  if (selfTx === undefined) {\n    throw new Error('Combine: Self missing transaction');\n  }\n  const selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n  const selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n  const selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n  for (const other of others) {\n    const otherTx = getTx(other);\n    if (otherTx === undefined || !otherTx.toBuffer().equals(selfTx.toBuffer())) {\n      throw new Error('Combine: One of the Psbts does not have the same transaction.');\n    }\n    const otherKeyVals = parser_1.psbtToKeyVals(other);\n    const otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n    otherGlobalSet.forEach(keyPusher(selfGlobalSet, selfKeyVals.globalKeyVals, otherKeyVals.globalKeyVals));\n    const otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n    otherInputSets.forEach((inputSet, idx) => inputSet.forEach(keyPusher(selfInputSets[idx], selfKeyVals.inputKeyVals[idx], otherKeyVals.inputKeyVals[idx])));\n    const otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n    otherOutputSets.forEach((outputSet, idx) => outputSet.forEach(keyPusher(selfOutputSets[idx], selfKeyVals.outputKeyVals[idx], otherKeyVals.outputKeyVals[idx])));\n  }\n  return parser_1.psbtFromKeyVals(selfTx, {\n    globalMapKeyVals: selfKeyVals.globalKeyVals,\n    inputKeyVals: selfKeyVals.inputKeyVals,\n    outputKeyVals: selfKeyVals.outputKeyVals\n  });\n}\nexports.combine = combine;\nfunction keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n  return key => {\n    if (selfSet.has(key)) return;\n    const newKv = otherKeyVals.filter(kv => kv.key.toString('hex') === key)[0];\n    selfKeyVals.push(newKv);\n    selfSet.add(key);\n  };\n}\nfunction getTx(psbt) {\n  return psbt.globalMap.unsignedTx;\n}\nfunction getKeySet(keyVals) {\n  const set = new Set();\n  keyVals.forEach(keyVal => {\n    const hex = keyVal.key.toString('hex');\n    if (set.has(hex)) throw new Error('Combine: KeyValue Map keys should be unique');\n    set.add(hex);\n  });\n  return set;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","parser_1","require","combine","psbts","self","selfKeyVals","psbtToKeyVals","others","slice","length","Error","selfTx","getTx","undefined","selfGlobalSet","getKeySet","globalKeyVals","selfInputSets","inputKeyVals","map","selfOutputSets","outputKeyVals","other","otherTx","toBuffer","equals","otherKeyVals","otherGlobalSet","forEach","keyPusher","otherInputSets","inputSet","idx","otherOutputSets","outputSet","psbtFromKeyVals","globalMapKeyVals","selfSet","key","has","newKv","filter","kv","toString","push","add","psbt","globalMap","unsignedTx","keyVals","set","Set","keyVal","hex"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/combiner/index.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst parser_1 = require('../parser');\nfunction combine(psbts) {\n  const self = psbts[0];\n  const selfKeyVals = parser_1.psbtToKeyVals(self);\n  const others = psbts.slice(1);\n  if (others.length === 0) throw new Error('Combine: Nothing to combine');\n  const selfTx = getTx(self);\n  if (selfTx === undefined) {\n    throw new Error('Combine: Self missing transaction');\n  }\n  const selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n  const selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n  const selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n  for (const other of others) {\n    const otherTx = getTx(other);\n    if (\n      otherTx === undefined ||\n      !otherTx.toBuffer().equals(selfTx.toBuffer())\n    ) {\n      throw new Error(\n        'Combine: One of the Psbts does not have the same transaction.',\n      );\n    }\n    const otherKeyVals = parser_1.psbtToKeyVals(other);\n    const otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n    otherGlobalSet.forEach(\n      keyPusher(\n        selfGlobalSet,\n        selfKeyVals.globalKeyVals,\n        otherKeyVals.globalKeyVals,\n      ),\n    );\n    const otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n    otherInputSets.forEach((inputSet, idx) =>\n      inputSet.forEach(\n        keyPusher(\n          selfInputSets[idx],\n          selfKeyVals.inputKeyVals[idx],\n          otherKeyVals.inputKeyVals[idx],\n        ),\n      ),\n    );\n    const otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n    otherOutputSets.forEach((outputSet, idx) =>\n      outputSet.forEach(\n        keyPusher(\n          selfOutputSets[idx],\n          selfKeyVals.outputKeyVals[idx],\n          otherKeyVals.outputKeyVals[idx],\n        ),\n      ),\n    );\n  }\n  return parser_1.psbtFromKeyVals(selfTx, {\n    globalMapKeyVals: selfKeyVals.globalKeyVals,\n    inputKeyVals: selfKeyVals.inputKeyVals,\n    outputKeyVals: selfKeyVals.outputKeyVals,\n  });\n}\nexports.combine = combine;\nfunction keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n  return key => {\n    if (selfSet.has(key)) return;\n    const newKv = otherKeyVals.filter(kv => kv.key.toString('hex') === key)[0];\n    selfKeyVals.push(newKv);\n    selfSet.add(key);\n  };\n}\nfunction getTx(psbt) {\n  return psbt.globalMap.unsignedTx;\n}\nfunction getKeySet(keyVals) {\n  const set = new Set();\n  keyVals.forEach(keyVal => {\n    const hex = keyVal.key.toString('hex');\n    if (set.has(hex))\n      throw new Error('Combine: KeyValue Map keys should be unique');\n    set.add(hex);\n  });\n  return set;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}