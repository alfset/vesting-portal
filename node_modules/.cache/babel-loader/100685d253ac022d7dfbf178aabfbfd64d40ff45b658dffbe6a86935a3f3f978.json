{"ast":null,"code":"export let VERSION = /*#__PURE__*/function (VERSION) {\n  VERSION[\"V1\"] = \"UNDERLYING\";\n  VERSION[\"V1_1\"] = \"UNDERLYINGV2\";\n  VERSION[\"V2\"] = \"STABLE\";\n  VERSION[\"V2_1\"] = \"STABLEV2\";\n  VERSION[\"V2_2\"] = \"STABLEV3\";\n  VERSION[\"V2_T1\"] = \"STABLE_TEST\";\n  VERSION[\"V2_T2\"] = \"TEST\";\n  VERSION[\"V2_T3\"] = \"TESTV2\";\n  VERSION[\"V3\"] = \"ARB_DEV\";\n  VERSION[\"V3_1\"] = \"ARB\";\n  VERSION[\"V4\"] = \"BRIDGE\";\n  VERSION[\"V4_OKT\"] = \"BRIDGE_OKT\";\n  VERSION[\"V4_MOVR\"] = \"BRIDGE_MOVR\";\n  VERSION[\"V5\"] = \"ALL\";\n  VERSION[\"V6\"] = \"NFT_TEST\";\n  VERSION[\"V6_1\"] = \"NFT\";\n  VERSION[\"V7\"] = \"SOURCE_CHAIN\";\n  VERSION[\"V7_TEST\"] = \"SOURCE_CHAIN_TEST\";\n  VERSION[\"V7_BAS_TEST\"] = \"SOURCE_CHAIN_BAS_TEST\";\n  return VERSION;\n}({});\nexport let CHAIN_TYPE = /*#__PURE__*/function (CHAIN_TYPE) {\n  CHAIN_TYPE[\"HOT\"] = \"HOT\";\n  CHAIN_TYPE[\"COMMON\"] = \"COMMON\";\n  return CHAIN_TYPE;\n}({});\n\n// export const INIT_VERSION = VERSION.V1_1\n// export const INIT_VERSION = VERSION.V3_1\n// export const INIT_VERSION = VERSION.V2_2\n// export const INIT_VERSION = VERSION.V4_OKT\n// const INIT_VERSION = VERSION.V4_MOVR\n// export const INIT_VERSION = VERSION.V5\n// export const INIT_VERSION = VERSION.V6\n// export const INIT_VERSION = VERSION.V6_1\nexport const INIT_VERSION = VERSION.V7;\n// export const INIT_VERSION = VERSION.V7_TEST\n// export const INIT_VERSION = VERSION.V7_BAS_TEST\n\nfunction getUrlVersion(init) {\n  const url = window.location.href;\n  let version;\n  if (url.indexOf('https://app.deltaswap.io') === 0) {\n    version = VERSION.V7;\n  } else {\n    version = init;\n  }\n  return version;\n}\nexport const USE_VERSION = getUrlVersion(INIT_VERSION);\n\n// export const MAIN_COIN = ['USDC', 'ETH', 'ETHK', 'DAI', 'WBTC', 'USDT', 'MIM', 'BTC', 'BTCB', 'USDC.e', 'WBTC.e', 'WETH', 'fUSDT', 'USDD_t', 'MAI']\nexport const MAIN_COIN_SORT = {\n  'ETH': {\n    sort: 1\n  },\n  'ETHK': {\n    sort: 1\n  },\n  'WETH': {\n    sort: 2\n  },\n  'BTC': {\n    sort: 3\n  },\n  'WBTC': {\n    sort: 3\n  },\n  'WBTC.e': {\n    sort: 3\n  },\n  'BTCB': {\n    sort: 3\n  },\n  'USDC': {\n    sort: 4\n  },\n  'USDC.e': {\n    sort: 4\n  },\n  'USDT': {\n    sort: 5\n  },\n  'USDt': {\n    sort: 5\n  },\n  'fUSDT': {\n    sort: 5\n  },\n  'DAI': {\n    sort: 6\n  },\n  'MIM': {\n    sort: 7\n  },\n  'MAI': {\n    sort: 8\n  },\n  'BUSD': {\n    sort: 9\n  }\n};\nexport const bridgeApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://bridgeapi.deltaswap.io';\nexport const scanApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://scanapi.deltaswap.io';\nexport const multiAridgeApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://bridgeapi.deltaswap.io';\nexport const explorer = 'https://evm.planq.network';\nexport let BRIDGE_KEY = /*#__PURE__*/function (BRIDGE_KEY) {\n  BRIDGE_KEY[\"routerTokenList\"] = \"routerTokenList\";\n  BRIDGE_KEY[\"bridgeTokenList\"] = \"bridgeTokenList\";\n  BRIDGE_KEY[\"mergeTokenList\"] = \"mergeTokenList\";\n  return BRIDGE_KEY;\n}({});\n\n// export const CROSS_BRIDGE_LIST = [BRIDGE_KEY.bridgeTokenList, BRIDGE_KEY.mergeTokenList]\nexport const CROSS_BRIDGE_LIST = [BRIDGE_KEY.bridgeTokenList];\nexport const env = 'pro';\n// export const env:any = 'dev'\n\nexport const version = '0.4.2';\nexport const timeout = 1000 * 60 * 30;\nexport const VALID_BALANCE = true;\n// export const VALID_BALANCE = false\n// export const timeout = 1000 * 60\n\nfunction formatHiddenCoin(list) {\n  const arr = [];\n  if (list && list.length > 0) {\n    for (let str of list) {\n      arr.push(str);\n      if (str.indexOf('any') !== 0) str = 'any' + str;\n      arr.push(str);\n    }\n  }\n  // console.log(arr)\n  return arr;\n}\nexport const controlConfig = {\n  [VERSION.V1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V1_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 1,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: env === 'dev' ? 1 : 0\n  },\n  [VERSION.V2]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_2]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: env === 'dev' ? '56' : '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: env === 'dev' ? 1 : 0\n  },\n  [VERSION.V2_T1]: {\n    bridgeInitDataChain: '256',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '97',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_T2]: {\n    bridgeInitDataChain: '4',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '97',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_T3]: {\n    bridgeInitDataChain: '4',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '4',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V3]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V3_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V4]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V4_OKT]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: [],\n    hiddenChain: [],\n    showCoin: [],\n    showChain: ['56', '66'],\n    initNode: '56',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V4_MOVR]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: [],\n    hiddenChain: [],\n    showCoin: [],\n    showChain: ['1', '56', '1285'],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V5]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V6]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0,\n    isOpenNFT: 1\n  },\n  [VERSION.V6_1]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0,\n    isOpenNFT: 1\n  },\n  [VERSION.V7]: {\n    bridgeInitDataChain: '7070',\n    // hiddenCoin: formatHiddenCoin(['0x05ec81610ab47a094502bac0d7ec256f06a1c6f8', '0x2d1c6a7362e75d88b4cf3b66b83052775846e2b8']),\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1,\n    isOpenNFT: 1,\n    isOpenGasSwap: 0\n  },\n  [VERSION.V7_TEST]: {\n    bridgeInitDataChain: '97',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1,\n    isOpenNFT: 1,\n    isOpenGasSwap: 1\n  },\n  [VERSION.V7_BAS_TEST]: {\n    bridgeInitDataChain: '97',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1\n  }\n};\nexport const ENV_NODE_CONFIG = USE_VERSION + '_ENV_NODE_CONFIG';\nexport const INIT_NODE = controlConfig[USE_VERSION].initNode;\nexport const BASECURRENCY = 'BASECURRENCY';","map":{"version":3,"names":["VERSION","CHAIN_TYPE","INIT_VERSION","V7","getUrlVersion","init","url","window","location","href","version","indexOf","USE_VERSION","MAIN_COIN_SORT","sort","bridgeApi","V7_TEST","V7_BAS_TEST","scanApi","multiAridgeApi","explorer","BRIDGE_KEY","CROSS_BRIDGE_LIST","bridgeTokenList","env","timeout","VALID_BALANCE","formatHiddenCoin","list","arr","length","str","push","controlConfig","V1","bridgeInitDataChain","hiddenCoin","hiddenChain","showCoin","showChain","initNode","isOpenRouter","isOpenRouterTxns","isOpenBridge","V1_1","V2","V2_1","V2_2","V2_T1","V2_T2","V2_T3","V3","V3_1","V4","V4_OKT","V4_MOVR","V5","V6","isOpenNFT","V6_1","isOpenMerge","isOpenGasSwap","ENV_NODE_CONFIG","INIT_NODE","BASECURRENCY"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/constant.ts"],"sourcesContent":["\nexport enum VERSION {\n  V1 = 'UNDERLYING',\n  V1_1 = 'UNDERLYINGV2',\n  V2 = 'STABLE',\n  V2_1 = 'STABLEV2',\n  V2_2 = 'STABLEV3',\n  V2_T1 = 'STABLE_TEST',\n  V2_T2 = 'TEST',\n  V2_T3 = 'TESTV2',\n  V3 = 'ARB_DEV',\n  V3_1 = 'ARB',\n  V4 = 'BRIDGE',\n  V4_OKT = 'BRIDGE_OKT',\n  V4_MOVR = 'BRIDGE_MOVR',\n  V5 = 'ALL',\n  V6 = 'NFT_TEST',\n  V6_1 = 'NFT',\n  V7 = 'SOURCE_CHAIN',\n  V7_TEST = 'SOURCE_CHAIN_TEST',\n  V7_BAS_TEST = 'SOURCE_CHAIN_BAS_TEST',\n}\n\nexport enum CHAIN_TYPE {\n  HOT = 'HOT',\n  COMMON = 'COMMON'\n}\n\n\n// export const INIT_VERSION = VERSION.V1_1\n// export const INIT_VERSION = VERSION.V3_1\n// export const INIT_VERSION = VERSION.V2_2\n// export const INIT_VERSION = VERSION.V4_OKT\n// const INIT_VERSION = VERSION.V4_MOVR\n// export const INIT_VERSION = VERSION.V5\n// export const INIT_VERSION = VERSION.V6\n// export const INIT_VERSION = VERSION.V6_1\nexport const INIT_VERSION = VERSION.V7\n// export const INIT_VERSION = VERSION.V7_TEST\n// export const INIT_VERSION = VERSION.V7_BAS_TEST\n\nfunction getUrlVersion (init:any) {\n  const url = window.location.href\n  let version:any\n  if (\n    url.indexOf('https://app.deltaswap.io') === 0\n  ) {\n    version = VERSION.V7\n  } else {\n    version = init\n  }\n  return version\n}\nexport const USE_VERSION:any = getUrlVersion(INIT_VERSION)\n\n// export const MAIN_COIN = ['USDC', 'ETH', 'ETHK', 'DAI', 'WBTC', 'USDT', 'MIM', 'BTC', 'BTCB', 'USDC.e', 'WBTC.e', 'WETH', 'fUSDT', 'USDD_t', 'MAI']\nexport const MAIN_COIN_SORT:any = {\n  'ETH': {sort: 1},\n  'ETHK': {sort: 1},\n  'WETH': {sort: 2},\n  'BTC': {sort: 3},\n  'WBTC': {sort: 3},\n  'WBTC.e': {sort: 3},\n  'BTCB': {sort: 3},\n  'USDC': {sort: 4},\n  'USDC.e': {sort: 4},\n  'USDT': {sort: 5},\n  'USDt': {sort: 5},\n  'fUSDT': {sort: 5},\n  'DAI': {sort: 6},\n  'MIM': {sort: 7},\n  'MAI': {sort: 8},\n  'BUSD': {sort: 9},\n}\n\nexport const bridgeApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://bridgeapi.deltaswap.io'\nexport const scanApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://scanapi.deltaswap.io'\nexport const multiAridgeApi = USE_VERSION === VERSION.V7_TEST || USE_VERSION === VERSION.V7_BAS_TEST ? 'https://testapi.deltaswap.io' : 'https://bridgeapi.deltaswap.io'\n\nexport const explorer = 'https://evm.planq.network'\n\nexport enum BRIDGE_KEY {\n  routerTokenList = 'routerTokenList',\n  bridgeTokenList = 'bridgeTokenList',\n  mergeTokenList = 'mergeTokenList',\n}\n\n// export const CROSS_BRIDGE_LIST = [BRIDGE_KEY.bridgeTokenList, BRIDGE_KEY.mergeTokenList]\nexport const CROSS_BRIDGE_LIST = [BRIDGE_KEY.bridgeTokenList]\n\nexport const env:any = 'pro'\n// export const env:any = 'dev'\n\nexport const version = '0.4.2'\nexport const timeout = 1000 * 60 * 30\n\nexport const VALID_BALANCE = true\n// export const VALID_BALANCE = false\n// export const timeout = 1000 * 60\n\n\nfunction formatHiddenCoin (list?:Array<any>) {\n  const arr:any = []\n  if (list && list.length > 0) {\n    for (let str of list) {\n      arr.push(str)\n      if (str.indexOf('any') !== 0) str = 'any' + str\n      arr.push(str)\n    }\n  }\n  // console.log(arr)\n  return arr\n}\nexport const controlConfig:any = {\n  [VERSION.V1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V1_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 1,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: env === 'dev' ? 1 : 0,\n  },\n  [VERSION.V2]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_2]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: env === 'dev' ? '56' : '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: env === 'dev' ? 1 : 0,\n  },\n  [VERSION.V2_T1]: {\n    bridgeInitDataChain: '256',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '97',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_T2]: {\n    bridgeInitDataChain: '4',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '97',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V2_T3]: {\n    bridgeInitDataChain: '4',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '4',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V3]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V3_1]: {\n    bridgeInitDataChain: '56',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '1',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0\n  },\n  [VERSION.V4]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '56',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V4_OKT]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: [],\n    hiddenChain: [],\n    showCoin: [],\n    showChain: ['56', '66'],\n    initNode: '56',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V4_MOVR]: {\n    bridgeInitDataChain: '',\n    hiddenCoin: [],\n    hiddenChain: [],\n    showCoin: [],\n    showChain: ['1', '56', '1285'],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1\n  },\n  [VERSION.V5]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 1,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 1,\n  },\n  [VERSION.V6]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0,\n    isOpenNFT: 1,\n  },\n  [VERSION.V6_1]: {\n    bridgeInitDataChain: '7070',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: 0,\n    isOpenBridge: 0,\n    isOpenNFT: 1,\n  },\n  [VERSION.V7]: {\n    bridgeInitDataChain: '7070',\n    // hiddenCoin: formatHiddenCoin(['0x05ec81610ab47a094502bac0d7ec256f06a1c6f8', '0x2d1c6a7362e75d88b4cf3b66b83052775846e2b8']),\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1,\n    isOpenNFT: 1,\n    isOpenGasSwap: 0,\n  },\n  [VERSION.V7_TEST]: {\n    bridgeInitDataChain: '97',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1,\n    isOpenNFT: 1,\n    isOpenGasSwap: 1,\n  },\n  [VERSION.V7_BAS_TEST]: {\n    bridgeInitDataChain: '97',\n    hiddenCoin: formatHiddenCoin([]),\n    hiddenChain: [],\n    showCoin: [],\n    showChain: [],\n    initNode: '7070',\n    isOpenRouter: 0,\n    isOpenRouterTxns: env === 'dev' ? 1 : 0,\n    isOpenBridge: 0,\n    isOpenMerge: 1\n  },\n}\n\n\nexport const ENV_NODE_CONFIG = USE_VERSION + '_ENV_NODE_CONFIG'\n\nexport const INIT_NODE = controlConfig[USE_VERSION].initNode\n\nexport const BASECURRENCY = 'BASECURRENCY'\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}