{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StakeAuthorization_Validators = exports.StakeAuthorization = exports.authorizationTypeToJSON = exports.authorizationTypeFromJSON = exports.AuthorizationType = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\nexports.protobufPackage = \"cosmos.staking.v1beta1\";\n/**\n * AuthorizationType defines the type of staking module authorization type\n *\n * Since: cosmos-sdk 0.43\n */\nvar AuthorizationType;\n(function (AuthorizationType) {\n  /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n  /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n  /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n  /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n  AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType = exports.AuthorizationType || (exports.AuthorizationType = {}));\nfunction authorizationTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"AUTHORIZATION_TYPE_UNSPECIFIED\":\n      return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n    case 1:\n    case \"AUTHORIZATION_TYPE_DELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n    case 2:\n    case \"AUTHORIZATION_TYPE_UNDELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n    case 3:\n    case \"AUTHORIZATION_TYPE_REDELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return AuthorizationType.UNRECOGNIZED;\n  }\n}\nexports.authorizationTypeFromJSON = authorizationTypeFromJSON;\nfunction authorizationTypeToJSON(object) {\n  switch (object) {\n    case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n      return \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n      return \"AUTHORIZATION_TYPE_DELEGATE\";\n    case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n      return \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n      return \"AUTHORIZATION_TYPE_REDELEGATE\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\nexports.authorizationTypeToJSON = authorizationTypeToJSON;\nconst baseStakeAuthorization = {\n  authorizationType: 0\n};\nexports.StakeAuthorization = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.maxTokens !== undefined) {\n      coin_1.Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.allowList !== undefined) {\n      exports.StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.denyList !== undefined) {\n      exports.StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.authorizationType !== 0) {\n      writer.uint32(32).int32(message.authorizationType);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseStakeAuthorization);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxTokens = coin_1.Coin.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.allowList = exports.StakeAuthorization_Validators.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.denyList = exports.StakeAuthorization_Validators.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.authorizationType = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseStakeAuthorization);\n    if (object.maxTokens !== undefined && object.maxTokens !== null) {\n      message.maxTokens = coin_1.Coin.fromJSON(object.maxTokens);\n    } else {\n      message.maxTokens = undefined;\n    }\n    if (object.allowList !== undefined && object.allowList !== null) {\n      message.allowList = exports.StakeAuthorization_Validators.fromJSON(object.allowList);\n    } else {\n      message.allowList = undefined;\n    }\n    if (object.denyList !== undefined && object.denyList !== null) {\n      message.denyList = exports.StakeAuthorization_Validators.fromJSON(object.denyList);\n    } else {\n      message.denyList = undefined;\n    }\n    if (object.authorizationType !== undefined && object.authorizationType !== null) {\n      message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n    } else {\n      message.authorizationType = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? coin_1.Coin.toJSON(message.maxTokens) : undefined);\n    message.allowList !== undefined && (obj.allowList = message.allowList ? exports.StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n    message.denyList !== undefined && (obj.denyList = message.denyList ? exports.StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n    message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseStakeAuthorization);\n    if (object.maxTokens !== undefined && object.maxTokens !== null) {\n      message.maxTokens = coin_1.Coin.fromPartial(object.maxTokens);\n    } else {\n      message.maxTokens = undefined;\n    }\n    if (object.allowList !== undefined && object.allowList !== null) {\n      message.allowList = exports.StakeAuthorization_Validators.fromPartial(object.allowList);\n    } else {\n      message.allowList = undefined;\n    }\n    if (object.denyList !== undefined && object.denyList !== null) {\n      message.denyList = exports.StakeAuthorization_Validators.fromPartial(object.denyList);\n    } else {\n      message.denyList = undefined;\n    }\n    if (object.authorizationType !== undefined && object.authorizationType !== null) {\n      message.authorizationType = object.authorizationType;\n    } else {\n      message.authorizationType = 0;\n    }\n    return message;\n  }\n};\nconst baseStakeAuthorization_Validators = {\n  address: \"\"\n};\nexports.StakeAuthorization_Validators = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.address) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseStakeAuthorization_Validators);\n    message.address = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.address.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseStakeAuthorization_Validators);\n    message.address = [];\n    if (object.address !== undefined && object.address !== null) {\n      for (const e of object.address) {\n        message.address.push(String(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.address) {\n      obj.address = message.address.map(e => e);\n    } else {\n      obj.address = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseStakeAuthorization_Validators);\n    message.address = [];\n    if (object.address !== undefined && object.address !== null) {\n      for (const e of object.address) {\n        message.address.push(e);\n      }\n    }\n    return message;\n  }\n};\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","coin_1","exports","protobufPackage","AuthorizationType","authorizationTypeFromJSON","object","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","UNRECOGNIZED","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","encode","message","writer","arguments","length","undefined","default","Writer","create","maxTokens","Coin","uint32","fork","ldelim","allowList","StakeAuthorization_Validators","denyList","int32","decode","input","reader","Reader","end","len","pos","Object","assign","tag","skipType","fromJSON","toJSON","obj","fromPartial","baseStakeAuthorization_Validators","address","v","string","push","e","String","map","util","Long","configure"],"sources":["../../../../src/cosmos/staking/v1beta1/authz.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}