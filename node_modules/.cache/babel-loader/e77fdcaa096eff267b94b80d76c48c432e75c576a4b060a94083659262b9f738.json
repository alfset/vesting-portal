{"ast":null,"code":"'use strict';\n\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.encode = exports.decode = exports.check = void 0;\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80)) return false;\n  return true;\n}\nexports.check = check;\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  };\n}\nexports.decode = decode;\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) throw new Error('S value excessively padded');\n  const signature = Buffer.allocUnsafe(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\nexports.encode = encode;","map":{"version":3,"names":["Object","defineProperty","exports","value","encode","decode","check","buffer","length","lenR","lenS","Error","r","slice","s","signature","Buffer","allocUnsafe","copy"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/bip66.js"],"sourcesContent":["'use strict';\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = exports.check = void 0;\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\nexports.check = check;\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\nexports.decode = decode;\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = Buffer.allocUnsafe(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\nexports.encode = encode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}