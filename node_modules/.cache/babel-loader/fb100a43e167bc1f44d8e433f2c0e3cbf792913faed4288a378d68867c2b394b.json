{"ast":null,"code":"import{useEffect,useMemo,useState}from'react';import{useTokenContract}from'../hooks/useContract';import{useSingleCallResult}from'../state/multicall/hooks';import{useActiveWeb3React}from'../hooks';import{getErcContract}from'../utils/tools/web3UtilsV2';import{BigAmount}from'../utils/formatBignumber';export function useTokenAllowance(token,owner,spender){const{library}=useActiveWeb3React();const tokenAddress=token===null||token===void 0?void 0:token.address;const contract=useTokenContract(tokenAddress,false);const[ercAllowance,setErcAllowance]=useState();const ercContract=getErcContract(library===null||library===void 0?void 0:library.provider);const inputs=useMemo(()=>[owner,spender],[owner,spender]);const allowance=useSingleCallResult(contract,'allowance',inputs).result;useEffect(()=>{// console.log(token)\n// console.log(ercContract, tokenAddress, owner, spender)\nif(ercContract&&tokenAddress&&owner&&spender){// setErcAllowance('')\nercContract.options.address=tokenAddress;ercContract.methods.allowance(owner,spender).call((err,res)=>{// console.log(err)\n// console.log(res)\nif(!err){setErcAllowance(res);}else{setErcAllowance('');}});}else{setErcAllowance('');}},[ercContract,tokenAddress,owner,spender]);return useMemo(()=>{if(token){const a=allowance?allowance:ercAllowance;// console.log(allowance)\n// console.log(ercAllowance)\nif(a||a===0){// return new TokenAmount(token, a.toString())\nreturn BigAmount.format(token.decimals,a.toString());}return undefined;}else{return undefined;}// return (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined)\n},[token,allowance,ercAllowance]);}","map":{"version":3,"names":["useEffect","useMemo","useState","useTokenContract","useSingleCallResult","useActiveWeb3React","getErcContract","BigAmount","useTokenAllowance","token","owner","spender","library","tokenAddress","address","contract","ercAllowance","setErcAllowance","ercContract","provider","inputs","allowance","result","options","methods","call","err","res","a","format","decimals","toString","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/data/Allowances.ts"],"sourcesContent":["\nimport { useEffect, useMemo, useState } from 'react'\n\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useActiveWeb3React } from '../hooks'\n\nimport {getErcContract} from '../utils/tools/web3UtilsV2'\n\nimport {BigAmount} from  '../utils/formatBignumber'\n\nexport function useTokenAllowance(token?: any, owner?: string, spender?: string): any | undefined {\n  const { library } = useActiveWeb3React()\n  const tokenAddress = token?.address\n  const contract = useTokenContract(tokenAddress, false)\n\n  const [ercAllowance, setErcAllowance] = useState<any>()\n  const ercContract = getErcContract(library?.provider)\n  \n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n  \n\n  useEffect(() => {\n    // console.log(token)\n    // console.log(ercContract, tokenAddress, owner, spender)\n    if (\n      ercContract\n      && tokenAddress\n      && owner\n      && spender\n    ) {\n      // setErcAllowance('')\n      ercContract.options.address = tokenAddress\n      ercContract.methods.allowance(owner, spender).call((err:any, res:any) => {\n        // console.log(err)\n        // console.log(res)\n        if (!err) {\n          setErcAllowance(res)\n        } else {\n          setErcAllowance('')\n        }\n      })\n    } else {\n      setErcAllowance('')\n    }\n  }, [ercContract, tokenAddress, owner, spender])\n\n  return useMemo(() => {\n    if (token) {\n      const a = allowance ? allowance : ercAllowance\n      // console.log(allowance)\n      // console.log(ercAllowance)\n      if (a || a === 0) {\n        // return new TokenAmount(token, a.toString())\n        return BigAmount.format(token.decimals, a.toString())\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n    // return (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined)\n  }, [\n    token,\n    allowance,\n    ercAllowance\n  ])\n}\n"],"mappings":"AACA,OAASA,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAEpD,OAASC,gBAAgB,KAAQ,sBAAsB,CACvD,OAASC,mBAAmB,KAAQ,0BAA0B,CAC9D,OAASC,kBAAkB,KAAQ,UAAU,CAE7C,OAAQC,cAAc,KAAO,4BAA4B,CAEzD,OAAQC,SAAS,KAAQ,0BAA0B,CAEnD,MAAO,SAAS,CAAAC,iBAAiBA,CAACC,KAAW,CAAEC,KAAc,CAAEC,OAAgB,CAAmB,CAChG,KAAM,CAAEC,OAAQ,CAAC,CAAGP,kBAAkB,CAAC,CAAC,CACxC,KAAM,CAAAQ,YAAY,CAAGJ,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEK,OAAO,CACnC,KAAM,CAAAC,QAAQ,CAAGZ,gBAAgB,CAACU,YAAY,CAAE,KAAK,CAAC,CAEtD,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAM,CAAC,CACvD,KAAM,CAAAgB,WAAW,CAAGZ,cAAc,CAACM,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEO,QAAQ,CAAC,CAErD,KAAM,CAAAC,MAAM,CAAGnB,OAAO,CAAC,IAAM,CAACS,KAAK,CAAEC,OAAO,CAAC,CAAE,CAACD,KAAK,CAAEC,OAAO,CAAC,CAAC,CAChE,KAAM,CAAAU,SAAS,CAAGjB,mBAAmB,CAACW,QAAQ,CAAE,WAAW,CAAEK,MAAM,CAAC,CAACE,MAAM,CAG3EtB,SAAS,CAAC,IAAM,CACd;AACA;AACA,GACEkB,WAAW,EACRL,YAAY,EACZH,KAAK,EACLC,OAAO,CACV,CACA;AACAO,WAAW,CAACK,OAAO,CAACT,OAAO,CAAGD,YAAY,CAC1CK,WAAW,CAACM,OAAO,CAACH,SAAS,CAACX,KAAK,CAAEC,OAAO,CAAC,CAACc,IAAI,CAAC,CAACC,GAAO,CAAEC,GAAO,GAAK,CACvE;AACA;AACA,GAAI,CAACD,GAAG,CAAE,CACRT,eAAe,CAACU,GAAG,CAAC,CACtB,CAAC,IAAM,CACLV,eAAe,CAAC,EAAE,CAAC,CACrB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLA,eAAe,CAAC,EAAE,CAAC,CACrB,CACF,CAAC,CAAE,CAACC,WAAW,CAAEL,YAAY,CAAEH,KAAK,CAAEC,OAAO,CAAC,CAAC,CAE/C,MAAO,CAAAV,OAAO,CAAC,IAAM,CACnB,GAAIQ,KAAK,CAAE,CACT,KAAM,CAAAmB,CAAC,CAAGP,SAAS,CAAGA,SAAS,CAAGL,YAAY,CAC9C;AACA;AACA,GAAIY,CAAC,EAAIA,CAAC,GAAK,CAAC,CAAE,CAChB;AACA,MAAO,CAAArB,SAAS,CAACsB,MAAM,CAACpB,KAAK,CAACqB,QAAQ,CAAEF,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC,CACvD,CACA,MAAO,CAAAC,SAAS,CAClB,CAAC,IAAM,CACL,MAAO,CAAAA,SAAS,CAClB,CACA;AACF,CAAC,CAAE,CACDvB,KAAK,CACLY,SAAS,CACTL,YAAY,CACb,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}