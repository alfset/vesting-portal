{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValConsPublicKey = exports.LegacyAminoMultisigPublicKey = exports.SimplePublicKey = exports.PublicKey = void 0;\nvar json_1 = require(\"../util/json\");\nvar hash_1 = require(\"../util/hash\");\nvar keys_1 = require(\"@terra-money/terra.proto/cosmos/crypto/multisig/keys\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar keys_2 = require(\"@terra-money/terra.proto/cosmos/crypto/secp256k1/keys\");\nvar keys_3 = require(\"@terra-money/terra.proto/cosmos/crypto/ed25519/keys\");\nvar bech32_1 = require(\"bech32\");\n// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\nvar pubkeyAminoPrefixSecp256k1 = Buffer.from('eb5ae987' + '21' /* fixed length */, 'hex');\nvar pubkeyAminoPrefixEd25519 = Buffer.from('1624de64' + '20' /* fixed length */, 'hex');\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\nvar pubkeyAminoPrefixMultisigThreshold = Buffer.from('22c1f7e2' /* variable length not included */, 'hex');\nvar encodeUvarint = function (value) {\n  var checked = Number.parseInt(value.toString());\n  if (checked > 127) {\n    throw new Error('Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.');\n  }\n  return [checked];\n};\nvar PublicKey;\n(function (PublicKey) {\n  function fromAmino(data) {\n    switch (data.type) {\n      case 'tendermint/PubKeySecp256k1':\n        return SimplePublicKey.fromAmino(data);\n      case 'tendermint/PubKeyMultisigThreshold':\n        return LegacyAminoMultisigPublicKey.fromAmino(data);\n      case 'tendermint/PubKeyEd25519':\n        return ValConsPublicKey.fromAmino(data);\n    }\n  }\n  PublicKey.fromAmino = fromAmino;\n  function fromData(data) {\n    switch (data['@type']) {\n      case '/cosmos.crypto.secp256k1.PubKey':\n        return SimplePublicKey.fromData(data);\n      case '/cosmos.crypto.multisig.LegacyAminoPubKey':\n        return LegacyAminoMultisigPublicKey.fromData(data);\n      case '/cosmos.crypto.ed25519.PubKey':\n        return ValConsPublicKey.fromData(data);\n    }\n  }\n  PublicKey.fromData = fromData;\n  function fromProto(pubkeyAny) {\n    var typeUrl = pubkeyAny.typeUrl;\n    if (typeUrl === '/cosmos.crypto.secp256k1.PubKey') {\n      return SimplePublicKey.unpackAny(pubkeyAny);\n    } else if (typeUrl === '/cosmos.crypto.multisig.LegacyAminoPubKey') {\n      return LegacyAminoMultisigPublicKey.unpackAny(pubkeyAny);\n    } else if (typeUrl === '/cosmos.crypto.ed25519.PubKey') {\n      return ValConsPublicKey.unpackAny(pubkeyAny);\n    }\n    throw new Error(\"Pubkey type \".concat(typeUrl, \" not recognized\"));\n  }\n  PublicKey.fromProto = fromProto;\n})(PublicKey = exports.PublicKey || (exports.PublicKey = {}));\nvar SimplePublicKey = /** @class */function (_super) {\n  __extends(SimplePublicKey, _super);\n  function SimplePublicKey(key) {\n    var _this = _super.call(this) || this;\n    _this.key = key;\n    return _this;\n  }\n  SimplePublicKey.fromAmino = function (data) {\n    return new SimplePublicKey(data.value);\n  };\n  SimplePublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeySecp256k1',\n      value: this.key\n    };\n  };\n  SimplePublicKey.fromData = function (data) {\n    return new SimplePublicKey(data.key);\n  };\n  SimplePublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.secp256k1.PubKey',\n      key: this.key\n    };\n  };\n  SimplePublicKey.fromProto = function (pubkeyProto) {\n    return new SimplePublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n  };\n  SimplePublicKey.prototype.toProto = function () {\n    return keys_2.PubKey.fromPartial({\n      key: Buffer.from(this.key, 'base64')\n    });\n  };\n  SimplePublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.secp256k1.PubKey',\n      value: keys_2.PubKey.encode(this.toProto()).finish()\n    });\n  };\n  SimplePublicKey.unpackAny = function (pubkeyAny) {\n    return SimplePublicKey.fromProto(keys_2.PubKey.decode(pubkeyAny.value));\n  };\n  SimplePublicKey.prototype.encodeAminoPubkey = function () {\n    return Buffer.concat([pubkeyAminoPrefixSecp256k1, Buffer.from(this.key, 'base64')]);\n  };\n  SimplePublicKey.prototype.rawAddress = function () {\n    var pubkeyData = Buffer.from(this.key, 'base64');\n    return (0, hash_1.ripemd160)((0, hash_1.sha256)(pubkeyData));\n  };\n  SimplePublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n  SimplePublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n  return SimplePublicKey;\n}(json_1.JSONSerializable);\nexports.SimplePublicKey = SimplePublicKey;\nvar LegacyAminoMultisigPublicKey = /** @class */function (_super) {\n  __extends(LegacyAminoMultisigPublicKey, _super);\n  function LegacyAminoMultisigPublicKey(threshold, pubkeys) {\n    var _this = _super.call(this) || this;\n    _this.threshold = threshold;\n    _this.pubkeys = pubkeys;\n    return _this;\n  }\n  LegacyAminoMultisigPublicKey.prototype.encodeAminoPubkey = function () {\n    var out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n    out.push(0x08);\n    out.push.apply(out, encodeUvarint(this.threshold));\n    for (var _i = 0, _a = this.pubkeys.map(function (p) {\n        return p.encodeAminoPubkey();\n      }); _i < _a.length; _i++) {\n      var pubkeyData = _a[_i];\n      out.push(0x12);\n      out.push.apply(out, encodeUvarint(pubkeyData.length));\n      out.push.apply(out, Array.from(pubkeyData));\n    }\n    return new Uint8Array(out);\n  };\n  LegacyAminoMultisigPublicKey.prototype.rawAddress = function () {\n    var pubkeyData = this.encodeAminoPubkey();\n    return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n  };\n  LegacyAminoMultisigPublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terra', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n  LegacyAminoMultisigPublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terrapub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n  LegacyAminoMultisigPublicKey.fromAmino = function (data) {\n    return new LegacyAminoMultisigPublicKey(Number.parseInt(data.value.threshold), data.value.pubkeys.map(function (p) {\n      return SimplePublicKey.fromAmino(p);\n    }));\n  };\n  LegacyAminoMultisigPublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeyMultisigThreshold',\n      value: {\n        threshold: this.threshold.toFixed(),\n        pubkeys: this.pubkeys.map(function (p) {\n          return p.toAmino();\n        })\n      }\n    };\n  };\n  LegacyAminoMultisigPublicKey.fromData = function (data) {\n    return new LegacyAminoMultisigPublicKey(Number.parseInt(data.threshold), data.public_keys.map(function (v) {\n      return SimplePublicKey.fromData(v);\n    }));\n  };\n  LegacyAminoMultisigPublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.multisig.LegacyAminoPubKey',\n      threshold: this.threshold.toFixed(),\n      public_keys: this.pubkeys.map(function (p) {\n        return p.toData();\n      })\n    };\n  };\n  LegacyAminoMultisigPublicKey.fromProto = function (pubkeyProto) {\n    return new LegacyAminoMultisigPublicKey(pubkeyProto.threshold, pubkeyProto.publicKeys.map(function (v) {\n      return SimplePublicKey.unpackAny(v);\n    }));\n  };\n  LegacyAminoMultisigPublicKey.prototype.toProto = function () {\n    return keys_1.LegacyAminoPubKey.fromPartial({\n      threshold: this.threshold,\n      publicKeys: this.pubkeys.map(function (v) {\n        return v.packAny();\n      })\n    });\n  };\n  LegacyAminoMultisigPublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.multisig.LegacyAminoPubKey',\n      value: keys_1.LegacyAminoPubKey.encode(this.toProto()).finish()\n    });\n  };\n  LegacyAminoMultisigPublicKey.unpackAny = function (pubkeyAny) {\n    return LegacyAminoMultisigPublicKey.fromProto(keys_1.LegacyAminoPubKey.decode(pubkeyAny.value));\n  };\n  return LegacyAminoMultisigPublicKey;\n}(json_1.JSONSerializable);\nexports.LegacyAminoMultisigPublicKey = LegacyAminoMultisigPublicKey;\nvar ValConsPublicKey = /** @class */function (_super) {\n  __extends(ValConsPublicKey, _super);\n  function ValConsPublicKey(key) {\n    var _this = _super.call(this) || this;\n    _this.key = key;\n    return _this;\n  }\n  ValConsPublicKey.fromAmino = function (data) {\n    return new ValConsPublicKey(data.value);\n  };\n  ValConsPublicKey.prototype.toAmino = function () {\n    return {\n      type: 'tendermint/PubKeyEd25519',\n      value: this.key\n    };\n  };\n  ValConsPublicKey.fromData = function (data) {\n    return new ValConsPublicKey(data.key);\n  };\n  ValConsPublicKey.prototype.toData = function () {\n    return {\n      '@type': '/cosmos.crypto.ed25519.PubKey',\n      key: this.key\n    };\n  };\n  ValConsPublicKey.fromProto = function (pubkeyProto) {\n    return new ValConsPublicKey(Buffer.from(pubkeyProto.key).toString('base64'));\n  };\n  ValConsPublicKey.prototype.toProto = function () {\n    return keys_2.PubKey.fromPartial({\n      key: Buffer.from(this.key, 'base64')\n    });\n  };\n  ValConsPublicKey.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.crypto.ed25519.PubKey',\n      value: keys_3.PubKey.encode(this.toProto()).finish()\n    });\n  };\n  ValConsPublicKey.unpackAny = function (pubkeyAny) {\n    return ValConsPublicKey.fromProto(keys_3.PubKey.decode(pubkeyAny.value));\n  };\n  ValConsPublicKey.prototype.encodeAminoPubkey = function () {\n    return Buffer.concat([pubkeyAminoPrefixEd25519, Buffer.from(this.key, 'base64')]);\n  };\n  ValConsPublicKey.prototype.rawAddress = function () {\n    var pubkeyData = Buffer.from(this.key, 'base64');\n    return (0, hash_1.sha256)(pubkeyData).slice(0, 20);\n  };\n  ValConsPublicKey.prototype.address = function () {\n    return bech32_1.bech32.encode('terravalcons', bech32_1.bech32.toWords(this.rawAddress()));\n  };\n  ValConsPublicKey.prototype.pubkeyAddress = function () {\n    return bech32_1.bech32.encode('terravalconspub', bech32_1.bech32.toWords(this.encodeAminoPubkey()));\n  };\n  return ValConsPublicKey;\n}(json_1.JSONSerializable);\nexports.ValConsPublicKey = ValConsPublicKey;","map":{"version":3,"names":["json_1","require","hash_1","keys_1","any_1","keys_2","keys_3","bech32_1","pubkeyAminoPrefixSecp256k1","Buffer","from","pubkeyAminoPrefixEd25519","pubkeyAminoPrefixMultisigThreshold","encodeUvarint","value","checked","Number","parseInt","toString","Error","PublicKey","fromAmino","data","type","SimplePublicKey","LegacyAminoMultisigPublicKey","ValConsPublicKey","fromData","fromProto","pubkeyAny","typeUrl","unpackAny","concat","exports","_super","__extends","key","_this","call","prototype","toAmino","toData","pubkeyProto","toProto","PubKey","fromPartial","packAny","Any","encode","finish","decode","encodeAminoPubkey","rawAddress","pubkeyData","ripemd160","sha256","address","bech32","toWords","pubkeyAddress","JSONSerializable","threshold","pubkeys","out","Array","push","apply","_i","_a","map","p","length","Uint8Array","slice","toFixed","public_keys","v","publicKeys","LegacyAminoPubKey"],"sources":["../../src/core/PublicKey.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}