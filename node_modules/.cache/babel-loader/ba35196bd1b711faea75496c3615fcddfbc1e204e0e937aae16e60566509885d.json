{"ast":null,"code":"import{useCallback,useEffect}from'react';import{ChainId}from'../../config/chainConfig/chainId';import{useActiveReact}from'../../hooks/useActiveReact';import{useDispatch}from'react-redux';import useInterval from'../../hooks/useInterval';import{useLoginAtom,useAtomBalance}from'./index';import{atomBalanceList}from'./actions';export default function Updater(){const{chainId,account}=useActiveReact();const dispatch=useDispatch();const{loginAtom}=useLoginAtom();const{getAtomSeiBalance}=useAtomBalance();const getBalance=useCallback(()=>{getAtomSeiBalance({chainId,account}).then(res=>{const list={};// console.log(res)\nif(res&&res.length>0){for(const obj of res){// console.log(obj)\nif((obj===null||obj===void 0?void 0:obj.denom)==='usei'){list['NATIVE']={balance:obj===null||obj===void 0?void 0:obj.amount};}list[obj===null||obj===void 0?void 0:obj.denom]={balance:obj===null||obj===void 0?void 0:obj.amount};}}// console.log(list)\ndispatch(atomBalanceList({list}));});},[account,chainId,dispatch]);useEffect(()=>{getBalance();},[account,chainId,dispatch]);useInterval(getBalance,1000*5);const getAtomAddress=useCallback(()=>{console.log(chainId);if([ChainId.ATOM_SEI,ChainId.ATOM_SEI_TEST,ChainId.ATOM_DCORE,ChainId.ATOM_DCORE_TEST].includes(chainId)){loginAtom(chainId);}},[chainId]);useEffect(()=>{getAtomAddress();},[chainId]);return null;}","map":{"version":3,"names":["useCallback","useEffect","ChainId","useActiveReact","useDispatch","useInterval","useLoginAtom","useAtomBalance","atomBalanceList","Updater","chainId","account","dispatch","loginAtom","getAtomSeiBalance","getBalance","then","res","list","length","obj","denom","balance","amount","getAtomAddress","console","log","ATOM_SEI","ATOM_SEI_TEST","ATOM_DCORE","ATOM_DCORE_TEST","includes"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/atom/updater.ts"],"sourcesContent":["\nimport { useCallback, useEffect } from 'react'\nimport { ChainId } from '../../config/chainConfig/chainId'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport useInterval from '../../hooks/useInterval'\nimport {\n  useLoginAtom,\n  useAtomBalance\n} from './index'\nimport {\n  atomBalanceList\n} from './actions'\n\nexport default function Updater(): null {\n  const { chainId, account } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n  const {loginAtom} = useLoginAtom()\n  const {getAtomSeiBalance} = useAtomBalance()\n\n  const getBalance = useCallback(() => {\n    getAtomSeiBalance({chainId, account}).then((res:any) => {\n      const list:any = {}\n      // console.log(res)\n      if (res && res.length > 0) {\n        for (const obj of res) {\n          // console.log(obj)\n          if (obj?.denom === 'usei') {\n            list['NATIVE'] = {\n              balance: obj?.amount\n            }\n          }\n          list[obj?.denom] = {\n            balance: obj?.amount\n          }\n        }\n      }\n      // console.log(list)\n      dispatch(atomBalanceList({list}))\n    })\n  }, [account, chainId, dispatch])\n\n  useEffect(() => {\n    getBalance()\n  }, [account, chainId, dispatch])\n\n  useInterval(getBalance, 1000 * 5)\n\n  const getAtomAddress = useCallback(() => {\n    console.log(chainId)\n    if ([ChainId.ATOM_SEI, ChainId.ATOM_SEI_TEST, ChainId.ATOM_DCORE, ChainId.ATOM_DCORE_TEST].includes(chainId)) {\n      loginAtom(chainId)\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    getAtomAddress()\n  }, [chainId])\n\n  return null\n}\n"],"mappings":"AACA,OAASA,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC9C,OAASC,OAAO,KAAQ,kCAAkC,CAC1D,OAASC,cAAc,KAAQ,4BAA4B,CAC3D,OAASC,WAAW,KAAQ,aAAa,CAEzC,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,OACEC,YAAY,CACZC,cAAc,KACT,SAAS,CAChB,OACEC,eAAe,KACV,WAAW,CAElB,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAS,CACtC,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGR,cAAc,CAAC,CAAC,CAC7C,KAAM,CAAAS,QAAQ,CAAGR,WAAW,CAAc,CAAC,CAC3C,KAAM,CAACS,SAAS,CAAC,CAAGP,YAAY,CAAC,CAAC,CAClC,KAAM,CAACQ,iBAAiB,CAAC,CAAGP,cAAc,CAAC,CAAC,CAE5C,KAAM,CAAAQ,UAAU,CAAGf,WAAW,CAAC,IAAM,CACnCc,iBAAiB,CAAC,CAACJ,OAAO,CAAEC,OAAO,CAAC,CAAC,CAACK,IAAI,CAAEC,GAAO,EAAK,CACtD,KAAM,CAAAC,IAAQ,CAAG,CAAC,CAAC,CACnB;AACA,GAAID,GAAG,EAAIA,GAAG,CAACE,MAAM,CAAG,CAAC,CAAE,CACzB,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAH,GAAG,CAAE,CACrB;AACA,GAAI,CAAAG,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEC,KAAK,IAAK,MAAM,CAAE,CACzBH,IAAI,CAAC,QAAQ,CAAC,CAAG,CACfI,OAAO,CAAEF,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEG,MAChB,CAAC,CACH,CACAL,IAAI,CAACE,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEC,KAAK,CAAC,CAAG,CACjBC,OAAO,CAAEF,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEG,MAChB,CAAC,CACH,CACF,CACA;AACAX,QAAQ,CAACJ,eAAe,CAAC,CAACU,IAAI,CAAC,CAAC,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,CAAE,CAACP,OAAO,CAAED,OAAO,CAAEE,QAAQ,CAAC,CAAC,CAEhCX,SAAS,CAAC,IAAM,CACdc,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACJ,OAAO,CAAED,OAAO,CAAEE,QAAQ,CAAC,CAAC,CAEhCP,WAAW,CAACU,UAAU,CAAE,IAAI,CAAG,CAAC,CAAC,CAEjC,KAAM,CAAAS,cAAc,CAAGxB,WAAW,CAAC,IAAM,CACvCyB,OAAO,CAACC,GAAG,CAAChB,OAAO,CAAC,CACpB,GAAI,CAACR,OAAO,CAACyB,QAAQ,CAAEzB,OAAO,CAAC0B,aAAa,CAAE1B,OAAO,CAAC2B,UAAU,CAAE3B,OAAO,CAAC4B,eAAe,CAAC,CAACC,QAAQ,CAACrB,OAAO,CAAC,CAAE,CAC5GG,SAAS,CAACH,OAAO,CAAC,CACpB,CACF,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEbT,SAAS,CAAC,IAAM,CACduB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACd,OAAO,CAAC,CAAC,CAEb,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}