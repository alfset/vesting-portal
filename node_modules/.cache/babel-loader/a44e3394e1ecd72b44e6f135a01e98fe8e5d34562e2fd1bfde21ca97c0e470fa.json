{"ast":null,"code":"import { parseBytes32String } from '@ethersproject/strings';\nimport { useMemo } from 'react';\n// import { useSelectedTokenList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks';\nimport { useUserAddedTokens } from '../state/user/hooks';\nimport { isAddress } from '../utils';\nimport { useActiveWeb3React } from './index';\nimport { useBytes32TokenContract, useTokenContract } from './useContract';\n// import config from '../config'\nexport function useAllTokens() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const userAddedTokens = useUserAddedTokens();\n  // const allTokens = useSelectedTokenList()\n  return useMemo(() => {\n    if (!chainId) return {};\n    return userAddedTokens\n    // reduce into all ALL_TOKENS filtered by the current chain\n    .reduce((tokenMap, token) => {\n      tokenMap[token.address] = token;\n      return tokenMap;\n    },\n    // must make a copy because reduce modifies the map, and we do not\n    // want to make a copy in every iteration\n    // { ...allTokens[chainId] }\n    {});\n  }, [chainId, userAddedTokens]);\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/;\nfunction parseStringOrBytes32(str, bytes32, defaultValue) {\n  return str && str.length > 0 ? str : bytes32 && BYTES32_REGEX.test(bytes32) ? parseBytes32String(bytes32) : defaultValue;\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens();\n  const address = isAddress(tokenAddress);\n  const tokenContract = useTokenContract(address ? address : undefined, false);\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false);\n  const token = address ? tokens[address] : undefined;\n\n  // console.log(token)\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD);\n  const tokenNameBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'name', undefined, NEVER_RELOAD);\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD);\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD);\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD);\n  return useMemo(() => {\n    if (token) return token;\n    if (!chainId || !address) return undefined;\n    if (decimals.loading || symbol.loading || tokenName.loading) return null;\n    if (decimals.result) {\n      var _symbol$result, _symbolBytes32$result, _tokenName$result, _tokenNameBytes32$res;\n      return {\n        chainId,\n        address,\n        decimals: decimals.result[0],\n        symbol: parseStringOrBytes32((_symbol$result = symbol.result) === null || _symbol$result === void 0 ? void 0 : _symbol$result[0], (_symbolBytes32$result = symbolBytes32.result) === null || _symbolBytes32$result === void 0 ? void 0 : _symbolBytes32$result[0], 'UNKNOWN'),\n        name: parseStringOrBytes32((_tokenName$result = tokenName.result) === null || _tokenName$result === void 0 ? void 0 : _tokenName$result[0], (_tokenNameBytes32$res = tokenNameBytes32.result) === null || _tokenNameBytes32$res === void 0 ? void 0 : _tokenNameBytes32$res[0], 'Unknown Token')\n      };\n    }\n    return undefined;\n  }, [address, chainId, decimals.loading, decimals.result, symbol.loading, symbol.result, symbolBytes32.result, token, tokenName.loading, tokenName.result, tokenNameBytes32.result]);\n}\nexport function useLocalToken(currency) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n\n  // const address = isAddress(currency?.address)\n  const address = isAddress(currency === null || currency === void 0 ? void 0 : currency.address);\n  const symbol = currency === null || currency === void 0 ? void 0 : currency.symbol;\n  const name = currency === null || currency === void 0 ? void 0 : currency.name;\n  const decimals = currency === null || currency === void 0 ? void 0 : currency.decimals;\n  const underlying = currency === null || currency === void 0 ? void 0 : currency.underlying;\n  const ContractVersion = currency === null || currency === void 0 ? void 0 : currency.ContractVersion;\n  const destChains = currency === null || currency === void 0 ? void 0 : currency.destChains;\n  const logoUrl = currency === null || currency === void 0 ? void 0 : currency.logoUrl;\n  const price = currency === null || currency === void 0 ? void 0 : currency.price;\n\n  // const token = address && name ? undefined : useToken(address ? address : undefined)\n  // console.log(token)\n  // console.log(address)\n  // console.log(currency)\n  return useMemo(() => {\n    if (!currency) return undefined;\n    // if (!chainId || !address) return undefined\n    if (!chainId || !address) return undefined;\n    // if (token) return token\n    return {\n      chainId,\n      address,\n      decimals,\n      symbol,\n      name,\n      underlying,\n      ContractVersion,\n      destChains,\n      logoUrl,\n      price\n    };\n  }, [address, chainId, symbol, decimals, name, underlying, ContractVersion, destChains, logoUrl, price]);\n}\nexport function useFormatToken(chainId, address, decimals, name, symbol, underlying) {\n  return useMemo(() => {\n    if (!chainId || !address || !decimals || !name || !symbol) return undefined;\n    return {\n      chainId: Number(chainId),\n      address,\n      decimals,\n      symbol,\n      name,\n      underlying\n    };\n  }, [address, chainId, symbol, decimals, name, underlying]);\n}\nexport function useFormatCurrency(chainId, address, decimals, name, symbol, underlying) {\n  const token = useFormatToken(chainId, address, decimals, name, symbol, underlying);\n  return token;\n}","map":{"version":3,"names":["parseBytes32String","useMemo","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useActiveWeb3React","useBytes32TokenContract","useTokenContract","useAllTokens","chainId","userAddedTokens","reduce","tokenMap","token","address","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokens","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","_symbol$result","_symbolBytes32$result","_tokenName$result","_tokenNameBytes32$res","name","useLocalToken","currency","underlying","ContractVersion","destChains","logoUrl","price","useFormatToken","Number","useFormatCurrency"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/hooks/Tokens.ts"],"sourcesContent":["import { parseBytes32String } from '@ethersproject/strings'\nimport { useMemo } from 'react'\n// import { useSelectedTokenList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './index'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n// import config from '../config'\nexport function useAllTokens(): { [address: string]: any } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n  // const allTokens = useSelectedTokenList()\n  return useMemo(() => {\n    if (!chainId) return {}\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: any }>(\n          (tokenMap, token) => {\n            tokenMap[token.address] = token\n            return tokenMap\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          // { ...allTokens[chainId] }\n          {}\n        )\n    )\n  }, [chainId, userAddedTokens])\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : bytes32 && BYTES32_REGEX.test(bytes32)\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): any | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: any | undefined = address ? tokens[address] : undefined\n\n  // console.log(token)\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return {\n        chainId,\n        address,\n        decimals: decimals.result[0],\n        symbol: parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        name: parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      }\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result\n  ])\n}\n\nexport function useLocalToken(currency?: any): any | undefined | null {\n  const { chainId } = useActiveWeb3React()\n\n  // const address = isAddress(currency?.address)\n  const address = isAddress(currency?.address)\n\n  const symbol = currency?.symbol\n  const name = currency?.name\n  const decimals = currency?.decimals\n  const underlying = currency?.underlying\n\n  const ContractVersion = currency?.ContractVersion\n  const destChains = currency?.destChains\n  const logoUrl = currency?.logoUrl\n  const price = currency?.price\n\n  // const token = address && name ? undefined : useToken(address ? address : undefined)\n  // console.log(token)\n  // console.log(address)\n  // console.log(currency)\n  return useMemo(() => {\n    if (!currency) return undefined\n    // if (!chainId || !address) return undefined\n    if (!chainId || !address) return undefined\n    // if (token) return token\n    return {\n      chainId,\n      address,\n      decimals,\n      symbol,\n      name,\n      underlying,\n      ContractVersion,\n      destChains,\n      logoUrl,\n      price,\n    }\n  }, [\n    address,\n    chainId,\n    symbol,\n    decimals,\n    name,\n    underlying,\n    ContractVersion,\n    destChains,\n    logoUrl,\n    price,\n  ])\n}\n\nexport function useFormatToken(\n  chainId?: any,\n  address?: any,\n  decimals?: any,\n  name?: any,\n  symbol?: any,\n  underlying?: any,\n): any | undefined | null {\n\n  return useMemo(() => {\n    if (\n      !chainId\n      || !address\n      || !decimals\n      || !name\n      || !symbol\n    ) return undefined\n    return {\n      chainId: Number(chainId),\n      address,\n      decimals,\n      symbol,\n      name,\n      underlying\n    }\n  }, [\n    address,\n    chainId,\n    symbol,\n    decimals,\n    name,\n    underlying\n  ])\n}\n\nexport function useFormatCurrency(\n  chainId?: any,\n  address?: any,\n  decimals?: any,\n  name?: any,\n  symbol?: any,\n  underlying?: any\n): any {\n\n  const token = useFormatToken(\n    chainId,\n    address,\n    decimals,\n    name,\n    symbol,\n    underlying,\n  )\n  return token\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}