{"ast":null,"code":"import { USE_VERSION } from '../../config/constant';\n// In the following line, you should include the prefixes of implementations you want to test.\n// const window = window\nconst w = {};\nw.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n// DON'T use \"var indexedDB = ...\" if you're not in a function.\n// Moreover, you may need references to some window.IDB* objects:\nw.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {\n  READ_WRITE: \"readwrite\"\n}; // This line should only be needed if it is needed to support the object's constants for older browsers\nw.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)\n// const isSupportIndexedDB = false\nlet isSupportIndexedDB = true;\nif (!w.indexedDB) {\n  isSupportIndexedDB = false;\n}\nconst TOKENLIST = 'token-list';\nconst version = '0.1.6';\nfunction initVersion(version, configVersion) {\n  const VERSION = version + '_DB_VERSION';\n  // const VERSION = version + '_VERSION'\n  const curVersion = localStorage.getItem(VERSION);\n  // console.log(curVersion)\n  // console.log(configVersion)\n  if (curVersion && curVersion !== configVersion) {\n    // sessionStorage.clear()\n    // localStorage.clear()\n    w.indexedDB.deleteDatabase(TOKENLIST);\n    window.localStorage.setItem(VERSION, configVersion);\n  } else if (!curVersion) {\n    window.localStorage.setItem(VERSION, configVersion);\n  }\n}\nsetTimeout(() => {\n  initVersion(USE_VERSION, version);\n}, 0);\nexport { w, isSupportIndexedDB, TOKENLIST };","map":{"version":3,"names":["USE_VERSION","w","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","isSupportIndexedDB","TOKENLIST","version","initVersion","configVersion","VERSION","curVersion","localStorage","getItem","deleteDatabase","setItem","setTimeout"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/indexedDB/config.ts"],"sourcesContent":["import {USE_VERSION} from '../../config/constant'\n// In the following line, you should include the prefixes of implementations you want to test.\n// const window = window\nconst w:any = {}\nw.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n// DON'T use \"var indexedDB = ...\" if you're not in a function.\n// Moreover, you may need references to some window.IDB* objects:\nw.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: \"readwrite\"}; // This line should only be needed if it is needed to support the object's constants for older browsers\nw.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)\n// const isSupportIndexedDB = false\nlet isSupportIndexedDB = true\nif (!w.indexedDB) {\n  isSupportIndexedDB = false\n}\n\nconst TOKENLIST = 'token-list'\n\nconst version = '0.1.6'\n\nfunction initVersion (version:any, configVersion:any) {\n  const VERSION = version + '_DB_VERSION'\n  // const VERSION = version + '_VERSION'\n  const curVersion = localStorage.getItem(VERSION)\n  // console.log(curVersion)\n  // console.log(configVersion)\n  if (curVersion && curVersion !== configVersion) {\n    // sessionStorage.clear()\n    // localStorage.clear()\n    w.indexedDB.deleteDatabase(TOKENLIST)\n    window.localStorage.setItem(VERSION, configVersion)\n  } else if (!curVersion) {\n    window.localStorage.setItem(VERSION, configVersion)\n  }\n}\nsetTimeout(() => {\n  initVersion(USE_VERSION, version)\n},0)\n\nexport {\n  w,\n  isSupportIndexedDB,\n  TOKENLIST,\n}\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,uBAAuB;AACjD;AACA;AACA,MAAMC,CAAK,GAAG,CAAC,CAAC;AAChBA,CAAC,CAACC,SAAS,GAAGC,MAAM,CAACD,SAAS,IAAIC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,eAAe,IAAIF,MAAM,CAACG,WAAW;AACrG;AACA;AACAL,CAAC,CAACM,cAAc,GAAGJ,MAAM,CAACI,cAAc,IAAIJ,MAAM,CAACK,oBAAoB,IAAIL,MAAM,CAACM,gBAAgB,IAAI;EAACC,UAAU,EAAE;AAAW,CAAC,CAAC,CAAC;AACjIT,CAAC,CAACU,WAAW,GAAGR,MAAM,CAACQ,WAAW,IAAIR,MAAM,CAACS,iBAAiB,IAAIT,MAAM,CAACU,aAAa;AACtF;AACA;AACA,IAAIC,kBAAkB,GAAG,IAAI;AAC7B,IAAI,CAACb,CAAC,CAACC,SAAS,EAAE;EAChBY,kBAAkB,GAAG,KAAK;AAC5B;AAEA,MAAMC,SAAS,GAAG,YAAY;AAE9B,MAAMC,OAAO,GAAG,OAAO;AAEvB,SAASC,WAAWA,CAAED,OAAW,EAAEE,aAAiB,EAAE;EACpD,MAAMC,OAAO,GAAGH,OAAO,GAAG,aAAa;EACvC;EACA,MAAMI,UAAU,GAAGC,YAAY,CAACC,OAAO,CAACH,OAAO,CAAC;EAChD;EACA;EACA,IAAIC,UAAU,IAAIA,UAAU,KAAKF,aAAa,EAAE;IAC9C;IACA;IACAjB,CAAC,CAACC,SAAS,CAACqB,cAAc,CAACR,SAAS,CAAC;IACrCZ,MAAM,CAACkB,YAAY,CAACG,OAAO,CAACL,OAAO,EAAED,aAAa,CAAC;EACrD,CAAC,MAAM,IAAI,CAACE,UAAU,EAAE;IACtBjB,MAAM,CAACkB,YAAY,CAACG,OAAO,CAACL,OAAO,EAAED,aAAa,CAAC;EACrD;AACF;AACAO,UAAU,CAAC,MAAM;EACfR,WAAW,CAACjB,WAAW,EAAEgB,OAAO,CAAC;AACnC,CAAC,EAAC,CAAC,CAAC;AAEJ,SACEf,CAAC,EACDa,kBAAkB,EAClBC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}