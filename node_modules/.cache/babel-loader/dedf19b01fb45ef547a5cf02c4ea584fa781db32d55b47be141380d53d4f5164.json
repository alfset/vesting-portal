{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenTry = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar Counterparty_1 = require(\"../../core/connection/Counterparty\");\nvar Version_1 = require(\"../../core/connection/Version\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/tx\");\nvar long_1 = __importDefault(require(\"long\"));\nvar Height_1 = require(\"../../core/client/Height\");\n/**\n *  MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B.\n */\nvar MsgConnectionOpenTry = /** @class */function (_super) {\n  __extends(MsgConnectionOpenTry, _super);\n  /**\n   * @param client_id in the case of crossing hello's, when both chains call OpenInit, we need the connection identifier of the previous connection in state INIT\n   * @param previous_connection_id\n   * @param client_state\n   * @param counterparty\n   * @param delay_period\n   * @param counterparty_versions\n   * @param proof_height proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`\n   * @param proof_init proof of client state included in message\n   * @param proof_client proof of client consensus state\n   * @param proof_consensus\n   * @param consensus_height\n   * @param signer signer address\n   */\n  function MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty, delay_period, counterparty_versions, proof_height, proof_init, proof_client, proof_consensus, consensus_height, signer) {\n    var _this = _super.call(this) || this;\n    _this.client_id = client_id;\n    _this.previous_connection_id = previous_connection_id;\n    _this.client_state = client_state;\n    _this.counterparty = counterparty;\n    _this.delay_period = delay_period;\n    _this.counterparty_versions = counterparty_versions;\n    _this.proof_height = proof_height;\n    _this.proof_init = proof_init;\n    _this.proof_client = proof_client;\n    _this.proof_consensus = proof_consensus;\n    _this.consensus_height = consensus_height;\n    _this.signer = signer;\n    return _this;\n  }\n  MsgConnectionOpenTry.fromAmino = function (_, isClassic) {\n    _;\n    isClassic;\n    throw new Error('Amino not supported');\n  };\n  MsgConnectionOpenTry.prototype.toAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n  MsgConnectionOpenTry.fromData = function (data, _) {\n    _;\n    var client_id = data.client_id,\n      previous_connection_id = data.previous_connection_id,\n      client_state = data.client_state,\n      counterparty = data.counterparty,\n      delay_period = data.delay_period,\n      counterparty_versions = data.counterparty_versions,\n      proof_height = data.proof_height,\n      proof_init = data.proof_init,\n      proof_client = data.proof_client,\n      proof_consensus = data.proof_consensus,\n      consensus_height = data.consensus_height,\n      signer = data.signer;\n    return new MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, Number.parseInt(delay_period), counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n      return Version_1.Version.fromData(cv);\n    }) : [], proof_height ? Height_1.Height.fromData(proof_height) : undefined, Buffer.from(proof_init).toString('base64'), Buffer.from(proof_client).toString('base64'), Buffer.from(proof_consensus).toString('base64'), consensus_height ? Height_1.Height.fromData(consensus_height) : undefined, signer);\n  };\n  MsgConnectionOpenTry.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      client_id = _a.client_id,\n      previous_connection_id = _a.previous_connection_id,\n      client_state = _a.client_state,\n      counterparty = _a.counterparty,\n      delay_period = _a.delay_period,\n      counterparty_versions = _a.counterparty_versions,\n      proof_height = _a.proof_height,\n      proof_init = _a.proof_init,\n      proof_client = _a.proof_client,\n      proof_consensus = _a.proof_consensus,\n      consensus_height = _a.consensus_height,\n      signer = _a.signer;\n    return {\n      '@type': '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      client_id: client_id,\n      previous_connection_id: previous_connection_id,\n      client_state: client_state,\n      counterparty: counterparty ? counterparty.toData() : undefined,\n      delay_period: delay_period.toFixed(),\n      counterparty_versions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toData();\n      }) : [],\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      proof_init: proof_init,\n      proof_client: proof_client,\n      proof_consensus: proof_consensus,\n      consensus_height: consensus_height ? consensus_height.toData() : undefined,\n      signer: signer\n    };\n  };\n  MsgConnectionOpenTry.fromProto = function (proto, _) {\n    _;\n    return new MsgConnectionOpenTry(proto.clientId, proto.previousConnectionId, proto.clientState, proto.counterparty ? Counterparty_1.Counterparty.fromProto(proto.counterparty) : undefined, proto.delayPeriod.toNumber(), proto.counterpartyVersions.length > 0 ? proto.counterpartyVersions.map(function (cv) {\n      return Version_1.Version.fromProto(cv);\n    }) : [], proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, Buffer.from(proto.proofInit).toString('base64'), Buffer.from(proto.proofClient).toString('base64'), Buffer.from(proto.proofConsensus).toString('base64'), proto.consensusHeight ? Height_1.Height.fromProto(proto.consensusHeight) : undefined, proto.signer);\n  };\n  MsgConnectionOpenTry.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      client_id = _a.client_id,\n      previous_connection_id = _a.previous_connection_id,\n      client_state = _a.client_state,\n      counterparty = _a.counterparty,\n      delay_period = _a.delay_period,\n      counterparty_versions = _a.counterparty_versions,\n      proof_height = _a.proof_height,\n      proof_init = _a.proof_init,\n      proof_client = _a.proof_client,\n      proof_consensus = _a.proof_consensus,\n      consensus_height = _a.consensus_height,\n      signer = _a.signer;\n    return tx_1.MsgConnectionOpenTry.fromPartial({\n      clientId: client_id,\n      previousConnectionId: previous_connection_id,\n      clientState: client_state.toProto(),\n      counterparty: counterparty ? counterparty.toProto() : undefined,\n      delayPeriod: long_1.default.fromNumber(delay_period),\n      counterpartyVersions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toProto();\n      }) : [],\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      proofInit: Buffer.from(proof_init, 'base64'),\n      proofClient: Buffer.from(proof_client, 'base64'),\n      proofConsensus: Buffer.from(proof_consensus, 'base64'),\n      consensusHeight: consensus_height ? consensus_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n  MsgConnectionOpenTry.prototype.packAny = function (_) {\n    _;\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      value: tx_1.MsgConnectionOpenTry.encode(this.toProto()).finish()\n    });\n  };\n  MsgConnectionOpenTry.unpackAny = function (msgAny, _) {\n    _;\n    return MsgConnectionOpenTry.fromProto(tx_1.MsgConnectionOpenTry.decode(msgAny.value));\n  };\n  return MsgConnectionOpenTry;\n}(json_1.JSONSerializable);\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;","map":{"version":3,"names":["json_1","require","any_1","Counterparty_1","Version_1","tx_1","long_1","__importDefault","Height_1","MsgConnectionOpenTry","_super","__extends","client_id","previous_connection_id","client_state","counterparty","delay_period","counterparty_versions","proof_height","proof_init","proof_client","proof_consensus","consensus_height","signer","_this","call","fromAmino","_","isClassic","Error","prototype","toAmino","fromData","data","Counterparty","undefined","Number","parseInt","length","map","cv","Version","Height","Buffer","from","toString","toData","_a","toFixed","fromProto","proto","clientId","previousConnectionId","clientState","delayPeriod","toNumber","counterpartyVersions","proofHeight","proofInit","proofClient","proofConsensus","consensusHeight","toProto","fromPartial","default","fromNumber","packAny","Any","typeUrl","value","encode","finish","unpackAny","msgAny","decode","JSONSerializable","exports"],"sources":["../../../../../src/core/ibc/msgs/connection/MsgConnectionOpenTry.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}