{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { addPopup, ApplicationModal, removePopup, setOpenModal, viewTxnsDtils, viewTxnsErrorTip } from './actions';\nimport { useIsSafeAppConnection } from '../../connectors/gnosis-safe/hooks';\n// import {gnosissafe} from '../../connectors'\n\nexport function useBlockNumber(initChainId) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const useChainId = initChainId ? initChainId : chainId;\n  // console.log(useChainId)\n  return useSelector(state => {\n    // console.log(useChainId)\n    // console.log(state.application.blockNumber)\n    // console.log(state.application.blockNumber[useChainId ?? -1])\n    return state.application.blockNumber[useChainId !== null && useChainId !== void 0 ? useChainId : -1];\n  });\n}\nexport function useModalOpen(modal) {\n  const openModal = useSelector(state => state.application.openModal);\n  return openModal === modal;\n}\nexport function useToggleModal(modal) {\n  const open = useModalOpen(modal);\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open]);\n}\nexport function useOpenModal(modal) {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\n}\nexport function useCloseModals() {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\n}\nexport function useWalletModalToggle() {\n  return useToggleModal(ApplicationModal.WALLET);\n}\nexport function useNoWalletModalToggle() {\n  return useToggleModal(ApplicationModal.NO_WALLET);\n}\nexport function useToggleSettingsMenu() {\n  return useToggleModal(ApplicationModal.SETTINGS);\n}\nexport function useToggleNavMenu(key) {\n  return useToggleModal(key);\n}\nexport function useShowClaimPopup() {\n  return useModalOpen(ApplicationModal.CLAIM_POPUP);\n}\nexport function useToggleShowClaimPopup() {\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\n}\nexport function useToggleSelfClaimModal() {\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\n}\nexport function useToggleDelegateModal() {\n  return useToggleModal(ApplicationModal.DELEGATE);\n}\nexport function useToggleVoteModal() {\n  return useToggleModal(ApplicationModal.VOTE);\n}\nexport function useToggleNetworkModal() {\n  const isGnosisSafe = useIsSafeAppConnection();\n  const modal = ApplicationModal.NETWORK;\n  const open = useModalOpen(modal);\n  const dispatch = useDispatch();\n  return useCallback(() => {\n    // console.log(isGnosisSafe)\n    // console.log(gnosissafe)\n    if (isGnosisSafe) {\n      return dispatch(setOpenModal(null));\n    } else {\n      return dispatch(setOpenModal(open ? null : modal));\n    }\n  }, [dispatch, modal, open, isGnosisSafe]);\n\n  // const dispatch = useDispatch<AppDispatch>()\n  // const closeNetwork = useCallback(() => {\n  //   dispatch(setOpenModal(null))\n  // }, [dispatch, isGnosisSafe])\n  // console.log(isGnosisSafe)\n  // return isGnosisSafe ? closeNetwork : useToggleModal(ApplicationModal.NETWORK)\n}\n// returns a function that allows adding a popup\nexport function useAddPopup() {\n  const dispatch = useDispatch();\n  return useCallback((content, key) => {\n    dispatch(addPopup({\n      content,\n      key\n    }));\n  }, [dispatch]);\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup() {\n  const dispatch = useDispatch();\n  return useCallback(key => {\n    dispatch(removePopup({\n      key\n    }));\n  }, [dispatch]);\n}\n\n// get the list of active popups\nexport function useActivePopups() {\n  const list = useSelector(state => state.application.popupList);\n  return useMemo(() => list.filter(item => item.show), [list]);\n}\nexport function useTxnsDtilOpen() {\n  const viewTxnsDtilsData = useSelector(state => state.application.viewTxnsDtils);\n  const dispatch = useDispatch();\n  const onChangeViewDtil = useCallback((hash, isOpenModal) => {\n    // console.log(field)\n    // console.log(typedValue)\n    // console.log(typeInput({ field, typedValue }))\n    dispatch(viewTxnsDtils({\n      hash,\n      isOpenModal\n    }));\n  }, [dispatch]);\n  return {\n    ...(viewTxnsDtilsData ? viewTxnsDtilsData : {\n      hash: '',\n      isOpenModal: ''\n    }),\n    onChangeViewDtil\n  };\n}\nexport function useTxnsErrorTipOpen() {\n  const viewTxnsErrorTipData = useSelector(state => state.application.viewTxnsErrorTip);\n  const dispatch = useDispatch();\n  const onChangeViewErrorTip = useCallback((errorTip, isOpenModal) => {\n    var _errorTip$data;\n    console.log(errorTip);\n    // console.log(typedValue)\n    // console.log(typeInput({ field, typedValue }))\n    let errorContent = '';\n    if (errorTip === null || errorTip === void 0 ? void 0 : (_errorTip$data = errorTip.data) === null || _errorTip$data === void 0 ? void 0 : _errorTip$data.data) {\n      var _errorTip$data2, _errorTip$data3;\n      if ((errorTip === null || errorTip === void 0 ? void 0 : (_errorTip$data2 = errorTip.data) === null || _errorTip$data2 === void 0 ? void 0 : _errorTip$data2.data.indexOf('burn amount exceeds minter total')) !== -1) {\n        errorContent = 'No bridging quota on conflux chain.';\n      } else if (errorTip === null || errorTip === void 0 ? void 0 : (_errorTip$data3 = errorTip.data) === null || _errorTip$data3 === void 0 ? void 0 : _errorTip$data3.message) {\n        var _errorTip$data4;\n        errorContent = errorTip === null || errorTip === void 0 ? void 0 : (_errorTip$data4 = errorTip.data) === null || _errorTip$data4 === void 0 ? void 0 : _errorTip$data4.message;\n      }\n    } else if (errorTip === null || errorTip === void 0 ? void 0 : errorTip.message) {\n      errorContent = errorTip === null || errorTip === void 0 ? void 0 : errorTip.message;\n    } else {\n      errorContent = errorTip.toString();\n    }\n    dispatch(viewTxnsErrorTip({\n      errorTip: errorContent,\n      isOpenModal\n    }));\n  }, [dispatch]);\n  return {\n    ...(viewTxnsErrorTipData ? viewTxnsErrorTipData : {\n      errorTip: '',\n      isOpenModal: ''\n    }),\n    onChangeViewErrorTip\n  };\n}","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useActiveWeb3React","addPopup","ApplicationModal","removePopup","setOpenModal","viewTxnsDtils","viewTxnsErrorTip","useIsSafeAppConnection","useBlockNumber","initChainId","chainId","useChainId","state","application","blockNumber","useModalOpen","modal","openModal","useToggleModal","open","dispatch","useOpenModal","useCloseModals","useWalletModalToggle","WALLET","useNoWalletModalToggle","NO_WALLET","useToggleSettingsMenu","SETTINGS","useToggleNavMenu","key","useShowClaimPopup","CLAIM_POPUP","useToggleShowClaimPopup","useToggleSelfClaimModal","SELF_CLAIM","useToggleDelegateModal","DELEGATE","useToggleVoteModal","VOTE","useToggleNetworkModal","isGnosisSafe","NETWORK","useAddPopup","content","useRemovePopup","useActivePopups","list","popupList","filter","item","show","useTxnsDtilOpen","viewTxnsDtilsData","onChangeViewDtil","hash","isOpenModal","useTxnsErrorTipOpen","viewTxnsErrorTipData","onChangeViewErrorTip","errorTip","_errorTip$data","console","log","errorContent","data","_errorTip$data2","_errorTip$data3","indexOf","message","_errorTip$data4","toString"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/application/hooks.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal, viewTxnsDtils, viewTxnsErrorTip } from './actions'\n\nimport {useIsSafeAppConnection} from '../../connectors/gnosis-safe/hooks'\n// import {gnosissafe} from '../../connectors'\n\nexport function useBlockNumber(initChainId?:any): number | undefined {\n  const { chainId } = useActiveWeb3React()\n  const useChainId = initChainId ? initChainId : chainId\n  // console.log(useChainId)\n  return useSelector((state: AppState) => { \n    // console.log(useChainId)\n    // console.log(state.application.blockNumber)\n    // console.log(state.application.blockNumber[useChainId ?? -1])\n    return state.application.blockNumber[useChainId ?? -1]\n  })\n}\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n  const openModal = useSelector((state: AppState) => state.application.openModal)\n  return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useCloseModals(): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useNoWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.NO_WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\nexport function useToggleNavMenu(key:any): () => void {\n  return useToggleModal(key)\n}\n\nexport function useShowClaimPopup(): boolean {\n  return useModalOpen(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleShowClaimPopup(): () => void {\n  return useToggleModal(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleSelfClaimModal(): () => void {\n  return useToggleModal(ApplicationModal.SELF_CLAIM)\n}\n\nexport function useToggleDelegateModal(): () => void {\n  return useToggleModal(ApplicationModal.DELEGATE)\n}\n\nexport function useToggleVoteModal(): () => void {\n  return useToggleModal(ApplicationModal.VOTE)\n}\n\n\nexport function useToggleNetworkModal(): () => void {\n  const isGnosisSafe = useIsSafeAppConnection()\n  const modal = ApplicationModal.NETWORK\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => {\n    // console.log(isGnosisSafe)\n    // console.log(gnosissafe)\n    if (isGnosisSafe) {\n      return dispatch(setOpenModal(null))\n    } else {\n      return dispatch(setOpenModal(open ? null : modal))\n    }\n  }, [dispatch, modal, open, isGnosisSafe])\n\n\n\n\n\n  // const dispatch = useDispatch<AppDispatch>()\n  // const closeNetwork = useCallback(() => {\n  //   dispatch(setOpenModal(null))\n  // }, [dispatch, isGnosisSafe])\n  // console.log(isGnosisSafe)\n  // return isGnosisSafe ? closeNetwork : useToggleModal(ApplicationModal.NETWORK)\n}\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n\n\nexport function useTxnsDtilOpen(): any {\n  const viewTxnsDtilsData = useSelector((state: AppState) => state.application.viewTxnsDtils)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeViewDtil = useCallback(\n    (hash: any, isOpenModal: any) => {\n      // console.log(field)\n      // console.log(typedValue)\n      // console.log(typeInput({ field, typedValue }))\n      dispatch(viewTxnsDtils({ hash, isOpenModal }))\n    },\n    [dispatch]\n  )\n\n  return {\n    ...(viewTxnsDtilsData ? viewTxnsDtilsData : {\n      hash: '',\n      isOpenModal: ''\n    }),\n    onChangeViewDtil\n  }\n}\nexport function useTxnsErrorTipOpen(): any {\n  const viewTxnsErrorTipData = useSelector((state: AppState) => state.application.viewTxnsErrorTip)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeViewErrorTip = useCallback(\n    (errorTip: any, isOpenModal: any) => {\n      console.log(errorTip)\n      // console.log(typedValue)\n      // console.log(typeInput({ field, typedValue }))\n      let errorContent = ''\n      if (errorTip?.data?.data) {\n        if (errorTip?.data?.data.indexOf('burn amount exceeds minter total') !== -1) {\n          errorContent = 'No bridging quota on conflux chain.'\n        } else if (errorTip?.data?.message) {\n          errorContent = errorTip?.data?.message\n        }\n      } else if (errorTip?.message) {\n        errorContent = errorTip?.message\n      } else {\n        errorContent = errorTip.toString()\n      }\n      dispatch(viewTxnsErrorTip({ errorTip: errorContent, isOpenModal }))\n    },\n    [dispatch]\n  )\n\n  return {\n    ...(viewTxnsErrorTipData ? viewTxnsErrorTipData : {\n      errorTip: '',\n      isOpenModal: ''\n    }),\n    onChangeViewErrorTip\n  }\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,aAAa;AAEhD,SAASC,QAAQ,EAAEC,gBAAgB,EAAgBC,WAAW,EAAEC,YAAY,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,WAAW;AAEhI,SAAQC,sBAAsB,QAAO,oCAAoC;AACzE;;AAEA,OAAO,SAASC,cAAcA,CAACC,WAAgB,EAAsB;EACnE,MAAM;IAAEC;EAAQ,CAAC,GAAGV,kBAAkB,CAAC,CAAC;EACxC,MAAMW,UAAU,GAAGF,WAAW,GAAGA,WAAW,GAAGC,OAAO;EACtD;EACA,OAAOX,WAAW,CAAEa,KAAe,IAAK;IACtC;IACA;IACA;IACA,OAAOA,KAAK,CAACC,WAAW,CAACC,WAAW,CAACH,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,CAAC,CAAC,CAAC;EACxD,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,YAAYA,CAACC,KAAuB,EAAW;EAC7D,MAAMC,SAAS,GAAGlB,WAAW,CAAEa,KAAe,IAAKA,KAAK,CAACC,WAAW,CAACI,SAAS,CAAC;EAC/E,OAAOA,SAAS,KAAKD,KAAK;AAC5B;AAEA,OAAO,SAASE,cAAcA,CAACF,KAAuB,EAAc;EAClE,MAAMG,IAAI,GAAGJ,YAAY,CAACC,KAAK,CAAC;EAChC,MAAMI,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,OAAOF,WAAW,CAAC,MAAMwB,QAAQ,CAAChB,YAAY,CAACe,IAAI,GAAG,IAAI,GAAGH,KAAK,CAAC,CAAC,EAAE,CAACI,QAAQ,EAAEJ,KAAK,EAAEG,IAAI,CAAC,CAAC;AAChG;AAEA,OAAO,SAASE,YAAYA,CAACL,KAAuB,EAAc;EAChE,MAAMI,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,OAAOF,WAAW,CAAC,MAAMwB,QAAQ,CAAChB,YAAY,CAACY,KAAK,CAAC,CAAC,EAAE,CAACI,QAAQ,EAAEJ,KAAK,CAAC,CAAC;AAC5E;AAEA,OAAO,SAASM,cAAcA,CAAA,EAAe;EAC3C,MAAMF,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,OAAOF,WAAW,CAAC,MAAMwB,QAAQ,CAAChB,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAACgB,QAAQ,CAAC,CAAC;AACpE;AAEA,OAAO,SAASG,oBAAoBA,CAAA,EAAe;EACjD,OAAOL,cAAc,CAAChB,gBAAgB,CAACsB,MAAM,CAAC;AAChD;AAEA,OAAO,SAASC,sBAAsBA,CAAA,EAAe;EACnD,OAAOP,cAAc,CAAChB,gBAAgB,CAACwB,SAAS,CAAC;AACnD;AAEA,OAAO,SAASC,qBAAqBA,CAAA,EAAe;EAClD,OAAOT,cAAc,CAAChB,gBAAgB,CAAC0B,QAAQ,CAAC;AAClD;AAEA,OAAO,SAASC,gBAAgBA,CAACC,GAAO,EAAc;EACpD,OAAOZ,cAAc,CAACY,GAAG,CAAC;AAC5B;AAEA,OAAO,SAASC,iBAAiBA,CAAA,EAAY;EAC3C,OAAOhB,YAAY,CAACb,gBAAgB,CAAC8B,WAAW,CAAC;AACnD;AAEA,OAAO,SAASC,uBAAuBA,CAAA,EAAe;EACpD,OAAOf,cAAc,CAAChB,gBAAgB,CAAC8B,WAAW,CAAC;AACrD;AAEA,OAAO,SAASE,uBAAuBA,CAAA,EAAe;EACpD,OAAOhB,cAAc,CAAChB,gBAAgB,CAACiC,UAAU,CAAC;AACpD;AAEA,OAAO,SAASC,sBAAsBA,CAAA,EAAe;EACnD,OAAOlB,cAAc,CAAChB,gBAAgB,CAACmC,QAAQ,CAAC;AAClD;AAEA,OAAO,SAASC,kBAAkBA,CAAA,EAAe;EAC/C,OAAOpB,cAAc,CAAChB,gBAAgB,CAACqC,IAAI,CAAC;AAC9C;AAGA,OAAO,SAASC,qBAAqBA,CAAA,EAAe;EAClD,MAAMC,YAAY,GAAGlC,sBAAsB,CAAC,CAAC;EAC7C,MAAMS,KAAK,GAAGd,gBAAgB,CAACwC,OAAO;EACtC,MAAMvB,IAAI,GAAGJ,YAAY,CAACC,KAAK,CAAC;EAChC,MAAMI,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,OAAOF,WAAW,CAAC,MAAM;IACvB;IACA;IACA,IAAI6C,YAAY,EAAE;MAChB,OAAOrB,QAAQ,CAAChB,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,MAAM;MACL,OAAOgB,QAAQ,CAAChB,YAAY,CAACe,IAAI,GAAG,IAAI,GAAGH,KAAK,CAAC,CAAC;IACpD;EACF,CAAC,EAAE,CAACI,QAAQ,EAAEJ,KAAK,EAAEG,IAAI,EAAEsB,YAAY,CAAC,CAAC;;EAMzC;EACA;EACA;EACA;EACA;EACA;AACF;AACA;AACA,OAAO,SAASE,WAAWA,CAAA,EAAkD;EAC3E,MAAMvB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,OAAOF,WAAW,CAChB,CAACgD,OAAqB,EAAEd,GAAY,KAAK;IACvCV,QAAQ,CAACnB,QAAQ,CAAC;MAAE2C,OAAO;MAAEd;IAAI,CAAC,CAAC,CAAC;EACtC,CAAC,EACD,CAACV,QAAQ,CACX,CAAC;AACH;;AAEA;AACA,OAAO,SAASyB,cAAcA,CAAA,EAA0B;EACtD,MAAMzB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,OAAOF,WAAW,CACfkC,GAAW,IAAK;IACfV,QAAQ,CAACjB,WAAW,CAAC;MAAE2B;IAAI,CAAC,CAAC,CAAC;EAChC,CAAC,EACD,CAACV,QAAQ,CACX,CAAC;AACH;;AAEA;AACA,OAAO,SAAS0B,eAAeA,CAAA,EAAyC;EACtE,MAAMC,IAAI,GAAGhD,WAAW,CAAEa,KAAe,IAAKA,KAAK,CAACC,WAAW,CAACmC,SAAS,CAAC;EAC1E,OAAOnD,OAAO,CAAC,MAAMkD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;AAC9D;AAGA,OAAO,SAASK,eAAeA,CAAA,EAAQ;EACrC,MAAMC,iBAAiB,GAAGtD,WAAW,CAAEa,KAAe,IAAKA,KAAK,CAACC,WAAW,CAACR,aAAa,CAAC;EAC3F,MAAMe,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,MAAMwD,gBAAgB,GAAG1D,WAAW,CAClC,CAAC2D,IAAS,EAAEC,WAAgB,KAAK;IAC/B;IACA;IACA;IACApC,QAAQ,CAACf,aAAa,CAAC;MAAEkD,IAAI;MAAEC;IAAY,CAAC,CAAC,CAAC;EAChD,CAAC,EACD,CAACpC,QAAQ,CACX,CAAC;EAED,OAAO;IACL,IAAIiC,iBAAiB,GAAGA,iBAAiB,GAAG;MAC1CE,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;IACf,CAAC,CAAC;IACFF;EACF,CAAC;AACH;AACA,OAAO,SAASG,mBAAmBA,CAAA,EAAQ;EACzC,MAAMC,oBAAoB,GAAG3D,WAAW,CAAEa,KAAe,IAAKA,KAAK,CAACC,WAAW,CAACP,gBAAgB,CAAC;EACjG,MAAMc,QAAQ,GAAGtB,WAAW,CAAc,CAAC;EAC3C,MAAM6D,oBAAoB,GAAG/D,WAAW,CACtC,CAACgE,QAAa,EAAEJ,WAAgB,KAAK;IAAA,IAAAK,cAAA;IACnCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB;IACA;IACA,IAAII,YAAY,GAAG,EAAE;IACrB,IAAIJ,QAAQ,aAARA,QAAQ,wBAAAC,cAAA,GAARD,QAAQ,CAAEK,IAAI,cAAAJ,cAAA,uBAAdA,cAAA,CAAgBI,IAAI,EAAE;MAAA,IAAAC,eAAA,EAAAC,eAAA;MACxB,IAAI,CAAAP,QAAQ,aAARA,QAAQ,wBAAAM,eAAA,GAARN,QAAQ,CAAEK,IAAI,cAAAC,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,CAACG,OAAO,CAAC,kCAAkC,CAAC,MAAK,CAAC,CAAC,EAAE;QAC3EJ,YAAY,GAAG,qCAAqC;MACtD,CAAC,MAAM,IAAIJ,QAAQ,aAARA,QAAQ,wBAAAO,eAAA,GAARP,QAAQ,CAAEK,IAAI,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,OAAO,EAAE;QAAA,IAAAC,eAAA;QAClCN,YAAY,GAAGJ,QAAQ,aAARA,QAAQ,wBAAAU,eAAA,GAARV,QAAQ,CAAEK,IAAI,cAAAK,eAAA,uBAAdA,eAAA,CAAgBD,OAAO;MACxC;IACF,CAAC,MAAM,IAAIT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,OAAO,EAAE;MAC5BL,YAAY,GAAGJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,OAAO;IAClC,CAAC,MAAM;MACLL,YAAY,GAAGJ,QAAQ,CAACW,QAAQ,CAAC,CAAC;IACpC;IACAnD,QAAQ,CAACd,gBAAgB,CAAC;MAAEsD,QAAQ,EAAEI,YAAY;MAAER;IAAY,CAAC,CAAC,CAAC;EACrE,CAAC,EACD,CAACpC,QAAQ,CACX,CAAC;EAED,OAAO;IACL,IAAIsC,oBAAoB,GAAGA,oBAAoB,GAAG;MAChDE,QAAQ,EAAE,EAAE;MACZJ,WAAW,EAAE;IACf,CAAC,CAAC;IACFG;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}