{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useEffect}from\"react\";import{createBrowserHistory}from'history';// import styled, {ThemeContext} from \"styled-components\"\nimport styled from\"styled-components\";import{NavLink}from'react-router-dom';import{useTranslation}from'react-i18next';// import { CheckCircle, AlertCircle } from 'react-feather'\n// import Loader from '../Loader'\nimport Copy from'../AccountDetails/Copy';import TokenLogo from'../TokenLogo';import{getEtherscanLink,shortenAddress}from'../../utils';import{useWeb3}from'../../utils/tools/web3UtilsV2';// import {timeChange} from '../../utils/tools/tools'\nimport{useUpdateUnderlyingStatus}from'../../state/transactions/hooks';import{selectNetwork}from'../../config/tools/methods';import{ExternalLink}from'../../theme';import{BottomGrouping}from'../swap/styleds';import{// ButtonLight,\nButtonPrimary// ButtonConfirmed\n}from'../Button';import{Status}from'../../config/status';import config from'../../config';import{addToken}from'../../config/tools/methods';import{thousandBit}from'../../utils/tools/tools';import TxnsProgress from'./txnsProgress';import{ReactComponent as Metamask}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/metamask.svg\";import{useChangeTokenOnWallet,useUserSelectChainId}from'../../state/user/hooks';// import ScheduleIcon from '../../assets/images/icon/schedule.svg'\n// const ChainStatusBox = styled.div`\n//   ${({ theme }) => theme.flexBC};\n//   width: 100%;\n//   font-size:12px;\n//   color: ${({ theme }) => theme.textColorBold};\n//   // color: #031a6e;\n//   font-weight:bold;\n//   padding: 12px 15px;\n//   border-radius:9px;\n//   margin:15px 0;\n//   .name {\n//     ${({ theme }) => theme.flexSC};\n//   }\n//   .status {\n//     ${({ theme }) => theme.flexEC};\n//   }\n//   &.yellow,&.Confirming,&.Crosschaining,&.Routing {\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder};\n//     background: ${({ theme }) => theme.birdgeStateBg};\n//   }\n//   &.green,&.Success, &.Pending{\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder1};\n//     background: ${({ theme }) => theme.birdgeStateBg1};\n//   }\n//   &.red,&.Failure, &.Timeout, &.BigAmount{\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder2};\n//     background: ${({ theme }) => theme.birdgeStateBg2};\n//   }\n// `\nconst Link=styled(ExternalLink)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\ntext-align:right;\\n\"])));const Link2=styled(NavLink)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align:right;\\n\"])));const TxnsDtilBox=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 20px 20px;\\n  .a {\\n    width: 100%;\\n    font-size: 14px;\\n    color: \",\";\\n    text-decoration: none;\\n    overflow:hidden;\\n    text-overflow:ellipsis;\\n    white-space:nowrap;\\n    display:block;\\n    &:hover,&:focus,&:active,&:focus-visible{\\n      border:none;\\n      background: none;\\n    }\\n  }\\n  .tips {\\n    font-size: 14px;\\n    height: 21px;\\n    line-height: 21px;\\n    text-align:center;\\n    .a {\\n      width: 100%;\\n    }\\n  }\\n\"])),_ref=>{let{theme}=_ref;return theme.primary4;});const TxnsDtilList=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding:10px;\\n  margin: 0 0 10px;\\n  border-radius: 10px;\\n  border: 1px solid \",\";\\n  .item {\\n    \",\";\\n    width: 100%;\\n    margin-bottom: 10px;\\n    &:last-child {\\n      margin-bottom: 0px;\\n    }\\n    .title {\\n      font-size: 16px;\\n      margin: 0;\\n      width: 40%;\\n    }\\n    .label {\\n      \",\";\\n      width: 40%;\\n      .cont {\\n        font-size: 14px;\\n        color: \",\";\\n        margin-left: 10px;\\n        .info {\\n          color: \",\";\\n        }\\n      }\\n    }\\n    .value {\\n      \",\";\\n      width: 60%;\\n      .cont {\\n        \",\";\\n        font-size: 14px;\\n        color: \",\";\\n        margin-left: 10px;\\n        .info {\\n          color: \",\";\\n        }\\n        .name {\\n          margin-right: 5px;\\n        }\\n      }\\n    }\\n    .txtLabel {\\n      font-size: 14px;\\n      width: 40%;\\n      color: \",\";\\n    }\\n  }\\n\"])),_ref2=>{let{theme}=_ref2;return theme.bg3;},_ref3=>{let{theme}=_ref3;return theme.flexBC;},_ref4=>{let{theme}=_ref4;return theme.flexSC;},_ref5=>{let{theme}=_ref5;return theme.textColor;},_ref6=>{let{theme}=_ref6;return theme.text2;},_ref7=>{let{theme}=_ref7;return theme.flexEC;},_ref8=>{let{theme}=_ref8;return theme.flexEC;},_ref9=>{let{theme}=_ref9;return theme.textColor;},_ref10=>{let{theme}=_ref10;return theme.text2;},_ref11=>{let{theme}=_ref11;return theme.textColor;});const RemoveTip=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 12px;\\n\"])),_ref12=>{let{theme}=_ref12;return theme.red1;});const MetamaskIcon=styled(Metamask)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  height: 16px;\\n  width: 16px;\\n  min-height: 16px;\\n  min-width: 16px;\\n  margin-left: 5px;\\n\"])));const FlexC=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  \",\";\\n  width: 100%;\\n\"])),_ref13=>{let{theme}=_ref13;return theme.flexC;});function DestChainStatus(_ref14){let{fromStatus,toStatus}=_ref14;if(fromStatus===Status.Pending){return undefined;}else if(fromStatus===Status.Failure){return Status.Failure;}else if(fromStatus===Status.Success){if(!toStatus||toStatus===Status.Confirming){return Status.Confirming;}else if(toStatus===Status.Crosschaining){return Status.Crosschaining;}else if(toStatus===Status.Success){return Status.Success;}else{return toStatus;}}else{return toStatus;}}export default function HistoryDetails(_ref15){var _config$getCurChainIn,_config$getCurChainIn2,_config$getCurChainIn3,_config$getCurChainIn4,_config$getCurChainIn5,_config$getCurChainIn6,_config$getCurChainIn7,_config$getCurChainIn8;let{symbol,from,to,fromChainID,toChainID,fromStatus,toStatus,swapvalue,timestamp,txid,swaptx,value,version,token,isLiquidity,isReceiveAnyToken,avgTime,logoUrl,fromInfo,toInfo,txData}=_ref15;const{t}=useTranslation();const{setUnderlyingStatus}=useUpdateUnderlyingStatus();// const theme = useContext(ThemeContext)\nconst useToStatus=DestChainStatus({fromStatus,toStatus});const history=createBrowserHistory();const{onAddToken}=useChangeTokenOnWallet();const{setUserSelectNetwork}=useUserSelectChainId();useEffect(()=>{if(isLiquidity&&swaptx&&!isReceiveAnyToken){useWeb3(toChainID,'eth','getTransactionReceipt',[swaptx]).then(res=>{console.log(res);if(res&&res.logs&&res.logs.length<4&&setUnderlyingStatus){setUnderlyingStatus(fromChainID,txid,true);}});}},[isLiquidity,swaptx,toChainID,isReceiveAnyToken]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TxnsDtilBox,null,/*#__PURE__*/React.createElement(TxnsDtilList,null,/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"title\"},t('From'))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(TokenLogo,{symbol:(_config$getCurChainIn=(_config$getCurChainIn2=config.getCurChainInfo(fromChainID))===null||_config$getCurChainIn2===void 0?void 0:_config$getCurChainIn2.networkLogo)!==null&&_config$getCurChainIn!==void 0?_config$getCurChainIn:(_config$getCurChainIn3=config.getCurChainInfo(fromChainID))===null||_config$getCurChainIn3===void 0?void 0:_config$getCurChainIn3.symbol,size:'24px'}),/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},(_config$getCurChainIn4=config.getCurChainInfo(fromChainID))===null||_config$getCurChainIn4===void 0?void 0:_config$getCurChainIn4.name))),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},\"- \",thousandBit(value,2)+' '+symbol,isNaN(fromChainID)?'':/*#__PURE__*/React.createElement(MetamaskIcon,{onClick:event=>{// console.log(currencyObj)\naddToken(fromInfo.address,symbol,fromInfo.decimals,logoUrl);event.stopPropagation();}})))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"txtLabel\"},\"Tx hash:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(Link,{className:\"a\",href:getEtherscanLink(fromChainID,txid,'transaction'),target:\"_blank\"},txid),/*#__PURE__*/React.createElement(Copy,{toCopy:txid}))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"txtLabel\"},t('From'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(Link,{className:\"a\",href:getEtherscanLink(fromChainID,from,'address'),target:\"_blank\"},from?shortenAddress(from,6):''),/*#__PURE__*/React.createElement(Copy,{toCopy:from})))),/*#__PURE__*/React.createElement(TxnsDtilList,null,/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"title\"},t('to'))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(TokenLogo,{symbol:(_config$getCurChainIn5=(_config$getCurChainIn6=config.getCurChainInfo(toChainID))===null||_config$getCurChainIn6===void 0?void 0:_config$getCurChainIn6.networkLogo)!==null&&_config$getCurChainIn5!==void 0?_config$getCurChainIn5:(_config$getCurChainIn7=config.getCurChainInfo(toChainID))===null||_config$getCurChainIn7===void 0?void 0:_config$getCurChainIn7.symbol,size:'24px'}),/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},/*#__PURE__*/React.createElement(\"div\",{className:\"name\"},(_config$getCurChainIn8=config.getCurChainInfo(toChainID))===null||_config$getCurChainIn8===void 0?void 0:_config$getCurChainIn8.name))),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},swapvalue?/*#__PURE__*/React.createElement(React.Fragment,null,'+ '+thousandBit(swapvalue,2)+' '+symbol,isNaN(toChainID)?'':/*#__PURE__*/React.createElement(MetamaskIcon,{onClick:event=>{// console.log(currencyObj)\nonAddToken(toChainID,toInfo);if(setUserSelectNetwork){setUserSelectNetwork('');}selectNetwork(toChainID,1).then(res=>{console.log(res);history.go(0);});event.stopPropagation();}})):'-'))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"txtLabel\"},\"Tx hash:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(Link,{className:\"a\",href:getEtherscanLink(toChainID,swaptx,'transaction'),target:\"_blank\"},swaptx),/*#__PURE__*/React.createElement(Copy,{toCopy:swaptx}))),/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"txtLabel\"},t('Receive'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(Link,{className:\"a\",href:getEtherscanLink(toChainID,to,'address'),target:\"_blank\"},to?shortenAddress(to,6):''),/*#__PURE__*/React.createElement(Copy,{toCopy:to}))),fromStatus===Status.Success&&useToStatus===Status.Success&&!['swapin','swapout'].includes(version)&&token&&isReceiveAnyToken?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"txtLabel\"},t('Remove'),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(Link2,{className:\"a\",to:\"/pool/add?bridgetoken=\".concat(token,\"&bridgetype=withdraw\")},\"Remove the liquidity ->\")))):''),/*#__PURE__*/React.createElement(FlexC,null,/*#__PURE__*/React.createElement(TxnsProgress,{hash:txid,txData:txData})),avgTime?/*#__PURE__*/React.createElement(TxnsDtilList,null,/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},\"Time used:\")),/*#__PURE__*/React.createElement(\"div\",{className:\"value\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cont\"},avgTime,\" s / \",(avgTime/60).toFixed(2),\" m\")))):'',fromStatus===Status.Success&&useToStatus===Status.Success&&!['swapin','swapout'].includes(version)&&token&&isReceiveAnyToken?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(RemoveTip,null,t('removeanytokentip'),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ExternalLink,{href:\"https://multichain.zendesk.com/hc/en-us/articles/4410379722639-Redeem-Remove-Pool-Token-Anyassets-e-g-anyUSDC-anyUSDT-anyDAI-anyETH-anyFTM-etc-into-Native-Token-Tutorial\"},\"https://multichain.zendesk.com...\")),/*#__PURE__*/React.createElement(BottomGrouping,{onClick:()=>{selectNetwork(toChainID,1).then(res=>{console.log(res);if(res.msg==='Error'){alert(t('changeMetamaskNetwork',{label:config.getCurChainInfo(toChainID).networkName}));}else{history.push(\"#/pool/add?bridgetoken=\".concat(symbol,\"&bridgetype=withdraw\"));history.go(0);// history.replace(`/pool/add?bridgetoken=${token}&bridgetype=withdraw`)\n// window.open(`/pool/add?bridgetoken=${token}&bridgetype=withdraw`)\n// alert('1111')\n}});}},/*#__PURE__*/React.createElement(ButtonPrimary,null,\"Remove the liquidity -> \"))):'',fromStatus===Status.Success&&!toStatus&&Date.now()-(timestamp.length<=10?Number(timestamp)*1000:Number(timestamp))>1000*60*30?/*#__PURE__*/React.createElement(\"div\",{className:\"tips\"},/*#__PURE__*/React.createElement(Link,{className:\"a\",href:\"\".concat(config.explorer,\"?tabparams=tools&fromChainID=\").concat(fromChainID,\"&toChainID=\").concat(toChainID,\"&symbol=\").concat(symbol,\"&hash=\").concat(txid),target:\"_blank\"},\"Go to Explorer submit hash ->\")):''));}","map":{"version":3,"names":["React","useEffect","createBrowserHistory","styled","NavLink","useTranslation","Copy","TokenLogo","getEtherscanLink","shortenAddress","useWeb3","useUpdateUnderlyingStatus","selectNetwork","ExternalLink","BottomGrouping","ButtonPrimary","Status","config","addToken","thousandBit","TxnsProgress","ReactComponent","Metamask","useChangeTokenOnWallet","useUserSelectChainId","Link","_templateObject","_taggedTemplateLiteral","Link2","_templateObject2","TxnsDtilBox","div","_templateObject3","_ref","theme","primary4","TxnsDtilList","_templateObject4","_ref2","bg3","_ref3","flexBC","_ref4","flexSC","_ref5","textColor","_ref6","text2","_ref7","flexEC","_ref8","_ref9","_ref10","_ref11","RemoveTip","_templateObject5","_ref12","red1","MetamaskIcon","_templateObject6","FlexC","_templateObject7","_ref13","flexC","DestChainStatus","_ref14","fromStatus","toStatus","Pending","undefined","Failure","Success","Confirming","Crosschaining","HistoryDetails","_ref15","_config$getCurChainIn","_config$getCurChainIn2","_config$getCurChainIn3","_config$getCurChainIn4","_config$getCurChainIn5","_config$getCurChainIn6","_config$getCurChainIn7","_config$getCurChainIn8","symbol","from","to","fromChainID","toChainID","swapvalue","timestamp","txid","swaptx","value","version","token","isLiquidity","isReceiveAnyToken","avgTime","logoUrl","fromInfo","toInfo","txData","t","setUnderlyingStatus","useToStatus","history","onAddToken","setUserSelectNetwork","then","res","console","log","logs","length","createElement","Fragment","className","getCurChainInfo","networkLogo","size","name","isNaN","onClick","event","address","decimals","stopPropagation","href","target","toCopy","go","includes","concat","hash","toFixed","msg","alert","label","networkName","push","Date","now","Number","explorer"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/Transaction/details.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { createBrowserHistory } from 'history'\n// import styled, {ThemeContext} from \"styled-components\"\nimport styled from \"styled-components\"\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n// import { CheckCircle, AlertCircle } from 'react-feather'\n// import Loader from '../Loader'\nimport Copy from '../AccountDetails/Copy'\nimport TokenLogo from '../TokenLogo'\n\nimport { getEtherscanLink, shortenAddress } from '../../utils'\nimport {useWeb3} from '../../utils/tools/web3UtilsV2'\n// import {timeChange} from '../../utils/tools/tools'\n\nimport {useUpdateUnderlyingStatus} from '../../state/transactions/hooks'\n\nimport {selectNetwork} from '../../config/tools/methods'\n\nimport { ExternalLink } from '../../theme'\nimport { BottomGrouping } from '../swap/styleds'\nimport { \n  // ButtonLight,\n  ButtonPrimary,\n  // ButtonConfirmed\n} from '../Button'\n\nimport {Status} from '../../config/status'\nimport config from '../../config'\nimport {addToken} from '../../config/tools/methods'\nimport {thousandBit} from '../../utils/tools/tools'\n\nimport TxnsProgress from './txnsProgress'\nimport { ReactComponent as Metamask } from '../../assets/images/metamask.svg'\n\nimport {useChangeTokenOnWallet, useUserSelectChainId} from '../../state/user/hooks'\n\n\n// import ScheduleIcon from '../../assets/images/icon/schedule.svg'\n\n// const ChainStatusBox = styled.div`\n//   ${({ theme }) => theme.flexBC};\n//   width: 100%;\n//   font-size:12px;\n//   color: ${({ theme }) => theme.textColorBold};\n//   // color: #031a6e;\n//   font-weight:bold;\n//   padding: 12px 15px;\n//   border-radius:9px;\n//   margin:15px 0;\n//   .name {\n//     ${({ theme }) => theme.flexSC};\n//   }\n//   .status {\n//     ${({ theme }) => theme.flexEC};\n//   }\n//   &.yellow,&.Confirming,&.Crosschaining,&.Routing {\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder};\n//     background: ${({ theme }) => theme.birdgeStateBg};\n//   }\n//   &.green,&.Success, &.Pending{\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder1};\n//     background: ${({ theme }) => theme.birdgeStateBg1};\n//   }\n//   &.red,&.Failure, &.Timeout, &.BigAmount{\n//     border: 1px solid ${({ theme }) => theme.birdgeStateBorder2};\n//     background: ${({ theme }) => theme.birdgeStateBg2};\n//   }\n// `\n\nconst Link = styled(ExternalLink)`\ntext-align:right;\n`\nconst Link2 = styled(NavLink)`\n  text-align:right;\n`\nconst TxnsDtilBox  = styled.div`\n  width: 100%;\n  padding: 20px 20px;\n  .a {\n    width: 100%;\n    font-size: 14px;\n    color: ${({theme}) => theme.primary4};\n    text-decoration: none;\n    overflow:hidden;\n    text-overflow:ellipsis;\n    white-space:nowrap;\n    display:block;\n    &:hover,&:focus,&:active,&:focus-visible{\n      border:none;\n      background: none;\n    }\n  }\n  .tips {\n    font-size: 14px;\n    height: 21px;\n    line-height: 21px;\n    text-align:center;\n    .a {\n      width: 100%;\n    }\n  }\n`\nconst TxnsDtilList = styled.div`\n  width: 100%;\n  padding:10px;\n  margin: 0 0 10px;\n  border-radius: 10px;\n  border: 1px solid ${({theme}) => theme.bg3};\n  .item {\n    ${({ theme }) => theme.flexBC};\n    width: 100%;\n    margin-bottom: 10px;\n    &:last-child {\n      margin-bottom: 0px;\n    }\n    .title {\n      font-size: 16px;\n      margin: 0;\n      width: 40%;\n    }\n    .label {\n      ${({ theme }) => theme.flexSC};\n      width: 40%;\n      .cont {\n        font-size: 14px;\n        color: ${({ theme }) => theme.textColor};\n        margin-left: 10px;\n        .info {\n          color: ${({ theme }) => theme.text2};\n        }\n      }\n    }\n    .value {\n      ${({ theme }) => theme.flexEC};\n      width: 60%;\n      .cont {\n        ${({ theme }) => theme.flexEC};\n        font-size: 14px;\n        color: ${({ theme }) => theme.textColor};\n        margin-left: 10px;\n        .info {\n          color: ${({ theme }) => theme.text2};\n        }\n        .name {\n          margin-right: 5px;\n        }\n      }\n    }\n    .txtLabel {\n      font-size: 14px;\n      width: 40%;\n      color: ${({ theme }) => theme.textColor};\n    }\n  }\n`\n\nconst RemoveTip = styled.div`\n  color: ${({ theme }) => theme.red1};\n  font-size: 12px;\n`\n\nconst MetamaskIcon = styled(Metamask)`\n  height: 16px;\n  width: 16px;\n  min-height: 16px;\n  min-width: 16px;\n  margin-left: 5px;\n`\n\nconst FlexC = styled.div`\n  ${({ theme }) => theme.flexC};\n  width: 100%;\n`\n\nfunction DestChainStatus ({fromStatus, toStatus}: {fromStatus:any, toStatus:any}) {\n  if (fromStatus === Status.Pending) {\n    return undefined\n  } else if (fromStatus === Status.Failure) {\n    return Status.Failure\n  } else if (fromStatus === Status.Success) {\n    if (!toStatus || toStatus === Status.Confirming) {\n      return Status.Confirming\n    } else if (toStatus === Status.Crosschaining) {\n      return Status.Crosschaining\n    } else if (toStatus === Status.Success) {\n      return Status.Success\n    } else {\n      return toStatus\n    }\n  } else {\n    return toStatus\n  }\n}\n\nexport default function HistoryDetails ({\n  symbol,\n  from,\n  to,\n  fromChainID,\n  toChainID,\n  fromStatus,\n  toStatus,\n  swapvalue,\n  timestamp,\n  txid,\n  swaptx,\n  value,\n  version,\n  token,\n  isLiquidity,\n  isReceiveAnyToken,\n  avgTime,\n  logoUrl,\n  fromInfo,\n  toInfo,\n  txData\n}: {\n  symbol?: any,\n  from?: any,\n  to?: any,\n  fromChainID?: any,\n  toChainID?: any,\n  fromStatus?: any,\n  toStatus?: any,\n  swapvalue?: any,\n  timestamp?: any,\n  txid?: any,\n  swaptx?: any,\n  value?: any,\n  version?: any,\n  token?: any,\n  isLiquidity?: any,\n  isReceiveAnyToken?: any,\n  avgTime?: any,\n  logoUrl?: any,\n  fromInfo?: any,\n  toInfo?: any,\n  txData?: any,\n}) {\n  const { t } = useTranslation()\n  const {setUnderlyingStatus} = useUpdateUnderlyingStatus()\n  // const theme = useContext(ThemeContext)\n  const useToStatus = DestChainStatus({fromStatus,toStatus})\n  const history = createBrowserHistory()\n  const {onAddToken} = useChangeTokenOnWallet()\n  const {setUserSelectNetwork} = useUserSelectChainId()\n\n  useEffect(() => {\n    if (isLiquidity && swaptx && !isReceiveAnyToken) {\n      useWeb3(toChainID, 'eth', 'getTransactionReceipt', [swaptx]).then((res:any) => {\n        console.log(res)\n        if (res && res.logs && res.logs.length < 4 && setUnderlyingStatus) {\n          setUnderlyingStatus(fromChainID, txid, true)\n        }\n      })\n    }\n  }, [isLiquidity, swaptx, toChainID, isReceiveAnyToken])\n  \n  return (\n    <>\n      <TxnsDtilBox>\n        <TxnsDtilList>\n          <div className=\"item\">\n            <h3 className=\"title\">{t('From')}</h3>\n          </div>\n          <div className=\"item\">\n            <div className=\"label\">\n              <TokenLogo symbol={config.getCurChainInfo(fromChainID)?.networkLogo ?? config.getCurChainInfo(fromChainID)?.symbol} size={'24px'} />\n              <div className=\"cont\">\n                <div className=\"name\">{config.getCurChainInfo(fromChainID)?.name}</div>\n                {/* <div className=\"info\">{t('SourceChain')}</div> */}\n              </div>\n            </div>\n            <div className=\"value\">\n              <div className=\"cont\">\n                - {thousandBit(value, 2) + ' ' + symbol}\n                {\n                  isNaN(fromChainID) ? '' : (\n                    <MetamaskIcon onClick={(event) => {\n                      // console.log(currencyObj)\n                      addToken(fromInfo.address, symbol, fromInfo.decimals, logoUrl)\n                      event.stopPropagation()\n                    }} />\n                  )\n                }\n              </div>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"txtLabel\">Tx hash:</div>\n            <div className=\"value\">\n              <Link className=\"a\" href={getEtherscanLink(fromChainID, txid, 'transaction')} target=\"_blank\">{txid}</Link>\n              <Copy toCopy={txid}></Copy>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"txtLabel\">{t('From')}:</div>\n            <div className=\"value\">\n              <Link className=\"a\" href={getEtherscanLink(fromChainID, from, 'address')} target=\"_blank\">{from ? shortenAddress(from, 6) : ''}</Link>\n              <Copy toCopy={from}></Copy>\n            </div>\n          </div>\n        </TxnsDtilList>\n        {/* <ChainStatusBox className={fromStatus}>\n          <div className=\"name\">\n            {config.getCurChainInfo(fromChainID)?.name + ' Status'}\n          </div>\n          <span className=\"status\">\n            {\n              fromStatus === Status.Success? (\n                <CheckCircle size=\"16\" style={{marginRight: '10px'}} />\n              ) : (\n                fromStatus === Status.Failure ? <AlertCircle color={theme.red1} size={16} style={{marginRight: '10px'}} /> : <Loader stroke=\"#5f6bfb\" style={{marginRight: '10px'}} />\n              )\n            }\n            {fromStatus === Status.Pending ? (<><span>{fromStatus}</span></>) : fromStatus}\n          </span>\n        </ChainStatusBox> */}\n        <TxnsDtilList>\n          <div className=\"item\">\n            <h3 className=\"title\">{t('to')}</h3>\n          </div>\n          <div className=\"item\">\n            <div className=\"label\">\n              <TokenLogo symbol={config.getCurChainInfo(toChainID)?.networkLogo ?? config.getCurChainInfo(toChainID)?.symbol} size={'24px'} />\n              <div className=\"cont\">\n                <div className=\"name\">{config.getCurChainInfo(toChainID)?.name}</div>\n              </div>\n            </div>\n            <div className=\"value\">\n              <div className=\"cont\">\n                {swapvalue ? (\n                  <>\n                    {'+ ' + thousandBit(swapvalue, 2) + ' ' + symbol}\n                    {\n                      isNaN(toChainID) ? '' : (\n                        <MetamaskIcon onClick={(event) => {\n                          // console.log(currencyObj)\n                          onAddToken(toChainID, toInfo)\n                          if (setUserSelectNetwork) {\n                            setUserSelectNetwork('')\n                          }\n                          selectNetwork(toChainID, 1).then((res: any) => {\n                            console.log(res)\n                            history.go(0)\n                          })\n                          event.stopPropagation()\n                        }} />\n                      )\n                    }\n                  </>\n                ) : '-'}\n              </div>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"txtLabel\">Tx hash:</div>\n            <div className=\"value\">\n              <Link className=\"a\" href={getEtherscanLink(toChainID, swaptx, 'transaction')} target=\"_blank\">{swaptx}</Link>\n              <Copy toCopy={swaptx}></Copy>\n              {/* {swaptx ? (\n                <>\n                </>\n              ) : '-'} */}\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"txtLabel\">{t('Receive')}:</div>\n            <div className=\"value\">\n              <Link className=\"a\" href={getEtherscanLink(toChainID, to, 'address')} target=\"_blank\">{to ? shortenAddress(to, 6) : ''}</Link>\n              <Copy toCopy={to}></Copy>\n              {/* {swaptx ? (\n                <>\n                </>\n              ) : '-'} */}\n            </div>\n          </div>\n          {\n            fromStatus === Status.Success && useToStatus === Status.Success && !['swapin', 'swapout'].includes(version) && token && isReceiveAnyToken ? (\n              <>\n                <div className=\"item\">\n                  <div className=\"txtLabel\">{t('Remove')}:</div>\n                  <div className=\"value\">\n                    <Link2 className=\"a\" to={`/pool/add?bridgetoken=${token}&bridgetype=withdraw`}>Remove the liquidity -&gt;</Link2>\n                  </div>\n                </div>\n              </>\n            ) : ''\n          }\n        </TxnsDtilList>\n        {/* <ChainStatusBox className={useToStatus ? useToStatus : Status.Pending}>\n          <div className=\"name\">\n            {config.getCurChainInfo(toChainID)?.name + ' Status'}\n          </div>\n          <span className=\"status\">\n            {\n              useToStatus ? (\n                useToStatus === Status.Success ? <CheckCircle size=\"16\" style={{marginRight: '10px'}} /> : (\n                  useToStatus === Status.Failure ? <AlertCircle color={theme.red1} size={16} style={{marginRight: '10px'}} /> : <Loader stroke=\"#5f6bfb\" style={{marginRight: '10px'}} />\n                )\n              ) : ''\n            }\n            {useToStatus ? useToStatus : '-'}\n          </span>\n        </ChainStatusBox> */}\n        \n        {/* <TxnsProgress fromStatus={fromStatus} toStatus={toStatus} /> */}\n        <FlexC><TxnsProgress hash={txid} txData={txData} /></FlexC>\n        {\n          avgTime ? (\n            <TxnsDtilList>\n              <div className=\"item\">\n                <div className=\"label\">\n                  <div className=\"cont\">Time used:</div>\n                </div>\n                <div className=\"value\">\n                  <div className=\"cont\">{avgTime} s / {(avgTime / 60).toFixed(2)} m</div>\n                </div>\n              </div>\n            </TxnsDtilList>\n          ) : ''\n        }\n\n        {\n          fromStatus === Status.Success && useToStatus === Status.Success && !['swapin', 'swapout'].includes(version) && token && isReceiveAnyToken ? (\n            <>\n              <RemoveTip>\n                {t('removeanytokentip')}\n                <br />\n                <ExternalLink href=\"https://multichain.zendesk.com/hc/en-us/articles/4410379722639-Redeem-Remove-Pool-Token-Anyassets-e-g-anyUSDC-anyUSDT-anyDAI-anyETH-anyFTM-etc-into-Native-Token-Tutorial\">https://multichain.zendesk.com...</ExternalLink>\n              </RemoveTip>\n              <BottomGrouping onClick={() => {\n                selectNetwork(toChainID, 1).then((res: any) => {\n                  console.log(res)\n                  if (res.msg === 'Error') {\n                    alert(t('changeMetamaskNetwork', {label: config.getCurChainInfo(toChainID).networkName}))\n                  } else {\n                    history.push(`#/pool/add?bridgetoken=${symbol}&bridgetype=withdraw`)\n                    history.go(0)\n                    // history.replace(`/pool/add?bridgetoken=${token}&bridgetype=withdraw`)\n                    // window.open(`/pool/add?bridgetoken=${token}&bridgetype=withdraw`)\n                    // alert('1111')\n                  }\n                })\n              }}>\n                <ButtonPrimary>Remove the liquidity -&gt; </ButtonPrimary>\n              </BottomGrouping>\n              {/* <div className=\"item\">\n                <div className=\"txtLabel\">{t('Remove')}:</div>\n                <div className=\"value\">\n                  <Link2 className=\"a\" to={`/pool/add?bridgetoken=${token}&bridgetype=withdraw`}>Remove the liquidity -&gt;</Link2>\n                </div>\n              </div> */}\n            </>\n          ) : ''\n        }\n\n        \n        \n        {\n          fromStatus === Status.Success && !toStatus && (Date.now() - (timestamp.length <= 10 ? (Number(timestamp) * 1000) : Number(timestamp)) > (1000 * 60 * 30)) ? (\n            <div className=\"tips\">\n              <Link className=\"a\" href={`${config.explorer}?tabparams=tools&fromChainID=${fromChainID}&toChainID=${toChainID}&symbol=${symbol}&hash=${txid}`} target=\"_blank\">Go to Explorer submit hash -&gt;</Link>\n            </div>\n          ) : ''\n        }\n      </TxnsDtilBox>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}