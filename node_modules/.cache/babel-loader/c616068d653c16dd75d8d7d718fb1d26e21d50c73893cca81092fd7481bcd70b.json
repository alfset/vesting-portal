{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst multisig_1 = require(\"../../../crypto/multisig/v1beta1/multisig\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/** SignMode represents a signing mode with its own security guarantees. */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  /**\n   * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\n   * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n   *\n   * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n   * but is not implemented on the SDK by default. To enable EIP-191, you need\n   * to pass a custom `TxConfig` that has an implementation of\n   * `SignModeHandler` for EIP-191. The SDK may decide to fully support\n   * EIP-191 in the future.\n   *\n   * Since: cosmos-sdk 0.45.2\n   */\n  SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode = exports.SignMode || (exports.SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case 191:\n    case \"SIGN_MODE_EIP_191\":\n      return SignMode.SIGN_MODE_EIP_191;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    case SignMode.SIGN_MODE_EIP_191:\n      return \"SIGN_MODE_EIP_191\";\n    case SignMode.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nfunction createBaseSignatureDescriptors() {\n  return {\n    signatures: []\n  };\n}\nexports.SignatureDescriptors = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptors();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptors();\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor.fromPartial(e))) || [];\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor() {\n  return {\n    publicKey: undefined,\n    data: undefined,\n    sequence: long_1.default.UZERO\n  };\n}\nexports.SignatureDescriptor = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      publicKey: isSet(object.publicKey) ? any_1.Any.fromJSON(object.publicKey) : undefined,\n      data: isSet(object.data) ? exports.SignatureDescriptor_Data.fromJSON(object.data) : undefined,\n      sequence: isSet(object.sequence) ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor();\n    message.publicKey = object.publicKey !== undefined && object.publicKey !== null ? any_1.Any.fromPartial(object.publicKey) : undefined;\n    message.data = object.data !== undefined && object.data !== null ? exports.SignatureDescriptor_Data.fromPartial(object.data) : undefined;\n    message.sequence = object.sequence !== undefined && object.sequence !== null ? long_1.default.fromValue(object.sequence) : long_1.default.UZERO;\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nexports.SignatureDescriptor_Data = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      single: isSet(object.single) ? exports.SignatureDescriptor_Data_Single.fromJSON(object.single) : undefined,\n      multi: isSet(object.multi) ? exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi) : undefined\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data();\n    message.single = object.single !== undefined && object.single !== null ? exports.SignatureDescriptor_Data_Single.fromPartial(object.single) : undefined;\n    message.multi = object.multi !== undefined && object.multi !== null ? exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi) : undefined;\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Single() {\n  return {\n    mode: 0,\n    signature: new Uint8Array()\n  };\n}\nexports.SignatureDescriptor_Data_Single = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,\n      signature: isSet(object.signature) ? bytesFromBase64(object.signature) : new Uint8Array()\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;\n    message.signature = (_b = object.signature) !== null && _b !== void 0 ? _b : new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Multi() {\n  return {\n    bitarray: undefined,\n    signatures: []\n  };\n}\nexports.SignatureDescriptor_Data_Multi = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    return {\n      bitarray: isSet(object.bitarray) ? multisig_1.CompactBitArray.fromJSON(object.bitarray) : undefined,\n      signatures: Array.isArray(object === null || object === void 0 ? void 0 : object.signatures) ? object.signatures.map(e => exports.SignatureDescriptor_Data.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    message.bitarray = object.bitarray !== undefined && object.bitarray !== null ? multisig_1.CompactBitArray.fromPartial(object.bitarray) : undefined;\n    message.signatures = ((_a = object.signatures) === null || _a === void 0 ? void 0 : _a.map(e => exports.SignatureDescriptor_Data.fromPartial(e))) || [];\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","any_1","multisig_1","exports","protobufPackage","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","SIGN_MODE_EIP_191","UNRECOGNIZED","signModeToJSON","createBaseSignatureDescriptors","signatures","SignatureDescriptors","encode","message","writer","arguments","length","undefined","default","Writer","create","v","SignatureDescriptor","uint32","fork","ldelim","decode","input","reader","Reader","end","len","pos","tag","push","skipType","fromJSON","Array","isArray","map","e","toJSON","obj","fromPartial","_a","createBaseSignatureDescriptor","publicKey","data","sequence","UZERO","Any","SignatureDescriptor_Data","isZero","uint64","isSet","fromValue","toString","createBaseSignatureDescriptor_Data","single","multi","SignatureDescriptor_Data_Single","SignatureDescriptor_Data_Multi","createBaseSignatureDescriptor_Data_Single","mode","signature","Uint8Array","int32","bytes","bytesFromBase64","base64FromBytes","_b","createBaseSignatureDescriptor_Data_Multi","bitarray","CompactBitArray","globalThis","self","window","global","b64","Buffer","from","bin","atob","arr","i","charCodeAt","forEach","byte","String","fromCharCode","btoa","join","util","Long","configure","value"],"sources":["../../../../../src/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}