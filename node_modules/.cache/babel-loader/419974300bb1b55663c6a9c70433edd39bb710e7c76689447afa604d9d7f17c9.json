{"ast":null,"code":"import{getLocalRPC}from'./methods';import{VERSION,USE_VERSION}from'../constant';import{ChainId}from'./chainId';export const PLQ_MAIN_CHAINID=ChainId.PLQ;export const PLQ_MAINNET=getLocalRPC(PLQ_MAIN_CHAINID,'https://evm-rpc.planq.network');export const PLQ_MAIN_EXPLORER='https://evm.planq.network';// export const PLQ_TEST_CHAINID = ChainId.PLQ_TEST\n// export const PLQ_TESTNET = getLocalRPC(PLQ_TEST_CHAINID, 'https://zksync2-testnet.zksync.dev')\n// export const PLQ_TEST_EXPLORER = 'https://goerli.explorer.zksync.io'\nconst symbol='PLQ';const bridgeToken={[VERSION.V7]:{bridgeInitToken:'',bridgeInitChain:'',crossBridgeInitToken:''}};export default{[PLQ_MAIN_CHAINID]:{...bridgeToken[USE_VERSION],swapRouterToken:'',multicalToken:'0x498620233A11014C0D77F1B3CDfaB43C27E3ED16',v1FactoryToken:'',v2FactoryToken:'',nodeRpc:PLQ_MAINNET,nodeRpcList:[PLQ_MAINNET],chainID:PLQ_MAIN_CHAINID,lookHash:PLQ_MAIN_EXPLORER+'/tx/',lookAddr:PLQ_MAIN_EXPLORER+'/address/',lookBlock:PLQ_MAIN_EXPLORER+'/block/',explorer:PLQ_MAIN_EXPLORER,symbol:symbol,name:'Planq',networkName:'Planq mainnet',type:'main',label:PLQ_MAIN_CHAINID}// [PLQ_TEST_CHAINID]: {\n//   ...bridgeToken[USE_VERSION],\n//   swapRouterToken: '',\n//   multicalToken: '',\n//   v1FactoryToken: '',\n//   v2FactoryToken: '',\n//   nodeRpc: PLQ_TESTNET,\n//   nodeRpcList: [\n//     PLQ_TESTNET,\n//   ],\n//   chainID: PLQ_TEST_CHAINID,\n//   lookHash: PLQ_TEST_EXPLORER + '/tx/',\n//   lookAddr: PLQ_TEST_EXPLORER + '/address/',\n//   lookBlock: PLQ_TEST_EXPLORER + '/block/',\n//   explorer: PLQ_TEST_EXPLORER,\n//   symbol: symbol,\n//   name: 'zkSync Era',\n//   networkName: 'zkSync Era testnet',\n//   networkLogo: 'zkSync',\n//   type: 'test',\n//   label: PLQ_TEST_CHAINID,\n// },\n};","map":{"version":3,"names":["getLocalRPC","VERSION","USE_VERSION","ChainId","PLQ_MAIN_CHAINID","PLQ","PLQ_MAINNET","PLQ_MAIN_EXPLORER","symbol","bridgeToken","V7","bridgeInitToken","bridgeInitChain","crossBridgeInitToken","swapRouterToken","multicalToken","v1FactoryToken","v2FactoryToken","nodeRpc","nodeRpcList","chainID","lookHash","lookAddr","lookBlock","explorer","name","networkName","type","label"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/chainConfig/plq.ts"],"sourcesContent":["import {getLocalRPC} from './methods'\nimport {VERSION, USE_VERSION} from '../constant'\nimport {ChainId} from './chainId'\n\nexport const PLQ_MAIN_CHAINID = ChainId.PLQ\nexport const PLQ_MAINNET = getLocalRPC(PLQ_MAIN_CHAINID, 'https://evm-rpc.planq.network')\nexport const PLQ_MAIN_EXPLORER = 'https://evm.planq.network'\n\n// export const PLQ_TEST_CHAINID = ChainId.PLQ_TEST\n// export const PLQ_TESTNET = getLocalRPC(PLQ_TEST_CHAINID, 'https://zksync2-testnet.zksync.dev')\n// export const PLQ_TEST_EXPLORER = 'https://goerli.explorer.zksync.io'\n\nconst symbol = 'PLQ'\n\nconst bridgeToken:any = {\n  [VERSION.V7]: {\n    bridgeInitToken: '',\n    bridgeInitChain: '',\n    crossBridgeInitToken: ''\n  },\n}\n\nexport default {\n  [PLQ_MAIN_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '',\n    multicalToken: '0x498620233A11014C0D77F1B3CDfaB43C27E3ED16',\n    v1FactoryToken: '',\n    v2FactoryToken: '',\n    nodeRpc: PLQ_MAINNET,\n    nodeRpcList: [\n      PLQ_MAINNET,\n    ],\n    chainID: PLQ_MAIN_CHAINID,\n    lookHash: PLQ_MAIN_EXPLORER + '/tx/',\n    lookAddr: PLQ_MAIN_EXPLORER + '/address/',\n    lookBlock: PLQ_MAIN_EXPLORER + '/block/',\n    explorer: PLQ_MAIN_EXPLORER,\n    symbol: symbol,\n    name: 'Planq',\n    networkName: 'Planq mainnet',\n    type: 'main',\n    label: PLQ_MAIN_CHAINID,\n  },\n  // [PLQ_TEST_CHAINID]: {\n  //   ...bridgeToken[USE_VERSION],\n  //   swapRouterToken: '',\n  //   multicalToken: '',\n  //   v1FactoryToken: '',\n  //   v2FactoryToken: '',\n  //   nodeRpc: PLQ_TESTNET,\n  //   nodeRpcList: [\n  //     PLQ_TESTNET,\n  //   ],\n  //   chainID: PLQ_TEST_CHAINID,\n  //   lookHash: PLQ_TEST_EXPLORER + '/tx/',\n  //   lookAddr: PLQ_TEST_EXPLORER + '/address/',\n  //   lookBlock: PLQ_TEST_EXPLORER + '/block/',\n  //   explorer: PLQ_TEST_EXPLORER,\n  //   symbol: symbol,\n  //   name: 'zkSync Era',\n  //   networkName: 'zkSync Era testnet',\n  //   networkLogo: 'zkSync',\n  //   type: 'test',\n  //   label: PLQ_TEST_CHAINID,\n  // },\n}"],"mappings":"AAAA,OAAQA,WAAW,KAAO,WAAW,CACrC,OAAQC,OAAO,CAAEC,WAAW,KAAO,aAAa,CAChD,OAAQC,OAAO,KAAO,WAAW,CAEjC,MAAO,MAAM,CAAAC,gBAAgB,CAAGD,OAAO,CAACE,GAAG,CAC3C,MAAO,MAAM,CAAAC,WAAW,CAAGN,WAAW,CAACI,gBAAgB,CAAE,+BAA+B,CAAC,CACzF,MAAO,MAAM,CAAAG,iBAAiB,CAAG,2BAA2B,CAE5D;AACA;AACA;AAEA,KAAM,CAAAC,MAAM,CAAG,KAAK,CAEpB,KAAM,CAAAC,WAAe,CAAG,CACtB,CAACR,OAAO,CAACS,EAAE,EAAG,CACZC,eAAe,CAAE,EAAE,CACnBC,eAAe,CAAE,EAAE,CACnBC,oBAAoB,CAAE,EACxB,CACF,CAAC,CAED,cAAe,CACb,CAACT,gBAAgB,EAAG,CAClB,GAAGK,WAAW,CAACP,WAAW,CAAC,CAC3BY,eAAe,CAAE,EAAE,CACnBC,aAAa,CAAE,4CAA4C,CAC3DC,cAAc,CAAE,EAAE,CAClBC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAEZ,WAAW,CACpBa,WAAW,CAAE,CACXb,WAAW,CACZ,CACDc,OAAO,CAAEhB,gBAAgB,CACzBiB,QAAQ,CAAEd,iBAAiB,CAAG,MAAM,CACpCe,QAAQ,CAAEf,iBAAiB,CAAG,WAAW,CACzCgB,SAAS,CAAEhB,iBAAiB,CAAG,SAAS,CACxCiB,QAAQ,CAAEjB,iBAAiB,CAC3BC,MAAM,CAAEA,MAAM,CACdiB,IAAI,CAAE,OAAO,CACbC,WAAW,CAAE,eAAe,CAC5BC,IAAI,CAAE,MAAM,CACZC,KAAK,CAAExB,gBACT,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}