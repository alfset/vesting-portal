{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.signatureBlocksAction = exports.checkInputForSig = exports.pubkeyInScript = exports.pubkeyPositionInScript = exports.witnessStackToScriptWitness = exports.isP2TR = exports.isP2SHScript = exports.isP2WSHScript = exports.isP2WPKH = exports.isP2PKH = exports.isP2PK = exports.isP2MS = void 0;\nconst varuint = require('bip174/src/lib/converter/varint');\nconst bscript = require('../script');\nconst transaction_1 = require('../transaction');\nconst crypto_1 = require('../crypto');\nconst payments = require('../payments');\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({\n        output: script\n      });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nexports.isP2MS = isPaymentFactory(payments.p2ms);\nexports.isP2PK = isPaymentFactory(payments.p2pk);\nexports.isP2PKH = isPaymentFactory(payments.p2pkh);\nexports.isP2WPKH = isPaymentFactory(payments.p2wpkh);\nexports.isP2WSHScript = isPaymentFactory(payments.p2wsh);\nexports.isP2SHScript = isPaymentFactory(payments.p2sh);\nexports.isP2TR = isPaymentFactory(payments.p2tr);\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nexports.witnessStackToScriptWitness = witnessStackToScriptWitness;\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return element.equals(pubkey) || element.equals(pubkeyHash) || element.equals(pubkeyXOnly);\n  });\n}\nexports.pubkeyPositionInScript = pubkeyPositionInScript;\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\nexports.pubkeyInScript = pubkeyInScript;\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig => signatureBlocksAction(pSig, bscript.signature.decode, action));\n}\nexports.checkInputForSig = checkInputForSig;\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const {\n    hashType\n  } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay = hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n    case transaction_1.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\nexports.signatureBlocksAction = signatureBlocksAction;\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig ? [] : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness ? [] : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems.concat(witnessItems).filter(item => {\n    return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n  }).map(sig => ({\n    signature: sig\n  }));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","signatureBlocksAction","checkInputForSig","pubkeyInScript","pubkeyPositionInScript","witnessStackToScriptWitness","isP2TR","isP2SHScript","isP2WSHScript","isP2WPKH","isP2PKH","isP2PK","isP2MS","varuint","require","bscript","transaction_1","crypto_1","payments","isPaymentFactory","payment","script","output","err","p2ms","p2pk","p2pkh","p2wpkh","p2wsh","p2sh","p2tr","witness","buffer","Buffer","allocUnsafe","writeSlice","slice","concat","from","writeVarInt","i","currentLen","length","varintLen","encodingLength","encode","writeVarSlice","writeVector","vector","forEach","pubkey","pubkeyHash","hash160","pubkeyXOnly","decompiled","decompile","Error","findIndex","element","equals","input","action","pSigs","extractPartialSigs","some","pSig","signature","decode","signatureDecodeFn","hashType","whitelist","isAnyoneCanPay","Transaction","SIGHASH_ANYONECANPAY","push","hashMod","SIGHASH_ALL","SIGHASH_SINGLE","SIGHASH_NONE","indexOf","partialSig","finalScriptSig","finalScriptWitness","getPsigsFromInputFinalScripts","map","p","scriptItems","witnessItems","filter","item","isBuffer","isCanonicalScriptSignature","sig"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/psbt/psbtutils.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signatureBlocksAction =\n  exports.checkInputForSig =\n  exports.pubkeyInScript =\n  exports.pubkeyPositionInScript =\n  exports.witnessStackToScriptWitness =\n  exports.isP2TR =\n  exports.isP2SHScript =\n  exports.isP2WSHScript =\n  exports.isP2WPKH =\n  exports.isP2PKH =\n  exports.isP2PK =\n  exports.isP2MS =\n    void 0;\nconst varuint = require('bip174/src/lib/converter/varint');\nconst bscript = require('../script');\nconst transaction_1 = require('../transaction');\nconst crypto_1 = require('../crypto');\nconst payments = require('../payments');\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nexports.isP2MS = isPaymentFactory(payments.p2ms);\nexports.isP2PK = isPaymentFactory(payments.p2pk);\nexports.isP2PKH = isPaymentFactory(payments.p2pkh);\nexports.isP2WPKH = isPaymentFactory(payments.p2wpkh);\nexports.isP2WSHScript = isPaymentFactory(payments.p2wsh);\nexports.isP2SHScript = isPaymentFactory(payments.p2sh);\nexports.isP2TR = isPaymentFactory(payments.p2tr);\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nexports.witnessStackToScriptWitness = witnessStackToScriptWitness;\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      element.equals(pubkey) ||\n      element.equals(pubkeyHash) ||\n      element.equals(pubkeyXOnly)\n    );\n  });\n}\nexports.pubkeyPositionInScript = pubkeyPositionInScript;\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\nexports.pubkeyInScript = pubkeyInScript;\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, bscript.signature.decode, action),\n  );\n}\nexports.checkInputForSig = checkInputForSig;\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay =\n    hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n    case transaction_1.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\nexports.signatureBlocksAction = signatureBlocksAction;\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}