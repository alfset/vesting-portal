{"ast":null,"code":"import axios from'axios';// import config from '../../config'\nfunction getApiUrlData(url,token,address){return new Promise(resolve=>{axios.get(url).then(res=>{if(res&&res.data&&res.status===200){// let price = res.data[0].current_price\nwindow.localStorage.setItem(token,JSON.stringify({timestamp:Date.now(),data:res.data,address:address}));resolve({msg:'Success',data:res.data});}else{window.localStorage.setItem(token,'');resolve({msg:'Error',data:''});}}).catch(err=>{console.log(err);window.localStorage.setItem(token,'');resolve({msg:'Error',data:''});});});}function getApiData(url,token,intarval,address){const localData=window.localStorage.getItem(token);return new Promise(resolve=>{if(localData){const localObj=JSON.parse(localData);if(Date.now()-Number(localObj.timestamp)>intarval||!localObj.data||address&&address!==localObj.address){getApiUrlData(url,token,address).then(res=>{// console.log(res)\nif(res.msg==='Success'){resolve(res.data);}else{resolve('');}});}else{resolve(localObj.data);}}else{getApiUrlData(url,token,address).then(res=>{// console.log(res)\nif(res.msg==='Success'){resolve(res.data);}else{resolve('');}});}});}export const getPrice=coin=>{return new Promise(resolve=>{// coin = coin ? coin : config.symbol\nlet url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fsn';// if (true) {\nif(coin==='BNB'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=binancecoin';}else if(coin==='HT'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=huobi-token';}else if(coin==='FTM'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fantom';}else if(coin==='ANY'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=anyswap';}else if(coin==='DEP'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=deapcoin';}else if(coin==='HERO'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=hero';}else if(coin==='PLAY'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=polyplay';}else if(coin==='BACON'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bacondao';}else if(coin==='KABY'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=kaby-arena';}else if(coin==='MULTI'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=multichain';}else if(coin==='ARB'){url='https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=arbitrum';}// console.log(url)\ngetApiData(url,coin+'_PRICE',1000*60*60).then(res=>{if(res&&res.length>0){const price=res[0].current_price;resolve(price);}else{resolve('');}});});};export const getLabelPrice=label=>{return new Promise(resolve=>{// coin = coin ? coin : config.symbol\nconst url=\"https://bridgeapi.deltaswap.io/token/price?label=\".concat(label);// console.log(url)\ngetApiData(url,label+'_PRICE',1000*60*60).then(res=>{// console.log(res)\nif(res.usd){const price=res.usd;resolve(price);}else{resolve('');}});});};","map":{"version":3,"names":["axios","getApiUrlData","url","token","address","Promise","resolve","get","then","res","data","status","window","localStorage","setItem","JSON","stringify","timestamp","Date","now","msg","catch","err","console","log","getApiData","intarval","localData","getItem","localObj","parse","Number","getPrice","coin","length","price","current_price","getLabelPrice","label","concat","usd"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/tools/getPrice.ts"],"sourcesContent":["import axios from 'axios'\n// import config from '../../config'\n\n\nfunction getApiUrlData (url:string, token:string, address?:string) {\n  return new Promise(resolve => {\n    axios.get(url).then((res:any) => {\n      if (res && res.data && res.status === 200) {\n        // let price = res.data[0].current_price\n        window.localStorage.setItem(token, JSON.stringify({\n          timestamp: Date.now(),\n          data: res.data,\n          address: address\n        }))\n        resolve({\n          msg: 'Success',\n          data: res.data\n        })\n      } else {\n        window.localStorage.setItem(token, '')\n        resolve({\n          msg: 'Error',\n          data: ''\n        })\n      }\n    }).catch((err:any) => {\n      console.log(err)\n      window.localStorage.setItem(token, '')\n      resolve({\n        msg: 'Error',\n        data: ''\n      })\n    })\n  })\n}\n\nfunction getApiData (url:string, token:string, intarval:number, address?:string) {\n  const localData = window.localStorage.getItem(token)\n  return new Promise(resolve => {\n    if (localData) {\n      const localObj = JSON.parse(localData)\n      if (\n        (Date.now() - Number(localObj.timestamp) > intarval)\n        || !localObj.data\n        || (address && address !== localObj.address)\n      ) {\n        getApiUrlData(url, token, address).then((res:any) => {\n          // console.log(res)\n          if (res.msg === 'Success') {\n            resolve(res.data)\n          } else {\n            resolve('')\n          }\n        })\n      } else {\n        resolve(localObj.data)\n      }\n    } else {\n      getApiUrlData(url, token, address).then((res:any) => {\n        // console.log(res)\n        if (res.msg === 'Success') {\n          resolve(res.data)\n        } else {\n          resolve('')\n        }\n      })\n    }\n  })\n}\nexport const getPrice = (coin:string) => {\n  return new Promise(resolve => {\n    // coin = coin ? coin : config.symbol\n    let url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fsn'\n    // if (true) {\n    if (coin === 'BNB') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=binancecoin'\n    } else if (coin === 'HT') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=huobi-token'\n    } else if (coin === 'FTM') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fantom'\n    } else if (coin === 'ANY') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=anyswap'\n    } else if (coin === 'DEP') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=deapcoin'\n    } else if (coin === 'HERO') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=hero'\n    } else if (coin === 'PLAY') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=polyplay'\n    } else if (coin === 'BACON') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bacondao'\n    } else if (coin === 'KABY') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=kaby-arena'\n    } else if (coin === 'MULTI') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=multichain'\n    } else if (coin === 'ARB') {\n      url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=arbitrum'\n    }\n    // console.log(url)\n    getApiData(url, coin + '_PRICE', 1000 * 60 * 60).then((res:any) => {\n      if (res && res.length > 0) {\n        const price = res[0].current_price\n        resolve(price)\n      } else {\n        resolve('')\n      }\n    })\n  })\n}\n\nexport const getLabelPrice = (label:string) => {\n  return new Promise(resolve => {\n    // coin = coin ? coin : config.symbol\n    const url = `https://bridgeapi.deltaswap.io/token/price?label=${label}`\n    // console.log(url)\n    getApiData(url, label + '_PRICE', 1000 * 60 * 60).then((res:any) => {\n      // console.log(res)\n      if (res.usd) {\n        const price = res.usd\n        resolve(price)\n      } else {\n        resolve('')\n      }\n    })\n  })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}