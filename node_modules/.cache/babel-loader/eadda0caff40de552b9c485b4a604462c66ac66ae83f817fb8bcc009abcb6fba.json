{"ast":null,"code":"import * as logger from '@onflow/util-logger';\nimport { log } from '@onflow/util-logger';\nimport { invariant as invariant$1 } from '@onflow/util-invariant';\nimport { v4 } from 'uuid';\nimport { config } from '@onflow/config';\nexport { config } from '@onflow/config';\nimport { Buffer, encode } from '@onflow/rlp';\nimport { send as send$1 } from '@onflow/transport-http';\nimport { sansPrefix, withPrefix } from '@onflow/util-address';\nimport { SHA3 } from 'sha3';\nimport { template } from '@onflow/util-template';\nexport { template as cadence, template as cdc } from '@onflow/util-template';\nconst UNKNOWN /*                       */ = \"UNKNOWN\";\nconst SCRIPT /*                        */ = \"SCRIPT\";\nconst TRANSACTION /*                   */ = \"TRANSACTION\";\nconst GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\";\nconst GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\";\nconst GET_EVENTS /*                    */ = \"GET_EVENTS\";\nconst PING /*                          */ = \"PING\";\nconst GET_TRANSACTION /*               */ = \"GET_TRANSACTION\";\nconst GET_BLOCK /*                     */ = \"GET_BLOCK\";\nconst GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\";\nconst GET_COLLECTION /*                */ = \"GET_COLLECTION\";\nconst GET_NETWORK_PARAMETERS /*        */ = \"GET_NETWORK_PARAMETERS\";\nconst BAD /* */ = \"BAD\";\nconst OK /*  */ = \"OK\";\nconst ACCOUNT /*  */ = \"ACCOUNT\";\nconst PARAM /*    */ = \"PARAM\";\nconst ARGUMENT /* */ = \"ARGUMENT\";\nconst AUTHORIZER /* */ = \"authorizer\";\nconst PAYER /*      */ = \"payer\";\nconst PROPOSER /*   */ = \"proposer\";\nconst ACCT = \"{\\n  \\\"kind\\\":\\\"\".concat(ACCOUNT, \"\\\",\\n  \\\"tempId\\\":null,\\n  \\\"addr\\\":null,\\n  \\\"keyId\\\":null,\\n  \\\"sequenceNum\\\":null,\\n  \\\"signature\\\":null,\\n  \\\"signingFunction\\\":null,\\n  \\\"resolve\\\":null,\\n  \\\"role\\\": {\\n    \\\"proposer\\\":false,\\n    \\\"authorizer\\\":false,\\n    \\\"payer\\\":false,\\n    \\\"param\\\":false\\n  }\\n}\");\nconst ARG = \"{\\n  \\\"kind\\\":\\\"\".concat(ARGUMENT, \"\\\",\\n  \\\"tempId\\\":null,\\n  \\\"value\\\":null,\\n  \\\"asArgument\\\":null,\\n  \\\"xform\\\":null,\\n  \\\"resolve\\\": null,\\n  \\\"resolveArgument\\\": null\\n}\");\nconst IX = \"{\\n  \\\"tag\\\":\\\"\".concat(UNKNOWN, \"\\\",\\n  \\\"assigns\\\":{},\\n  \\\"status\\\":\\\"\").concat(OK, \"\\\",\\n  \\\"reason\\\":null,\\n  \\\"accounts\\\":{},\\n  \\\"params\\\":{},\\n  \\\"arguments\\\":{},\\n  \\\"message\\\": {\\n    \\\"cadence\\\":null,\\n    \\\"refBlock\\\":null,\\n    \\\"computeLimit\\\":null,\\n    \\\"proposer\\\":null,\\n    \\\"payer\\\":null,\\n    \\\"authorizations\\\":[],\\n    \\\"params\\\":[],\\n    \\\"arguments\\\":[]\\n  },\\n  \\\"proposer\\\":null,\\n  \\\"authorizations\\\":[],\\n  \\\"payer\\\":[],\\n  \\\"events\\\": {\\n    \\\"eventType\\\":null,\\n    \\\"start\\\":null,\\n    \\\"end\\\":null,\\n    \\\"blockIds\\\":[]\\n  },\\n  \\\"transaction\\\": {\\n    \\\"id\\\":null\\n  },\\n  \\\"block\\\": {\\n    \\\"id\\\":null,\\n    \\\"height\\\":null,\\n    \\\"isSealed\\\":null\\n  },\\n  \\\"account\\\": {\\n    \\\"addr\\\":null\\n  },\\n  \\\"collection\\\": {\\n    \\\"id\\\":null\\n  }\\n}\");\nconst KEYS = new Set(Object.keys(JSON.parse(IX)));\nconst interaction = () => JSON.parse(IX);\nconst isNumber$1 = d => typeof d === \"number\";\nconst isArray$1 = d => Array.isArray(d);\nconst isObj = d => d !== null && typeof d === \"object\";\nconst isNull = d => d == null;\nconst isFn$3 = d => typeof d === \"function\";\nconst isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber$1(ix)) return false;\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false;\n  return true;\n};\nconst Ok = ix => {\n  ix.status = OK;\n  return ix;\n};\nconst Bad = (ix, reason) => {\n  ix.status = BAD;\n  ix.reason = reason;\n  return ix;\n};\nconst makeIx = wat => ix => {\n  ix.tag = wat;\n  return Ok(ix);\n};\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct;\n  invariant$1(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\");\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId)\n  };\n};\nconst prepAccount = function (acct) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ix => {\n    invariant$1(typeof acct === \"function\" || typeof acct === \"object\", \"prepAccount must be passed an authorization function or an account object\");\n    invariant$1(opts.role != null, \"Account must have a role\");\n    const ACCOUNT = JSON.parse(ACCT);\n    const role = opts.role;\n    const tempId = v4();\n    if (acct.authorization && isFn$3(acct.authorization)) acct = {\n      resolve: acct.authorization\n    };\n    if (!acct.authorization && isFn$3(acct)) acct = {\n      resolve: acct\n    };\n    const resolve = acct.resolve;\n    if (resolve) acct.resolve = function (acct) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      return [resolve, prepAccountKeyId].reduce(async (d, fn) => fn(await d, ...rest), acct);\n    };\n    acct = prepAccountKeyId(acct);\n    ix.accounts[tempId] = {\n      ...ACCOUNT,\n      tempId,\n      ...acct,\n      role: {\n        ...ACCOUNT.role,\n        ...(typeof acct.role === \"object\" ? acct.role : {}),\n        [role]: true\n      }\n    };\n    if (role === AUTHORIZER) {\n      ix.authorizations.push(tempId);\n    } else if (role === PAYER) {\n      ix.payer.push(tempId);\n    } else {\n      ix[role] = tempId;\n    }\n    return ix;\n  };\n};\nconst makeArgument = arg => ix => {\n  let tempId = v4();\n  ix.message.arguments.push(tempId);\n  ix.arguments[tempId] = JSON.parse(ARG);\n  ix.arguments[tempId].tempId = tempId;\n  ix.arguments[tempId].value = arg.value;\n  ix.arguments[tempId].asArgument = arg.asArgument;\n  ix.arguments[tempId].xform = arg.xform;\n  ix.arguments[tempId].resolve = arg.resolve;\n  ix.arguments[tempId].resolveArgument = isFn$3(arg.resolveArgument) ? arg.resolveArgument.bind(arg) : arg.resolveArgument;\n  return Ok(ix);\n};\nconst makeUnknown /*                 */ = makeIx(UNKNOWN);\nconst makeScript /*                  */ = makeIx(SCRIPT);\nconst makeTransaction /*             */ = makeIx(TRANSACTION);\nconst makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS);\nconst makeGetTransaction /*          */ = makeIx(GET_TRANSACTION);\nconst makeGetAccount /*              */ = makeIx(GET_ACCOUNT);\nconst makeGetEvents /*               */ = makeIx(GET_EVENTS);\nconst makePing /*                    */ = makeIx(PING);\nconst makeGetBlock /*                */ = makeIx(GET_BLOCK);\nconst makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER);\nconst makeGetCollection /*           */ = makeIx(GET_COLLECTION);\nconst makeGetNetworkParameters /*    */ = makeIx(GET_NETWORK_PARAMETERS);\nconst is = wat => ix => ix.tag === wat;\nconst isUnknown /*                 */ = is(UNKNOWN);\nconst isScript /*                  */ = is(SCRIPT);\nconst isTransaction /*             */ = is(TRANSACTION);\nconst isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS);\nconst isGetTransaction /*          */ = is(GET_TRANSACTION);\nconst isGetAccount /*              */ = is(GET_ACCOUNT);\nconst isGetEvents /*               */ = is(GET_EVENTS);\nconst isPing /*                    */ = is(PING);\nconst isGetBlock /*                */ = is(GET_BLOCK);\nconst isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER);\nconst isGetCollection /*           */ = is(GET_COLLECTION);\nconst isGetNetworkParameters /*    */ = is(GET_NETWORK_PARAMETERS);\nconst isOk /*  */ = ix => ix.status === OK;\nconst isBad /* */ = ix => ix.status === BAD;\nconst why /*   */ = ix => ix.reason;\nconst isAccount /*  */ = account => account.kind === ACCOUNT;\nconst isParam /*    */ = param => param.kind === PARAM;\nconst isArgument /* */ = argument => argument.kind === ARGUMENT;\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key)) throw new Error(\"\\\"\".concat(key, \"\\\" is an invalid root level Interaction property.\"));\n  }\n  return ix;\n};\nconst recPipe = async function (ix) {\n  let fns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  try {\n    ix = hardMode(await ix);\n    if (isBad(ix)) throw new Error(\"Interaction Error: \".concat(ix.reason));\n    if (!fns.length) return ix;\n    const [hd, ...rest] = fns;\n    const cur = await hd;\n    if (isFn$3(cur)) return recPipe(cur(ix), rest);\n    if (isNull(cur) || !cur) return recPipe(ix, rest);\n    if (isInteraction(cur)) return recPipe(cur, rest);\n    throw new Error(\"Invalid Interaction Composition\");\n  } catch (e) {\n    throw e;\n  }\n};\nconst pipe = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  const [arg1, arg2] = args;\n  if (isArray$1(arg1) && arg2 == null) return d => pipe(d, arg1);\n  return recPipe(arg1, arg2);\n};\nconst identity$1 = v => v;\nconst get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key];\n};\nconst put = (key, value) => ix => {\n  ix.assigns[key] = value;\n  return Ok(ix);\n};\nconst update = function (key) {\n  let fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : identity$1;\n  return ix => {\n    ix.assigns[key] = fn(ix.assigns[key], ix);\n    return Ok(ix);\n  };\n};\nconst destroy = key => ix => {\n  delete ix.assigns[key];\n  return Ok(ix);\n};\nvar ixModule = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UNKNOWN: UNKNOWN,\n  SCRIPT: SCRIPT,\n  TRANSACTION: TRANSACTION,\n  GET_TRANSACTION_STATUS: GET_TRANSACTION_STATUS,\n  GET_ACCOUNT: GET_ACCOUNT,\n  GET_EVENTS: GET_EVENTS,\n  PING: PING,\n  GET_TRANSACTION: GET_TRANSACTION,\n  GET_BLOCK: GET_BLOCK,\n  GET_BLOCK_HEADER: GET_BLOCK_HEADER,\n  GET_COLLECTION: GET_COLLECTION,\n  GET_NETWORK_PARAMETERS: GET_NETWORK_PARAMETERS,\n  BAD: BAD,\n  OK: OK,\n  ACCOUNT: ACCOUNT,\n  PARAM: PARAM,\n  ARGUMENT: ARGUMENT,\n  AUTHORIZER: AUTHORIZER,\n  PAYER: PAYER,\n  PROPOSER: PROPOSER,\n  interaction: interaction,\n  isNumber: isNumber$1,\n  isArray: isArray$1,\n  isObj: isObj,\n  isNull: isNull,\n  isFn: isFn$3,\n  isInteraction: isInteraction,\n  Ok: Ok,\n  Bad: Bad,\n  prepAccount: prepAccount,\n  makeArgument: makeArgument,\n  makeUnknown: makeUnknown,\n  makeScript: makeScript,\n  makeTransaction: makeTransaction,\n  makeGetTransactionStatus: makeGetTransactionStatus,\n  makeGetTransaction: makeGetTransaction,\n  makeGetAccount: makeGetAccount,\n  makeGetEvents: makeGetEvents,\n  makePing: makePing,\n  makeGetBlock: makeGetBlock,\n  makeGetBlockHeader: makeGetBlockHeader,\n  makeGetCollection: makeGetCollection,\n  makeGetNetworkParameters: makeGetNetworkParameters,\n  isUnknown: isUnknown,\n  isScript: isScript,\n  isTransaction: isTransaction,\n  isGetTransactionStatus: isGetTransactionStatus,\n  isGetTransaction: isGetTransaction,\n  isGetAccount: isGetAccount,\n  isGetEvents: isGetEvents,\n  isPing: isPing,\n  isGetBlock: isGetBlock,\n  isGetBlockHeader: isGetBlockHeader,\n  isGetCollection: isGetCollection,\n  isGetNetworkParameters: isGetNetworkParameters,\n  isOk: isOk,\n  isBad: isBad,\n  why: why,\n  isAccount: isAccount,\n  isParam: isParam,\n  isArgument: isArgument,\n  pipe: pipe,\n  get: get,\n  put: put,\n  update: update,\n  destroy: destroy\n});\nfunction build() {\n  let fns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return pipe(interaction(), fns);\n}\nconst DEFAULT_RESPONSE = \"{\\n    \\\"tag\\\":null,\\n    \\\"transaction\\\":null,\\n    \\\"transactionStatus\\\":null,\\n    \\\"transactionId\\\":null,\\n    \\\"encodedData\\\":null,\\n    \\\"events\\\":null,\\n    \\\"account\\\":null,\\n    \\\"block\\\":null,\\n    \\\"blockHeader\\\":null,\\n    \\\"latestBlock\\\":null,\\n    \\\"collection\\\":null,\\n    \\\"networkParameters\\\":null\\n}\";\nconst response = () => JSON.parse(DEFAULT_RESPONSE);\n\n/**\n * @description - A builder function that returns the interaction to get the latest block\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nfunction getBlock() {\n  let isSealed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return pipe([makeGetBlock, ix => {\n    ix.block.isSealed = isSealed;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns the interaction to get an account by address\n * @param {string} addr - The address of the account to getq\n * @returns {Function} - An interaction object\n */\nfunction getAccount(addr) {\n  return pipe([makeGetAccount, ix => {\n    ix.account.addr = sansPrefix(addr);\n    return Ok(ix);\n  }]);\n}\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject: \"Operating upon data of the latestBlock field of the response object\",\n    transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\"\n  });\n};\nconst decodeImplicit = async i => i;\nconst decodeVoid = async () => null;\nconst decodeType = async type => {\n  return type.staticType;\n};\nconst decodePath = async path => {\n  return {\n    domain: path.domain,\n    identifier: path.identifier\n  };\n};\nconst decodeCapability = async cap => {\n  return {\n    path: cap.path,\n    address: cap.address,\n    borrowType: cap.borrowType\n  };\n};\nconst decodeOptional = async (optional, decoders, stack) => optional ? await recurseDecode(optional, decoders, stack) : null;\nconst decodeReference = async v => ({\n  address: v.address,\n  type: v.type\n});\nconst decodeArray = async (array, decoders, stack) => await Promise.all(array.map(v => new Promise(async res => res(await recurseDecode(v, decoders, [...stack, v.type])))));\nconst decodeDictionary = async (dictionary, decoders, stack) => await dictionary.reduce(async (acc, v) => {\n  acc = await acc;\n  acc[await recurseDecode(v.key, decoders, [...stack, v.key])] = await recurseDecode(v.value, decoders, [...stack, v.key]);\n  return acc;\n}, Promise.resolve({}));\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc;\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name]);\n    return acc;\n  }, Promise.resolve({}));\n  const decoder = composite.id && decoderLookup(decoders, composite.id);\n  return decoder ? await decoder(decoded) : decoded;\n};\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodePath,\n  Capability: decodeCapability\n};\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1));\n      return reg.test(lookup);\n    }\n    return decoder === lookup;\n  });\n  return lookup && found && decoders[found];\n};\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type);\n  if (!decoder) throw new Error(\"Undefined Decoder Error: \".concat(decodeInstructions.type, \"@\").concat(stack.join(\".\")));\n  return await decoder(decodeInstructions.value, decoders, stack);\n};\n\n/**\n * @description - Decodes a response from Flow into JSON\n * @param {*} decodeInstructions - The response object from Flow\n * @param {object} customDecoders - An object of custom decoders\n * @param {Array<*>} stack - The stack of the current decoding\n * @returns {Promise<*>} - The decoded response\n */\nconst decode$1 = async function (decodeInstructions) {\n  let customDecoders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let stack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders).filter(decoder => !Object.keys(customDecoders).find(customDecoder => new RegExp(customDecoder).test(decoder))).reduce((decoders, decoderKey) => {\n    decoders[decoderKey] = defaultDecoders[decoderKey];\n    return decoders;\n  }, customDecoders);\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders\n  };\n  return recurseDecode(decodeInstructions, decoders, stack);\n};\nconst decodeResponse = async function (response) {\n  let customDecoders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (response.encodedData) {\n    return decode$1(response.encodedData, customDecoders);\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(response.transactionStatus.events.map(async function decodeEvents(e) {\n        return {\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode$1(e.payload, customDecoders)\n        };\n      }))\n    };\n  } else if (response.transaction) {\n    return response.transaction;\n  } else if (response.events) {\n    return await Promise.all(response.events.map(async function decodeEvents(e) {\n      return {\n        blockId: e.blockId,\n        blockHeight: e.blockHeight,\n        blockTimestamp: e.blockTimestamp,\n        type: e.type,\n        transactionId: e.transactionId,\n        transactionIndex: e.transactionIndex,\n        eventIndex: e.eventIndex,\n        data: await decode$1(e.payload, customDecoders)\n      };\n    }));\n  } else if (response.account) {\n    return response.account;\n  } else if (response.block) {\n    return response.block;\n  } else if (response.blockHeader) {\n    return response.blockHeader;\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice();\n    return response.latestBlock;\n  } else if (response.transactionId) {\n    return response.transactionId;\n  } else if (response.collection) {\n    return response.collection;\n  } else if (response.networkParameters) {\n    const chainIdMap = {\n      \"flow-testnet\": \"testnet\",\n      \"flow-mainnet\": \"mainnet\",\n      \"flow-emulator\": \"local\"\n    };\n    return {\n      chainId: chainIdMap[response.networkParameters.chainId]\n    };\n  }\n  return null;\n};\nconst isFn$2 = v => typeof v === \"function\";\nconst isString$1 = v => typeof v === \"string\";\nconst oldIdentifierPatternFn = () => /\\b(0x\\w+)\\b/g;\nfunction isOldIdentifierSyntax(cadence) {\n  return oldIdentifierPatternFn().test(cadence);\n}\nconst newIdentifierPatternFn = () => /import\\s+\"(\\w+)\"/g;\nfunction isNewIdentifierSyntax(cadence) {\n  return newIdentifierPatternFn().test(cadence);\n}\nfunction getContractIdentifierSyntaxMatches(cadence) {\n  return cadence.matchAll(newIdentifierPatternFn());\n}\nasync function resolveCadence(ix) {\n  if (!isTransaction(ix) && !isScript(ix)) return ix;\n  var cadence = get(ix, \"ix.cadence\");\n  invariant$1(isFn$2(cadence) || isString$1(cadence), \"Cadence needs to be a function or a string.\");\n  if (isFn$2(cadence)) cadence = await cadence({});\n  invariant$1(isString$1(cadence), \"Cadence needs to be a string at this point.\");\n  invariant$1(!isOldIdentifierSyntax(cadence) || !isNewIdentifierSyntax(cadence), \"Both account identifier and contract identifier syntax not simultaneously supported.\");\n  if (isOldIdentifierSyntax(cadence)) {\n    cadence = await config().where(/^0x/).then(d => Object.entries(d).reduce((cadence, _ref) => {\n      let [key, value] = _ref;\n      const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\");\n      return cadence.replace(regex, value);\n    }, cadence));\n  }\n  if (isNewIdentifierSyntax(cadence)) {\n    for (const [fullMatch, contractName] of getContractIdentifierSyntaxMatches(cadence)) {\n      const address = await config().get(\"system.contracts.\".concat(contractName));\n      if (address) {\n        cadence = cadence.replace(fullMatch, \"import \".concat(contractName, \" from \").concat(withPrefix(address)));\n      } else {\n        logger.log({\n          title: \"Contract Placeholder not found\",\n          message: \"Cannot find a value for contract placeholder \".concat(contractName, \". Please add to your flow.json or explicitly add it to the config 'contracts.*' namespace.\"),\n          level: logger.LEVELS.warn\n        });\n      }\n    }\n  }\n\n  // We need to move this over in any case.\n  ix.message.cadence = cadence;\n  return ix;\n}\nconst isFn$1 = v => typeof v === \"function\";\nfunction cast(arg) {\n  // prettier-ignore\n  invariant$1(typeof arg.xform != null, \"No type specified for argument: \".concat(arg.value));\n  if (isFn$1(arg.xform)) return arg.xform(arg.value);\n  if (isFn$1(arg.xform.asArgument)) return arg.xform.asArgument(arg.value);\n\n  // prettier-ignore\n  invariant$1(false, \"Invalid Argument\", arg);\n}\nasync function handleArgResolution(arg) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  invariant$1(depth > 0, \"Argument Resolve Recursion Limit Exceeded for Arg: \".concat(arg.tempId));\n  if (isFn$1(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument();\n    return handleArgResolution(resolvedArg, depth - 1);\n  } else {\n    return arg;\n  }\n}\nasync function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg);\n      ix.arguments[id].asArgument = cast(res);\n    }\n  }\n  return ix;\n}\nconst encodeTransactionPayload = tx => prependTransactionDomainTag(rlpEncode(preparePayload(tx)));\nconst encodeTransactionEnvelope = tx => prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)));\nconst encodeTxIdFromVoucher = voucher => sha3_256(rlpEncode(prepareVoucher(voucher)));\nconst rightPaddedHexBuffer = (value, pad) => Buffer.from(value.padEnd(pad * 2, 0), \"hex\");\nconst leftPaddedHexBuffer = (value, pad) => Buffer.from(value.padStart(pad * 2, 0), \"hex\");\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), 32).toString(\"hex\");\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx;\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8);\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32);\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\");\nconst scriptBuffer = script => Buffer.from(script, \"utf8\");\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\");\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\");\n};\nconst sha3_256 = msg => {\n  const sha = new SHA3(256);\n  sha.update(Buffer.from(msg, \"hex\"));\n  return sha.digest().toString(\"hex\");\n};\nconst preparePayload = tx => {\n  validatePayload(tx);\n  return [scriptBuffer(tx.cadence), tx.arguments.map(argumentToString), blockBuffer(tx.refBlock), tx.computeLimit, addressBuffer(sansPrefix(tx.proposalKey.address)), tx.proposalKey.keyId, tx.proposalKey.sequenceNum, addressBuffer(sansPrefix(tx.payer)), tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer)))];\n};\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx);\n  return [preparePayload(tx), preparePayloadSignatures(tx)];\n};\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx);\n  return tx.payloadSigs.map(sig => {\n    return {\n      signerIndex: signers.get(sig.address),\n      keyId: sig.keyId,\n      sig: sig.sig\n    };\n  }).sort((a, b) => {\n    if (a.signerIndex > b.signerIndex) return 1;\n    if (a.signerIndex < b.signerIndex) return -1;\n    if (a.keyId > b.keyId) return 1;\n    if (a.keyId < b.keyId) return -1;\n  }).map(sig => {\n    return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)];\n  });\n};\nconst collectSigners = tx => {\n  const signers = new Map();\n  let i = 0;\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i);\n      i++;\n    }\n  };\n  addSigner(tx.proposalKey.address);\n  addSigner(tx.payer);\n  tx.authorizers.forEach(addSigner);\n  return signers;\n};\nconst prepareVoucher = voucher => {\n  validateVoucher(voucher);\n  const signers = collectSigners(voucher);\n  const prepareSigs = sigs => {\n    return sigs.map(_ref => {\n      let {\n        address,\n        keyId,\n        sig\n      } = _ref;\n      return {\n        signerIndex: signers.get(address),\n        keyId,\n        sig\n      };\n    }).sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1;\n      if (a.signerIndex < b.signerIndex) return -1;\n      if (a.keyId > b.keyId) return 1;\n      if (a.keyId < b.keyId) return -1;\n    }).map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)];\n    });\n  };\n  return [[scriptBuffer(voucher.cadence), voucher.arguments.map(argumentToString), blockBuffer(voucher.refBlock), voucher.computeLimit, addressBuffer(sansPrefix(voucher.proposalKey.address)), voucher.proposalKey.keyId, voucher.proposalKey.sequenceNum, addressBuffer(sansPrefix(voucher.payer)), voucher.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer)))], prepareSigs(voucher.payloadSigs), prepareSigs(voucher.envelopeSigs)];\n};\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field));\n  proposalKeyFields.forEach(field => checkField(tx.proposalKey, field, \"proposalKey\"));\n};\nconst validateEnvelope = tx => {\n  payloadSigsFields.forEach(field => checkField(tx, field));\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field => checkField(sig, field, \"payloadSigs\", index));\n  });\n};\nconst validateVoucher = voucher => {\n  payloadFields.forEach(field => checkField(voucher, field));\n  proposalKeyFields.forEach(field => checkField(voucher.proposalKey, field, \"proposalKey\"));\n  payloadSigsFields.forEach(field => checkField(voucher, field));\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field => checkField(sig, field, \"payloadSigs\", index));\n  });\n  envelopeSigsFields.forEach(field => checkField(voucher, field));\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field => checkField(sig, field, \"envelopeSigs\", index));\n  });\n};\nconst isNumber = v => typeof v === \"number\";\nconst isString = v => typeof v === \"string\";\nconst isObject = v => v !== null && typeof v === \"object\";\nconst isArray = v => isObject(v) && v instanceof Array;\nconst payloadFields = [{\n  name: \"cadence\",\n  check: isString\n}, {\n  name: \"arguments\",\n  check: isArray\n}, {\n  name: \"refBlock\",\n  check: isString,\n  defaultVal: \"0\"\n}, {\n  name: \"computeLimit\",\n  check: isNumber\n}, {\n  name: \"proposalKey\",\n  check: isObject\n}, {\n  name: \"payer\",\n  check: isString\n}, {\n  name: \"authorizers\",\n  check: isArray\n}];\nconst proposalKeyFields = [{\n  name: \"address\",\n  check: isString\n}, {\n  name: \"keyId\",\n  check: isNumber\n}, {\n  name: \"sequenceNum\",\n  check: isNumber\n}];\nconst payloadSigsFields = [{\n  name: \"payloadSigs\",\n  check: isArray\n}];\nconst payloadSigFields = [{\n  name: \"address\",\n  check: isString\n}, {\n  name: \"keyId\",\n  check: isNumber\n}, {\n  name: \"sig\",\n  check: isString\n}];\nconst envelopeSigsFields = [{\n  name: \"envelopeSigs\",\n  check: isArray\n}];\nconst envelopeSigFields = [{\n  name: \"address\",\n  check: isString\n}, {\n  name: \"keyId\",\n  check: isNumber\n}, {\n  name: \"sig\",\n  check: isString\n}];\nconst checkField = (obj, field, base, index) => {\n  const {\n    name,\n    check,\n    defaultVal\n  } = field;\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal;\n  if (obj[name] == null) throw missingFieldError(name, base, index);\n  if (!check(obj[name])) throw invalidFieldError(name, base, index);\n};\nconst printFieldName = (field, base, index) => {\n  if (!!base) return index == null ? \"\".concat(base, \".\").concat(field) : \"\".concat(base, \".\").concat(index, \".\").concat(field);\n  return field;\n};\nconst missingFieldError = (field, base, index) => new Error(\"Missing field \".concat(printFieldName(field, base, index)));\nconst invalidFieldError = (field, base, index) => new Error(\"Invalid field \".concat(printFieldName(field, base, index)));\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations);\n  inside.add(ix.proposer);\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p));\n  } else {\n    inside.delete(ix.payer);\n  }\n  return Array.from(inside);\n}\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer]);\n  return Array.from(outside);\n}\nconst createSignableVoucher = ix => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations.map(cid => withPrefix(ix.accounts[cid].addr)).reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current];\n    }, []);\n    return authorizations[0] ? authorizations : [];\n  };\n  const buildInsideSigners = () => findInsideSigners(ix).map(id => ({\n    address: withPrefix(ix.accounts[id].addr),\n    keyId: ix.accounts[id].keyId,\n    sig: ix.accounts[id].signature\n  }));\n  const buildOutsideSigners = () => findOutsideSigners(ix).map(id => ({\n    address: withPrefix(ix.accounts[id].addr),\n    keyId: ix.accounts[id].keyId,\n    sig: ix.accounts[id].signature\n  }));\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum\n    },\n    payer: withPrefix(ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners()\n  };\n};\nconst voucherToTxId = voucher => {\n  return encodeTxIdFromVoucher(voucher);\n};\nconst MAX_DEPTH_LIMIT = 5;\nconst idof$1 = acct => \"\".concat(withPrefix(acct.addr), \"-\").concat(acct.keyId);\nconst isFn = v => v && (Object.prototype.toString.call(v) === \"[object Function]\" || \"function\" === typeof v || v instanceof Function);\nconst genAccountId = function () {\n  for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\n    ids[_key] = arguments[_key];\n  }\n  return ids.join(\"-\");\n};\nconst ROLES = {\n  PAYER: \"payer\",\n  PROPOSER: \"proposer\",\n  AUTHORIZATIONS: \"authorizations\"\n};\nfunction debug$1() {\n  const SPACE = \" \";\n  const SPACE_COUNT_PER_INDENT = 4;\n  const DEBUG_MESSAGE = [];\n  return [function (msg) {\n    let indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    DEBUG_MESSAGE.push(Array(indent * SPACE_COUNT_PER_INDENT).fill(SPACE).join(\"-\") + msg);\n  }, function () {\n    return DEBUG_MESSAGE.reduce((prev, curr) => prev + \"\\n\" + curr);\n  }];\n}\nfunction recurseFlatMap(el) {\n  let depthLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  if (depthLimit <= 0) return el;\n  if (!Array.isArray(el)) return el;\n  return recurseFlatMap(el.flatMap(e => e), depthLimit - 1);\n}\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix)\n    };\n  } catch (error) {\n    console.error(\"buildPreSignable\", error);\n    throw error;\n  }\n}\nasync function removeUnusedIxAccounts(ix) {\n  const payerTempIds = Array.isArray(ix.payer) ? ix.payer : [ix.payer];\n  const authorizersTempIds = Array.isArray(ix.authorizations) ? ix.authorizations : [ix.authorizations];\n  const proposerTempIds = Array.isArray(ix.proposer) ? ix.proposer : [ix.proposer];\n  const ixAccountKeys = Object.keys(ix.accounts);\n  const uniqueTempIds = [...new Set(payerTempIds.concat(authorizersTempIds, proposerTempIds))];\n  for (const ixAccountKey of ixAccountKeys) {\n    if (!uniqueTempIds.find(id => id === ixAccountKey)) {\n      delete ix.accounts[ixAccountKey];\n    }\n  }\n}\nfunction addAccountToIx(ix, newAccount) {\n  if (typeof newAccount.addr === \"string\" && (typeof newAccount.keyId === \"number\" || typeof newAccount.keyId === \"string\")) {\n    newAccount.tempId = idof$1(newAccount);\n  } else {\n    newAccount.tempId = newAccount.tempId || v4();\n  }\n  const existingAccount = ix.accounts[newAccount.tempId] || newAccount;\n  if (!ix.accounts[newAccount.tempId]) {\n    ix.accounts[newAccount.tempId] = newAccount;\n  }\n  ix.accounts[newAccount.tempId].role.proposer = existingAccount.role.proposer || newAccount.role.proposer;\n  ix.accounts[newAccount.tempId].role.payer = existingAccount.role.payer || newAccount.role.payer;\n  ix.accounts[newAccount.tempId].role.authorizer = existingAccount.role.authorizer || newAccount.role.authorizer;\n  return ix.accounts[newAccount.tempId];\n}\nfunction uniqueAccountsFlatMap(accounts) {\n  const flatMapped = recurseFlatMap(accounts);\n  const seen = new Set();\n  const uniqueAccountsFlatMapped = flatMapped.map(account => {\n    const accountId = genAccountId(account.tempId, account.role.payer, account.role.proposer, account.role.authorizer, account.role.param);\n    if (seen.has(accountId)) return null;\n    seen.add(accountId);\n    return account;\n  }).filter(e => e !== null);\n  return uniqueAccountsFlatMapped;\n}\nasync function recurseResolveAccount(ix, currentAccountTempId) {\n  var _account;\n  let depthLimit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : MAX_DEPTH_LIMIT;\n  let {\n    debugLogger\n  } = arguments.length > 3 ? arguments[3] : undefined;\n  if (depthLimit <= 0) {\n    throw new Error(\"recurseResolveAccount Error: Depth limit (\".concat(MAX_DEPTH_LIMIT, \") reached. Ensure your authorization functions resolve to an account after \").concat(MAX_DEPTH_LIMIT, \" resolves.\"));\n  }\n  let account = ix.accounts[currentAccountTempId];\n  if (!account) return null;\n  debugLogger(\"account: \".concat(account.tempId), Math.max(MAX_DEPTH_LIMIT - depthLimit, 0));\n  if ((_account = account) !== null && _account !== void 0 && _account.resolve) {\n    var _account2;\n    if (isFn((_account2 = account) === null || _account2 === void 0 ? void 0 : _account2.resolve)) {\n      debugLogger(\"account: \".concat(account.tempId, \" -- cache MISS\"), Math.max(MAX_DEPTH_LIMIT - depthLimit, 0));\n      const {\n        resolve,\n        ...accountWithoutResolve\n      } = account;\n      let resolvedAccounts = await resolve(accountWithoutResolve, buildPreSignable(accountWithoutResolve, ix));\n      resolvedAccounts = Array.isArray(resolvedAccounts) ? resolvedAccounts : [resolvedAccounts];\n      let flatResolvedAccounts = recurseFlatMap(resolvedAccounts);\n      flatResolvedAccounts = flatResolvedAccounts.map(flatResolvedAccount => addAccountToIx(ix, flatResolvedAccount));\n      account.resolve = flatResolvedAccounts.map(flatResolvedAccount => flatResolvedAccount.tempId);\n      account = addAccountToIx(ix, account);\n      const recursedAccounts = await Promise.all(flatResolvedAccounts.map(async resolvedAccount => {\n        return await recurseResolveAccount(ix, resolvedAccount.tempId, depthLimit - 1, {\n          debugLogger\n        });\n      }));\n      return recursedAccounts ? recurseFlatMap(recursedAccounts) : account.tempId;\n    } else {\n      debugLogger(\"account: \".concat(account.tempId, \" -- cache HIT\"), Math.max(MAX_DEPTH_LIMIT - depthLimit, 0));\n      return account.resolve;\n    }\n  }\n  return account.tempId;\n}\nasync function resolveAccountType(ix, type, _ref) {\n  let {\n    debugLogger\n  } = _ref;\n  invariant$1(ix && typeof ix === \"object\", \"resolveAccountType Error: ix not defined\");\n  invariant$1(type === ROLES.PAYER || type === ROLES.PROPOSER || type === ROLES.AUTHORIZATIONS, \"resolveAccountType Error: type must be 'payer', 'proposer' or 'authorizations'\");\n  let accountTempIDs = Array.isArray(ix[type]) ? ix[type] : [ix[type]];\n  let allResolvedAccounts = [];\n  for (let accountId of accountTempIDs) {\n    let account = ix.accounts[accountId];\n    invariant$1(account, \"resolveAccountType Error: account not found\");\n    let resolvedAccountTempIds = await recurseResolveAccount(ix, accountId, MAX_DEPTH_LIMIT, {\n      debugLogger\n    });\n    resolvedAccountTempIds = Array.isArray(resolvedAccountTempIds) ? resolvedAccountTempIds : [resolvedAccountTempIds];\n    let resolvedAccounts = resolvedAccountTempIds.map(resolvedAccountTempId => ix.accounts[resolvedAccountTempId]);\n    let flatResolvedAccounts = uniqueAccountsFlatMap(resolvedAccounts);\n    allResolvedAccounts = allResolvedAccounts.concat(flatResolvedAccounts);\n  }\n  invariant$1(allResolvedAccounts.length > 0, \"resolveAccountType Error: failed to resolve any accounts\");\n  if (type === ROLES.PAYER) {\n    allResolvedAccounts = allResolvedAccounts.filter(acct => acct.role.payer === true);\n  }\n  if (type === ROLES.PROPOSER) {\n    allResolvedAccounts = allResolvedAccounts.filter(acct => acct.role.proposer === true);\n  }\n  if (type === ROLES.AUTHORIZATIONS) {\n    allResolvedAccounts = allResolvedAccounts.filter(acct => acct.role.authorizer === true);\n  }\n  ix[type] = Array.isArray(ix[type]) ? [...new Set(allResolvedAccounts.map(acct => acct.tempId))] : allResolvedAccounts[0].tempId;\n\n  // Ensure all payers are of the same account\n  if (type === ROLES.PAYER) {\n    let address;\n    for (const payerTempID of ix[ROLES.PAYER]) {\n      let pAcct = ix.accounts[payerTempID];\n      if (!address) address = pAcct.addr;else if (address !== pAcct.addr) {\n        throw new Error(\"resolveAccountType Error: payers from different accounts detected\");\n      }\n    }\n  }\n}\nasync function resolveAccounts(ix) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject: '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\"\n      });\n    }\n    let [debugLogger, getDebugMessage] = debug$1();\n    try {\n      await resolveAccountType(ix, ROLES.PROPOSER, {\n        debugLogger\n      });\n      await resolveAccountType(ix, ROLES.AUTHORIZATIONS, {\n        debugLogger\n      });\n      await resolveAccountType(ix, ROLES.PAYER, {\n        debugLogger\n      });\n      await removeUnusedIxAccounts(ix, {\n        debugLogger\n      });\n      if (opts.enableDebug) {\n        console.debug(getDebugMessage());\n      }\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\");\n      throw error;\n    }\n  }\n  return ix;\n}\nasync function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix);\n      const insidePayload = encodeTransactionPayload(prepForEncoding(ix));\n\n      // Promise.all could potentially break the flow if there are multiple inside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iiframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const insideSigner of insideSigners) {\n      //   await fetchSignature(ix, insidePayload)(insideSigner);\n      // }\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)));\n      let outsideSigners = findOutsideSigners(ix);\n      const outsidePayload = encodeTransactionEnvelope({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature\n        }))\n      });\n\n      // Promise.all could potentially break the flow if there are multiple outside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const outsideSigner of outsideSigners) {\n      //   await fetchSignature(ix, outsidePayload)(outsideSigner);\n      // }\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)));\n    } catch (error) {\n      console.error(\"Signatures\", error, {\n        ix\n      });\n      throw error;\n    }\n  }\n  return ix;\n}\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id];\n    if (acct.signature != null && acct.signature !== undefined) return;\n    const {\n      signature\n    } = await acct.signingFunction(buildSignable(acct, payload, ix));\n    ix.accounts[id].signature = signature;\n  };\n}\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix)\n    };\n  } catch (error) {\n    console.error(\"buildSignable\", error);\n    throw error;\n  }\n}\nfunction prepForEncoding(ix) {\n  const payerAddress = sansPrefix((Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer]).addr);\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum\n    },\n    payer: payerAddress,\n    authorizers: ix.authorizations.map(cid => sansPrefix(ix.accounts[cid].addr)).reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current];\n    }, [])\n  };\n}\nasync function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", []);\n  return pipe(ix, validators.map(cb => ix => cb(ix, {\n    Ok,\n    Bad\n  })));\n}\nasync function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr);\n  }\n  return ix;\n}\nasync function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\");\n  if (isFn$3(fn)) {\n    await fn(createSignableVoucher(ix));\n  }\n  return ix;\n}\nconst DEFAULT_COMPUTE_LIMIT = 100;\nasync function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit = ix.message.computeLimit || (await config.get(\"fcl.limit\"));\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject: \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\"\n      });\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT;\n    }\n  }\n  return ix;\n}\nconst noop = v => v;\nconst debug = function (key) {\n  let fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  return async ix => {\n    const accts = ix => [\"\\nAccounts:\", {\n      proposer: ix.proposer,\n      authorizations: ix.authorizations,\n      payer: ix.payer\n    }, \"\\n\\nDetails:\", ix.accounts].filter(Boolean);\n    const log = function () {\n      for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n        msg[_key] = arguments[_key];\n      }\n      console.log(\"debug[\".concat(key, \"] ---\\n\"), ...msg, \"\\n\\n\\n---\");\n    };\n    if (await config.get(\"debug.\".concat(key))) await fn(ix, log, accts);\n    return ix;\n  };\n};\nconst resolve = pipe([resolveCadence, debug(\"cadence\", (ix, log) => log(ix.message.cadence)), resolveComputeLimit, debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)), resolveArguments, debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)), resolveAccounts, debug(\"accounts\", (ix, log, accts) => log(...accts(ix))), /* special */execFetchRef, /* special */execFetchSequenceNumber, resolveSignatures, debug(\"signatures\", (ix, log, accts) => log(...accts(ix))), resolveFinalNormalization, resolveValidators, resolveVoucherIntercept, debug(\"resolved\", (ix, log) => log(ix))]);\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\");\n    const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send$1);\n    invariant$1(sendFn, \"Required value for sdk.transport is not defined in config. See: \".concat(\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"));\n    ix.message.refBlock = (await sendFn(build([getBlock()]), {\n      config,\n      response,\n      Buffer,\n      ix: ixModule\n    }, {\n      node\n    }).then(decodeResponse)).id;\n  }\n  return ix;\n}\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer);\n    invariant$1(acct, \"Transactions require a proposer\");\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\");\n      const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send$1);\n      invariant$1(sendFn, \"Required value for sdk.transport is not defined in config. See: \".concat(\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"));\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(await build([getAccount(acct.addr)]), {\n        config,\n        response,\n        Buffer,\n        ix: ixModule\n      }, {\n        node\n      }).then(decodeResponse).then(acct => acct.keys).then(keys => keys.find(key => key.index === acct.keyId)).then(key => key.sequenceNumber);\n    }\n  }\n  return ix;\n}\nfunction invariant() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (args.length > 1) {\n    const [predicate, message] = args;\n    return invariant((ix, _ref) => {\n      let {\n        Ok,\n        Bad\n      } = _ref;\n      return predicate ? Ok(ix) : Bad(ix, message);\n    });\n  }\n  const [fn] = args;\n  return ix => fn(ix, {\n    Ok,\n    Bad\n  });\n}\n\n/**\n * @description - Sends arbitrary scripts, transactions, and requests to Flow\n * @param {Array.<Function>} args - An array of functions that take interaction and return interaction\n * @param {object} opts - Optional parameters\n * @returns {Promise<*>} - A promise that resolves to a response\n */\nconst send = async function () {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], opts.send || send$1);\n  invariant(sendFn, \"Required value for sdk.transport is not defined in config. See: \".concat(\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"));\n  const resolveFn = await config.first([\"sdk.resolve\"], opts.resolve || resolve);\n  opts.node = opts.node || (await config().get(\"accessNode.api\"));\n  if (Array.isArray(args)) args = pipe(interaction(), args);\n  return sendFn(await resolveFn(args), {\n    config,\n    response,\n    ix: ixModule,\n    Buffer\n  }, opts);\n};\nasync function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./);\n  const decoders = Object.entries(decodersFromConfig).map(_ref => {\n    let [pattern, xform] = _ref;\n    pattern = \"/\".concat(pattern.replace(/^decoder\\./, \"\"), \"$/\");\n    return [pattern, xform];\n  });\n  return decodeResponse(response, Object.fromEntries(decoders));\n}\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers);\n  payload.add(voucher.proposalKey.address);\n  payload.delete(voucher.payer);\n  return Array.from(payload).map(withPrefix);\n};\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer]);\n  return Array.from(envelope).map(withPrefix);\n};\nclass UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = \"\\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: \".concat(signerAddress, \". \\n        Please ensure the address: \").concat(signerAddress, \" is intended to sign the given transaction as specified by the transaction signable.\\n      \").trim();\n    super(msg);\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\";\n  }\n}\nconst encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher);\n  let envelopeSigners = findEnvelopeSigners(signable.voucher);\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress));\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress));\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(signerAddress);\n  }\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address)\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address)\n    }))\n  };\n  return isPayloadSigner ? encodeTransactionPayload(message) : encodeTransactionEnvelope(message);\n};\nfunction validator(cb) {\n  return update(\"ix.validators\", validators => Array.isArray(validators) ? validators.push(cb) : [cb]);\n}\n\n/**\n * @description - A builder function that returns a partial interaction to a block at a specific height\n * @param {number} height - The height of the block to get\n * @returns {Function} - A partial interaction object\n */\nfunction atBlockHeight(height) {\n  return pipe([ix => {\n    ix.block.height = height;\n    return ix;\n  }, validator(ix => {\n    if (typeof ix.block.isSealed === \"boolean\") throw new Error(\"Unable to specify both block height and isSealed.\");\n    if (ix.block.id) throw new Error(\"Unable to specify both block height and block id.\");\n    return ix;\n  })]);\n}\nfunction atBlockId(id) {\n  return pipe([ix => {\n    ix.block.id = id;\n    return Ok(ix);\n  }, validator((ix, _ref) => {\n    let {\n      Ok,\n      Bad\n    } = _ref;\n    if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\");\n    if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\");\n    if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\");\n    return Ok(ix);\n  })]);\n}\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Account} Account\n */\n\n/**\n * @description  Returns the details of an account from their public address\n * @param {string} address - Address of the account\n * @param {object} [queryOptions] - Query parameters\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Account>} - A promise that resolves to an account response\n */\nfunction account(address) {\n  let {\n    height,\n    id\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 ? arguments[2] : undefined;\n  invariant$1(!(id && height), \"Method: account -- Cannot pass \\\"id\\\" and \\\"height\\\" simultaneously\");\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decodeResponse);\n\n  // Get account by height\n  if (height) return send([getAccount(address), atBlockHeight(height)], opts).then(decodeResponse);\n  return send([getAccount(address)], opts).then(decodeResponse);\n}\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Block} Block\n */\n\n/**\n * @description Returns the latest block (optionally sealed or not), by id, or by height\n * @param {object} [queryOptions] - Query parameters\n * @param {boolean} [queryOptions.sealed=false] - Whether to query for a sealed block\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Block>} - A promise that resolves to a block response\n */\nfunction block() {\n  let {\n    sealed = false,\n    id,\n    height\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  invariant$1(!(sealed && id || sealed && height), \"Method: block -- Cannot pass \\\"sealed\\\" with \\\"id\\\" or \\\"height\\\"\");\n  invariant$1(!(id && height), \"Method: block -- Cannot pass \\\"id\\\" and \\\"height\\\" simultaneously\");\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decodeResponse);\n\n  // Get block by height\n  if (height) return send([getBlock(), atBlockHeight(height)], opts).then(decodeResponse);\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decodeResponse);\n}\nfunction authorizations() {\n  let ax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return pipe(ax.map(authz => {\n    return prepAccount(authz, {\n      role: AUTHORIZER\n    });\n  }));\n}\nfunction authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {\n    addr,\n    signingFunction,\n    keyId,\n    sequenceNum\n  };\n}\nfunction getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\"\n    });\n  }\n  return pipe([makeGetEvents, ix => {\n    ix.events.eventType = eventType;\n    ix.events.start = start;\n    ix.events.end = end;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a height range\n * NOTE:\n * - The block range provided must be from the current spork.\n * - The block range provided must be 250 blocks or lower per request.\n * @param {string} eventName - The name of the event to get\n * @param {number} fromBlockHeight - The height of the block to start looking for events (inclusive)\n * @param {number} toBlockHeight - The height of the block to stop looking for events (inclusive)\n * @returns {Function} - An interaction object\n */\nfunction getEventsAtBlockHeightRange(eventName, fromBlockHeight, toBlockHeight) {\n  return pipe([makeGetEvents, ix => {\n    ix.events.eventType = eventName;\n    ix.events.start = fromBlockHeight;\n    ix.events.end = toBlockHeight;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a set of blocks, specified by block ids\n * NOTE:\n * - The block range provided must be from the current spork.\n * @param {string} eventName - The name of the event to get\n * @param {number[]} blockIds - The ids of the blocks to look for events\n * @returns {Function} - An interaction object\n */\nfunction getEventsAtBlockIds(eventName) {\n  let blockIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return pipe([makeGetEvents, ix => {\n    ix.events.eventType = eventName;\n    ix.events.blockIds = blockIds;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns the interaction to get a block header\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nfunction getBlockHeader() {\n  let isSealed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return pipe([makeGetBlockHeader, ix => {\n    ix.block.isSealed = isSealed;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns all a collection containing a list of transaction ids by its collection id\n * NOTE:\n * - The block range provided must be from the current spork. All events emitted during past sporks is current unavailable.\n * @param {string} [id] - The id of the collection to get\n * @returns {Function} - An interaction object\n */\nfunction getCollection() {\n  let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return pipe([makeGetCollection, ix => {\n    ix.collection.id = id;\n    return ix;\n  }]);\n}\n\n/**\n * @description - A builder function that returns the status of transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get status\n * @returns {Function} - An interaction object\n */\nfunction getTransactionStatus(transactionId) {\n  return pipe([makeGetTransactionStatus, ix => {\n    ix.transaction.id = transactionId;\n    return Ok(ix);\n  }]);\n}\n\n/**\n * @description - A builder function that returns a transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get\n * @returns {Function} - An interaction object\n */\nfunction getTransaction(transactionId) {\n  return pipe([makeGetTransaction, ix => {\n    ix.transaction.id = transactionId;\n    return Ok(ix);\n  }]);\n}\nfunction getNetworkParameters() {\n  return pipe([makeGetNetworkParameters, ix => {\n    return Ok(ix);\n  }]);\n}\nfunction limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit;\n    return ix;\n  };\n}\n\n/**\n * @description - A utility builder to be used with other builders to pass in arguments with a value and supported type\n * @param {Array.<*>} ax - An array of arguments\n * @returns {Function} - An interaction object\n */\nfunction args() {\n  let ax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return pipe(ax.map(makeArgument));\n}\n\n/**\n * @description - A utility builder to be used with fcl.args[...] to create FCL supported arguments for interactions\n * @param {any} value - The value of the argument\n * @param {Function} xform - A function to transform the value\n * @returns {object} - An argument object\n */\nfunction arg(value, xform) {\n  return {\n    value,\n    xform\n  };\n}\nasync function proposer(authz) {\n  return prepAccount(authz, {\n    role: PROPOSER\n  });\n}\nfunction payer() {\n  let ax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  if (!Array.isArray(ax)) ax = [ax];\n  return pipe(ax.map(authz => {\n    return prepAccount(authz, {\n      role: PAYER\n    });\n  }));\n}\nfunction ping() {\n  return makePing;\n}\nfunction ref(refBlock) {\n  return pipe([ix => {\n    ix.message.refBlock = refBlock;\n    return Ok(ix);\n  }]);\n}\nfunction script() {\n  return pipe([makeScript, put(\"ix.cadence\", template(...arguments))]);\n}\nconst DEFAULT_SCRIPT_ACCOUNTS = [];\nconst DEFUALT_REF = null;\n\n/**\n * @description - A template builder to use a Cadence transaction for an interaction\n * @param {...*} args - The arguments to pass\n * @returns {Function} - An interaction object\n */\nfunction transaction() {\n  return pipe([makeTransaction, put(\"ix.cadence\", template(...arguments)), ix => {\n    ix.message.refBlock = ix.message.refBlock || DEFUALT_REF;\n    ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS;\n    return Ok(ix);\n  }]);\n}\nfunction voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn);\n}\nconst resolveProposerSequenceNumber = _ref => {\n  let {\n    node\n  } = _ref;\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix);\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix);\n    const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send$1);\n    invariant$1(sendFn, \"Required value for sdk.transport is not defined in config. See: \".concat(\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"));\n    const response$1 = await sendFn(await build([getAccount(ix.accounts[ix.proposer].addr)]), {\n      config,\n      response: response,\n      Buffer,\n      ix: ixModule\n    }, {\n      node\n    });\n    const decoded = await decodeResponse(response$1);\n    ix.accounts[ix.proposer].sequenceNum = decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber;\n    return Ok(ix);\n  };\n};\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\");\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send$1);\n  invariant$1(sendFn, \"Required value for sdk.transport is not defined in config. See: \".concat(\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"));\n  var ix;\n  ix = await pipe(interaction(), [getBlock()]);\n  ix = await sendFn(ix, {\n    config,\n    response,\n    Buffer,\n    ix: ixModule\n  }, {\n    node\n  });\n  ix = await decodeResponse(ix);\n  return ix.id;\n}\nfunction resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix);\n    if (ix.message.refBlock) return Ok(ix);\n    ix.message.refBlock = await getRefId();\n    return Ok(ix);\n  };\n}\nfunction mockAccountResponse(ix) {\n  let numberOfKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  // prettier-ignore\n  invariant$1(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix);\n  // prettier-ignore\n  invariant$1(ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix);\n  const address = ix.account.addr;\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({\n        length: numberOfKeys\n      }, (_, i) => ({\n        index: i,\n        sequenceNumber: 42\n      }))\n    }\n  };\n}\nfunction mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\"\n    }\n  };\n}\nconst identity = v => v;\nfunction mockSend() {\n  let fallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : identity;\n  return async function execSend(ix) {\n    ix = await ix;\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix);\n      case isGetBlock(ix):\n        return mockGetBlockResponse();\n      default:\n        return fallback(ix);\n    }\n  };\n}\nconst idof = acct => \"\".concat(withPrefix(acct.addr), \"-\").concat(acct.keyId);\nfunction sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\");\n}\nfunction authzFn() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      resolve: null,\n      signingFunction: opts.signingFunction || account.signingFunction || fallbackSigningFunction\n    };\n    return acct;\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct)\n      };\n    }\n  };\n}\nfunction authzResolve() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (account) {\n    const {\n      tempId,\n      ...rest\n    } = opts;\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest)\n    };\n  };\n}\nconst ROLE = {\n  proposer: false,\n  authorizer: false,\n  payer: false\n};\nfunction authzResolveMany() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\";\n    return {\n      ...account,\n      tempId,\n      resolve: () => [opts.proposer && authzFn(opts.proposer)({\n        role: {\n          ...ROLE,\n          proposer: true\n        }\n      }), ...opts.authorizations.map(authzFn).map(d => d({\n        role: {\n          ...ROLE,\n          authorizer: true\n        }\n      })), opts.payer && authzFn(opts.payer)({\n        role: {\n          ...ROLE,\n          payer: true\n        }\n      })].filter(Boolean)\n    };\n  };\n}\nfunction authzDeepResolveMany() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_DEEP_RESOLVE_MANY\";\n    return {\n      ...account,\n      tempId,\n      resolve: depth > 0 ? authzDeepResolveMany(opts, depth - 1)(account).resolve : authzResolveMany(opts)(account).resolve\n    };\n  };\n}\nconst run = function () {\n  let fns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return build([ref(\"123\"), ...fns]).then(resolve);\n};\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  mockSend: mockSend,\n  authzFn: authzFn,\n  authzResolve: authzResolve,\n  authzResolveMany: authzResolveMany,\n  authzDeepResolveMany: authzDeepResolveMany,\n  sig: sig,\n  idof: idof,\n  run: run\n});\nconst VERSION = \"1.3.1\";\n\n// Deprecated\nconst params = params => logger.log.deprecate({\n  pkg: \"FCL/SDK\",\n  message: \"The params builder has been removed from the Flow JS-SDK/FCL.\",\n  transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  level: logger.LEVELS.error\n});\nconst param = params => logger.log.deprecate({\n  pkg: \"FCL/SDK\",\n  message: \"The param builder has been removed from the Flow JS-SDK/FCL.\",\n  transition: \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  level: logger.LEVELS.error\n});\nexport { index as TestUtils, VERSION, account, arg, args, atBlockHeight, atBlockId, authorization, authorizations, block, build, createSignableVoucher, decode, destroy, encodeMessageFromSignable, encodeTransactionEnvelope, encodeTransactionPayload, encodeTxIdFromVoucher, get, getAccount, getBlock, getBlockHeader, getCollection, getEvents, getEventsAtBlockHeightRange, getEventsAtBlockIds, getNetworkParameters, getTransaction, getTransactionStatus, interaction, invariant, isBad, isGetAccount, isGetBlock, isGetBlockHeader, isGetCollection, isGetEvents, isGetNetworkParameters, isGetTransaction, isGetTransactionStatus, isOk, isPing, isScript, isTransaction, isUnknown, limit, param, params, payer, ping, pipe, proposer, put, ref, resolve, resolveAccounts, resolveArguments, resolveCadence, resolveFinalNormalization, resolveProposerSequenceNumber, resolveRefBlockId, resolveSignatures, resolveValidators, resolveVoucherIntercept, response, script, send, transaction, update, validator, voucherIntercept, voucherToTxId, why };","map":{"version":3,"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","PING","GET_TRANSACTION","GET_BLOCK","GET_BLOCK_HEADER","GET_COLLECTION","GET_NETWORK_PARAMETERS","BAD","OK","ACCOUNT","PARAM","ARGUMENT","AUTHORIZER","PAYER","PROPOSER","ACCT","concat","ARG","IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNumber$1","d","isArray$1","Array","isArray","isObj","isNull","isFn$3","isInteraction","ix","key","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","prepAccountKeyId","acct","keyId","invariant$1","isNaN","parseInt","prepAccount","opts","arguments","length","undefined","role","tempId","v4","authorization","resolve","_len","rest","_key","reduce","fn","accounts","authorizations","push","payer","makeArgument","arg","message","value","asArgument","xform","resolveArgument","bind","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","makeGetNetworkParameters","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isGetNetworkParameters","isOk","isBad","why","isAccount","account","kind","isParam","param","isArgument","argument","hardMode","has","Error","recPipe","fns","hd","cur","e","pipe","_len2","args","_key2","arg1","arg2","identity$1","v","get","fallback","assigns","put","update","destroy","build","DEFAULT_RESPONSE","response","getBlock","isSealed","block","getAccount","addr","sansPrefix","latestBlockDeprecationNotice","log","deprecate","pkg","subject","transition","decodeImplicit","i","decodeVoid","decodeType","type","staticType","decodePath","path","domain","identifier","decodeCapability","cap","address","borrowType","decodeOptional","optional","decoders","stack","recurseDecode","decodeReference","decodeArray","array","Promise","all","map","res","decodeDictionary","dictionary","acc","decodeComposite","composite","decoded","fields","name","decoder","id","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","Enum","Type","Path","Capability","lookup","found","find","test","reg","RegExp","substring","decodeInstructions","join","decode$1","decode","customDecoders","filteredDecoders","filter","customDecoder","decoderKey","decodeResponse","encodedData","transactionStatus","events","decodeEvents","transactionId","transactionIndex","eventIndex","data","payload","transaction","blockId","blockHeight","blockTimestamp","blockHeader","latestBlock","collection","networkParameters","chainIdMap","chainId","isFn$2","isString$1","oldIdentifierPatternFn","isOldIdentifierSyntax","cadence","newIdentifierPatternFn","isNewIdentifierSyntax","getContractIdentifierSyntaxMatches","matchAll","resolveCadence","config","where","then","entries","_ref","regex","replace","fullMatch","contractName","withPrefix","logger","title","level","LEVELS","warn","isFn$1","cast","handleArgResolution","depth","resolvedArg","resolveArguments","encodeTransactionPayload","tx","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","encodeTxIdFromVoucher","voucher","sha3_256","prepareVoucher","rightPaddedHexBuffer","pad","Buffer","from","padEnd","leftPaddedHexBuffer","padStart","TRANSACTION_DOMAIN_TAG","toString","addressBuffer","blockBuffer","argumentToString","stringify","scriptBuffer","script","signatureBuffer","signature","encode","msg","sha","SHA3","digest","validatePayload","refBlock","computeLimit","proposalKey","sequenceNum","authorizers","authorizer","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","Map","addSigner","set","forEach","validateVoucher","prepareSigs","sigs","envelopeSigs","payloadFields","field","checkField","proposalKeyFields","payloadSigsFields","index","payloadSigFields","envelopeSigsFields","envelopeSigFields","isNumber","isString","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","findInsideSigners","inside","add","proposer","p","delete","findOutsideSigners","outside","createSignableVoucher","buildAuthorizers","cid","prev","current","item","buildInsideSigners","buildOutsideSigners","voucherToTxId","MAX_DEPTH_LIMIT","idof$1","isFn","prototype","call","Function","genAccountId","ids","ROLES","AUTHORIZATIONS","debug$1","SPACE","SPACE_COUNT_PER_INDENT","DEBUG_MESSAGE","indent","fill","curr","recurseFlatMap","el","depthLimit","flatMap","buildPreSignable","f_type","f_vsn","roles","error","console","removeUnusedIxAccounts","payerTempIds","authorizersTempIds","proposerTempIds","ixAccountKeys","uniqueTempIds","ixAccountKey","addAccountToIx","newAccount","existingAccount","uniqueAccountsFlatMap","flatMapped","seen","uniqueAccountsFlatMapped","accountId","recurseResolveAccount","currentAccountTempId","_account","debugLogger","Math","max","_account2","accountWithoutResolve","resolvedAccounts","flatResolvedAccounts","flatResolvedAccount","recursedAccounts","resolvedAccount","resolveAccountType","accountTempIDs","allResolvedAccounts","resolvedAccountTempIds","resolvedAccountTempId","payerTempID","pAcct","resolveAccounts","getDebugMessage","enableDebug","debug","resolveSignatures","insideSigners","insidePayload","prepForEncoding","fetchSignature","outsideSigners","outsidePayload","innerFetchSignature","signingFunction","buildSignable","payerAddress","resolveValidators","validators","cb","resolveFinalNormalization","resolveVoucherIntercept","DEFAULT_COMPUTE_LIMIT","resolveComputeLimit","noop","accts","Boolean","execFetchRef","execFetchSequenceNumber","node","sendFn","first","send$1","ixModule","values","sequenceNumber","invariant","predicate","send","resolveFn","decodersFromConfig","pattern","fromEntries","findPayloadSigners","findEnvelopeSigners","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","trim","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","isPayloadSigner","includes","isEnvelopeSigner","ps","validator","atBlockHeight","height","atBlockId","sealed","ax","authz","getEvents","eventType","start","end","getEventsAtBlockHeightRange","eventName","fromBlockHeight","toBlockHeight","getEventsAtBlockIds","blockIds","getBlockHeader","getCollection","getTransactionStatus","getTransaction","getNetworkParameters","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","DEFUALT_REF","voucherIntercept","resolveProposerSequenceNumber","response$1","getRefId","resolveRefBlockId","mockAccountResponse","numberOfKeys","_","mockGetBlockResponse","identity","mockSend","execSend","idof","authzFn","fallbackSigningFunction","authzResolve","ROLE","authzResolveMany","authzDeepResolveMany","run","VERSION","params"],"sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/voucher.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve-voucher-intercept.js","../src/resolve/resolve-compute-limit.js","../src/resolve/resolve.js","../src/build/build-invariant.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/account/account.js","../src/block/block.js","../src/build/build-authorizations.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-get-network-parameters.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-voucher-intercept.js","../src/resolve/resolve-proposer-sequence-number.js","../src/resolve/resolve-ref-block-id.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.js","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.ts"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\nimport {v4 as uuidv4} from \"uuid\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\nexport const GET_NETWORK_PARAMETERS /*        */ = \"GET_NETWORK_PARAMETERS\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct\n\n  invariant(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\")\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId),\n  }\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuidv4()\n\n  if (acct.authorization && isFn(acct.authorization))\n    acct = {resolve: acct.authorization}\n  if (!acct.authorization && isFn(acct)) acct = {resolve: acct}\n\n  const resolve = acct.resolve\n  if (resolve)\n    acct.resolve = (acct, ...rest) =>\n      [resolve, prepAccountKeyId].reduce(\n        async (d, fn) => fn(await d, ...rest),\n        acct\n      )\n  acct = prepAccountKeyId(acct)\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else if (role === PAYER) {\n    ix.payer.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuidv4()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\nexport const makeGetNetworkParameters /*    */ = makeIx(GET_NETWORK_PARAMETERS)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\nexport const isGetNetworkParameters /*    */ = is(GET_NETWORK_PARAMETERS)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null,\n    \"networkParameters\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get the latest block\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n/**\n * @description - A builder function that returns the interaction to get an account by address\n * @param {string} addr - The address of the account to getq\n * @returns {Function} - An interaction object\n */\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    },\n  ])\n}\n","import {log, LEVELS} from \"@onflow/util-logger\"\n\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject:\n      \"Operating upon data of the latestBlock field of the response object\",\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\",\n  })\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async i => i\n\nconst decodeVoid = async () => null\n\nconst decodeType = async type => {\n  return type.staticType\n}\n\nconst decodePath = async path => {\n  return {\n    domain: path.domain,\n    identifier: path.identifier,\n  }\n}\n\nconst decodeCapability = async cap => {\n  return {\n    path: cap.path,\n    address: cap.address,\n    borrowType: cap.borrowType,\n  }\n}\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async v => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      v =>\n        new Promise(async res =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[await recurseDecode(v.key, decoders, [...stack, v.key])] =\n      await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodePath,\n  Capability: decodeCapability,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\n/**\n * @description - Decodes a response from Flow into JSON\n * @param {*} decodeInstructions - The response object from Flow\n * @param {object} customDecoders - An object of custom decoders\n * @param {Array<*>} stack - The stack of the current decoding\n * @returns {Promise<*>} - The decoded response\n */\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders)\n    .filter(\n      decoder =>\n        !Object.keys(customDecoders).find(customDecoder =>\n          new RegExp(customDecoder).test(decoder)\n        )\n    )\n    .reduce((decoders, decoderKey) => {\n      decoders[decoderKey] = defaultDecoders[decoderKey]\n      return decoders\n    }, customDecoders)\n\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders,\n  }\n  return recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  if (response.encodedData) {\n    return decode(response.encodedData, customDecoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, customDecoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, customDecoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  } else if (response.networkParameters) {\n    const chainIdMap = {\n      \"flow-testnet\": \"testnet\",\n      \"flow-mainnet\": \"mainnet\",\n      \"flow-emulator\": \"local\",\n    }\n\n    return {\n      chainId: chainIdMap[response.networkParameters.chainId],\n    }\n  }\n\n  return null\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nconst oldIdentifierPatternFn = () => /\\b(0x\\w+)\\b/g\nfunction isOldIdentifierSyntax(cadence) {\n  return oldIdentifierPatternFn().test(cadence)\n}\n\nconst newIdentifierPatternFn = () => /import\\s+\"(\\w+)\"/g\nfunction isNewIdentifierSyntax(cadence) {\n  return newIdentifierPatternFn().test(cadence)\n}\n\nfunction getContractIdentifierSyntaxMatches(cadence) {\n  return cadence.matchAll(newIdentifierPatternFn())\n}\n\nexport async function resolveCadence(ix) {\n  if (!isTransaction(ix) && !isScript(ix)) return ix\n\n  var cadence = get(ix, \"ix.cadence\")\n\n  invariant(\n    isFn(cadence) || isString(cadence),\n    \"Cadence needs to be a function or a string.\"\n  )\n  if (isFn(cadence)) cadence = await cadence({})\n  invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n  invariant(\n    !isOldIdentifierSyntax(cadence) || !isNewIdentifierSyntax(cadence),\n    \"Both account identifier and contract identifier syntax not simultaneously supported.\"\n  )\n  if (isOldIdentifierSyntax(cadence)) {\n    cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce((cadence, [key, value]) => {\n          const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\")\n          return cadence.replace(regex, value)\n        }, cadence)\n      )\n  }\n\n  if (isNewIdentifierSyntax(cadence)) {\n    for (const [fullMatch, contractName] of getContractIdentifierSyntaxMatches(\n      cadence\n    )) {\n      const address = await config().get(`system.contracts.${contractName}`)\n      if (address) {\n        cadence = cadence.replace(\n          fullMatch,\n          `import ${contractName} from ${withPrefix(address)}`\n        )\n      } else {\n        logger.log({\n          title: \"Contract Placeholder not found\",\n          message: `Cannot find a value for contract placeholder ${contractName}. Please add to your flow.json or explicitly add it to the config 'contracts.*' namespace.`,\n          level: logger.LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  // We need to move this over in any case.\n  ix.message.cadence = cadence\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nasync function handleArgResolution(arg, depth = 3) {\n  invariant(\n    depth > 0,\n    `Argument Resolve Recursion Limit Exceeded for Arg: ${arg.tempId}`\n  )\n\n  if (isFn(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument()\n    return handleArgResolution(resolvedArg, depth - 1)\n  } else {\n    return arg\n  }\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg)\n      ix.arguments[id].asArgument = cast(res)\n    }\n  }\n\n  return ix\n}\n","import {SHA3} from \"sha3\"\nimport {encode, Buffer} from \"@onflow/rlp\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport const encodeTransactionPayload = tx =>\n  prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx =>\n  prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\nexport const encodeTxIdFromVoucher = voucher =>\n  sha3_256(rlpEncode(prepareVoucher(voucher)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(\n  Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),\n  32\n).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst sha3_256 = msg => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msg, \"hex\"))\n  return sha.digest().toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(sansPrefix(tx.proposalKey.address)),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(sansPrefix(tx.payer)),\n    tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer))),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst prepareVoucher = voucher => {\n  validateVoucher(voucher)\n\n  const signers = collectSigners(voucher)\n\n  const prepareSigs = sigs => {\n    return sigs\n      .map(({address, keyId, sig}) => {\n        return {signerIndex: signers.get(address), keyId, sig}\n      })\n      .sort((a, b) => {\n        if (a.signerIndex > b.signerIndex) return 1\n        if (a.signerIndex < b.signerIndex) return -1\n        if (a.keyId > b.keyId) return 1\n        if (a.keyId < b.keyId) return -1\n      })\n      .map(sig => {\n        return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n      })\n  }\n\n  return [\n    [\n      scriptBuffer(voucher.cadence),\n      voucher.arguments.map(argumentToString),\n      blockBuffer(voucher.refBlock),\n      voucher.computeLimit,\n      addressBuffer(sansPrefix(voucher.proposalKey.address)),\n      voucher.proposalKey.keyId,\n      voucher.proposalKey.sequenceNum,\n      addressBuffer(sansPrefix(voucher.payer)),\n      voucher.authorizers.map(authorizer =>\n        addressBuffer(sansPrefix(authorizer))\n      ),\n    ],\n    prepareSigs(voucher.payloadSigs),\n    prepareSigs(voucher.envelopeSigs),\n  ]\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  payloadSigsFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst validateVoucher = voucher => {\n  payloadFields.forEach(field => checkField(voucher, field))\n  proposalKeyFields.forEach(field =>\n    checkField(voucher.proposalKey, field, \"proposalKey\")\n  )\n  payloadSigsFields.forEach(field => checkField(voucher, field))\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n  envelopeSigsFields.forEach(field => checkField(voucher, field))\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field =>\n      checkField(sig, field, \"envelopeSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst payloadSigsFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst envelopeSigsFields = [{name: \"envelopeSigs\", check: isArray}]\n\nconst envelopeSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {withPrefix} from \"@onflow/util-address\"\nimport {encodeTxIdFromVoucher} from \"../encode/encode.js\"\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p))\n  } else {\n    inside.delete(ix.payer)\n  }\n  return Array.from(inside)\n}\n\nexport function findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer])\n  return Array.from(outside)\n}\n\nexport const createSignableVoucher = ix => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, [])\n    return authorizations[0] ? authorizations : []\n  }\n\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(\n      ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n    ),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport const voucherToTxId = voucher => {\n  return encodeTxIdFromVoucher(voucher)\n}\n","import {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log} from \"@onflow/util-logger\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\nimport {v4 as uuidv4} from \"uuid\"\n\nconst MAX_DEPTH_LIMIT = 5\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\nconst isFn = v =>\n  v &&\n  (Object.prototype.toString.call(v) === \"[object Function]\" ||\n    \"function\" === typeof v ||\n    v instanceof Function)\n\nconst genAccountId = (...ids) => ids.join(\"-\")\n\nconst ROLES = {\n  PAYER: \"payer\",\n  PROPOSER: \"proposer\",\n  AUTHORIZATIONS: \"authorizations\",\n}\n\nfunction debug() {\n  const SPACE = \" \"\n  const SPACE_COUNT_PER_INDENT = 4\n  const DEBUG_MESSAGE = []\n  return [\n    function (msg, indent = 0) {\n      DEBUG_MESSAGE.push(\n        Array(indent * SPACE_COUNT_PER_INDENT)\n          .fill(SPACE)\n          .join(\"-\") + msg\n      )\n    },\n    function () {\n      return DEBUG_MESSAGE.reduce((prev, curr) => prev + \"\\n\" + curr)\n    },\n  ]\n}\n\nfunction recurseFlatMap(el, depthLimit = 3) {\n  if (depthLimit <= 0) return el\n  if (!Array.isArray(el)) return el\n  return recurseFlatMap(\n    el.flatMap(e => e),\n    depthLimit - 1\n  )\n}\n\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function removeUnusedIxAccounts(ix) {\n  const payerTempIds = Array.isArray(ix.payer) ? ix.payer : [ix.payer]\n  const authorizersTempIds = Array.isArray(ix.authorizations)\n    ? ix.authorizations\n    : [ix.authorizations]\n  const proposerTempIds = Array.isArray(ix.proposer)\n    ? ix.proposer\n    : [ix.proposer]\n\n  const ixAccountKeys = Object.keys(ix.accounts)\n  const uniqueTempIds = [\n    ...new Set(payerTempIds.concat(authorizersTempIds, proposerTempIds)),\n  ]\n\n  for (const ixAccountKey of ixAccountKeys) {\n    if (!uniqueTempIds.find(id => id === ixAccountKey)) {\n      delete ix.accounts[ixAccountKey]\n    }\n  }\n}\n\nfunction addAccountToIx(ix, newAccount) {\n  if (\n    typeof newAccount.addr === \"string\" &&\n    (typeof newAccount.keyId === \"number\" ||\n      typeof newAccount.keyId === \"string\")\n  ) {\n    newAccount.tempId = idof(newAccount)\n  } else {\n    newAccount.tempId = newAccount.tempId || uuidv4()\n  }\n\n  const existingAccount = ix.accounts[newAccount.tempId] || newAccount\n\n  if (!ix.accounts[newAccount.tempId]) {\n    ix.accounts[newAccount.tempId] = newAccount\n  }\n\n  ix.accounts[newAccount.tempId].role.proposer =\n    existingAccount.role.proposer || newAccount.role.proposer\n  ix.accounts[newAccount.tempId].role.payer =\n    existingAccount.role.payer || newAccount.role.payer\n  ix.accounts[newAccount.tempId].role.authorizer =\n    existingAccount.role.authorizer || newAccount.role.authorizer\n\n  return ix.accounts[newAccount.tempId]\n}\n\nfunction uniqueAccountsFlatMap(accounts) {\n  const flatMapped = recurseFlatMap(accounts)\n  const seen = new Set()\n\n  const uniqueAccountsFlatMapped = flatMapped\n    .map(account => {\n      const accountId = genAccountId(\n        account.tempId,\n        account.role.payer,\n        account.role.proposer,\n        account.role.authorizer,\n        account.role.param\n      )\n      if (seen.has(accountId)) return null\n      seen.add(accountId)\n      return account\n    })\n    .filter(e => e !== null)\n\n  return uniqueAccountsFlatMapped\n}\n\nasync function recurseResolveAccount(\n  ix,\n  currentAccountTempId,\n  depthLimit = MAX_DEPTH_LIMIT,\n  {debugLogger}\n) {\n  if (depthLimit <= 0) {\n    throw new Error(\n      `recurseResolveAccount Error: Depth limit (${MAX_DEPTH_LIMIT}) reached. Ensure your authorization functions resolve to an account after ${MAX_DEPTH_LIMIT} resolves.`\n    )\n  }\n\n  let account = ix.accounts[currentAccountTempId]\n\n  if (!account) return null\n\n  debugLogger(\n    `account: ${account.tempId}`,\n    Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n  )\n\n  if (account?.resolve) {\n    if (isFn(account?.resolve)) {\n      debugLogger(\n        `account: ${account.tempId} -- cache MISS`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      const {resolve, ...accountWithoutResolve} = account\n\n      let resolvedAccounts = await resolve(\n        accountWithoutResolve,\n        buildPreSignable(accountWithoutResolve, ix)\n      )\n\n      resolvedAccounts = Array.isArray(resolvedAccounts)\n        ? resolvedAccounts\n        : [resolvedAccounts]\n\n      let flatResolvedAccounts = recurseFlatMap(resolvedAccounts)\n\n      flatResolvedAccounts = flatResolvedAccounts.map(flatResolvedAccount =>\n        addAccountToIx(ix, flatResolvedAccount)\n      )\n\n      account.resolve = flatResolvedAccounts.map(\n        flatResolvedAccount => flatResolvedAccount.tempId\n      )\n\n      account = addAccountToIx(ix, account)\n\n      const recursedAccounts = await Promise.all(\n        flatResolvedAccounts.map(async resolvedAccount => {\n          return await recurseResolveAccount(\n            ix,\n            resolvedAccount.tempId,\n            depthLimit - 1,\n            {debugLogger}\n          )\n        })\n      )\n\n      return recursedAccounts\n        ? recurseFlatMap(recursedAccounts)\n        : account.tempId\n    } else {\n      debugLogger(\n        `account: ${account.tempId} -- cache HIT`,\n        Math.max(MAX_DEPTH_LIMIT - depthLimit, 0)\n      )\n\n      return account.resolve\n    }\n  }\n  return account.tempId\n}\n\nasync function resolveAccountType(ix, type, {debugLogger}) {\n  invariant(\n    ix && typeof ix === \"object\",\n    \"resolveAccountType Error: ix not defined\"\n  )\n  invariant(\n    type === ROLES.PAYER ||\n      type === ROLES.PROPOSER ||\n      type === ROLES.AUTHORIZATIONS,\n    \"resolveAccountType Error: type must be 'payer', 'proposer' or 'authorizations'\"\n  )\n\n  let accountTempIDs = Array.isArray(ix[type]) ? ix[type] : [ix[type]]\n\n  let allResolvedAccounts = []\n  for (let accountId of accountTempIDs) {\n    let account = ix.accounts[accountId]\n    invariant(account, `resolveAccountType Error: account not found`)\n\n    let resolvedAccountTempIds = await recurseResolveAccount(\n      ix,\n      accountId,\n      MAX_DEPTH_LIMIT,\n      {\n        debugLogger,\n      }\n    )\n\n    resolvedAccountTempIds = Array.isArray(resolvedAccountTempIds)\n      ? resolvedAccountTempIds\n      : [resolvedAccountTempIds]\n\n    let resolvedAccounts = resolvedAccountTempIds.map(\n      resolvedAccountTempId => ix.accounts[resolvedAccountTempId]\n    )\n\n    let flatResolvedAccounts = uniqueAccountsFlatMap(resolvedAccounts)\n\n    allResolvedAccounts = allResolvedAccounts.concat(flatResolvedAccounts)\n  }\n\n  invariant(\n    allResolvedAccounts.length > 0,\n    \"resolveAccountType Error: failed to resolve any accounts\"\n  )\n\n  if (type === ROLES.PAYER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.payer === true\n    )\n  }\n  if (type === ROLES.PROPOSER) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.proposer === true\n    )\n  }\n  if (type === ROLES.AUTHORIZATIONS) {\n    allResolvedAccounts = allResolvedAccounts.filter(\n      acct => acct.role.authorizer === true\n    )\n  }\n\n  ix[type] = Array.isArray(ix[type])\n    ? [...new Set(allResolvedAccounts.map(acct => acct.tempId))]\n    : allResolvedAccounts[0].tempId\n\n  // Ensure all payers are of the same account\n  if (type === ROLES.PAYER) {\n    let address\n    for (const payerTempID of ix[ROLES.PAYER]) {\n      let pAcct = ix.accounts[payerTempID]\n      if (!address) address = pAcct.addr\n      else if (address !== pAcct.addr) {\n        throw new Error(\n          \"resolveAccountType Error: payers from different accounts detected\"\n        )\n      }\n    }\n  }\n}\n\nexport async function resolveAccounts(ix, opts = {}) {\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\",\n      })\n    }\n    let [debugLogger, getDebugMessage] = debug()\n    try {\n      await resolveAccountType(ix, ROLES.PROPOSER, {debugLogger})\n      await resolveAccountType(ix, ROLES.AUTHORIZATIONS, {debugLogger})\n      await resolveAccountType(ix, ROLES.PAYER, {debugLogger})\n\n      await removeUnusedIxAccounts(ix, {debugLogger})\n\n      if (opts.enableDebug) {\n        console.debug(getDebugMessage())\n      }\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\nimport {\n  createSignableVoucher,\n  findInsideSigners,\n  findOutsideSigners,\n} from \"./voucher.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      \n      // Promise.all could potentially break the flow if there are multiple inside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iiframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const insideSigner of insideSigners) {\n      //   await fetchSignature(ix, insidePayload)(insideSigner);\n      // }\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n\n      // Promise.all could potentially break the flow if there are multiple outside signers trying to resolve at the same time\n      // causing multiple triggers of authz function that tries to render multiple auth iframes/tabs/extensions\n      // as an alternative, use this:\n      // for(const outsideSigner of outsideSigners) {\n      //   await fetchSignature(ix, outsidePayload)(outsideSigner);\n      // }\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null && acct.signature !== undefined) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  const payerAddress = sansPrefix(\n    (Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer])\n      .addr\n  )\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: payerAddress,\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {get, pipe, Ok, Bad} from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", [])\n  return pipe(\n    ix,\n    validators.map(cb => ix => cb(ix, {Ok, Bad}))\n  )\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {get, isFn} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nexport async function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\")\n  if (isFn(fn)) {\n    await fn(createSignableVoucher(ix))\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst DEFAULT_COMPUTE_LIMIT = 100\n\nexport async function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit =\n      ix.message.computeLimit || (await config.get(\"fcl.limit\"))\n\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject:\n          \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\",\n      })\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT\n    }\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\nimport {resolveVoucherIntercept} from \"./resolve-voucher-intercept.js\"\nimport {resolveComputeLimit} from \"./resolve-compute-limit.js\"\n\nconst noop = v => v\nconst debug =\n  (key, fn = noop) =>\n  async ix => {\n    const take = (obj, keys = []) => {\n      if (typeof keys === \"string\") keys = keys.split(\" \")\n      keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n    }\n\n    const accts = ix =>\n      [\n        \"\\nAccounts:\",\n        {\n          proposer: ix.proposer,\n          authorizations: ix.authorizations,\n          payer: ix.payer,\n        },\n        \"\\n\\nDetails:\",\n        ix.accounts,\n      ].filter(Boolean)\n\n    const log = (...msg) => {\n      console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n    }\n\n    if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n    return ix\n  }\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveComputeLimit,\n  debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  resolveVoucherIntercept,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\")\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    ix.message.refBlock = (\n      await sendFn(\n        build([getBlock()]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      ).then(decode)\n    ).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\")\n      const sendFn = await config.first(\n        [\"sdk.transport\", \"sdk.send\"],\n        defaultSend\n      )\n\n      invariant(\n        sendFn,\n        `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n      )\n\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}","import {Ok, Bad} from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, {Ok, Bad}) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport {interaction, pipe} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {invariant} from \"../build/build-invariant.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\n\n/**\n * @description - Sends arbitrary scripts, transactions, and requests to Flow\n * @param {Array.<Function>} args - An array of functions that take interaction and return interaction\n * @param {object} opts - Optional parameters\n * @returns {Promise<*>} - A promise that resolves to a response\n */\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFn(\n    await resolveFn(args),\n    {config, response, ix: ixModule, Buffer},\n    opts\n  )\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers)\n  payload.add(voucher.proposalKey.address)\n  payload.delete(voucher.payer)\n  return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer])\n  return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n    super(msg)\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n  }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher)\n  let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(\n      signerAddress\n    )\n  }\n\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address),\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address),\n    })),\n  }\n\n  return isPayloadSigner\n    ? encodeTransactionPayload(message)\n    : encodeTransactionEnvelope(message)\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n  return update(\"ix.validators\", validators =>\n    Array.isArray(validators) ? validators.push(cb) : [cb]\n  )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\n/**\n * @description - A builder function that returns a partial interaction to a block at a specific height\n * @param {number} height - The height of the block to get\n * @returns {Function} - A partial interaction object\n */\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix))\n        return Bad(\n          ix,\n          \"Unable to specify a block id with a Get Account interaction.\"\n        )\n      if (typeof ix.block.isSealed === \"boolean\")\n        return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height)\n        return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Account} Account\n */\n\n/**\n * @description  Returns the details of an account from their public address\n * @param {string} address - Address of the account\n * @param {object} [queryOptions] - Query parameters\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Account>} - A promise that resolves to an account response\n */\nexport function account(address, {height, id} = {}, opts) {\n  invariant(\n    !(id && height),\n    `Method: account -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decode)\n\n  // Get account by height\n  if (height)\n    return send([getAccount(address), atBlockHeight(height)], opts).then(decode)\n\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {invariant} from \"@onflow/util-invariant\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Block} Block\n */\n\n/**\n * @description Returns the latest block (optionally sealed or not), by id, or by height\n * @param {object} [queryOptions] - Query parameters\n * @param {boolean} [queryOptions.sealed=false] - Whether to query for a sealed block\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Block>} - A promise that resolves to a block response\n */\nexport function block({sealed = false, id, height} = {}, opts = {}) {\n  invariant(\n    !((sealed && id) || (sealed && height)),\n    `Method: block -- Cannot pass \"sealed\" with \"id\" or \"height\"`\n  )\n\n  invariant(\n    !(id && height),\n    `Method: block -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decode)\n\n  // Get block by height\n  if (height)\n    return send([getBlock(), atBlockHeight(height)], opts).then(decode)\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\nimport * as logger from \"@onflow/util-logger\"\n\nexport function getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\",\n    })\n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a height range\n * NOTE:\n * - The block range provided must be from the current spork.\n * - The block range provided must be 250 blocks or lower per request.\n * @param {string} eventName - The name of the event to get\n * @param {number} fromBlockHeight - The height of the block to start looking for events (inclusive)\n * @param {number} toBlockHeight - The height of the block to stop looking for events (inclusive)\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockHeightRange(eventName, fromBlockHeight, toBlockHeight) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.start = fromBlockHeight\n      ix.events.end = toBlockHeight\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a set of blocks, specified by block ids\n * NOTE:\n * - The block range provided must be from the current spork.\n * @param {string} eventName - The name of the event to get\n * @param {number[]} blockIds - The ids of the blocks to look for events\n * @returns {Function} - An interaction object\n */\nexport function getEventsAtBlockIds(eventName, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get a block header\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {Function} - An interaction object\n */\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all a collection containing a list of transaction ids by its collection id\n * NOTE:\n * - The block range provided must be from the current spork. All events emitted during past sporks is current unavailable.\n * @param {string} [id] - The id of the collection to get\n * @returns {Function} - An interaction object\n */\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the status of transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get status\n * @returns {Function} - An interaction object\n */\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns a transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get\n * @returns {Function} - An interaction object\n */\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetNetworkParameters} from \"../interaction/interaction.js\"\n\nexport function getNetworkParameters() {\n  return pipe([\n    makeGetNetworkParameters,\n    ix => {\n      return Ok(ix)\n    },\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\n/**\n * @description - A utility builder to be used with other builders to pass in arguments with a value and supported type\n * @param {Array.<*>} ax - An array of arguments\n * @returns {Function} - An interaction object\n */\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\n/**\n * @description - A utility builder to be used with fcl.args[...] to create FCL supported arguments for interactions\n * @param {any} value - The value of the argument\n * @param {Function} xform - A function to transform the value\n * @returns {object} - An argument object\n */\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {pipe, prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport function payer(ax = []) {\n  if (!Array.isArray(ax)) ax = [ax]\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: PAYER})\n    })\n  )\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([makeScript, put(\"ix.cadence\", template(...args))])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n/**\n * @description - A template builder to use a Cadence transaction for an interaction\n * @param {...*} args - The arguments to pass\n * @returns {Function} - An interaction object\n */\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {put} from \"../interaction/interaction.js\"\n\nexport function voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn)\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response as responseModule} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nexport const resolveProposerSequenceNumber =\n  ({node}) =>\n  async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    const response = await sendFn(\n      await build([getAccount(ix.accounts[ix.proposer].addr)]),\n      {config, response: responseModule, Buffer, ix: ixModule},\n      {node}\n    )\n    const decoded = await decodeResponse(response)\n\n    ix.accounts[ix.proposer].sequenceNum =\n      decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n    return Ok(ix)\n  }\n","import {\n  isTransaction,\n  Ok,\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\")\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], defaultSend)\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await sendFn(ix, {config, response, Buffer, ix: ixModule}, {node})\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport const idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport function sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\nexport function authzFn(opts = {}) {\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      resolve: null,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\nexport function authzResolve(opts = {}) {\n  return function (account) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\nexport function authzResolveMany(opts = {}) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n\nexport function authzDeepResolveMany(opts = {}, depth = 1) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_DEEP_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve:\n        depth > 0\n          ? authzDeepResolveMany(opts, depth - 1)(account).resolve\n          : authzResolveMany(opts)(account).resolve\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import * as logger from \"@onflow/util-logger\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\nexport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n  encodeTxIdFromVoucher,\n} from \"./encode/encode\"\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n  isGetNetworkParameters,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher, voucherToTxId} from \"./resolve/voucher.js\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {account} from \"./account/account.js\"\nexport {block} from \"./block/block.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {getNetworkParameters} from \"./build/build-get-network-parameters.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\nexport {voucherIntercept} from \"./build/build-voucher-intercept.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {response} from \"./response/response.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveVoucherIntercept} from \"./resolve/resolve-voucher-intercept.js\"\n\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The params builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\nexport const param = (params: never) =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The param builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}