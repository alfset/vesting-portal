{"ast":null,"code":"import{useCallback,useEffect}from'react';import{useActiveReact}from'../../hooks/useActiveReact';import{ChainId}from'../../config/chainConfig/chainId';import{useNasLogin}from'./index';export default function Updater(){const{chainId}=useActiveReact();const{loginNas}=useNasLogin();const getNasAddress=useCallback(()=>{if([ChainId.NAS].includes(chainId)){// console.log(111)\nloginNas(chainId,1);}},[chainId]);useEffect(()=>{getNasAddress();},[chainId]);return null;}","map":{"version":3,"names":["useCallback","useEffect","useActiveReact","ChainId","useNasLogin","Updater","chainId","loginNas","getNasAddress","NAS","includes"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/nas/updater.ts"],"sourcesContent":["\nimport { useCallback, useEffect } from 'react'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nimport { ChainId } from '../../config/chainConfig/chainId'\nimport {useNasLogin} from './index'\n\nexport default function Updater(): null {\n  const { chainId } = useActiveReact()\n  \n  const {loginNas} = useNasLogin()\n\n  const getNasAddress = useCallback(() => {\n    if ([ChainId.NAS].includes(chainId)) {\n      // console.log(111)\n      loginNas(chainId, 1)\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    getNasAddress()\n  }, [chainId])\n\n  return null\n}\n"],"mappings":"AACA,OAASA,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC9C,OAASC,cAAc,KAAQ,4BAA4B,CAE3D,OAASC,OAAO,KAAQ,kCAAkC,CAC1D,OAAQC,WAAW,KAAO,SAAS,CAEnC,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAS,CACtC,KAAM,CAAEC,OAAQ,CAAC,CAAGJ,cAAc,CAAC,CAAC,CAEpC,KAAM,CAACK,QAAQ,CAAC,CAAGH,WAAW,CAAC,CAAC,CAEhC,KAAM,CAAAI,aAAa,CAAGR,WAAW,CAAC,IAAM,CACtC,GAAI,CAACG,OAAO,CAACM,GAAG,CAAC,CAACC,QAAQ,CAACJ,OAAO,CAAC,CAAE,CACnC;AACAC,QAAQ,CAACD,OAAO,CAAE,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEbL,SAAS,CAAC,IAAM,CACdO,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAACF,OAAO,CAAC,CAAC,CAEb,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}