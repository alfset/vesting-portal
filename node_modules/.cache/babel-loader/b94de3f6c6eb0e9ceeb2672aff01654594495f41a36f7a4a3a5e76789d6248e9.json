{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{tokenBalanceList,walletViews,WALLET_VIEWS,updateTokenBalance}from'./actions';// import config from '../../config'\nconst initialState={tokenBalanceList:{},tokenBalance:{},walletViews:WALLET_VIEWS.ACCOUNT};export default createReducer(initialState,builder=>builder.addCase(walletViews,(state,_ref)=>{let{payload:{type}}=_ref;state.walletViews=type;}).addCase(updateTokenBalance,(state,_ref2)=>{let{payload:{chainId,token,account,balance,decimals}}=_ref2;if(!state.tokenBalance)state.tokenBalance={};if(!state.tokenBalance[chainId])state.tokenBalance[chainId]={};if(!state.tokenBalance[chainId][account])state.tokenBalance[chainId][account]={};// if (!state.tokenBalance[chainId][account][token]) state.tokenBalance[chainId][account][token] = {}\nstate.tokenBalance[chainId][account][token]={balance,decimals};// console.log(state, chainId, token, account, balance, decimals)\n}).addCase(tokenBalanceList,(state,_ref3)=>{let{payload:{chainId,tokenList,account}}=_ref3;// console.log(state.tokenBalanceList)\nif(state.tokenBalanceList&&chainId&&account){// console.log(1)\nstate.tokenBalanceList[account]={...state.tokenBalanceList[account],[chainId]:{...(state.tokenBalanceList[account]?state.tokenBalanceList[account][chainId]:{}),...tokenList}};}else if(chainId&&account){// console.log(2)\nstate.tokenBalanceList={[account]:{[chainId]:{...tokenList}}};}}));","map":{"version":3,"names":["createReducer","tokenBalanceList","walletViews","WALLET_VIEWS","updateTokenBalance","initialState","tokenBalance","ACCOUNT","builder","addCase","state","_ref","payload","type","_ref2","chainId","token","account","balance","decimals","_ref3","tokenList"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/wallet/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { tokenBalanceList, walletViews, WALLET_VIEWS, updateTokenBalance } from './actions'\n\n// import config from '../../config'\n\nexport interface ListsState {\n  readonly tokenBalanceList: any\n  readonly tokenBalance: any\n  readonly walletViews: any\n}\n\nconst initialState: ListsState = {\n  tokenBalanceList: {},\n  tokenBalance: {},\n  walletViews: WALLET_VIEWS.ACCOUNT,\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(walletViews, (state, { payload: { type } }) => {\n      state.walletViews = type\n    })\n    .addCase(updateTokenBalance, (state, { payload: { chainId, token, account, balance, decimals } }) => {\n      if (!state.tokenBalance) state.tokenBalance = {}\n      if (!state.tokenBalance[chainId]) state.tokenBalance[chainId] = {}\n      if (!state.tokenBalance[chainId][account]) state.tokenBalance[chainId][account] = {}\n      // if (!state.tokenBalance[chainId][account][token]) state.tokenBalance[chainId][account][token] = {}\n      state.tokenBalance[chainId][account][token] = {\n        balance,\n        decimals\n      }\n      // console.log(state, chainId, token, account, balance, decimals)\n    })\n    .addCase(tokenBalanceList, (state, { payload: { chainId, tokenList, account } }) => {\n      // console.log(state.tokenBalanceList)\n      if (state.tokenBalanceList && chainId && account) {\n        // console.log(1)\n        state.tokenBalanceList[account] = {\n          ...state.tokenBalanceList[account],\n          [chainId]: {\n            ...(state.tokenBalanceList[account] ? state.tokenBalanceList[account][chainId] : {}),\n            ...tokenList\n          }\n        }\n      } else if (chainId && account) {\n        // console.log(2)\n        state.tokenBalanceList = {\n          [account]: {\n            [chainId]: {\n              ...tokenList\n            }\n          }\n        }\n      }\n    })\n    \n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,gBAAgB,CAAEC,WAAW,CAAEC,YAAY,CAAEC,kBAAkB,KAAQ,WAAW,CAE3F;AAQA,KAAM,CAAAC,YAAwB,CAAG,CAC/BJ,gBAAgB,CAAE,CAAC,CAAC,CACpBK,YAAY,CAAE,CAAC,CAAC,CAChBJ,WAAW,CAAEC,YAAY,CAACI,OAC5B,CAAC,CAED,cAAe,CAAAP,aAAa,CAACK,YAAY,CAAEG,OAAO,EAChDA,OAAO,CACJC,OAAO,CAACP,WAAW,CAAE,CAACQ,KAAK,CAAAC,IAAA,GAA4B,IAA1B,CAAEC,OAAO,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAAF,IAAA,CACjDD,KAAK,CAACR,WAAW,CAAGW,IAAI,CAC1B,CAAC,CAAC,CACDJ,OAAO,CAACL,kBAAkB,CAAE,CAACM,KAAK,CAAAI,KAAA,GAAkE,IAAhE,CAAEF,OAAO,CAAE,CAAEG,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAEC,OAAO,CAAEC,QAAS,CAAE,CAAC,CAAAL,KAAA,CAC9F,GAAI,CAACJ,KAAK,CAACJ,YAAY,CAAEI,KAAK,CAACJ,YAAY,CAAG,CAAC,CAAC,CAChD,GAAI,CAACI,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAAEL,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAAG,CAAC,CAAC,CAClE,GAAI,CAACL,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,CAAEP,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,CAAG,CAAC,CAAC,CACpF;AACAP,KAAK,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACE,OAAO,CAAC,CAACD,KAAK,CAAC,CAAG,CAC5CE,OAAO,CACPC,QACF,CAAC,CACD;AACF,CAAC,CAAC,CACDV,OAAO,CAACR,gBAAgB,CAAE,CAACS,KAAK,CAAAU,KAAA,GAAmD,IAAjD,CAAER,OAAO,CAAE,CAAEG,OAAO,CAAEM,SAAS,CAAEJ,OAAQ,CAAE,CAAC,CAAAG,KAAA,CAC7E;AACA,GAAIV,KAAK,CAACT,gBAAgB,EAAIc,OAAO,EAAIE,OAAO,CAAE,CAChD;AACAP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,CAAG,CAChC,GAAGP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,CAClC,CAACF,OAAO,EAAG,CACT,IAAIL,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,CAAGP,KAAK,CAACT,gBAAgB,CAACgB,OAAO,CAAC,CAACF,OAAO,CAAC,CAAG,CAAC,CAAC,CAAC,CACpF,GAAGM,SACL,CACF,CAAC,CACH,CAAC,IAAM,IAAIN,OAAO,EAAIE,OAAO,CAAE,CAC7B;AACAP,KAAK,CAACT,gBAAgB,CAAG,CACvB,CAACgB,OAAO,EAAG,CACT,CAACF,OAAO,EAAG,CACT,GAAGM,SACL,CACF,CACF,CAAC,CACH,CACF,CAAC,CAEL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}