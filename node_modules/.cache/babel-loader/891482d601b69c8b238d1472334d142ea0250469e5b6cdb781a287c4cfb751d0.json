{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{atomBalanceList,atomApproveList}from'./actions';const initialState={atomBalanceList:{},atomApproveList:{}};export default createReducer(initialState,builder=>builder.addCase(atomBalanceList,(state,_ref)=>{let{payload:{list}}=_ref;state.atomBalanceList=list;}).addCase(atomApproveList,(state,_ref2)=>{let{payload:{token,result}}=_ref2;// state.trxApproveList = list\nif(!state.atomApproveList)state.atomApproveList={};state.atomApproveList[token]=result;}));","map":{"version":3,"names":["createReducer","atomBalanceList","atomApproveList","initialState","builder","addCase","state","_ref","payload","list","_ref2","token","result"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/atom/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { atomBalanceList, atomApproveList } from './actions'\n\nexport interface BurnState {\n  readonly atomBalanceList: any\n  readonly atomApproveList: any\n}\n\nconst initialState: BurnState = {\n  atomBalanceList: {},\n  atomApproveList: {},\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(atomBalanceList, (state, { payload: { list } }) => {\n      state.atomBalanceList = list\n    })\n    .addCase(atomApproveList, (state, { payload: { token, result } }) => {\n      // state.trxApproveList = list\n      if (!state.atomApproveList) state.atomApproveList = {}\n      state.atomApproveList[token] = result\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,eAAe,CAAEC,eAAe,KAAQ,WAAW,CAO5D,KAAM,CAAAC,YAAuB,CAAG,CAC9BF,eAAe,CAAE,CAAC,CAAC,CACnBC,eAAe,CAAE,CAAC,CACpB,CAAC,CAED,cAAe,CAAAF,aAAa,CAAYG,YAAY,CAAEC,OAAO,EAC3DA,OAAO,CACJC,OAAO,CAACJ,eAAe,CAAE,CAACK,KAAK,CAAAC,IAAA,GAA4B,IAA1B,CAAEC,OAAO,CAAE,CAAEC,IAAK,CAAE,CAAC,CAAAF,IAAA,CACrDD,KAAK,CAACL,eAAe,CAAGQ,IAAI,CAC9B,CAAC,CAAC,CACDJ,OAAO,CAACH,eAAe,CAAE,CAACI,KAAK,CAAAI,KAAA,GAAqC,IAAnC,CAAEF,OAAO,CAAE,CAAEG,KAAK,CAAEC,MAAO,CAAE,CAAC,CAAAF,KAAA,CAC9D;AACA,GAAI,CAACJ,KAAK,CAACJ,eAAe,CAAEI,KAAK,CAACJ,eAAe,CAAG,CAAC,CAAC,CACtDI,KAAK,CAACJ,eAAe,CAACS,KAAK,CAAC,CAAGC,MAAM,CACvC,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}