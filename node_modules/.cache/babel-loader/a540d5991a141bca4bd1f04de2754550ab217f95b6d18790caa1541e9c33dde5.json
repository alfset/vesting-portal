{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgChannelOpenTry = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar Channel_1 = require(\"../../core/channel/Channel\");\nvar Height_1 = require(\"../../core/client/Height\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/tx\");\n/**\n * MsgChannelOpenTry defines a msg sent by a Relayer to try to open a channel on Chain B\n */\nvar MsgChannelOpenTry = /** @class */function (_super) {\n  __extends(MsgChannelOpenTry, _super);\n  /**\n   * @param port_id identifier of the port to use\n   * @param previous_channel_id\n   * @param channel channel info\n   * @param counterparty_version\n   * @param proof_init\n   * @param proof_height\n   * @param signer signer address\n   */\n  function MsgChannelOpenTry(port_id, previous_channel_id, channel, counterparty_version, proof_init, proof_height, signer) {\n    var _this = _super.call(this) || this;\n    _this.port_id = port_id;\n    _this.previous_channel_id = previous_channel_id;\n    _this.channel = channel;\n    _this.counterparty_version = counterparty_version;\n    _this.proof_init = proof_init;\n    _this.proof_height = proof_height;\n    _this.signer = signer;\n    return _this;\n  }\n  MsgChannelOpenTry.fromAmino = function (_, isClassic) {\n    _;\n    isClassic;\n    throw new Error('Amino not supported');\n  };\n  MsgChannelOpenTry.prototype.toAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n  MsgChannelOpenTry.fromData = function (data, _) {\n    _;\n    var port_id = data.port_id,\n      previous_channel_id = data.previous_channel_id,\n      channel = data.channel,\n      counterparty_version = data.counterparty_version,\n      proof_init = data.proof_init,\n      proof_height = data.proof_height,\n      signer = data.signer;\n    return new MsgChannelOpenTry(port_id, previous_channel_id, channel ? Channel_1.Channel.fromData(channel) : undefined, counterparty_version, proof_init, proof_height ? Height_1.Height.fromData(proof_height) : undefined, signer);\n  };\n  MsgChannelOpenTry.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      port_id = _a.port_id,\n      previous_channel_id = _a.previous_channel_id,\n      channel = _a.channel,\n      counterparty_version = _a.counterparty_version,\n      proof_init = _a.proof_init,\n      proof_height = _a.proof_height,\n      signer = _a.signer;\n    return {\n      '@type': '/ibc.core.channel.v1.MsgChannelOpenTry',\n      port_id: port_id,\n      previous_channel_id: previous_channel_id,\n      channel: channel ? channel.toData() : undefined,\n      counterparty_version: counterparty_version,\n      proof_init: proof_init,\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      signer: signer\n    };\n  };\n  MsgChannelOpenTry.fromProto = function (proto, _) {\n    _;\n    return new MsgChannelOpenTry(proto.portId, proto.previousChannelId, proto.channel ? Channel_1.Channel.fromProto(proto.channel) : undefined, proto.counterpartyVersion, Buffer.from(proto.proofInit).toString('base64'), proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, proto.signer);\n  };\n  MsgChannelOpenTry.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      port_id = _a.port_id,\n      previous_channel_id = _a.previous_channel_id,\n      channel = _a.channel,\n      counterparty_version = _a.counterparty_version,\n      proof_init = _a.proof_init,\n      proof_height = _a.proof_height,\n      signer = _a.signer;\n    return tx_1.MsgChannelOpenTry.fromPartial({\n      portId: port_id,\n      previousChannelId: previous_channel_id,\n      channel: channel ? channel.toProto() : undefined,\n      counterpartyVersion: counterparty_version,\n      proofInit: Buffer.from(proof_init, 'base64'),\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n  MsgChannelOpenTry.prototype.packAny = function (_) {\n    _;\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.channel.v1.MsgChannelOpenTry',\n      value: tx_1.MsgChannelOpenTry.encode(this.toProto()).finish()\n    });\n  };\n  MsgChannelOpenTry.unpackAny = function (msgAny, _) {\n    _;\n    return MsgChannelOpenTry.fromProto(tx_1.MsgChannelOpenTry.decode(msgAny.value));\n  };\n  return MsgChannelOpenTry;\n}(json_1.JSONSerializable);\nexports.MsgChannelOpenTry = MsgChannelOpenTry;","map":{"version":3,"names":["json_1","require","any_1","Channel_1","Height_1","tx_1","MsgChannelOpenTry","_super","__extends","port_id","previous_channel_id","channel","counterparty_version","proof_init","proof_height","signer","_this","call","fromAmino","_","isClassic","Error","prototype","toAmino","fromData","data","Channel","undefined","Height","toData","_a","fromProto","proto","portId","previousChannelId","counterpartyVersion","Buffer","from","proofInit","toString","proofHeight","toProto","fromPartial","packAny","Any","typeUrl","value","encode","finish","unpackAny","msgAny","decode","JSONSerializable","exports"],"sources":["../../../../../src/core/ibc/msgs/channel/MsgChannelOpenTry.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,IAAA,GAAAJ,OAAA;AAEA;;;AAGA,IAAAK,iBAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,iBAAA,EAAAC,MAAA;EAKrC;;;;;;;;;EASA,SAAAD,kBACSG,OAAe,EACfC,mBAA2B,EAC3BC,OAA4B,EAC5BC,oBAA4B,EAC5BC,UAAkB,EAClBC,YAAgC,EAChCC,MAAkB;IAP3B,IAAAC,KAAA,GASET,MAAA,CAAAU,IAAA,MAAO;IARAD,KAAA,CAAAP,OAAO,GAAPA,OAAO;IACPO,KAAA,CAAAN,mBAAmB,GAAnBA,mBAAmB;IACnBM,KAAA,CAAAL,OAAO,GAAPA,OAAO;IACPK,KAAA,CAAAJ,oBAAoB,GAApBA,oBAAoB;IACpBI,KAAA,CAAAH,UAAU,GAAVA,UAAU;IACVG,KAAA,CAAAF,YAAY,GAAZA,YAAY;IACZE,KAAA,CAAAD,MAAM,GAANA,MAAM;;EAGf;EAEcT,iBAAA,CAAAY,SAAS,GAAvB,UAAwBC,CAAM,EAAEC,SAAmB;IACjDD,CAAC;IACDC,SAAS;IACT,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC,CAAC;EAEMf,iBAAA,CAAAgB,SAAA,CAAAC,OAAO,GAAd,UAAeJ,CAAW;IACxBA,CAAC;IACD,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;EACxC,CAAC;EAEaf,iBAAA,CAAAkB,QAAQ,GAAtB,UACEC,IAA4B,EAC5BN,CAAW;IAEXA,CAAC;IAEC,IAAAV,OAAO,GAOLgB,IAAI,CAAAhB,OAPC;MACPC,mBAAmB,GAMjBe,IAAI,CAAAf,mBANa;MACnBC,OAAO,GAKLc,IAAI,CAAAd,OALC;MACPC,oBAAoB,GAIlBa,IAAI,CAAAb,oBAJc;MACpBC,UAAU,GAGRY,IAAI,CAAAZ,UAHI;MACVC,YAAY,GAEVW,IAAI,CAAAX,YAFM;MACZC,MAAM,GACJU,IAAI,CAAAV,MADA;IAER,OAAO,IAAIT,iBAAiB,CAC1BG,OAAO,EACPC,mBAAmB,EACnBC,OAAO,GAAGR,SAAA,CAAAuB,OAAO,CAACF,QAAQ,CAACb,OAAO,CAAC,GAAGgB,SAAS,EAC/Cf,oBAAoB,EACpBC,UAAU,EACVC,YAAY,GAAGV,QAAA,CAAAwB,MAAM,CAACJ,QAAQ,CAACV,YAAY,CAAC,GAAGa,SAAS,EACxDZ,MAAM,CACP;EACH,CAAC;EAEMT,iBAAA,CAAAgB,SAAA,CAAAO,MAAM,GAAb,UAAcV,CAAW;IACvBA,CAAC;IACK,IAAAW,EAAA,GAQF,IAAI;MAPNrB,OAAO,GAAAqB,EAAA,CAAArB,OAAA;MACPC,mBAAmB,GAAAoB,EAAA,CAAApB,mBAAA;MACnBC,OAAO,GAAAmB,EAAA,CAAAnB,OAAA;MACPC,oBAAoB,GAAAkB,EAAA,CAAAlB,oBAAA;MACpBC,UAAU,GAAAiB,EAAA,CAAAjB,UAAA;MACVC,YAAY,GAAAgB,EAAA,CAAAhB,YAAA;MACZC,MAAM,GAAAe,EAAA,CAAAf,MACA;IACR,OAAO;MACL,OAAO,EAAE,wCAAwC;MACjDN,OAAO,EAAAA,OAAA;MACPC,mBAAmB,EAAAA,mBAAA;MACnBC,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAACkB,MAAM,EAAE,GAAGF,SAAS;MAC/Cf,oBAAoB,EAAAA,oBAAA;MACpBC,UAAU,EAAAA,UAAA;MACVC,YAAY,EAAEA,YAAY,GAAGA,YAAY,CAACe,MAAM,EAAE,GAAGF,SAAS;MAC9DZ,MAAM,EAAAA;KACP;EACH,CAAC;EAEaT,iBAAA,CAAAyB,SAAS,GAAvB,UACEC,KAA8B,EAC9Bb,CAAW;IAEXA,CAAC;IACD,OAAO,IAAIb,iBAAiB,CAC1B0B,KAAK,CAACC,MAAM,EACZD,KAAK,CAACE,iBAAiB,EACvBF,KAAK,CAACrB,OAAO,GAAGR,SAAA,CAAAuB,OAAO,CAACK,SAAS,CAACC,KAAK,CAACrB,OAAO,CAAC,GAAGgB,SAAS,EAC5DK,KAAK,CAACG,mBAAmB,EACzBC,MAAM,CAACC,IAAI,CAACL,KAAK,CAACM,SAAS,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAC/CP,KAAK,CAACQ,WAAW,GAAGpC,QAAA,CAAAwB,MAAM,CAACG,SAAS,CAACC,KAAK,CAACQ,WAAW,CAAC,GAAGb,SAAS,EACnEK,KAAK,CAACjB,MAAM,CACb;EACH,CAAC;EAEMT,iBAAA,CAAAgB,SAAA,CAAAmB,OAAO,GAAd,UAAetB,CAAW;IACxBA,CAAC;IACK,IAAAW,EAAA,GAQF,IAAI;MAPNrB,OAAO,GAAAqB,EAAA,CAAArB,OAAA;MACPC,mBAAmB,GAAAoB,EAAA,CAAApB,mBAAA;MACnBC,OAAO,GAAAmB,EAAA,CAAAnB,OAAA;MACPC,oBAAoB,GAAAkB,EAAA,CAAAlB,oBAAA;MACpBC,UAAU,GAAAiB,EAAA,CAAAjB,UAAA;MACVC,YAAY,GAAAgB,EAAA,CAAAhB,YAAA;MACZC,MAAM,GAAAe,EAAA,CAAAf,MACA;IACR,OAAOV,IAAA,CAAAC,iBAAoB,CAACoC,WAAW,CAAC;MACtCT,MAAM,EAAExB,OAAO;MACfyB,iBAAiB,EAAExB,mBAAmB;MACtCC,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAAC8B,OAAO,EAAE,GAAGd,SAAS;MAChDQ,mBAAmB,EAAEvB,oBAAoB;MACzC0B,SAAS,EAAEF,MAAM,CAACC,IAAI,CAACxB,UAAU,EAAE,QAAQ,CAAC;MAC5C2B,WAAW,EAAE1B,YAAY,GAAGA,YAAY,CAAC2B,OAAO,EAAE,GAAGd,SAAS;MAC9DZ,MAAM,EAAAA;KACP,CAAC;EACJ,CAAC;EAEMT,iBAAA,CAAAgB,SAAA,CAAAqB,OAAO,GAAd,UAAexB,CAAW;IACxBA,CAAC;IACD,OAAOjB,KAAA,CAAA0C,GAAG,CAACF,WAAW,CAAC;MACrBG,OAAO,EAAE,wCAAwC;MACjDC,KAAK,EAAEzC,IAAA,CAAAC,iBAAoB,CAACyC,MAAM,CAAC,IAAI,CAACN,OAAO,EAAE,CAAC,CAACO,MAAM;KAC1D,CAAC;EACJ,CAAC;EAEa1C,iBAAA,CAAA2C,SAAS,GAAvB,UAAwBC,MAAW,EAAE/B,CAAW;IAC9CA,CAAC;IACD,OAAOb,iBAAiB,CAACyB,SAAS,CAChC1B,IAAA,CAAAC,iBAAoB,CAAC6C,MAAM,CAACD,MAAM,CAACJ,KAAK,CAAC,CAC1C;EACH,CAAC;EACH,OAAAxC,iBAAC;AAAD,CAAC,CAzIsCN,MAAA,CAAAoD,gBAAgB;AAA1CC,OAAA,CAAA/C,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}