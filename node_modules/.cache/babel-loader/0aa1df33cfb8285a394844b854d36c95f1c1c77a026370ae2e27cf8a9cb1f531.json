{"ast":null,"code":"import React, { forwardRef, useEffect, useRef, useCallback } from 'react';\nimport Portal from '@reach/portal';\nimport { checkStyles, useForkedRef, wrapEvent, getOwnerDocument, noop, isString } from '@reach/utils';\nimport FocusLock from 'react-focus-lock';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport PropTypes from 'prop-types';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar overlayPropTypes = {\n  allowPinchZoom: PropTypes.bool,\n  dangerouslyBypassFocusLock: PropTypes.bool,\n  dangerouslyBypassScrollLock: PropTypes.bool,\n  // TODO:\n  initialFocusRef: function initialFocusRef() {\n    return null;\n  },\n  onDismiss: PropTypes.func\n}; ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * DialogOverlay\r\n *\r\n * Low-level component if you need more control over the styles or rendering of\r\n * the dialog overlay.\r\n *\r\n * Note: You must render a `DialogContent` inside.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialogoverlay\r\n */\n\nvar DialogOverlay = /*#__PURE__*/forwardRef(function DialogOverlay(_ref, forwardedRef) {\n  var _ref$isOpen = _ref.isOpen,\n    isOpen = _ref$isOpen === void 0 ? true : _ref$isOpen,\n    props = _objectWithoutPropertiesLoose(_ref, [\"isOpen\"]);\n  useEffect(function () {\n    return checkStyles(\"dialog\");\n  }, []); // We want to ignore the immediate focus of a tooltip so it doesn't pop\n  // up again when the menu closes, only pops up when focus returns again\n  // to the tooltip (like native OS tooltips).\n\n  useEffect(function () {\n    if (isOpen) {\n      // @ts-ignore\n      window.__REACH_DISABLE_TOOLTIPS = true;\n    } else {\n      window.requestAnimationFrame(function () {\n        // Wait a frame so that this doesn't fire before tooltip does\n        // @ts-ignore\n        window.__REACH_DISABLE_TOOLTIPS = false;\n      });\n    }\n  }, [isOpen]);\n  return isOpen ? /*#__PURE__*/React.createElement(Portal, {\n    \"data-reach-dialog-wrapper\": \"\"\n  }, /*#__PURE__*/React.createElement(DialogInner, Object.assign({\n    ref: forwardedRef\n  }, props))) : null;\n});\nif (process.env.NODE_ENV !== \"production\") {\n  DialogOverlay.displayName = \"DialogOverlay\";\n  DialogOverlay.propTypes = /*#__PURE__*/_extends({}, overlayPropTypes, {\n    isOpen: PropTypes.bool\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * DialogInner\r\n */\n\nvar DialogInner = /*#__PURE__*/forwardRef(function DialogInner(_ref2, forwardedRef) {\n  var allowPinchZoom = _ref2.allowPinchZoom,\n    _ref2$dangerouslyBypa = _ref2.dangerouslyBypassFocusLock,\n    dangerouslyBypassFocusLock = _ref2$dangerouslyBypa === void 0 ? false : _ref2$dangerouslyBypa,\n    _ref2$dangerouslyBypa2 = _ref2.dangerouslyBypassScrollLock,\n    dangerouslyBypassScrollLock = _ref2$dangerouslyBypa2 === void 0 ? false : _ref2$dangerouslyBypa2,\n    initialFocusRef = _ref2.initialFocusRef,\n    onClick = _ref2.onClick,\n    _ref2$onDismiss = _ref2.onDismiss,\n    onDismiss = _ref2$onDismiss === void 0 ? noop : _ref2$onDismiss,\n    onKeyDown = _ref2.onKeyDown,\n    onMouseDown = _ref2.onMouseDown,\n    _ref2$unstable_lockFo = _ref2.unstable_lockFocusAcrossFrames,\n    unstable_lockFocusAcrossFrames = _ref2$unstable_lockFo === void 0 ? true : _ref2$unstable_lockFo,\n    props = _objectWithoutPropertiesLoose(_ref2, [\"allowPinchZoom\", \"dangerouslyBypassFocusLock\", \"dangerouslyBypassScrollLock\", \"initialFocusRef\", \"onClick\", \"onDismiss\", \"onKeyDown\", \"onMouseDown\", \"unstable_lockFocusAcrossFrames\"]);\n  var mouseDownTarget = useRef(null);\n  var overlayNode = useRef(null);\n  var ref = useForkedRef(overlayNode, forwardedRef);\n  var activateFocusLock = useCallback(function () {\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n  }, [initialFocusRef]);\n  function handleClick(event) {\n    if (mouseDownTarget.current === event.target) {\n      event.stopPropagation();\n      onDismiss(event);\n    }\n  }\n  function handleKeyDown(event) {\n    if (event.key === \"Escape\") {\n      event.stopPropagation();\n      onDismiss(event);\n    }\n  }\n  function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  }\n  useEffect(function () {\n    return overlayNode.current ? createAriaHider(overlayNode.current) : void null;\n  }, []);\n  return /*#__PURE__*/React.createElement(FocusLock, {\n    autoFocus: true,\n    returnFocus: true,\n    onActivation: activateFocusLock,\n    disabled: dangerouslyBypassFocusLock,\n    crossFrame: unstable_lockFocusAcrossFrames\n  }, /*#__PURE__*/React.createElement(RemoveScroll, {\n    allowPinchZoom: allowPinchZoom,\n    enabled: !dangerouslyBypassScrollLock\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    ref: ref,\n    \"data-reach-dialog-overlay\": \"\",\n    /*\r\n     * We can ignore the `no-static-element-interactions` warning here\r\n     * because our overlay is only designed to capture any outside\r\n     * clicks, not to serve as a clickable element itself.\r\n     */\n    onClick: wrapEvent(onClick, handleClick),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    onMouseDown: wrapEvent(onMouseDown, handleMouseDown)\n  }))));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  DialogOverlay.displayName = \"DialogOverlay\";\n  DialogOverlay.propTypes = /*#__PURE__*/_extends({}, overlayPropTypes);\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * DialogContent\r\n *\r\n * Low-level component if you need more control over the styles or rendering of\r\n * the dialog content.\r\n *\r\n * Note: Must be a child of `DialogOverlay`.\r\n *\r\n * Note: You only need to use this when you are also styling `DialogOverlay`,\r\n * otherwise you can use the high-level `Dialog` component and pass the props\r\n * to it. Any props passed to `Dialog` component (besides `isOpen` and\r\n * `onDismiss`) will be spread onto `DialogContent`.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialogcontent\r\n */\n\nvar DialogContent = /*#__PURE__*/forwardRef(function DialogContent(_ref3, forwardedRef) {\n  var onClick = _ref3.onClick,\n    onKeyDown = _ref3.onKeyDown,\n    props = _objectWithoutPropertiesLoose(_ref3, [\"onClick\", \"onKeyDown\"]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    \"aria-modal\": \"true\",\n    role: \"dialog\",\n    tabIndex: -1\n  }, props, {\n    ref: forwardedRef,\n    \"data-reach-dialog-content\": \"\",\n    onClick: wrapEvent(onClick, function (event) {\n      event.stopPropagation();\n    })\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  DialogContent.displayName = \"DialogContent\";\n  DialogContent.propTypes = {\n    \"aria-label\": ariaLabelType,\n    \"aria-labelledby\": ariaLabelType\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Dialog\r\n *\r\n * High-level component to render a modal dialog window over the top of the page\r\n * (or another dialog).\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialog\r\n */\n\nvar Dialog = /*#__PURE__*/forwardRef(function Dialog(_ref4, forwardedRef) {\n  var _ref4$allowPinchZoom = _ref4.allowPinchZoom,\n    allowPinchZoom = _ref4$allowPinchZoom === void 0 ? false : _ref4$allowPinchZoom,\n    initialFocusRef = _ref4.initialFocusRef,\n    isOpen = _ref4.isOpen,\n    _ref4$onDismiss = _ref4.onDismiss,\n    onDismiss = _ref4$onDismiss === void 0 ? noop : _ref4$onDismiss,\n    props = _objectWithoutPropertiesLoose(_ref4, [\"allowPinchZoom\", \"initialFocusRef\", \"isOpen\", \"onDismiss\"]);\n  return /*#__PURE__*/React.createElement(DialogOverlay, {\n    allowPinchZoom: allowPinchZoom,\n    initialFocusRef: initialFocusRef,\n    isOpen: isOpen,\n    onDismiss: onDismiss\n  }, /*#__PURE__*/React.createElement(DialogContent, Object.assign({\n    ref: forwardedRef\n  }, props)));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Dialog.displayName = \"Dialog\";\n  Dialog.propTypes = {\n    isOpen: PropTypes.bool,\n    onDismiss: PropTypes.func,\n    \"aria-label\": ariaLabelType,\n    \"aria-labelledby\": ariaLabelType\n  };\n}\nfunction createAriaHider(dialogNode) {\n  var originalValues = [];\n  var rootNodes = [];\n  var ownerDocument = getOwnerDocument(dialogNode) || document;\n  if (!dialogNode) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\"A ref has not yet been attached to a dialog node when attempting to call `createAriaHider`.\");\n    }\n    return noop;\n  }\n  Array.prototype.forEach.call(ownerDocument.querySelectorAll(\"body > *\"), function (node) {\n    var _dialogNode$parentNod, _dialogNode$parentNod2;\n    var portalNode = (_dialogNode$parentNod = dialogNode.parentNode) === null || _dialogNode$parentNod === void 0 ? void 0 : (_dialogNode$parentNod2 = _dialogNode$parentNod.parentNode) === null || _dialogNode$parentNod2 === void 0 ? void 0 : _dialogNode$parentNod2.parentNode;\n    if (node === portalNode) {\n      return;\n    }\n    var attr = node.getAttribute(\"aria-hidden\");\n    var alreadyHidden = attr !== null && attr !== \"false\";\n    if (alreadyHidden) {\n      return;\n    }\n    originalValues.push(attr);\n    rootNodes.push(node);\n    node.setAttribute(\"aria-hidden\", \"true\");\n  });\n  return function () {\n    rootNodes.forEach(function (node, index) {\n      var originalValue = originalValues[index];\n      if (originalValue === null) {\n        node.removeAttribute(\"aria-hidden\");\n      } else {\n        node.setAttribute(\"aria-hidden\", originalValue);\n      }\n    });\n  };\n}\nfunction ariaLabelType(props, propName, compName, location, propFullName) {\n  var details = \"\\nSee https://www.w3.org/TR/wai-aria/#aria-label for details.\";\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    return new Error(\"A <\" + compName + \"> must have either an `aria-label` or `aria-labelledby` prop.\\n      \" + details);\n  }\n  if (props[\"aria-label\"] && props[\"aria-labelledby\"]) {\n    return new Error(\"You provided both `aria-label` and `aria-labelledby` props to a <\" + compName + \">. If the a label for this component is visible on the screen, that label's component should be given a unique ID prop, and that ID should be passed as the `aria-labelledby` prop into <\" + compName + \">. If the label cannot be determined programmatically from the content of the element, an alternative label should be provided as the `aria-label` prop, which will be used as an `aria-label` on the HTML tag.\" + details);\n  } else if (props[propName] != null && !isString(props[propName])) {\n    return new Error(\"Invalid prop `\" + propName + \"` supplied to `\" + compName + \"`. Expected `string`, received `\" + (Array.isArray(propFullName) ? \"array\" : typeof propFullName) + \"`.\");\n  }\n  return null;\n}\nexport default Dialog;\nexport { Dialog, DialogContent, DialogOverlay };","map":{"version":3,"names":["overlayPropTypes","allowPinchZoom","PropTypes","bool","dangerouslyBypassFocusLock","dangerouslyBypassScrollLock","initialFocusRef","onDismiss","func","DialogOverlay","forwardRef","_ref","forwardedRef","isOpen","_ref$isOpen","props","_objectWithoutPropertiesLoose","useEffect","checkStyles","window","__REACH_DISABLE_TOOLTIPS","requestAnimationFrame","React","createElement","Portal","DialogInner","Object","assign","ref","process","env","NODE_ENV","displayName","propTypes","_extends","_ref2","_ref2$dangerouslyBypa","_ref2$dangerouslyBypa2","onClick","_ref2$onDismiss","noop","onKeyDown","onMouseDown","unstable_lockFocusAcrossFrames","_ref2$unstable_lockFo","mouseDownTarget","useRef","overlayNode","useForkedRef","activateFocusLock","useCallback","current","focus","handleClick","event","target","stopPropagation","handleKeyDown","key","handleMouseDown","createAriaHider","FocusLock","autoFocus","returnFocus","onActivation","disabled","crossFrame","RemoveScroll","enabled","wrapEvent","DialogContent","_ref3","role","tabIndex","ariaLabelType","Dialog","_ref4","_ref4$allowPinchZoom","_ref4$onDismiss","dialogNode","originalValues","rootNodes","ownerDocument","getOwnerDocument","document","console","warn","Array","prototype","forEach","call","querySelectorAll","node","portalNode","_dialogNode$parentNod","parentNode","_dialogNode$parentNod2","attr","getAttribute","alreadyHidden","push","setAttribute","index","originalValue","removeAttribute","propName","compName","location","propFullName","details","Error","isString","isArray"],"sources":["../src/index.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/**\n * Welcome to @reach/dialog!\n *\n * An accessible dialog or \"modal\" window.\n *\n * @see Docs     https://reacttraining.com/reach-ui/dialog\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/dialog\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\n */\n\nimport React, { forwardRef, useCallback, useEffect, useRef } from \"react\";\nimport Portal from \"@reach/portal\";\nimport {\n  checkStyles,\n  getOwnerDocument,\n  isString,\n  noop,\n  useForkedRef,\n  wrapEvent,\n} from \"@reach/utils\";\nimport FocusLock from \"react-focus-lock\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport PropTypes from \"prop-types\";\n\nconst overlayPropTypes = {\n  allowPinchZoom: PropTypes.bool,\n  dangerouslyBypassFocusLock: PropTypes.bool,\n  dangerouslyBypassScrollLock: PropTypes.bool,\n  // TODO:\n  initialFocusRef: () => null,\n  onDismiss: PropTypes.func,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * DialogOverlay\n *\n * Low-level component if you need more control over the styles or rendering of\n * the dialog overlay.\n *\n * Note: You must render a `DialogContent` inside.\n *\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialogoverlay\n */\nexport const DialogOverlay = forwardRef<HTMLDivElement, DialogOverlayProps>(\n  function DialogOverlay({ isOpen = true, ...props }, forwardedRef) {\n    useEffect(() => checkStyles(\"dialog\"), []);\n\n    // We want to ignore the immediate focus of a tooltip so it doesn't pop\n    // up again when the menu closes, only pops up when focus returns again\n    // to the tooltip (like native OS tooltips).\n    useEffect(() => {\n      if (isOpen) {\n        // @ts-ignore\n        window.__REACH_DISABLE_TOOLTIPS = true;\n      } else {\n        window.requestAnimationFrame(() => {\n          // Wait a frame so that this doesn't fire before tooltip does\n          // @ts-ignore\n          window.__REACH_DISABLE_TOOLTIPS = false;\n        });\n      }\n    }, [isOpen]);\n\n    return isOpen ? (\n      <Portal data-reach-dialog-wrapper=\"\">\n        <DialogInner ref={forwardedRef} {...props} />\n      </Portal>\n    ) : null;\n  }\n);\n\nif (__DEV__) {\n  DialogOverlay.displayName = \"DialogOverlay\";\n  DialogOverlay.propTypes = {\n    ...overlayPropTypes,\n    isOpen: PropTypes.bool,\n  };\n}\n\nexport type DialogOverlayProps = DialogProps & {\n  /**\n   * By default the dialog locks the focus inside it. Normally this is what you\n   * want. This prop is provided so that this feature can be disabled. This,\n   * however, is strongly discouraged.\n   *\n   * The reason it is provided is not to disable the focus lock entirely.\n   * Rather, there are certain situations where you may need more control on how\n   * the focus lock works. This should be complemented by setting up a focus\n   * lock yourself that would allow more flexibility for your specific use case.\n   *\n   * If you do set this prop to `true`, make sure you set up your own\n   * `FocusLock` component. You can likely use\n   * `react-focus-lock`, which is what Reach uses internally by default. It has\n   * various settings to allow more customization, but it takes care of a lot of\n   * hard work that you probably don't want or need to do.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialogoverlay-dangerouslybypassfocuslock\n   * @see https://github.com/theKashey/react-focus-lock\n   * @see https://github.com/reach/reach-ui/issues/615\n   */\n  dangerouslyBypassFocusLock?: boolean;\n  /**\n   * By default the dialog locks scrolling with `react-remove-scroll`, which\n   * also injecs some styles on the body element to remove the scrollbar while\n   * maintaining its gap to prevent jank when the dialog's open state is\n   * toggled. This is almost always what you want in a dialog, but in some cases\n   * you may have the need to customize this behavior further.\n   *\n   * This prop will disable `react-remove-scroll` and allow you to compose your\n   * own scroll lock component to meet your needs. Like the\n   * `dangerouslyBypassFocusLock` prop, this is generally discouraged and should\n   * only be used if a proper fallback for managing scroll behavior is provided.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialogoverlay-dangerouslybypassscrolllock\n   * @see https://github.com/theKashey/react-remove-scroll\n   */\n  dangerouslyBypassScrollLock?: boolean;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * DialogInner\n */\nconst DialogInner = forwardRef<HTMLDivElement, DialogOverlayProps>(\n  function DialogInner(\n    {\n      allowPinchZoom,\n      dangerouslyBypassFocusLock = false,\n      dangerouslyBypassScrollLock = false,\n      initialFocusRef,\n      onClick,\n      onDismiss = noop,\n      onKeyDown,\n      onMouseDown,\n      unstable_lockFocusAcrossFrames = true,\n      ...props\n    },\n    forwardedRef\n  ) {\n    const mouseDownTarget = useRef<EventTarget | null>(null);\n    const overlayNode = useRef<HTMLDivElement | null>(null);\n    const ref = useForkedRef(overlayNode, forwardedRef);\n\n    const activateFocusLock = useCallback(() => {\n      if (initialFocusRef && initialFocusRef.current) {\n        initialFocusRef.current.focus();\n      }\n    }, [initialFocusRef]);\n\n    function handleClick(event: React.MouseEvent) {\n      if (mouseDownTarget.current === event.target) {\n        event.stopPropagation();\n        onDismiss(event);\n      }\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent) {\n      if (event.key === \"Escape\") {\n        event.stopPropagation();\n        onDismiss(event);\n      }\n    }\n\n    function handleMouseDown(event: React.MouseEvent) {\n      mouseDownTarget.current = event.target;\n    }\n\n    useEffect(\n      () =>\n        overlayNode.current ? createAriaHider(overlayNode.current) : void null,\n      []\n    );\n\n    return (\n      <FocusLock\n        autoFocus\n        returnFocus\n        onActivation={activateFocusLock}\n        disabled={dangerouslyBypassFocusLock}\n        crossFrame={unstable_lockFocusAcrossFrames}\n      >\n        <RemoveScroll\n          allowPinchZoom={allowPinchZoom}\n          enabled={!dangerouslyBypassScrollLock}\n        >\n          <div\n            {...props}\n            ref={ref}\n            data-reach-dialog-overlay=\"\"\n            /*\n             * We can ignore the `no-static-element-interactions` warning here\n             * because our overlay is only designed to capture any outside\n             * clicks, not to serve as a clickable element itself.\n             */\n            onClick={wrapEvent(onClick, handleClick)}\n            onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n            onMouseDown={wrapEvent(onMouseDown, handleMouseDown)}\n          />\n        </RemoveScroll>\n      </FocusLock>\n    );\n  }\n);\n\nif (__DEV__) {\n  DialogOverlay.displayName = \"DialogOverlay\";\n  DialogOverlay.propTypes = {\n    ...overlayPropTypes,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * DialogContent\n *\n * Low-level component if you need more control over the styles or rendering of\n * the dialog content.\n *\n * Note: Must be a child of `DialogOverlay`.\n *\n * Note: You only need to use this when you are also styling `DialogOverlay`,\n * otherwise you can use the high-level `Dialog` component and pass the props\n * to it. Any props passed to `Dialog` component (besides `isOpen` and\n * `onDismiss`) will be spread onto `DialogContent`.\n *\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialogcontent\n */\nexport const DialogContent = forwardRef<HTMLDivElement, DialogContentProps>(\n  function DialogContent({ onClick, onKeyDown, ...props }, forwardedRef) {\n    return (\n      <div\n        aria-modal=\"true\"\n        role=\"dialog\"\n        tabIndex={-1}\n        {...props}\n        ref={forwardedRef}\n        data-reach-dialog-content=\"\"\n        onClick={wrapEvent(onClick, (event) => {\n          event.stopPropagation();\n        })}\n      />\n    );\n  }\n);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialogcontent-props\n */\nexport type DialogContentProps = {\n  /**\n   * Accepts any renderable content.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialogcontent-children\n   */\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  DialogContent.displayName = \"DialogContent\";\n  DialogContent.propTypes = {\n    \"aria-label\": ariaLabelType,\n    \"aria-labelledby\": ariaLabelType,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Dialog\n *\n * High-level component to render a modal dialog window over the top of the page\n * (or another dialog).\n *\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialog\n */\nexport const Dialog = forwardRef<HTMLDivElement, DialogProps>(function Dialog(\n  {\n    allowPinchZoom = false,\n    initialFocusRef,\n    isOpen,\n    onDismiss = noop,\n    ...props\n  },\n  forwardedRef\n) {\n  return (\n    <DialogOverlay\n      allowPinchZoom={allowPinchZoom}\n      initialFocusRef={initialFocusRef}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n    >\n      <DialogContent ref={forwardedRef} {...props} />\n    </DialogOverlay>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-props\n */\nexport type DialogProps = {\n  /**\n   * Handle zoom/pinch gestures on iOS devices when scroll locking is enabled.\n   * Defaults to `false`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-allowpinchzoom\n   */\n  allowPinchZoom?: boolean;\n  /**\n   * Accepts any renderable content.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-children\n   */\n  children?: React.ReactNode;\n\n  /**\n   * By default the first focusable element will receive focus when the dialog\n   * opens but you can provide a ref to focus instead.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-initialfocusref\n   */\n  initialFocusRef?: React.RefObject<any>;\n  /**\n   * Controls whether or not the dialog is open.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-isopen\n   */\n  isOpen?: boolean;\n  /**\n   * This function is called whenever the user hits \"Escape\" or clicks outside\n   * the dialog. _It's important to close the dialog `onDismiss`_.\n   *\n   * The only time you shouldn't close the dialog on dismiss is when the dialog\n   * requires a choice and none of them are \"cancel\". For example, perhaps two\n   * records need to be merged and the user needs to pick the surviving record.\n   * Neither choice is less destructive than the other, so in these cases you\n   * may want to alert the user they need to a make a choice on dismiss instead\n   * of closing the dialog.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/dialog#dialog-ondismiss\n   */\n  onDismiss?: (event?: React.SyntheticEvent) => void;\n  /**\n   * By default, React Focus Lock prevents focus from being moved outside of the\n   * locked element even if the thing trying to take focus is in another frame.\n   * Normally this is what you want, as an iframe is typically going to be a\n   * part of your page content. But in some situations, like when using Code\n   * Sandbox, you can't use any of the controls or the editor in the sandbox\n   * while dialog is open because of the focus lock.\n   *\n   * This prop may have some negative side effects and unintended consequences,\n   * and it opens questions about how we might distinguish frames that *should*\n   * steal focus from those that shouldn't. Perhaps it's best for app devs to\n   * decide, and if they use this prop we should advise them to imperatively\n   * assign a -1 tabIndex to other iframes that are a part of the page content\n   * when the dialog is open.\n   *\n   * https://github.com/reach/reach-ui/issues/536\n   */\n  unstable_lockFocusAcrossFrames?: boolean;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  Dialog.displayName = \"Dialog\";\n  Dialog.propTypes = {\n    isOpen: PropTypes.bool,\n    onDismiss: PropTypes.func,\n    \"aria-label\": ariaLabelType,\n    \"aria-labelledby\": ariaLabelType,\n  };\n}\n\nexport default Dialog;\n\n////////////////////////////////////////////////////////////////////////////////\nfunction createAriaHider(dialogNode: HTMLElement) {\n  let originalValues: any[] = [];\n  let rootNodes: HTMLElement[] = [];\n  let ownerDocument = getOwnerDocument(dialogNode) || document;\n\n  if (!dialogNode) {\n    if (__DEV__) {\n      console.warn(\n        \"A ref has not yet been attached to a dialog node when attempting to call `createAriaHider`.\"\n      );\n    }\n    return noop;\n  }\n\n  Array.prototype.forEach.call(\n    ownerDocument.querySelectorAll(\"body > *\"),\n    (node) => {\n      const portalNode = dialogNode.parentNode?.parentNode?.parentNode;\n      if (node === portalNode) {\n        return;\n      }\n      let attr = node.getAttribute(\"aria-hidden\");\n      let alreadyHidden = attr !== null && attr !== \"false\";\n      if (alreadyHidden) {\n        return;\n      }\n      originalValues.push(attr);\n      rootNodes.push(node);\n      node.setAttribute(\"aria-hidden\", \"true\");\n    }\n  );\n\n  return () => {\n    rootNodes.forEach((node, index) => {\n      let originalValue = originalValues[index];\n      if (originalValue === null) {\n        node.removeAttribute(\"aria-hidden\");\n      } else {\n        node.setAttribute(\"aria-hidden\", originalValue);\n      }\n    });\n  };\n}\n\nfunction ariaLabelType(\n  props: { [key: string]: any },\n  propName: string,\n  compName: string,\n  location: string,\n  propFullName: string\n) {\n  const details =\n    \"\\nSee https://www.w3.org/TR/wai-aria/#aria-label for details.\";\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    return new Error(\n      `A <${compName}> must have either an \\`aria-label\\` or \\`aria-labelledby\\` prop.\n      ${details}`\n    );\n  }\n  if (props[\"aria-label\"] && props[\"aria-labelledby\"]) {\n    return new Error(\n      \"You provided both `aria-label` and `aria-labelledby` props to a <\" +\n        compName +\n        \">. If the a label for this component is visible on the screen, that label's component should be given a unique ID prop, and that ID should be passed as the `aria-labelledby` prop into <\" +\n        compName +\n        \">. If the label cannot be determined programmatically from the content of the element, an alternative label should be provided as the `aria-label` prop, which will be used as an `aria-label` on the HTML tag.\" +\n        details\n    );\n  } else if (props[propName] != null && !isString(props[propName])) {\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${compName}\\`. Expected \\`string\\`, received \\`${\n        Array.isArray(propFullName) ? \"array\" : typeof propFullName\n      }\\`.`\n    );\n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}