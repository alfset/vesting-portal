{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range');\n}\nfunction encode(_number, buffer, offset) {\n  checkUInt53(_number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(_number));\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  // 8 bit\n  if (_number < 0xfd) {\n    buffer.writeUInt8(_number, offset);\n    Object.assign(encode, {\n      bytes: 1\n    });\n    // 16 bit\n  } else if (_number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(_number, offset + 1);\n    Object.assign(encode, {\n      bytes: 3\n    });\n    // 32 bit\n  } else if (_number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(_number, offset + 1);\n    Object.assign(encode, {\n      bytes: 5\n    });\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(_number >>> 0, offset + 1);\n    buffer.writeUInt32LE(_number / 0x100000000 | 0, offset + 5);\n    Object.assign(encode, {\n      bytes: 9\n    });\n  }\n  return buffer;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const first = buffer.readUInt8(offset);\n  // 8 bit\n  if (first < 0xfd) {\n    Object.assign(decode, {\n      bytes: 1\n    });\n    return first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    Object.assign(decode, {\n      bytes: 3\n    });\n    return buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    Object.assign(decode, {\n      bytes: 5\n    });\n    return buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    Object.assign(decode, {\n      bytes: 9\n    });\n    const lo = buffer.readUInt32LE(offset + 1);\n    const hi = buffer.readUInt32LE(offset + 5);\n    const _number = hi * 0x0100000000 + lo;\n    checkUInt53(_number);\n    return _number;\n  }\n}\nexports.decode = decode;\nfunction encodingLength(_number) {\n  checkUInt53(_number);\n  return _number < 0xfd ? 1 : _number <= 0xffff ? 3 : _number <= 0xffffffff ? 5 : 9;\n}\nexports.encodingLength = encodingLength;","map":{"version":3,"names":["Object","defineProperty","exports","value","MAX_SAFE_INTEGER","checkUInt53","n","RangeError","encode","_number","buffer","offset","Buffer","allocUnsafe","encodingLength","isBuffer","TypeError","writeUInt8","assign","bytes","writeUInt16LE","writeUInt32LE","decode","first","readUInt8","readUInt16LE","readUInt32LE","lo","hi"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/varint.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n    throw new RangeError('value out of range');\n}\nfunction encode(_number, buffer, offset) {\n  checkUInt53(_number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(_number));\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  // 8 bit\n  if (_number < 0xfd) {\n    buffer.writeUInt8(_number, offset);\n    Object.assign(encode, { bytes: 1 });\n    // 16 bit\n  } else if (_number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 3 });\n    // 32 bit\n  } else if (_number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 5 });\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(_number >>> 0, offset + 1);\n    buffer.writeUInt32LE((_number / 0x100000000) | 0, offset + 5);\n    Object.assign(encode, { bytes: 9 });\n  }\n  return buffer;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const first = buffer.readUInt8(offset);\n  // 8 bit\n  if (first < 0xfd) {\n    Object.assign(decode, { bytes: 1 });\n    return first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    Object.assign(decode, { bytes: 3 });\n    return buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    Object.assign(decode, { bytes: 5 });\n    return buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    Object.assign(decode, { bytes: 9 });\n    const lo = buffer.readUInt32LE(offset + 1);\n    const hi = buffer.readUInt32LE(offset + 5);\n    const _number = hi * 0x0100000000 + lo;\n    checkUInt53(_number);\n    return _number;\n  }\n}\nexports.decode = decode;\nfunction encodingLength(_number) {\n  checkUInt53(_number);\n  return _number < 0xfd\n    ? 1\n    : _number <= 0xffff\n    ? 3\n    : _number <= 0xffffffff\n    ? 5\n    : 9;\n}\nexports.encodingLength = encodingLength;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,gBAAgB,GAAG,gBAAgB;AACzC,SAASC,WAAWA,CAACC,CAAC,EAAE;EACtB,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGF,gBAAgB,IAAIE,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9C,MAAM,IAAIC,UAAU,CAAC,oBAAoB,CAAC;AAC9C;AACA,SAASC,MAAMA,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACvCN,WAAW,CAACI,OAAO,CAAC;EACpB,IAAI,CAACC,MAAM,EAAEA,MAAM,GAAGE,MAAM,CAACC,WAAW,CAACC,cAAc,CAACL,OAAO,CAAC,CAAC;EACjE,IAAI,CAACG,MAAM,CAACG,QAAQ,CAACL,MAAM,CAAC,EAC1B,MAAM,IAAIM,SAAS,CAAC,kCAAkC,CAAC;EACzD,IAAI,CAACL,MAAM,EAAEA,MAAM,GAAG,CAAC;EACvB;EACA,IAAIF,OAAO,GAAG,IAAI,EAAE;IAClBC,MAAM,CAACO,UAAU,CAACR,OAAO,EAAEE,MAAM,CAAC;IAClCX,MAAM,CAACkB,MAAM,CAACV,MAAM,EAAE;MAAEW,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC;EACF,CAAC,MAAM,IAAIV,OAAO,IAAI,MAAM,EAAE;IAC5BC,MAAM,CAACO,UAAU,CAAC,IAAI,EAAEN,MAAM,CAAC;IAC/BD,MAAM,CAACU,aAAa,CAACX,OAAO,EAAEE,MAAM,GAAG,CAAC,CAAC;IACzCX,MAAM,CAACkB,MAAM,CAACV,MAAM,EAAE;MAAEW,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC;EACF,CAAC,MAAM,IAAIV,OAAO,IAAI,UAAU,EAAE;IAChCC,MAAM,CAACO,UAAU,CAAC,IAAI,EAAEN,MAAM,CAAC;IAC/BD,MAAM,CAACW,aAAa,CAACZ,OAAO,EAAEE,MAAM,GAAG,CAAC,CAAC;IACzCX,MAAM,CAACkB,MAAM,CAACV,MAAM,EAAE;MAAEW,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC;EACF,CAAC,MAAM;IACLT,MAAM,CAACO,UAAU,CAAC,IAAI,EAAEN,MAAM,CAAC;IAC/BD,MAAM,CAACW,aAAa,CAACZ,OAAO,KAAK,CAAC,EAAEE,MAAM,GAAG,CAAC,CAAC;IAC/CD,MAAM,CAACW,aAAa,CAAEZ,OAAO,GAAG,WAAW,GAAI,CAAC,EAAEE,MAAM,GAAG,CAAC,CAAC;IAC7DX,MAAM,CAACkB,MAAM,CAACV,MAAM,EAAE;MAAEW,KAAK,EAAE;IAAE,CAAC,CAAC;EACrC;EACA,OAAOT,MAAM;AACf;AACAR,OAAO,CAACM,MAAM,GAAGA,MAAM;AACvB,SAASc,MAAMA,CAACZ,MAAM,EAAEC,MAAM,EAAE;EAC9B,IAAI,CAACC,MAAM,CAACG,QAAQ,CAACL,MAAM,CAAC,EAC1B,MAAM,IAAIM,SAAS,CAAC,kCAAkC,CAAC;EACzD,IAAI,CAACL,MAAM,EAAEA,MAAM,GAAG,CAAC;EACvB,MAAMY,KAAK,GAAGb,MAAM,CAACc,SAAS,CAACb,MAAM,CAAC;EACtC;EACA,IAAIY,KAAK,GAAG,IAAI,EAAE;IAChBvB,MAAM,CAACkB,MAAM,CAACI,MAAM,EAAE;MAAEH,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC,OAAOI,KAAK;IACZ;EACF,CAAC,MAAM,IAAIA,KAAK,KAAK,IAAI,EAAE;IACzBvB,MAAM,CAACkB,MAAM,CAACI,MAAM,EAAE;MAAEH,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC,OAAOT,MAAM,CAACe,YAAY,CAACd,MAAM,GAAG,CAAC,CAAC;IACtC;EACF,CAAC,MAAM,IAAIY,KAAK,KAAK,IAAI,EAAE;IACzBvB,MAAM,CAACkB,MAAM,CAACI,MAAM,EAAE;MAAEH,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC,OAAOT,MAAM,CAACgB,YAAY,CAACf,MAAM,GAAG,CAAC,CAAC;IACtC;EACF,CAAC,MAAM;IACLX,MAAM,CAACkB,MAAM,CAACI,MAAM,EAAE;MAAEH,KAAK,EAAE;IAAE,CAAC,CAAC;IACnC,MAAMQ,EAAE,GAAGjB,MAAM,CAACgB,YAAY,CAACf,MAAM,GAAG,CAAC,CAAC;IAC1C,MAAMiB,EAAE,GAAGlB,MAAM,CAACgB,YAAY,CAACf,MAAM,GAAG,CAAC,CAAC;IAC1C,MAAMF,OAAO,GAAGmB,EAAE,GAAG,YAAY,GAAGD,EAAE;IACtCtB,WAAW,CAACI,OAAO,CAAC;IACpB,OAAOA,OAAO;EAChB;AACF;AACAP,OAAO,CAACoB,MAAM,GAAGA,MAAM;AACvB,SAASR,cAAcA,CAACL,OAAO,EAAE;EAC/BJ,WAAW,CAACI,OAAO,CAAC;EACpB,OAAOA,OAAO,GAAG,IAAI,GACjB,CAAC,GACDA,OAAO,IAAI,MAAM,GACjB,CAAC,GACDA,OAAO,IAAI,UAAU,GACrB,CAAC,GACD,CAAC;AACP;AACAP,OAAO,CAACY,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}