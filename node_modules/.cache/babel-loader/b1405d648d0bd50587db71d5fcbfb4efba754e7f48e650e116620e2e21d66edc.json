{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { nftlist, nftlistinfo, updateNftlistTime } from './actions';\nconst initialState = {\n  nftlist: {},\n  nftlistinfo: {},\n  updateNftlistTime: ''\n};\nexport default createReducer(initialState, builder => builder.addCase(nftlist, (state, _ref) => {\n  let {\n    payload: {\n      chainId,\n      tokenList,\n      version\n    }\n  } = _ref;\n  state.nftlist = {\n    [chainId]: {\n      tokenList,\n      timestamp: Date.now(),\n      version\n    }\n  };\n}).addCase(nftlistinfo, (state, _ref2) => {\n  let {\n    payload: {\n      chainId,\n      tokenList\n    }\n  } = _ref2;\n  state.nftlistinfo = {\n    [chainId]: {\n      tokenList,\n      timestamp: Date.now()\n    }\n  };\n}).addCase(updateNftlistTime, (state, _ref3) => {\n  let {\n    payload: {}\n  } = _ref3;\n  state.updateNftlistTime = Date.now();\n}));","map":{"version":3,"names":["createReducer","nftlist","nftlistinfo","updateNftlistTime","initialState","builder","addCase","state","_ref","payload","chainId","tokenList","version","timestamp","Date","now","_ref2","_ref3"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/nft/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { nftlist, nftlistinfo, updateNftlistTime } from './actions'\n\nexport interface BurnState {\n  readonly nftlist: any\n  readonly nftlistinfo: any\n  readonly updateNftlistTime: any\n}\n\nconst initialState: BurnState = {\n  nftlist: {},\n  nftlistinfo: {},\n  updateNftlistTime: ''\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(nftlist, (state, { payload: { chainId, tokenList, version } }) => {\n      state.nftlist= {\n        [chainId]: {tokenList, timestamp: Date.now(), version}\n      }\n    })\n    .addCase(nftlistinfo, (state, { payload: { chainId, tokenList } }) => {\n      state.nftlistinfo= {\n        [chainId]: {tokenList, timestamp: Date.now()}\n      }\n    })\n    .addCase(updateNftlistTime, (state, { payload: {  } }) => {\n      state.updateNftlistTime = Date.now()\n    })\n)\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,OAAO,EAAEC,WAAW,EAAEC,iBAAiB,QAAQ,WAAW;AAQnE,MAAMC,YAAuB,GAAG;EAC9BH,OAAO,EAAE,CAAC,CAAC;EACXC,WAAW,EAAE,CAAC,CAAC;EACfC,iBAAiB,EAAE;AACrB,CAAC;AAED,eAAeH,aAAa,CAAYI,YAAY,EAAEC,OAAO,IAC3DA,OAAO,CACJC,OAAO,CAACL,OAAO,EAAE,CAACM,KAAK,EAAAC,IAAA,KAAmD;EAAA,IAAjD;IAAEC,OAAO,EAAE;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAQ;EAAE,CAAC,GAAAJ,IAAA;EACpED,KAAK,CAACN,OAAO,GAAE;IACb,CAACS,OAAO,GAAG;MAACC,SAAS;MAAEE,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEH;IAAO;EACvD,CAAC;AACH,CAAC,CAAC,CACDN,OAAO,CAACJ,WAAW,EAAE,CAACK,KAAK,EAAAS,KAAA,KAA0C;EAAA,IAAxC;IAAEP,OAAO,EAAE;MAAEC,OAAO;MAAEC;IAAU;EAAE,CAAC,GAAAK,KAAA;EAC/DT,KAAK,CAACL,WAAW,GAAE;IACjB,CAACQ,OAAO,GAAG;MAACC,SAAS;MAAEE,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAC;EAC9C,CAAC;AACH,CAAC,CAAC,CACDT,OAAO,CAACH,iBAAiB,EAAE,CAACI,KAAK,EAAAU,KAAA,KAAwB;EAAA,IAAtB;IAAER,OAAO,EAAE,CAAG;EAAE,CAAC,GAAAQ,KAAA;EACnDV,KAAK,CAACJ,iBAAiB,GAAGW,IAAI,CAACC,GAAG,CAAC,CAAC;AACtC,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}