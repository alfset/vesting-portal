{"ast":null,"code":"import{parseUnits}from'@ethersproject/units';// import JSBI from 'jsbi'\nimport{useCallback,useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useActiveWeb3React}from'../../hooks';import useParsedQueryString from'../../hooks/useParsedQueryString';import{isAddress}from'../../utils';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';import{BigAmount}from'../../utils/formatBignumber';import config from'../../config';export function useSwapState(){return useSelector(state=>state.swap);}export function useSwapActionHandlers(){const dispatch=useDispatch();const onCurrencySelection=useCallback((field,currency,chainId,decimals,symbol,name)=>{// console.log(field)\n// console.log(currency)\ndispatch(selectCurrency({field,// currencyId: currency instanceof Token ? currency.address : currency === ETHER ? config.symbol : ''\ncurrencyId:currency,chainId:chainId,decimals:decimals,symbol:symbol,name:name}));},[dispatch]);const onSwitchTokens=useCallback(()=>{dispatch(switchCurrencies());},[dispatch]);const onUserInput=useCallback((field,typedValue)=>{// console.log(field)\n// console.log(typedValue)\n// console.log(typeInput({ field, typedValue }))\ndispatch(typeInput({field,typedValue}));},[dispatch]);const onChangeRecipient=useCallback(recipient=>{dispatch(setRecipient({recipient}));},[dispatch]);return{onSwitchTokens,onCurrencySelection,onUserInput,onChangeRecipient};}// try to parse a user entered amount for a given token\nexport function tryParseAmountToken(value,currency){if(!value||!currency){return undefined;}try{const typedValueParsed=parseUnits(value,currency.decimals).toString();if(typedValueParsed!=='0'){return{amount:BigAmount.format(currency.decimals,typedValueParsed),token:currency};}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}// try to parse a user entered amount for a given token\nexport function tryParseAmount(value,currency){if(!value||!currency){return undefined;}try{const typedValueParsed=parseUnits(value,currency.decimals).toString();if(typedValueParsed!=='0'){return BigAmount.format(currency.decimals,typedValueParsed);}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}// try to parse a user entered amount for a given token\nexport function tryParseAmount1(value,decimals){if(!value||!decimals){return undefined;}try{const typedValueParsed=parseUnits(value,decimals).toString();// console.log(typedValueParsed)\nif(typedValueParsed!=='0'){return BigAmount.format(decimals,typedValueParsed);}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}// try to parse a user entered amount for a given token\nexport function tryParseAmount2(value,decimals){if(!value){return undefined;}try{const typedValueParsed=parseUnits(value,decimals).toString();if(typedValueParsed!=='0'){return BigAmount.format(decimals,typedValueParsed);}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}export function tryParseAmount3(value,decimals){if(!value||!decimals){return undefined;}try{const typedValueParsed=parseUnits(value,decimals).toString();if(typedValueParsed!=='0'){return typedValueParsed;}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}export function tryParseAmount4(value,decimals){if(!value||!decimals){return undefined;}try{const typedValueParsed=parseUnits(value,decimals).toString();if(typedValueParsed!=='0'){return BigAmount.format(decimals,typedValueParsed);}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}export function tryParseAmount5(value,decimals){if(!value||!decimals){return undefined;}try{// const typedValueParsed = parseUnits(value, decimals).toString()\nif(value!=='0'){return BigAmount.format(decimals,value);}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}export function tryParseAmount6(value){if(!value){return undefined;}try{if(value!=='0'){return BigAmount.format(18,value);}else if(value==='0'){return BigAmount.format(18,'0');}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}function parseCurrencyFromURLParameter(urlParam){var _config$symbol;if(typeof urlParam==='string'){const valid=isAddress(urlParam);if(valid)return valid;if(urlParam.toUpperCase()===config.symbol)return config.symbol;if(valid===false)return config.symbol;}return(_config$symbol=config.symbol)!==null&&_config$symbol!==void 0?_config$symbol:'';}function parseTokenAmountURLParameter(urlParam){return typeof urlParam==='string'&&!isNaN(parseFloat(urlParam))?urlParam:'';}function parseIndependentFieldURLParameter(urlParam){return typeof urlParam==='string'&&urlParam.toLowerCase()==='output'?Field.OUTPUT:Field.INPUT;}const ENS_NAME_REGEX=/^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;const ADDRESS_REGEX=/^0x[a-fA-F0-9]{40}$/;function validatedRecipient(recipient){if(typeof recipient!=='string')return null;const address=isAddress(recipient);if(address)return address;if(ENS_NAME_REGEX.test(recipient))return recipient;if(ADDRESS_REGEX.test(recipient))return recipient;return null;}export function queryParametersToSwapState(parsedQs){let inputCurrency=parseCurrencyFromURLParameter(parsedQs.inputCurrency);let outputCurrency=parseCurrencyFromURLParameter(parsedQs.outputCurrency);if(inputCurrency===outputCurrency){if(typeof parsedQs.outputCurrency==='string'){inputCurrency='';}else{outputCurrency='';}}const recipient=validatedRecipient(parsedQs.recipient);return{[Field.INPUT]:{currencyId:inputCurrency},[Field.OUTPUT]:{currencyId:outputCurrency},typedValue:parseTokenAmountURLParameter(parsedQs.exactAmount),independentField:parseIndependentFieldURLParameter(parsedQs.exactField),recipient};}// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch(){const{chainId}=useActiveWeb3React();const dispatch=useDispatch();const parsedQs=useParsedQueryString();const[result,setResult]=useState();useEffect(()=>{if(!chainId)return;const parsed=queryParametersToSwapState(parsedQs);dispatch(replaceSwapState({typedValue:parsed.typedValue,field:parsed.independentField,inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId,recipient:parsed.recipient}));setResult({inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId});},[dispatch,chainId]);return result;}","map":{"version":3,"names":["parseUnits","useCallback","useEffect","useState","useDispatch","useSelector","useActiveWeb3React","useParsedQueryString","isAddress","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","BigAmount","config","useSwapState","state","swap","useSwapActionHandlers","dispatch","onCurrencySelection","field","currency","chainId","decimals","symbol","name","currencyId","onSwitchTokens","onUserInput","typedValue","onChangeRecipient","recipient","tryParseAmountToken","value","undefined","typedValueParsed","toString","amount","format","token","error","console","debug","concat","tryParseAmount","tryParseAmount1","tryParseAmount2","tryParseAmount3","tryParseAmount4","tryParseAmount5","tryParseAmount6","parseCurrencyFromURLParameter","urlParam","_config$symbol","valid","toUpperCase","parseTokenAmountURLParameter","isNaN","parseFloat","parseIndependentFieldURLParameter","toLowerCase","OUTPUT","INPUT","ENS_NAME_REGEX","ADDRESS_REGEX","validatedRecipient","address","test","queryParametersToSwapState","parsedQs","inputCurrency","outputCurrency","exactAmount","independentField","exactField","useDefaultsFromURLSearch","result","setResult","parsed","inputCurrencyId","outputCurrencyId"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/swap/hooks.ts"],"sourcesContent":["\nimport { parseUnits } from '@ethersproject/units'\nimport { ParsedQs } from 'qs'\n// import JSBI from 'jsbi'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppDispatch, AppState } from '../index'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport {BigAmount} from '../../utils/formatBignumber'\n\nimport config from '../../config'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>(state => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: string, chainId: number | string, decimals: number, symbol: string, name:string) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: string, chainId: number | string, decimals: number, symbol: string, name:string) => {\n      // console.log(field)\n      // console.log(currency)\n      dispatch(\n        selectCurrency({\n          field,\n          // currencyId: currency instanceof Token ? currency.address : currency === ETHER ? config.symbol : ''\n          currencyId: currency,\n          chainId: chainId,\n          decimals: decimals,\n          symbol: symbol,\n          name: name\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      // console.log(field)\n      // console.log(typedValue)\n      // console.log(typeInput({ field, typedValue }))\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmountToken(value?: string, currency?: any): any | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return {amount: BigAmount.format(currency.decimals, typedValueParsed), token: currency}\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: any): any | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return BigAmount.format(currency.decimals, typedValueParsed)\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount1(value?: string, decimals?: number): any {\n  if (!value || !decimals) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, decimals).toString()\n    // console.log(typedValueParsed)\n    if (typedValueParsed !== '0') {\n      return BigAmount.format(decimals, typedValueParsed)\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount2(value?: string, decimals?: any): any {\n  if (!value) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, decimals).toString()\n    if (typedValueParsed !== '0') {\n      return BigAmount.format(decimals, typedValueParsed)\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nexport function tryParseAmount3(value?: string, decimals?: number): any | undefined {\n  if (!value || !decimals) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, decimals).toString()\n    if (typedValueParsed !== '0') {\n      return typedValueParsed\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nexport function tryParseAmount4(value?: string, decimals?: number): any {\n  if (!value || !decimals) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, decimals).toString()\n    if (typedValueParsed !== '0') {\n      return BigAmount.format(decimals, typedValueParsed)\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\nexport function tryParseAmount5(value?: string, decimals?: number): any | undefined {\n  if (!value || !decimals) {\n    return undefined\n  }\n  try {\n    // const typedValueParsed = parseUnits(value, decimals).toString()\n    if (value !== '0') {\n      return BigAmount.format(decimals, value)\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nexport function tryParseAmount6(value?: string): any {\n  if (!value) {\n    return undefined\n  }\n  try {\n    if (value !== '0') {\n      return BigAmount.format(18, value)\n    } else if (value === '0') {\n      return BigAmount.format(18, '0')\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === config.symbol) return config.symbol\n    if (valid === false) return config.symbol\n  }\n  return config.symbol ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient\n      })\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    \n  }, [dispatch, chainId])\n\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}