{"ast":null,"code":"import { useCallback, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\n// import { useDispatch, useSelector } from 'react-redux'\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport { useActiveWeb3React } from '../../hooks';\nimport { addSerializedToken, removeSerializedToken, updateUserDarkMode, updateUserDeadline,\n// updatePairAddress,\nupdateUserExpertMode, updateUserSlippageTolerance, toggleURLWarning, selectNetworkId, updateUserBetaMessage, starChain, starToken, addTokenToWallet, removeTokenToWallet, changeStarTab, updateInterfaceMode, updateInterfaceBalanceValid } from './actions';\n\n// import config from '../../config'\n// import {ChainId} from '../../config/chainConfig/chainId'\n\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  return {\n    chainId: serializedToken.chainId,\n    address: serializedToken.address,\n    decimals: serializedToken.decimals,\n    symbol: serializedToken.symbol,\n    name: serializedToken.name\n  };\n}\nexport function useIsDarkMode() {\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useSelector(_ref => {\n    let {\n      user: {\n        matchesDarkMode,\n        userDarkMode\n      }\n    } = _ref;\n    return {\n      userDarkMode,\n      matchesDarkMode\n    };\n  }, shallowEqual);\n\n  // return false\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\nexport function useDarkModeManager() {\n  const dispatch = useDispatch();\n  const darkMode = useIsDarkMode();\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\nexport function useIsExpertMode() {\n  return useSelector(state => state.user.userExpertMode);\n}\nexport function useExpertModeManager() {\n  const dispatch = useDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\nexport function useInterfaceModeManager() {\n  const dispatch = useDispatch();\n  const userInterfaceMode = useSelector(state => state.user.userInterfaceMode);\n  const toggleSetInterfaceMode = useCallback(() => {\n    dispatch(updateInterfaceMode({\n      userInterfaceMode: !userInterfaceMode\n    }));\n  }, [userInterfaceMode, dispatch]);\n  return [userInterfaceMode, toggleSetInterfaceMode];\n}\nexport function useInterfaceBalanceValidManager() {\n  const dispatch = useDispatch();\n  const userInterfaceBalanceValid = useSelector(state => state.user.userInterfaceBalanceValid);\n  const toggleSetInterfaceBalanceValid = useCallback(() => {\n    dispatch(updateInterfaceBalanceValid({\n      userInterfaceBalanceValid: !userInterfaceBalanceValid\n    }));\n  }, [userInterfaceBalanceValid, dispatch]);\n  return [userInterfaceBalanceValid, toggleSetInterfaceBalanceValid];\n}\nexport function useUserSlippageTolerance() {\n  const dispatch = useDispatch();\n  const userSlippageTolerance = useSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const setUserSlippageTolerance = useCallback(userSlippageTolerance => {\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance\n    }));\n  }, [dispatch]);\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\nexport function useBetaMessageManager() {\n  const dispatch = useDispatch();\n  const showBetaMessage = useSelector(state => {\n    return state.user.showBetaMessage;\n  });\n  const dismissBetaMessage = useCallback(() => {\n    dispatch(updateUserBetaMessage({\n      showBetaMessage: false\n    }));\n  }, [dispatch]);\n  return [showBetaMessage, dismissBetaMessage];\n}\nexport function useUserTransactionTTL() {\n  const dispatch = useDispatch();\n  const userDeadline = useSelector(state => {\n    return state.user.userDeadline;\n  });\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [userDeadline, setUserDeadline];\n}\nexport function useAddUserToken() {\n  const dispatch = useDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\nexport function useRemoveUserAddedToken() {\n  const dispatch = useDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\nexport function useUserAddedTokens() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const serializedTokensMap = useSelector(_ref2 => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref2;\n    return tokens;\n  });\n  return useMemo(() => {\n    var _serializedTokensMap$;\n    if (!chainId) return [];\n    // @ts-ignore\n    return Object.values((_serializedTokensMap$ = serializedTokensMap[chainId]) !== null && _serializedTokensMap$ !== void 0 ? _serializedTokensMap$ : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\nexport function useURLWarningVisible() {\n  return useSelector(state => state.user.URLWarningVisible);\n}\nexport function useURLWarningToggle() {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch]);\n}\nexport function useUserSelectChainId() {\n  const dispatch = useDispatch();\n  const selectNetworkInfo = useSelector(state => {\n    return state.user.selectNetworkId;\n  });\n  const setUserSelectNetwork = useCallback(selectNetworkInfo => {\n    dispatch(selectNetworkId(selectNetworkInfo));\n  }, [dispatch]);\n  return {\n    selectNetworkInfo,\n    setUserSelectNetwork\n  };\n}\nexport function useStarChain() {\n  const {\n    account\n  } = useActiveReact();\n  const starChainResult = useSelector(state => state.user.starChain);\n  const dispatch = useDispatch();\n  const onChangeStarChain = useCallback(chainId => {\n    dispatch(starChain({\n      account,\n      chainId\n    }));\n  }, [dispatch]);\n  // console.log(starChainResult)\n  return {\n    // starChainList: account && starChainResult?.[account] ? starChainResult[account] : (starChainResult?.['all'] ? starChainResult['all'] : {}),\n    starChainList: account && (starChainResult === null || starChainResult === void 0 ? void 0 : starChainResult[account]) ? starChainResult[account] : {},\n    onChangeStarChain\n  };\n}\nexport function useStarToken() {\n  const {\n    chainId\n  } = useActiveReact();\n  const starTokenResult = useSelector(state => state.user.starToken);\n  const dispatch = useDispatch();\n  const onChangeStarToken = useCallback(token => {\n    dispatch(starToken({\n      chainId,\n      token\n    }));\n  }, [dispatch]);\n  // console.log(starChainResult)\n  return {\n    starTokenList: chainId && (starTokenResult === null || starTokenResult === void 0 ? void 0 : starTokenResult[chainId]) ? starTokenResult[chainId] : (starTokenResult === null || starTokenResult === void 0 ? void 0 : starTokenResult['all']) ? starTokenResult['all'] : {},\n    onChangeStarToken\n  };\n}\nexport function useChangeTokenOnWallet() {\n  // const { chainId } = useActiveReact()\n  const addTokenToWalletResult = useSelector(state => state.user.addTokenToWallet);\n  const dispatch = useDispatch();\n  const onAddToken = useCallback((chainId, tokenInfo) => {\n    dispatch(addTokenToWallet({\n      chainId,\n      tokenInfo\n    }));\n  }, [dispatch]);\n  const onRemoveToken = useCallback(() => {\n    dispatch(removeTokenToWallet({}));\n  }, [dispatch]);\n  // console.log(starChainResult)\n  return {\n    tokeninfo: addTokenToWalletResult,\n    onAddToken,\n    onRemoveToken\n  };\n}\nexport function useChangeStarTab(type) {\n  // const { chainId } = useActiveReact()\n  const changeStarTabResult = useSelector(state => state.user.changeStarTab);\n  const dispatch = useDispatch();\n  const onChangeStarTab = useCallback(index => {\n    dispatch(changeStarTab({\n      type,\n      index\n    }));\n  }, [dispatch]);\n  return {\n    starTabIndex: (changeStarTabResult === null || changeStarTabResult === void 0 ? void 0 : changeStarTabResult[type]) || (changeStarTabResult === null || changeStarTabResult === void 0 ? void 0 : changeStarTabResult[type]) === 0 ? changeStarTabResult === null || changeStarTabResult === void 0 ? void 0 : changeStarTabResult[type] : 1,\n    onChangeStarTab\n  };\n}","map":{"version":3,"names":["useCallback","useMemo","shallowEqual","useDispatch","useSelector","useActiveReact","useActiveWeb3React","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","toggleURLWarning","selectNetworkId","updateUserBetaMessage","starChain","starToken","addTokenToWallet","removeTokenToWallet","changeStarTab","updateInterfaceMode","updateInterfaceBalanceValid","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","_ref","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useInterfaceModeManager","userInterfaceMode","toggleSetInterfaceMode","useInterfaceBalanceValidManager","userInterfaceBalanceValid","toggleSetInterfaceBalanceValid","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useBetaMessageManager","showBetaMessage","dismissBetaMessage","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","_ref2","tokens","_serializedTokensMap$","Object","values","map","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","useUserSelectChainId","selectNetworkInfo","setUserSelectNetwork","useStarChain","account","starChainResult","onChangeStarChain","starChainList","useStarToken","starTokenResult","onChangeStarToken","starTokenList","useChangeTokenOnWallet","addTokenToWalletResult","onAddToken","tokenInfo","onRemoveToken","tokeninfo","useChangeStarTab","type","changeStarTabResult","onChangeStarTab","index","starTabIndex"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/user/hooks.tsx"],"sourcesContent":["\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  // updatePairAddress,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  toggleURLWarning,\n  selectNetworkId,\n  updateUserBetaMessage,\n  starChain,\n  starToken,\n  addTokenToWallet,\n  removeTokenToWallet,\n  changeStarTab,\n  updateInterfaceMode,\n  updateInterfaceBalanceValid\n} from './actions'\n\n// import config from '../../config'\n// import {ChainId} from '../../config/chainConfig/chainId'\n\nfunction serializeToken(token: any): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): any {\n  return {\n    chainId: serializedToken.chainId,\n    address: serializedToken.address,\n    decimals: serializedToken.decimals,\n    symbol: serializedToken.symbol,\n    name: serializedToken.name\n  }\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode\n    }),\n    shallowEqual\n  )\n\n  // return false\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>(state => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useInterfaceModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userInterfaceMode = useSelector<AppState, AppState['user']['userInterfaceMode']>(state => state.user.userInterfaceMode)\n\n  const toggleSetInterfaceMode = useCallback(() => {\n    dispatch(updateInterfaceMode({ userInterfaceMode: !userInterfaceMode }))\n  }, [userInterfaceMode, dispatch])\n\n  return [userInterfaceMode, toggleSetInterfaceMode]\n}\n\nexport function useInterfaceBalanceValidManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userInterfaceBalanceValid = useSelector<AppState, AppState['user']['userInterfaceBalanceValid']>(state => state.user.userInterfaceBalanceValid)\n\n  const toggleSetInterfaceBalanceValid = useCallback(() => {\n    dispatch(updateInterfaceBalanceValid({ userInterfaceBalanceValid: !userInterfaceBalanceValid }))\n  }, [userInterfaceBalanceValid, dispatch])\n\n  return [userInterfaceBalanceValid, toggleSetInterfaceBalanceValid]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>(state => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useBetaMessageManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const showBetaMessage = useSelector<AppState, AppState['user']['showBetaMessage']>(state => {\n    return state.user.showBetaMessage\n  })\n\n  const dismissBetaMessage = useCallback(\n    () => {\n      dispatch(updateUserBetaMessage({ showBetaMessage: false }))\n    },\n    [dispatch]\n  )\n\n  return [showBetaMessage, dismissBetaMessage]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>(state => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: any) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: any) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): any[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    // @ts-ignore\n    return Object.values(serializedTokensMap[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n\n\nexport function useUserSelectChainId(): {selectNetworkInfo?:any, setUserSelectNetwork?: (selectChainInfo: any) => void} {\n  const dispatch = useDispatch<AppDispatch>()\n  const selectNetworkInfo:any = useSelector<AppState, AppState['user']['selectNetworkId']>(state => {\n    return state.user.selectNetworkId\n  })\n\n  const setUserSelectNetwork = useCallback(\n    (selectNetworkInfo: any) => {\n      dispatch(selectNetworkId(selectNetworkInfo))\n    },\n    [dispatch]\n  )\n\n  return {\n    selectNetworkInfo, setUserSelectNetwork\n  }\n}\n\n\nexport function useStarChain(): any {\n  const { account } = useActiveReact()\n  const starChainResult = useSelector((state: AppState) => state.user.starChain)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarChain = useCallback(\n    (chainId: any) => {\n      dispatch(starChain({ account, chainId }))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    // starChainList: account && starChainResult?.[account] ? starChainResult[account] : (starChainResult?.['all'] ? starChainResult['all'] : {}),\n    starChainList: account && starChainResult?.[account] ? starChainResult[account] : {},\n    onChangeStarChain\n  }\n}\n\nexport function useStarToken(): any {\n  const { chainId } = useActiveReact()\n  const starTokenResult = useSelector((state: AppState) => state.user.starToken)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarToken = useCallback(\n    (token: any) => {\n      dispatch(starToken({ chainId, token }))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    starTokenList: chainId && starTokenResult?.[chainId] ? starTokenResult[chainId] : (starTokenResult?.['all'] ? starTokenResult['all'] : {}),\n    onChangeStarToken\n  }\n}\n\nexport function useChangeTokenOnWallet(): any {\n  // const { chainId } = useActiveReact()\n  const addTokenToWalletResult = useSelector((state: AppState) => state.user.addTokenToWallet)\n  const dispatch = useDispatch<AppDispatch>()\n  const onAddToken = useCallback(\n    (chainId:any, tokenInfo: any) => {\n      dispatch(addTokenToWallet({ chainId, tokenInfo }))\n    },\n    [dispatch]\n  )\n  const onRemoveToken = useCallback(\n    () => {\n      dispatch(removeTokenToWallet({}))\n    },\n    [dispatch]\n  )\n    // console.log(starChainResult)\n  return {\n    tokeninfo: addTokenToWalletResult,\n    onAddToken,\n    onRemoveToken\n  }\n}\n\nexport function useChangeStarTab(type:any): any {\n  // const { chainId } = useActiveReact()\n  const changeStarTabResult = useSelector((state: AppState) => state.user.changeStarTab)\n  const dispatch = useDispatch<AppDispatch>()\n  const onChangeStarTab = useCallback(\n    (index: any) => {\n      dispatch(changeStarTab({ type, index }))\n    },\n    [dispatch]\n  )\n  return {\n    starTabIndex: changeStarTabResult?.[type] || changeStarTabResult?.[type] === 0 ? changeStarTabResult?.[type] : 1,\n    onChangeStarTab\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}