{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupAuthzExtension = void 0;\nconst query_1 = require(\"cosmjs-types/cosmos/authz/v1beta1/query\");\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupAuthzExtension(base) {\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    authz: {\n      grants: async (granter, grantee, msgTypeUrl, paginationKey) => {\n        const response = await queryService.Grants({\n          granter: granter,\n          grantee: grantee,\n          msgTypeUrl: msgTypeUrl,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      }\n    }\n  };\n}\nexports.setupAuthzExtension = setupAuthzExtension;","map":{"version":3,"names":["query_1","require","queryclient_1","setupAuthzExtension","base","rpc","createProtobufRpcClient","queryService","QueryClientImpl","authz","grants","granter","grantee","msgTypeUrl","paginationKey","response","Grants","pagination","createPagination","exports"],"sources":["../../../src/modules/authz/queries.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,aAAA,GAAAD,OAAA;AAaA,SAAgBE,mBAAmBA,CAACC,IAAiB;EACnD;EACA;EACA,MAAMC,GAAG,GAAG,IAAAH,aAAA,CAAAI,uBAAuB,EAACF,IAAI,CAAC;EACzC,MAAMG,YAAY,GAAG,IAAIP,OAAA,CAAAQ,eAAe,CAACH,GAAG,CAAC;EAE7C,OAAO;IACLI,KAAK,EAAE;MACLC,MAAM,EAAE,MAAAA,CAAOC,OAAe,EAAEC,OAAe,EAAEC,UAAkB,EAAEC,aAA0B,KAAI;QACjG,MAAMC,QAAQ,GAAG,MAAMR,YAAY,CAACS,MAAM,CAAC;UACzCL,OAAO,EAAEA,OAAO;UAChBC,OAAO,EAAEA,OAAO;UAChBC,UAAU,EAAEA,UAAU;UACtBI,UAAU,EAAE,IAAAf,aAAA,CAAAgB,gBAAgB,EAACJ,aAAa;SAC3C,CAAC;QAEF,OAAOC,QAAQ;MACjB;;GAEH;AACH;AApBAI,OAAA,CAAAhB,mBAAA,GAAAA,mBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}