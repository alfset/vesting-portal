{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{approveList,nonevmAddress}from'./actions';const initialState={approveList:{},nonevmAddress:{}};export default createReducer(initialState,builder=>builder.addCase(approveList,(state,_ref)=>{let{payload:{chainId,account,token,spender,allowance}}=_ref;if(!state.approveList)state.approveList={};if(!state.approveList[chainId])state.approveList[chainId]={};if(!state.approveList[chainId][account])state.approveList[chainId][account]={};if(!state.approveList[chainId][account][token])state.approveList[chainId][account][token]={};state.approveList[chainId][account][token][spender]={allowance};}).addCase(nonevmAddress,(state,_ref2)=>{let{payload:{chainId,account}}=_ref2;if(!state.nonevmAddress)state.nonevmAddress={};state.nonevmAddress[chainId]={account};}));","map":{"version":3,"names":["createReducer","approveList","nonevmAddress","initialState","builder","addCase","state","_ref","payload","chainId","account","token","spender","allowance","_ref2"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/hooks/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { approveList, nonevmAddress } from './actions'\n\nexport interface BurnState {\n  readonly approveList: any\n  readonly nonevmAddress: any\n}\n\nconst initialState: BurnState = {\n  approveList: {},\n  nonevmAddress: {},\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(approveList, (state, { payload: { chainId, account, token, spender, allowance } }) => {\n      if (!state.approveList) state.approveList = {}\n      if (!state.approveList[chainId]) state.approveList[chainId] = {}\n      if (!state.approveList[chainId][account]) state.approveList[chainId][account] = {}\n      if (!state.approveList[chainId][account][token]) state.approveList[chainId][account][token] = {}\n      state.approveList[chainId][account][token][spender] = {\n        allowance\n      }\n    })\n    .addCase(nonevmAddress, (state, { payload: { chainId, account} }) => {\n      if (!state.nonevmAddress) state.nonevmAddress = {}\n      state.nonevmAddress[chainId] = {account}\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,WAAW,CAAEC,aAAa,KAAQ,WAAW,CAOtD,KAAM,CAAAC,YAAuB,CAAG,CAC9BF,WAAW,CAAE,CAAC,CAAC,CACfC,aAAa,CAAE,CAAC,CAClB,CAAC,CAED,cAAe,CAAAF,aAAa,CAAYG,YAAY,CAAEC,OAAO,EAC3DA,OAAO,CACJC,OAAO,CAACJ,WAAW,CAAE,CAACK,KAAK,CAAAC,IAAA,GAAmE,IAAjE,CAAEC,OAAO,CAAE,CAAEC,OAAO,CAAEC,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAEC,SAAU,CAAE,CAAC,CAAAN,IAAA,CACxF,GAAI,CAACD,KAAK,CAACL,WAAW,CAAEK,KAAK,CAACL,WAAW,CAAG,CAAC,CAAC,CAC9C,GAAI,CAACK,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAAEH,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAAG,CAAC,CAAC,CAChE,GAAI,CAACH,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAACC,OAAO,CAAC,CAAEJ,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAACC,OAAO,CAAC,CAAG,CAAC,CAAC,CAClF,GAAI,CAACJ,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAACC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAEL,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAACC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAG,CAAC,CAAC,CAChGL,KAAK,CAACL,WAAW,CAACQ,OAAO,CAAC,CAACC,OAAO,CAAC,CAACC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAG,CACpDC,SACF,CAAC,CACH,CAAC,CAAC,CACDR,OAAO,CAACH,aAAa,CAAE,CAACI,KAAK,CAAAQ,KAAA,GAAuC,IAArC,CAAEN,OAAO,CAAE,CAAEC,OAAO,CAAEC,OAAO,CAAE,CAAC,CAAAI,KAAA,CAC9D,GAAI,CAACR,KAAK,CAACJ,aAAa,CAAEI,KAAK,CAACJ,aAAa,CAAG,CAAC,CAAC,CAClDI,KAAK,CAACJ,aAAa,CAACO,OAAO,CAAC,CAAG,CAACC,OAAO,CAAC,CAC1C,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}