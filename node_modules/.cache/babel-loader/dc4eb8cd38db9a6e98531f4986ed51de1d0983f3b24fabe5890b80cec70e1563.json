{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublicKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexports.PublicKey = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.ed25519 !== undefined) {\n      writer.uint32(10).bytes(message.ed25519);\n    }\n    if (message.secp256k1 !== undefined) {\n      writer.uint32(18).bytes(message.secp256k1);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePublicKey);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ed25519 = reader.bytes();\n          break;\n        case 2:\n          message.secp256k1 = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePublicKey);\n    if (object.ed25519 !== undefined && object.ed25519 !== null) {\n      message.ed25519 = bytesFromBase64(object.ed25519);\n    }\n    if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n      message.secp256k1 = bytesFromBase64(object.secp256k1);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n    message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, basePublicKey);\n    if (object.ed25519 !== undefined && object.ed25519 !== null) {\n      message.ed25519 = object.ed25519;\n    } else {\n      message.ed25519 = undefined;\n    }\n    if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n      message.secp256k1 = object.secp256k1;\n    } else {\n      message.secp256k1 = undefined;\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","basePublicKey","PublicKey","encode","message","writer","arguments","length","undefined","default","Writer","create","ed25519","uint32","bytes","secp256k1","decode","input","reader","Reader","end","len","pos","Object","assign","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","Uint8Array","i","charCodeAt","btoa","byte","push","String","fromCharCode","join","util","Long","configure"],"sources":["../../../src/tendermint/crypto/keys.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}