{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.p2wpkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  (0, types_1.typeforce)({\n    address: types_1.typeforce.maybe(types_1.typeforce.String),\n    hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n    input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n    network: types_1.typeforce.maybe(types_1.typeforce.Object),\n    output: types_1.typeforce.maybe(types_1.typeforce.BufferN(22)),\n    pubkey: types_1.typeforce.maybe(types_1.isPoint),\n    signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n    witness: types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.typeforce.Buffer))\n  }, a);\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = {\n    name: 'p2wpkh',\n    network\n  };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix) throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20) throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n    if (a.output) {\n      if (a.output.length !== 22 || a.output[0] !== OPS.OP_0 || a.output[1] !== 0x14) throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2))) throw new TypeError('Hash mismatch');else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n      if (!(0, types_1.isPoint)(a.pubkey) || a.pubkey.length !== 33) throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0])) throw new TypeError('Witness has invalid signature');\n      if (!(0, types_1.isPoint)(a.witness[1]) || a.witness[1].length !== 33) throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1])) throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;","map":{"version":3,"names":["Object","defineProperty","exports","value","p2wpkh","bcrypto","require","networks_1","bscript","types_1","lazy","bech32_1","OPS","EMPTY_BUFFER","Buffer","alloc","a","opts","address","hash","output","pubkey","witness","TypeError","assign","validate","typeforce","maybe","String","BufferN","input","network","isPoint","signature","isCanonicalScriptSignature","arrayOf","_address","result","bech32","decode","version","words","shift","data","fromWords","prefix","from","bitcoin","o","name","prop","toWords","unshift","encode","slice","hash160","compile","OP_0","length","equals","pkh"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wpkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(22)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0, types_1.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0, types_1.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,MAAMC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMK,QAAQ,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMM,GAAG,GAAGJ,OAAO,CAACI,GAAG;AACvB,MAAMC,YAAY,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;AACpC;AACA;AACA;AACA,SAASX,MAAMA,CAACY,CAAC,EAAEC,IAAI,EAAE;EACvB,IAAI,CAACD,CAAC,CAACE,OAAO,IAAI,CAACF,CAAC,CAACG,IAAI,IAAI,CAACH,CAAC,CAACI,MAAM,IAAI,CAACJ,CAAC,CAACK,MAAM,IAAI,CAACL,CAAC,CAACM,OAAO,EAC/D,MAAM,IAAIC,SAAS,CAAC,iBAAiB,CAAC;EACxCN,IAAI,GAAGjB,MAAM,CAACwB,MAAM,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAER,IAAI,IAAI,CAAC,CAAC,CAAC;EACpD,CAAC,CAAC,EAAER,OAAO,CAACiB,SAAS,EACnB;IACER,OAAO,EAAET,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACiB,SAAS,CAACE,MAAM,CAAC;IAC1DT,IAAI,EAAEV,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACiB,SAAS,CAACG,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5DC,KAAK,EAAErB,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACiB,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5DE,OAAO,EAAEtB,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACiB,SAAS,CAAC1B,MAAM,CAAC;IAC1DoB,MAAM,EAAEX,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACiB,SAAS,CAACG,OAAO,CAAC,EAAE,CAAC,CAAC;IAC9DR,MAAM,EAAEZ,OAAO,CAACiB,SAAS,CAACC,KAAK,CAAClB,OAAO,CAACuB,OAAO,CAAC;IAChDC,SAAS,EAAExB,OAAO,CAACiB,SAAS,CAACC,KAAK,CAACnB,OAAO,CAAC0B,0BAA0B,CAAC;IACtEZ,OAAO,EAAEb,OAAO,CAACiB,SAAS,CAACC,KAAK,CAC9BlB,OAAO,CAACiB,SAAS,CAACS,OAAO,CAAC1B,OAAO,CAACiB,SAAS,CAACZ,MAAM,CACpD;EACF,CAAC,EACDE,CACF,CAAC;EACD,MAAMoB,QAAQ,GAAG1B,IAAI,CAACP,KAAK,CAAC,MAAM;IAChC,MAAMkC,MAAM,GAAG1B,QAAQ,CAAC2B,MAAM,CAACC,MAAM,CAACvB,CAAC,CAACE,OAAO,CAAC;IAChD,MAAMsB,OAAO,GAAGH,MAAM,CAACI,KAAK,CAACC,KAAK,CAAC,CAAC;IACpC,MAAMC,IAAI,GAAGhC,QAAQ,CAAC2B,MAAM,CAACM,SAAS,CAACP,MAAM,CAACI,KAAK,CAAC;IACpD,OAAO;MACLD,OAAO;MACPK,MAAM,EAAER,MAAM,CAACQ,MAAM;MACrBF,IAAI,EAAE7B,MAAM,CAACgC,IAAI,CAACH,IAAI;IACxB,CAAC;EACH,CAAC,CAAC;EACF,MAAMZ,OAAO,GAAGf,CAAC,CAACe,OAAO,IAAIxB,UAAU,CAACwC,OAAO;EAC/C,MAAMC,CAAC,GAAG;IAAEC,IAAI,EAAE,QAAQ;IAAElB;EAAQ,CAAC;EACrCrB,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,SAAS,EAAE,MAAM;IAC5B,IAAI,CAACA,CAAC,CAAC7B,IAAI,EAAE;IACb,MAAMsB,KAAK,GAAG9B,QAAQ,CAAC2B,MAAM,CAACa,OAAO,CAACH,CAAC,CAAC7B,IAAI,CAAC;IAC7CsB,KAAK,CAACW,OAAO,CAAC,IAAI,CAAC;IACnB,OAAOzC,QAAQ,CAAC2B,MAAM,CAACe,MAAM,CAACtB,OAAO,CAACO,MAAM,EAAEG,KAAK,CAAC;EACtD,CAAC,CAAC;EACF/B,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,MAAM,EAAE,MAAM;IACzB,IAAIhC,CAAC,CAACI,MAAM,EAAE,OAAOJ,CAAC,CAACI,MAAM,CAACkC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1C,IAAItC,CAAC,CAACE,OAAO,EAAE,OAAOkB,QAAQ,CAAC,CAAC,CAACO,IAAI;IACrC,IAAI3B,CAAC,CAACK,MAAM,IAAI2B,CAAC,CAAC3B,MAAM,EAAE,OAAOhB,OAAO,CAACkD,OAAO,CAACvC,CAAC,CAACK,MAAM,IAAI2B,CAAC,CAAC3B,MAAM,CAAC;EACxE,CAAC,CAAC;EACFX,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,QAAQ,EAAE,MAAM;IAC3B,IAAI,CAACA,CAAC,CAAC7B,IAAI,EAAE;IACb,OAAOX,OAAO,CAACgD,OAAO,CAAC,CAAC5C,GAAG,CAAC6C,IAAI,EAAET,CAAC,CAAC7B,IAAI,CAAC,CAAC;EAC5C,CAAC,CAAC;EACFT,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,QAAQ,EAAE,MAAM;IAC3B,IAAIhC,CAAC,CAACK,MAAM,EAAE,OAAOL,CAAC,CAACK,MAAM;IAC7B,IAAI,CAACL,CAAC,CAACM,OAAO,EAAE;IAChB,OAAON,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC;EACFZ,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,WAAW,EAAE,MAAM;IAC9B,IAAI,CAAChC,CAAC,CAACM,OAAO,EAAE;IAChB,OAAON,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC;EACFZ,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,OAAO,EAAE,MAAM;IAC1B,IAAI,CAACA,CAAC,CAAC1B,OAAO,EAAE;IAChB,OAAOT,YAAY;EACrB,CAAC,CAAC;EACFH,IAAI,CAACwC,IAAI,CAACF,CAAC,EAAE,SAAS,EAAE,MAAM;IAC5B,IAAI,CAAChC,CAAC,CAACK,MAAM,EAAE;IACf,IAAI,CAACL,CAAC,CAACiB,SAAS,EAAE;IAClB,OAAO,CAACjB,CAAC,CAACiB,SAAS,EAAEjB,CAAC,CAACK,MAAM,CAAC;EAChC,CAAC,CAAC;EACF;EACA,IAAIJ,IAAI,CAACQ,QAAQ,EAAE;IACjB,IAAIN,IAAI,GAAGL,MAAM,CAACgC,IAAI,CAAC,EAAE,CAAC;IAC1B,IAAI9B,CAAC,CAACE,OAAO,EAAE;MACb,IAAIa,OAAO,IAAIA,OAAO,CAACO,MAAM,KAAKF,QAAQ,CAAC,CAAC,CAACS,MAAM,EACjD,MAAM,IAAItB,SAAS,CAAC,oCAAoC,CAAC;MAC3D,IAAIa,QAAQ,CAAC,CAAC,CAACI,OAAO,KAAK,IAAI,EAC7B,MAAM,IAAIjB,SAAS,CAAC,yBAAyB,CAAC;MAChD,IAAIa,QAAQ,CAAC,CAAC,CAACO,IAAI,CAACe,MAAM,KAAK,EAAE,EAC/B,MAAM,IAAInC,SAAS,CAAC,sBAAsB,CAAC;MAC7CJ,IAAI,GAAGiB,QAAQ,CAAC,CAAC,CAACO,IAAI;IACxB;IACA,IAAI3B,CAAC,CAACG,IAAI,EAAE;MACV,IAAIA,IAAI,CAACuC,MAAM,GAAG,CAAC,IAAI,CAACvC,IAAI,CAACwC,MAAM,CAAC3C,CAAC,CAACG,IAAI,CAAC,EACzC,MAAM,IAAII,SAAS,CAAC,eAAe,CAAC,CAAC,KAClCJ,IAAI,GAAGH,CAAC,CAACG,IAAI;IACpB;IACA,IAAIH,CAAC,CAACI,MAAM,EAAE;MACZ,IACEJ,CAAC,CAACI,MAAM,CAACsC,MAAM,KAAK,EAAE,IACtB1C,CAAC,CAACI,MAAM,CAAC,CAAC,CAAC,KAAKR,GAAG,CAAC6C,IAAI,IACxBzC,CAAC,CAACI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAEpB,MAAM,IAAIG,SAAS,CAAC,mBAAmB,CAAC;MAC1C,IAAIJ,IAAI,CAACuC,MAAM,GAAG,CAAC,IAAI,CAACvC,IAAI,CAACwC,MAAM,CAAC3C,CAAC,CAACI,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpD,MAAM,IAAI/B,SAAS,CAAC,eAAe,CAAC,CAAC,KAClCJ,IAAI,GAAGH,CAAC,CAACI,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAC;IAC/B;IACA,IAAItC,CAAC,CAACK,MAAM,EAAE;MACZ,MAAMuC,GAAG,GAAGvD,OAAO,CAACkD,OAAO,CAACvC,CAAC,CAACK,MAAM,CAAC;MACrC,IAAIF,IAAI,CAACuC,MAAM,GAAG,CAAC,IAAI,CAACvC,IAAI,CAACwC,MAAM,CAACC,GAAG,CAAC,EACtC,MAAM,IAAIrC,SAAS,CAAC,eAAe,CAAC,CAAC,KAClCJ,IAAI,GAAGyC,GAAG;MACf,IAAI,CAAC,CAAC,CAAC,EAAEnD,OAAO,CAACuB,OAAO,EAAEhB,CAAC,CAACK,MAAM,CAAC,IAAIL,CAAC,CAACK,MAAM,CAACqC,MAAM,KAAK,EAAE,EAC3D,MAAM,IAAInC,SAAS,CAAC,2BAA2B,CAAC;IACpD;IACA,IAAIP,CAAC,CAACM,OAAO,EAAE;MACb,IAAIN,CAAC,CAACM,OAAO,CAACoC,MAAM,KAAK,CAAC,EAAE,MAAM,IAAInC,SAAS,CAAC,oBAAoB,CAAC;MACrE,IAAI,CAACf,OAAO,CAAC0B,0BAA0B,CAAClB,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EACnD,MAAM,IAAIC,SAAS,CAAC,+BAA+B,CAAC;MACtD,IAAI,CAAC,CAAC,CAAC,EAAEd,OAAO,CAACuB,OAAO,EAAEhB,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,IAAIN,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAACoC,MAAM,KAAK,EAAE,EACnE,MAAM,IAAInC,SAAS,CAAC,4BAA4B,CAAC;MACnD,IAAIP,CAAC,CAACiB,SAAS,IAAI,CAACjB,CAAC,CAACiB,SAAS,CAAC0B,MAAM,CAAC3C,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAClD,MAAM,IAAIC,SAAS,CAAC,oBAAoB,CAAC;MAC3C,IAAIP,CAAC,CAACK,MAAM,IAAI,CAACL,CAAC,CAACK,MAAM,CAACsC,MAAM,CAAC3C,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAC5C,MAAM,IAAIC,SAAS,CAAC,iBAAiB,CAAC;MACxC,MAAMqC,GAAG,GAAGvD,OAAO,CAACkD,OAAO,CAACvC,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;MACzC,IAAIH,IAAI,CAACuC,MAAM,GAAG,CAAC,IAAI,CAACvC,IAAI,CAACwC,MAAM,CAACC,GAAG,CAAC,EACtC,MAAM,IAAIrC,SAAS,CAAC,eAAe,CAAC;IACxC;EACF;EACA,OAAOvB,MAAM,CAACwB,MAAM,CAACwB,CAAC,EAAEhC,CAAC,CAAC;AAC5B;AACAd,OAAO,CAACE,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}