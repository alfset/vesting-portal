{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathPaymentStrictReceive = pathPaymentStrictReceive;\nvar _xdr = require('../xdr');\nvar _xdr2 = _interopRequireDefault(_xdr);\nvar _decode_encode_muxed_account = require('../util/decode_encode_muxed_account');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Creates a PathPaymentStrictReceive operation.\n *\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\n * destination account. It credits the destination with `destAmount` of\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\n * The transfer optionally occurs through a path. XLM payments create the\n * destination account if it does not exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictReceive\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destAmount   - amount the destination receives\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\n */\nfunction pathPaymentStrictReceive(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendMax):\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destAmount):\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\n    default:\n      break;\n  }\n  var attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\n  try {\n    attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\n  var path = opts.path ? opts.path : [];\n  attributes.path = path.map(function (x) {\n    return x.toXDRObject();\n  });\n  var payment = new _xdr2.default.PathPaymentStrictReceiveOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _xdr2.default.OperationBody.pathPaymentStrictReceive(payment);\n  this.setSourceAccount(opAttributes, opts);\n  return new _xdr2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","pathPaymentStrictReceive","_xdr","require","_xdr2","_interopRequireDefault","_decode_encode_muxed_account","obj","__esModule","default","opts","sendAsset","Error","isValidAmount","sendMax","TypeError","constructAmountRequirementsError","destAsset","destAmount","attributes","toXDRObject","_toXDRAmount","destination","decodeAddressToMuxedAccount","e","path","map","x","payment","PathPaymentStrictReceiveOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/stellar-base/lib/operations/path_payment_strict_receive.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathPaymentStrictReceive = pathPaymentStrictReceive;\n\nvar _xdr = require('../xdr');\n\nvar _xdr2 = _interopRequireDefault(_xdr);\n\nvar _decode_encode_muxed_account = require('../util/decode_encode_muxed_account');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a PathPaymentStrictReceive operation.\n *\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\n * destination account. It credits the destination with `destAmount` of\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\n * The transfer optionally occurs through a path. XLM payments create the\n * destination account if it does not exist.\n *\n * @function\n * @alias Operation.pathPaymentStrictReceive\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\n *\n * @param {object}  opts - Options object\n * @param {Asset}   opts.sendAsset    - asset to pay with\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\n * @param {string}  opts.destination  - destination account to send to\n * @param {Asset}   opts.destAsset    - asset the destination will receive\n * @param {string}  opts.destAmount   - amount the destination receives\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\n *\n * @param {string}  [opts.source]     - The source account for the payment.\n *     Defaults to the transaction's source account.\n *\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\n */\nfunction pathPaymentStrictReceive(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendMax):\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destAmount):\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\n    default:\n      break;\n  }\n\n  var attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\n  try {\n    attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\n\n  var path = opts.path ? opts.path : [];\n  attributes.path = path.map(function (x) {\n    return x.toXDRObject();\n  });\n\n  var payment = new _xdr2.default.PathPaymentStrictReceiveOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _xdr2.default.OperationBody.pathPaymentStrictReceive(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _xdr2.default.Operation(opAttributes);\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB;AAE3D,IAAIC,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE5B,IAAIC,KAAK,GAAGC,sBAAsB,CAACH,IAAI,CAAC;AAExC,IAAII,4BAA4B,GAAGH,OAAO,CAAC,qCAAqC,CAAC;AAEjF,SAASE,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASN,wBAAwBA,CAACS,IAAI,EAAE;EACtC,QAAQ,IAAI;IACV,KAAK,CAACA,IAAI,CAACC,SAAS;MAClB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C,KAAK,CAAC,IAAI,CAACC,aAAa,CAACH,IAAI,CAACI,OAAO,CAAC;MACpC,MAAM,IAAIC,SAAS,CAAC,IAAI,CAACC,gCAAgC,CAAC,SAAS,CAAC,CAAC;IACvE,KAAK,CAACN,IAAI,CAACO,SAAS;MAClB,MAAM,IAAIL,KAAK,CAAC,kDAAkD,CAAC;IACrE,KAAK,CAAC,IAAI,CAACC,aAAa,CAACH,IAAI,CAACQ,UAAU,CAAC;MACvC,MAAM,IAAIH,SAAS,CAAC,IAAI,CAACC,gCAAgC,CAAC,YAAY,CAAC,CAAC;IAC1E;MACE;EACJ;EAEA,IAAIG,UAAU,GAAG,CAAC,CAAC;EACnBA,UAAU,CAACR,SAAS,GAAGD,IAAI,CAACC,SAAS,CAACS,WAAW,CAAC,CAAC;EACnDD,UAAU,CAACL,OAAO,GAAG,IAAI,CAACO,YAAY,CAACX,IAAI,CAACI,OAAO,CAAC;EACpD,IAAI;IACFK,UAAU,CAACG,WAAW,GAAG,CAAC,CAAC,EAAEhB,4BAA4B,CAACiB,2BAA2B,EAAEb,IAAI,CAACY,WAAW,CAAC;EAC1G,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,MAAM,IAAIZ,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEAO,UAAU,CAACF,SAAS,GAAGP,IAAI,CAACO,SAAS,CAACG,WAAW,CAAC,CAAC;EACnDD,UAAU,CAACD,UAAU,GAAG,IAAI,CAACG,YAAY,CAACX,IAAI,CAACQ,UAAU,CAAC;EAE1D,IAAIO,IAAI,GAAGf,IAAI,CAACe,IAAI,GAAGf,IAAI,CAACe,IAAI,GAAG,EAAE;EACrCN,UAAU,CAACM,IAAI,GAAGA,IAAI,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;IACtC,OAAOA,CAAC,CAACP,WAAW,CAAC,CAAC;EACxB,CAAC,CAAC;EAEF,IAAIQ,OAAO,GAAG,IAAIxB,KAAK,CAACK,OAAO,CAACoB,0BAA0B,CAACV,UAAU,CAAC;EAEtE,IAAIW,YAAY,GAAG,CAAC,CAAC;EACrBA,YAAY,CAACC,IAAI,GAAG3B,KAAK,CAACK,OAAO,CAACuB,aAAa,CAAC/B,wBAAwB,CAAC2B,OAAO,CAAC;EACjF,IAAI,CAACK,gBAAgB,CAACH,YAAY,EAAEpB,IAAI,CAAC;EAEzC,OAAO,IAAIN,KAAK,CAACK,OAAO,CAACyB,SAAS,CAACJ,YAAY,CAAC;AAClD"},"metadata":{},"sourceType":"script","externalDependencies":[]}