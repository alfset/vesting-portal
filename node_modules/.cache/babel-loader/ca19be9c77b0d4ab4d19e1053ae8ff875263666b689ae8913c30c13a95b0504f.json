{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { poolList, updatePoollistTime } from './actions';\nconst initialState = {\n  // poolLiquidity: {},\n  poolList: {},\n  updatePoollistTime: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(updatePoollistTime, (state, _ref) => {\n  let {\n    payload: {}\n  } = _ref;\n  state.updatePoollistTime = Date.now();\n})\n// .addCase(poolLiquidity, (state, { payload: {poolLiquidity} }) => {\n//   state.poolLiquidity = poolLiquidity\n// })\n.addCase(poolList, (state, _ref2) => {\n  let {\n    payload: {\n      chainId,\n      tokenList,\n      version\n    }\n  } = _ref2;\n  // console.log(state)\n  state.poolList = {\n    [chainId]: {\n      tokenList,\n      timestamp: Date.now(),\n      version\n    }\n  };\n  // if (state.poolList) {\n  //   state.poolList[chainId] = {tokenList, timestamp: Date.now(), version}\n  // } else {\n  //   state.poolList = {\n  //     [chainId]: {tokenList, timestamp: Date.now(), version}\n  //   }\n  // }\n}));","map":{"version":3,"names":["createReducer","poolList","updatePoollistTime","initialState","builder","addCase","state","_ref","payload","Date","now","_ref2","chainId","tokenList","version","timestamp"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/state/pools/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { poolList, updatePoollistTime } from './actions'\n\nexport interface BurnState {\n  // readonly poolLiquidity: any\n  readonly poolList: any\n  readonly updatePoollistTime: any\n}\n\nconst initialState: BurnState = {\n  // poolLiquidity: {},\n  poolList: {},\n  updatePoollistTime: {},\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(updatePoollistTime, (state, { payload: {  } }) => {\n      state.updatePoollistTime = Date.now()\n    })\n    // .addCase(poolLiquidity, (state, { payload: {poolLiquidity} }) => {\n    //   state.poolLiquidity = poolLiquidity\n    // })\n    .addCase(poolList, (state, { payload: { chainId, tokenList, version } }) => {\n      // console.log(state)\n      state.poolList= {\n        [chainId]: {tokenList, timestamp: Date.now(), version}\n      }\n      // if (state.poolList) {\n      //   state.poolList[chainId] = {tokenList, timestamp: Date.now(), version}\n      // } else {\n      //   state.poolList = {\n      //     [chainId]: {tokenList, timestamp: Date.now(), version}\n      //   }\n      // }\n    })\n)\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,EAAEC,kBAAkB,QAAQ,WAAW;AAQxD,MAAMC,YAAuB,GAAG;EAC9B;EACAF,QAAQ,EAAE,CAAC,CAAC;EACZC,kBAAkB,EAAE,CAAC;AACvB,CAAC;AAED,eAAeF,aAAa,CAAYG,YAAY,EAAEC,OAAO,IAC3DA,OAAO,CACJC,OAAO,CAACH,kBAAkB,EAAE,CAACI,KAAK,EAAAC,IAAA,KAAwB;EAAA,IAAtB;IAAEC,OAAO,EAAE,CAAG;EAAE,CAAC,GAAAD,IAAA;EACpDD,KAAK,CAACJ,kBAAkB,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC;AACvC,CAAC;AACD;AACA;AACA;AAAA,CACCL,OAAO,CAACJ,QAAQ,EAAE,CAACK,KAAK,EAAAK,KAAA,KAAmD;EAAA,IAAjD;IAAEH,OAAO,EAAE;MAAEI,OAAO;MAAEC,SAAS;MAAEC;IAAQ;EAAE,CAAC,GAAAH,KAAA;EACrE;EACAL,KAAK,CAACL,QAAQ,GAAE;IACd,CAACW,OAAO,GAAG;MAACC,SAAS;MAAEE,SAAS,EAAEN,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEI;IAAO;EACvD,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}