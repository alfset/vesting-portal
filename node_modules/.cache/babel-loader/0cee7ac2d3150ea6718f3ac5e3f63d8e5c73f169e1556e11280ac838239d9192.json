{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgChannelOpenConfirm = void 0;\nvar json_1 = require(\"../../../../util/json\");\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\nvar Height_1 = require(\"../../core/client/Height\");\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/tx\");\n/**\n *  MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A.\n */\nvar MsgChannelOpenConfirm = /** @class */function (_super) {\n  __extends(MsgChannelOpenConfirm, _super);\n  /**\n   * @param port_id identifier of the port to use\n   * @param channel_id\n   * @param proof_ack\n   * @param proof_height\n   * @param signer signer address\n   */\n  function MsgChannelOpenConfirm(port_id, channel_id, proof_ack, proof_height, signer) {\n    var _this = _super.call(this) || this;\n    _this.port_id = port_id;\n    _this.channel_id = channel_id;\n    _this.proof_ack = proof_ack;\n    _this.proof_height = proof_height;\n    _this.signer = signer;\n    return _this;\n  }\n  MsgChannelOpenConfirm.fromAmino = function (_, isClassic) {\n    _;\n    isClassic;\n    throw new Error('Amino not supported');\n  };\n  MsgChannelOpenConfirm.prototype.toAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n  MsgChannelOpenConfirm.fromData = function (data, _) {\n    _;\n    var port_id = data.port_id,\n      channel_id = data.channel_id,\n      proof_ack = data.proof_ack,\n      proof_height = data.proof_height,\n      signer = data.signer;\n    return new MsgChannelOpenConfirm(port_id, channel_id, proof_ack, proof_height ? Height_1.Height.fromData(proof_height) : undefined, signer);\n  };\n  MsgChannelOpenConfirm.prototype.toData = function (_) {\n    _;\n    var _a = this,\n      port_id = _a.port_id,\n      channel_id = _a.channel_id,\n      proof_ack = _a.proof_ack,\n      proof_height = _a.proof_height,\n      signer = _a.signer;\n    return {\n      '@type': '/ibc.core.channel.v1.MsgChannelOpenConfirm',\n      port_id: port_id,\n      channel_id: channel_id,\n      proof_ack: proof_ack,\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      signer: signer\n    };\n  };\n  MsgChannelOpenConfirm.fromProto = function (proto, _) {\n    _;\n    return new MsgChannelOpenConfirm(proto.portId, proto.channelId, Buffer.from(proto.proofAck).toString('base64'), proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, proto.signer);\n  };\n  MsgChannelOpenConfirm.prototype.toProto = function (_) {\n    _;\n    var _a = this,\n      port_id = _a.port_id,\n      channel_id = _a.channel_id,\n      proof_ack = _a.proof_ack,\n      proof_height = _a.proof_height,\n      signer = _a.signer;\n    return tx_1.MsgChannelOpenConfirm.fromPartial({\n      portId: port_id,\n      channelId: channel_id,\n      proofAck: Buffer.from(proof_ack, 'base64'),\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n  MsgChannelOpenConfirm.prototype.packAny = function (_) {\n    _;\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.channel.v1.MsgChannelOpenConfirm',\n      value: tx_1.MsgChannelOpenConfirm.encode(this.toProto()).finish()\n    });\n  };\n  MsgChannelOpenConfirm.unpackAny = function (msgAny, _) {\n    _;\n    return MsgChannelOpenConfirm.fromProto(tx_1.MsgChannelOpenConfirm.decode(msgAny.value));\n  };\n  return MsgChannelOpenConfirm;\n}(json_1.JSONSerializable);\nexports.MsgChannelOpenConfirm = MsgChannelOpenConfirm;","map":{"version":3,"names":["json_1","require","any_1","Height_1","tx_1","MsgChannelOpenConfirm","_super","__extends","port_id","channel_id","proof_ack","proof_height","signer","_this","call","fromAmino","_","isClassic","Error","prototype","toAmino","fromData","data","Height","undefined","toData","_a","fromProto","proto","portId","channelId","Buffer","from","proofAck","toString","proofHeight","toProto","fromPartial","packAny","Any","typeUrl","value","encode","finish","unpackAny","msgAny","decode","JSONSerializable","exports"],"sources":["../../../../../src/core/ibc/msgs/channel/MsgChannelOpenConfirm.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}