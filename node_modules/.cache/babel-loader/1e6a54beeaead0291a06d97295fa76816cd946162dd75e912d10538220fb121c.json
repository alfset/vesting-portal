{"ast":null,"code":"import { AccAddress } from '@terra-money/terra.js';\nconst STORAGE_KEY = '__terra-readonly-wallet-storage-key__';\nexport function getStoredSession() {\n  const storedSessionString = localStorage.getItem(STORAGE_KEY);\n  if (!storedSessionString) return undefined;\n  try {\n    const storedSession = JSON.parse(storedSessionString);\n    if ('terraAddress' in storedSession && 'network' in storedSession && typeof storedSession['terraAddress'] === 'string' && AccAddress.validate(storedSession.terraAddress)) {\n      return storedSession;\n    } else {\n      localStorage.removeItem(STORAGE_KEY);\n      return undefined;\n    }\n  } catch (_a) {\n    localStorage.removeItem(STORAGE_KEY);\n    return undefined;\n  }\n}\nexport function storeSession(session) {\n  if (!AccAddress.validate(session.terraAddress)) {\n    throw new Error(\"\".concat(session.terraAddress, \" is not a terraAddress\"));\n  }\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(session));\n}\nexport function clearStoredSession() {\n  localStorage.removeItem(STORAGE_KEY);\n}","map":{"version":3,"names":["AccAddress","STORAGE_KEY","getStoredSession","storedSessionString","localStorage","getItem","undefined","storedSession","JSON","parse","validate","terraAddress","removeItem","_a","storeSession","session","Error","concat","setItem","stringify","clearStoredSession"],"sources":["../../../src/@terra-dev/readonly-wallet/storage.ts"],"sourcesContent":["import { AccAddress } from '@terra-money/terra.js';\nimport { ReadonlyWalletSession } from './types';\n\nconst STORAGE_KEY = '__terra-readonly-wallet-storage-key__';\n\nexport function getStoredSession(): ReadonlyWalletSession | undefined {\n  const storedSessionString = localStorage.getItem(STORAGE_KEY);\n\n  if (!storedSessionString) return undefined;\n\n  try {\n    const storedSession = JSON.parse(storedSessionString);\n\n    if (\n      'terraAddress' in storedSession &&\n      'network' in storedSession &&\n      typeof storedSession['terraAddress'] === 'string' &&\n      AccAddress.validate(storedSession.terraAddress)\n    ) {\n      return storedSession;\n    } else {\n      localStorage.removeItem(STORAGE_KEY);\n      return undefined;\n    }\n  } catch {\n    localStorage.removeItem(STORAGE_KEY);\n    return undefined;\n  }\n}\n\nexport function storeSession(session: ReadonlyWalletSession) {\n  if (!AccAddress.validate(session.terraAddress)) {\n    throw new Error(`${session.terraAddress} is not a terraAddress`);\n  }\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(session));\n}\n\nexport function clearStoredSession() {\n  localStorage.removeItem(STORAGE_KEY);\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAGlD,MAAMC,WAAW,GAAG,uCAAuC;AAE3D,OAAM,SAAUC,gBAAgBA,CAAA;EAC9B,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC;EAE7D,IAAI,CAACE,mBAAmB,EAAE,OAAOG,SAAS;EAE1C,IAAI;IACF,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACN,mBAAmB,CAAC;IAErD,IACE,cAAc,IAAII,aAAa,IAC/B,SAAS,IAAIA,aAAa,IAC1B,OAAOA,aAAa,CAAC,cAAc,CAAC,KAAK,QAAQ,IACjDP,UAAU,CAACU,QAAQ,CAACH,aAAa,CAACI,YAAY,CAAC,EAC/C;MACA,OAAOJ,aAAa;KACrB,MAAM;MACLH,YAAY,CAACQ,UAAU,CAACX,WAAW,CAAC;MACpC,OAAOK,SAAS;;GAEnB,CAAC,OAAAO,EAAA,EAAM;IACNT,YAAY,CAACQ,UAAU,CAACX,WAAW,CAAC;IACpC,OAAOK,SAAS;;AAEpB;AAEA,OAAM,SAAUQ,YAAYA,CAACC,OAA8B;EACzD,IAAI,CAACf,UAAU,CAACU,QAAQ,CAACK,OAAO,CAACJ,YAAY,CAAC,EAAE;IAC9C,MAAM,IAAIK,KAAK,IAAAC,MAAA,CAAIF,OAAO,CAACJ,YAAY,2BAAwB,CAAC;;EAElEP,YAAY,CAACc,OAAO,CAACjB,WAAW,EAAEO,IAAI,CAACW,SAAS,CAACJ,OAAO,CAAC,CAAC;AAC5D;AAEA,OAAM,SAAUK,kBAAkBA,CAAA;EAChChB,YAAY,CAACQ,UAAU,CAACX,WAAW,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}