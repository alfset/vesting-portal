{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst typeFields_1 = require('../../typeFields');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE || keyVal.key.length !== 1) {\n    throw new Error('Decode Error: could not decode tapTree with key 0x' + keyVal.key.toString('hex'));\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen)\n    });\n    _offset += scriptLen;\n  }\n  return {\n    leaves: data\n  };\n}\nexports.decode = decode;\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(...tree.leaves.map(tapLeaf => [Buffer.of(tapLeaf.depth, tapLeaf.leafVersion), varuint.encode(tapLeaf.script.length), tapLeaf.script]));\n  return {\n    key,\n    value: Buffer.concat(bufs)\n  };\n}\nexports.encode = encode;\nexports.expected = '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\nfunction check(data) {\n  return Array.isArray(data.leaves) && data.leaves.every(tapLeaf => tapLeaf.depth >= 0 && tapLeaf.depth <= 128 && (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion && Buffer.isBuffer(tapLeaf.script));\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\nexports.canAdd = canAdd;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","varuint","decode","keyVal","key","OutputTypes","TAP_TREE","length","Error","toString","_offset","data","depth","leafVersion","scriptLen","encodingLength","push","script","slice","leaves","encode","tree","Buffer","from","bufs","concat","map","tapLeaf","of","expected","check","Array","isArray","every","isBuffer","canAdd","currentData","newData","tapTree","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/output/tapTree.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapTree with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen),\n    });\n    _offset += scriptLen;\n  }\n  return { leaves: data };\n}\nexports.decode = decode;\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(\n    ...tree.leaves.map(tapLeaf => [\n      Buffer.of(tapLeaf.depth, tapLeaf.leafVersion),\n      varuint.encode(tapLeaf.script.length),\n      tapLeaf.script,\n    ]),\n  );\n  return {\n    key,\n    value: Buffer.concat(bufs),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\nfunction check(data) {\n  return (\n    Array.isArray(data.leaves) &&\n    data.leaves.every(\n      tapLeaf =>\n        tapLeaf.depth >= 0 &&\n        tapLeaf.depth <= 128 &&\n        (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion &&\n        Buffer.isBuffer(tapLeaf.script),\n    )\n  );\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\nexports.canAdd = canAdd;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}