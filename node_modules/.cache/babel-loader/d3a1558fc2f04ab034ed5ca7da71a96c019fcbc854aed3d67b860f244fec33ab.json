{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { approveList } from './actions';\nexport function useNonevmAddress(chainId) {\n  var _account$chainId$acco, _account$chainId;\n  const account = useSelector(state => state.nonevm.nonevmAddress);\n  // console.log(account)\n  // console.log(chainId)\n  return {\n    nonevmAccount: (_account$chainId$acco = account === null || account === void 0 ? void 0 : (_account$chainId = account[chainId]) === null || _account$chainId === void 0 ? void 0 : _account$chainId.account) !== null && _account$chainId$acco !== void 0 ? _account$chainId$acco : undefined\n  };\n}\nexport function useApproveState() {\n  // const allowanceList:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.approveList)\n  const dispatch = useDispatch();\n  const setApprovalState = useCallback(_ref => {\n    let {\n      chainId,\n      account,\n      token,\n      spender,\n      allowance\n    } = _ref;\n    if (chainId && account && token && spender) {\n      dispatch(approveList({\n        chainId,\n        account,\n        token,\n        spender,\n        allowance\n      }));\n    }\n  }, []);\n  return {\n    setApprovalState\n  };\n}","map":{"version":3,"names":["useCallback","useDispatch","useSelector","approveList","useNonevmAddress","chainId","_account$chainId$acco","_account$chainId","account","state","nonevm","nonevmAddress","nonevmAccount","undefined","useApproveState","dispatch","setApprovalState","_ref","token","spender","allowance"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/hooks/index.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux'\nimport {\n  AppState,\n  AppDispatch\n} from '../../state'\nimport {approveList} from './actions'\n\nexport function useNonevmAddress (chainId:any) {\n  const account:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.nonevmAddress)\n  // console.log(account)\n  // console.log(chainId)\n  return {\n    nonevmAccount: account?.[chainId]?.account ?? undefined\n  }\n}\n\nexport function useApproveState () {\n  // const allowanceList:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.approveList)\n  const dispatch = useDispatch<AppDispatch>()\n  const setApprovalState = useCallback(({chainId, account, token, spender, allowance}) => {\n    if (chainId && account && token && spender) {\n      dispatch(approveList({\n        chainId, account, token, spender, allowance\n      }))\n    }\n  }, [])\n\n  return {\n    setApprovalState\n  }\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SACEC,WAAW,EACXC,WAAW,QACN,aAAa;AAKpB,SAAQC,WAAW,QAAO,WAAW;AAErC,OAAO,SAASC,gBAAgBA,CAAEC,OAAW,EAAE;EAAA,IAAAC,qBAAA,EAAAC,gBAAA;EAC7C,MAAMC,OAAW,GAAGN,WAAW,CAA+BO,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,aAAa,CAAC;EAClG;EACA;EACA,OAAO;IACLC,aAAa,GAAAN,qBAAA,GAAEE,OAAO,aAAPA,OAAO,wBAAAD,gBAAA,GAAPC,OAAO,CAAGH,OAAO,CAAC,cAAAE,gBAAA,uBAAlBA,gBAAA,CAAoBC,OAAO,cAAAF,qBAAA,cAAAA,qBAAA,GAAIO;EAChD,CAAC;AACH;AAEA,OAAO,SAASC,eAAeA,CAAA,EAAI;EACjC;EACA,MAAMC,QAAQ,GAAGd,WAAW,CAAc,CAAC;EAC3C,MAAMe,gBAAgB,GAAGhB,WAAW,CAACiB,IAAA,IAAmD;IAAA,IAAlD;MAACZ,OAAO;MAAEG,OAAO;MAAEU,KAAK;MAAEC,OAAO;MAAEC;IAAS,CAAC,GAAAH,IAAA;IACjF,IAAIZ,OAAO,IAAIG,OAAO,IAAIU,KAAK,IAAIC,OAAO,EAAE;MAC1CJ,QAAQ,CAACZ,WAAW,CAAC;QACnBE,OAAO;QAAEG,OAAO;QAAEU,KAAK;QAAEC,OAAO;QAAEC;MACpC,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLJ;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}