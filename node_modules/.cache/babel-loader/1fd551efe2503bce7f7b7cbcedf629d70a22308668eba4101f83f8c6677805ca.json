{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GrpcWebImpl = exports.MsgUnjailDesc = exports.MsgDesc = exports.MsgClientImpl = exports.MsgUnjailResponse = exports.MsgUnjail = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst grpc_web_1 = require(\"@improbable-eng/grpc-web\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst browser_headers_1 = require(\"browser-headers\");\nexports.protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = {\n  validatorAddr: \"\"\n};\nexports.MsgUnjail = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.validatorAddr !== \"\") {\n      writer.uint32(10).string(message.validatorAddr);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgUnjail);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddr = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgUnjail);\n    if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n      message.validatorAddr = String(object.validatorAddr);\n    } else {\n      message.validatorAddr = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgUnjail);\n    if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n      message.validatorAddr = object.validatorAddr;\n    } else {\n      message.validatorAddr = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgUnjailResponse = {};\nexports.MsgUnjailResponse = {\n  encode(_) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgUnjailResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const message = Object.assign({}, baseMsgUnjailResponse);\n    return message;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = Object.assign({}, baseMsgUnjailResponse);\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Unjail = this.Unjail.bind(this);\n  }\n  Unjail(request, metadata) {\n    return this.rpc.unary(exports.MsgUnjailDesc, exports.MsgUnjail.fromPartial(request), metadata);\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nexports.MsgDesc = {\n  serviceName: \"cosmos.slashing.v1beta1.Msg\"\n};\nexports.MsgUnjailDesc = {\n  methodName: \"Unjail\",\n  service: exports.MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return exports.MsgUnjail.encode(this).finish();\n    }\n  },\n  responseType: {\n    deserializeBinary(data) {\n      return Object.assign(Object.assign({}, exports.MsgUnjailResponse.decode(data)), {\n        toObject() {\n          return this;\n        }\n      });\n    }\n  }\n};\nclass GrpcWebImpl {\n  constructor(host, options) {\n    this.host = host;\n    this.options = options;\n  }\n  unary(methodDesc, _request, metadata) {\n    var _a;\n    const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n    const maybeCombinedMetadata = metadata && this.options.metadata ? new browser_headers_1.BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap)) : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc_web_1.grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc_web_1.grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage);\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        }\n      });\n    });\n  }\n}\nexports.GrpcWebImpl = GrpcWebImpl;\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","grpc_web_1","minimal_1","browser_headers_1","exports","protobufPackage","baseMsgUnjail","validatorAddr","MsgUnjail","encode","message","writer","arguments","length","undefined","default","Writer","create","uint32","string","decode","input","reader","Reader","end","len","pos","Object","assign","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgUnjailResponse","MsgUnjailResponse","_","MsgClientImpl","constructor","rpc","Unjail","bind","request","metadata","unary","MsgUnjailDesc","MsgDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","data","toObject","GrpcWebImpl","host","options","methodDesc","_request","maybeCombinedMetadata","BrowserHeaders","_a","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","util","Long","configure"],"sources":["../../../../src/cosmos/slashing/v1beta1/tx.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}