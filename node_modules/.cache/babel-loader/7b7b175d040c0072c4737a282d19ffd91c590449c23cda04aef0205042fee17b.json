{"ast":null,"code":"import{USE_VERSION}from'../../config/constant';// In the following line, you should include the prefixes of implementations you want to test.\n// const window = window\nconst w={};w.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;// DON'T use \"var indexedDB = ...\" if you're not in a function.\n// Moreover, you may need references to some window.IDB* objects:\nw.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction||{READ_WRITE:\"readwrite\"};// This line should only be needed if it is needed to support the object's constants for older browsers\nw.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange;// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)\n// const isSupportIndexedDB = false\nlet isSupportIndexedDB=true;if(!w.indexedDB){isSupportIndexedDB=false;}const TOKENLIST='token-list';const version='0.1.6';function initVersion(version,configVersion){const VERSION=version+'_DB_VERSION';// const VERSION = version + '_VERSION'\nconst curVersion=localStorage.getItem(VERSION);// console.log(curVersion)\n// console.log(configVersion)\nif(curVersion&&curVersion!==configVersion){// sessionStorage.clear()\n// localStorage.clear()\nw.indexedDB.deleteDatabase(TOKENLIST);window.localStorage.setItem(VERSION,configVersion);}else if(!curVersion){window.localStorage.setItem(VERSION,configVersion);}}setTimeout(()=>{initVersion(USE_VERSION,version);},0);export{w,isSupportIndexedDB,TOKENLIST};","map":{"version":3,"names":["USE_VERSION","w","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","isSupportIndexedDB","TOKENLIST","version","initVersion","configVersion","VERSION","curVersion","localStorage","getItem","deleteDatabase","setItem","setTimeout"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/indexedDB/config.ts"],"sourcesContent":["import {USE_VERSION} from '../../config/constant'\n// In the following line, you should include the prefixes of implementations you want to test.\n// const window = window\nconst w:any = {}\nw.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n// DON'T use \"var indexedDB = ...\" if you're not in a function.\n// Moreover, you may need references to some window.IDB* objects:\nw.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: \"readwrite\"}; // This line should only be needed if it is needed to support the object's constants for older browsers\nw.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)\n// const isSupportIndexedDB = false\nlet isSupportIndexedDB = true\nif (!w.indexedDB) {\n  isSupportIndexedDB = false\n}\n\nconst TOKENLIST = 'token-list'\n\nconst version = '0.1.6'\n\nfunction initVersion (version:any, configVersion:any) {\n  const VERSION = version + '_DB_VERSION'\n  // const VERSION = version + '_VERSION'\n  const curVersion = localStorage.getItem(VERSION)\n  // console.log(curVersion)\n  // console.log(configVersion)\n  if (curVersion && curVersion !== configVersion) {\n    // sessionStorage.clear()\n    // localStorage.clear()\n    w.indexedDB.deleteDatabase(TOKENLIST)\n    window.localStorage.setItem(VERSION, configVersion)\n  } else if (!curVersion) {\n    window.localStorage.setItem(VERSION, configVersion)\n  }\n}\nsetTimeout(() => {\n  initVersion(USE_VERSION, version)\n},0)\n\nexport {\n  w,\n  isSupportIndexedDB,\n  TOKENLIST,\n}\n"],"mappings":"AAAA,OAAQA,WAAW,KAAO,uBAAuB,CACjD;AACA;AACA,KAAM,CAAAC,CAAK,CAAG,CAAC,CAAC,CAChBA,CAAC,CAACC,SAAS,CAAGC,MAAM,CAACD,SAAS,EAAIC,MAAM,CAACC,YAAY,EAAID,MAAM,CAACE,eAAe,EAAIF,MAAM,CAACG,WAAW,CACrG;AACA;AACAL,CAAC,CAACM,cAAc,CAAGJ,MAAM,CAACI,cAAc,EAAIJ,MAAM,CAACK,oBAAoB,EAAIL,MAAM,CAACM,gBAAgB,EAAI,CAACC,UAAU,CAAE,WAAW,CAAC,CAAE;AACjIT,CAAC,CAACU,WAAW,CAAGR,MAAM,CAACQ,WAAW,EAAIR,MAAM,CAACS,iBAAiB,EAAIT,MAAM,CAACU,aAAa,CACtF;AACA;AACA,GAAI,CAAAC,kBAAkB,CAAG,IAAI,CAC7B,GAAI,CAACb,CAAC,CAACC,SAAS,CAAE,CAChBY,kBAAkB,CAAG,KAAK,CAC5B,CAEA,KAAM,CAAAC,SAAS,CAAG,YAAY,CAE9B,KAAM,CAAAC,OAAO,CAAG,OAAO,CAEvB,QAAS,CAAAC,WAAWA,CAAED,OAAW,CAAEE,aAAiB,CAAE,CACpD,KAAM,CAAAC,OAAO,CAAGH,OAAO,CAAG,aAAa,CACvC;AACA,KAAM,CAAAI,UAAU,CAAGC,YAAY,CAACC,OAAO,CAACH,OAAO,CAAC,CAChD;AACA;AACA,GAAIC,UAAU,EAAIA,UAAU,GAAKF,aAAa,CAAE,CAC9C;AACA;AACAjB,CAAC,CAACC,SAAS,CAACqB,cAAc,CAACR,SAAS,CAAC,CACrCZ,MAAM,CAACkB,YAAY,CAACG,OAAO,CAACL,OAAO,CAAED,aAAa,CAAC,CACrD,CAAC,IAAM,IAAI,CAACE,UAAU,CAAE,CACtBjB,MAAM,CAACkB,YAAY,CAACG,OAAO,CAACL,OAAO,CAAED,aAAa,CAAC,CACrD,CACF,CACAO,UAAU,CAAC,IAAM,CACfR,WAAW,CAACjB,WAAW,CAAEgB,OAAO,CAAC,CACnC,CAAC,CAAC,CAAC,CAAC,CAEJ,OACEf,CAAC,CACDa,kBAAkB,CAClBC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}