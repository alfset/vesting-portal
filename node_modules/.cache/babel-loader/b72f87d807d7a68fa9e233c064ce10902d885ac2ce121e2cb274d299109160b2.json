{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/Planq-Dapps/vesting-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"/workspace/Planq-Dapps/vesting-portal/src/components/TokenLogo/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport config from '../../config';\nimport initPath from \"../../assets/images/question.svg\";\nimport { LazyImage } from '../../components/Lazyload/LazyImage';\nconst Image = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: \", \";\\n  height: \", \";\\n  min-width: \", \";\\n  min-height: \", \";\\n  max-width: 100%;\\n  max-height: 100%;\\n  background-color: white;\\n  border-radius: \", \";\\n\"])), _ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}, _ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}, _ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n}, _ref4 => {\n  let {\n    size\n  } = _ref4;\n  return size;\n}, _ref5 => {\n  let {\n    size\n  } = _ref5;\n  return size;\n});\n\n// const initPath = require('../../assets/images/question.svg')\n\nfunction getSourcePath(symbol) {\n  let path = '';\n  try {\n    path = require('../../assets/images/coin/source/' + symbol + '.svg');\n  } catch (error) {\n    try {\n      path = require('../../assets/images/coin/source/' + symbol + '.png');\n    } catch (error) {\n      try {\n        path = require('../../assets/images/coin/source/' + symbol + '.jpg');\n      } catch (error) {\n        path = initPath;\n      }\n    }\n  }\n  return path;\n}\nfunction getAnyPath(symbol) {\n  let path = '';\n  try {\n    path = require('../../assets/images/coin/any/' + symbol + '.svg');\n  } catch (error) {\n    try {\n      path = require('../../assets/images/coin/any/' + symbol + '.png');\n    } catch (error) {\n      try {\n        path = require('../../assets/images/coin/any/' + symbol + '.jpg');\n      } catch (error) {\n        path = initPath;\n      }\n    }\n  }\n  return path;\n}\nconst imageStyle = size => {\n  return {\n    width: size,\n    height: size,\n    minMidth: size,\n    minHeight: size,\n    borderRadius: size\n  };\n};\nexport default function TokenLogo(_ref6) {\n  let {\n    symbol,\n    size = '1rem',\n    isAny = true,\n    style,\n    logoUrl,\n    isLazy,\n    ...rest\n  } = _ref6;\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let path = '';\n  symbol = config.getBaseCoin(symbol, chainId);\n  symbol = symbol === 'W' + config.getCurChainInfo(chainId).symbol ? symbol.substr(1) : symbol;\n  // symbol = symbol === 'WHT' ? 'HT' : symbol\n  // console.log(symbol)\n  if (logoUrl) {\n    path = logoUrl;\n  } else if (symbol) {\n    if (isAny) {\n      if (symbol.indexOf('a') === 0 && symbol.indexOf('any') === -1) {\n        symbol = symbol.replace('a', 'any');\n        path = getAnyPath(symbol);\n      } else if (symbol.indexOf('any') !== -1) {\n        path = getAnyPath(symbol);\n      } else {\n        path = getSourcePath(symbol);\n      }\n    } else {\n      symbol = symbol.replace('any', '').replace('a', '');\n      path = getSourcePath(symbol);\n    }\n  } else {\n    path = initPath;\n  }\n  // path = ''\n  // console.log(logoUrl)\n  // console.log(path)\n  // return <Image {...rest} alt={symbol} src={path} size={size} style={style} />\n  return isLazy ? /*#__PURE__*/React.createElement(LazyImage, {\n    checkUrl: path,\n    style: imageStyle(size),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, Object.assign({}, rest, {\n    alt: symbol,\n    src: path,\n    size: size,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }))) : /*#__PURE__*/React.createElement(Image, Object.assign({}, rest, {\n    alt: symbol,\n    src: path,\n    size: size,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }\n  }));\n}","map":{"version":3,"names":["React","styled","useActiveWeb3React","config","initPath","LazyImage","Image","img","_templateObject","_taggedTemplateLiteral","_ref","size","_ref2","_ref3","_ref4","_ref5","getSourcePath","symbol","path","require","error","getAnyPath","imageStyle","width","height","minMidth","minHeight","borderRadius","TokenLogo","_ref6","isAny","style","logoUrl","isLazy","rest","chainId","getBaseCoin","getCurChainInfo","substr","indexOf","replace","createElement","checkUrl","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","alt","src"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/components/TokenLogo/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport { useActiveWeb3React } from '../../hooks'\n\nimport config from '../../config'\n\nimport initPath from '../../assets/images/question.svg'\nimport { LazyImage } from '../../components/Lazyload/LazyImage'\n\nconst Image = styled.img<{ size?: any }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  min-width: ${({ size }) => size};\n  min-height: ${({ size }) => size};\n  max-width: 100%;\n  max-height: 100%;\n  background-color: white;\n  border-radius: ${({ size }) => size};\n`\n\n// const initPath = require('../../assets/images/question.svg')\n\nfunction getSourcePath(symbol: any) {\n  let path = ''\n  try {\n    path = require('../../assets/images/coin/source/' + symbol + '.svg')\n  } catch (error) {\n    try {\n      path = require('../../assets/images/coin/source/' + symbol + '.png')\n    } catch (error) {\n      try {\n        path = require('../../assets/images/coin/source/' + symbol + '.jpg')\n      } catch (error) {\n        path = initPath\n      }\n    }\n  }\n  return path\n}\nfunction getAnyPath(symbol: any) {\n  let path = ''\n  try {\n    path = require('../../assets/images/coin/any/' + symbol + '.svg')\n  } catch (error) {\n    try {\n      path = require('../../assets/images/coin/any/' + symbol + '.png')\n    } catch (error) {\n      try {\n        path = require('../../assets/images/coin/any/' + symbol + '.jpg')\n      } catch (error) {\n        path = initPath\n      }\n    }\n  }\n  return path\n}\nconst imageStyle = (size: any) => {\n  return {\n    width: size,\n    height: size,\n    minMidth: size,\n    minHeight: size,\n    borderRadius: size\n  }\n}\nexport default function TokenLogo({\n  symbol,\n  size = '1rem',\n  isAny = true,\n  style,\n  logoUrl,\n  isLazy,\n  ...rest\n}: {\n  symbol?: any\n  size?: any\n  style?: React.CSSProperties\n  logoUrl?: any\n  isLazy?: boolean\n  isAny?: any\n}) {\n  const { chainId } = useActiveWeb3React()\n  let path = ''\n  symbol = config.getBaseCoin(symbol, chainId)\n  symbol = symbol === 'W' + config.getCurChainInfo(chainId).symbol ? symbol.substr(1) : symbol\n  // symbol = symbol === 'WHT' ? 'HT' : symbol\n  // console.log(symbol)\n  if (logoUrl) {\n    path = logoUrl\n  } else if (symbol) {\n    if (isAny) {\n      if (symbol.indexOf('a') === 0 && symbol.indexOf('any') === -1) {\n        symbol = symbol.replace('a', 'any')\n        path = getAnyPath(symbol)\n      } else if (symbol.indexOf('any') !== -1) {\n        path = getAnyPath(symbol)\n      } else {\n        path = getSourcePath(symbol)\n      }\n    } else {\n      symbol = symbol.replace('any', '').replace('a', '')\n      path = getSourcePath(symbol)\n    }\n  } else {\n    path = initPath\n  }\n  // path = ''\n  // console.log(logoUrl)\n  // console.log(path)\n  // return <Image {...rest} alt={symbol} src={path} size={size} style={style} />\n  return isLazy ? <LazyImage checkUrl={ path } style={ imageStyle(size) }>\n    <Image {...rest} alt={symbol} src={path} size={size} style={style} />\n  </LazyImage> : <Image {...rest} alt={symbol} src={path} size={size} style={style} />\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}