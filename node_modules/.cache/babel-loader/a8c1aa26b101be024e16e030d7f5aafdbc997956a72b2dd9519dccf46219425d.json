{"ast":null,"code":"import { invariant } from '@onflow/util-invariant';\nimport '@onflow/rlp';\nimport * as logger from '@onflow/util-logger';\nimport fetchTransport from 'cross-fetch';\nimport { sansPrefix } from '@onflow/util-address';\nconst AbortController = globalThis.AbortController || require(\"abort-controller\");\nclass HTTPRequestError extends Error {\n  constructor(_ref) {\n    let {\n      error,\n      hostname,\n      path,\n      method,\n      requestBody,\n      responseBody,\n      responseStatusText,\n      statusCode\n    } = _ref;\n    const msg = \"\\n      HTTP Request Error: An error occurred when interacting with the Access API.\\n      \".concat(error ? \"error=\".concat(error) : \"\", \"\\n      \").concat(hostname ? \"hostname=\".concat(hostname) : \"\", \"\\n      \").concat(path ? \"path=\".concat(path) : \"\", \"\\n      \").concat(method ? \"method=\".concat(method) : \"\", \"\\n      \").concat(requestBody ? \"requestBody=\".concat(requestBody) : \"\", \"\\n      \").concat(responseBody ? \"responseBody=\".concat(responseBody) : \"\", \"\\n      \").concat(responseStatusText ? \"responseStatusText=\".concat(responseStatusText) : \"\", \"\\n      \").concat(statusCode ? \"statusCode=\".concat(statusCode) : \"\", \"\\n    \");\n    super(msg);\n    this.name = \"HTTP Request Error\";\n    this.statusCode = statusCode;\n    this.errorMessage = error;\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nasync function httpRequest(_ref2) {\n  let {\n    hostname,\n    path,\n    method,\n    body,\n    headers,\n    retryLimit = 5,\n    retryIntervalMs = 1000,\n    timeoutLimit = 30000,\n    enableRequestLogging = true\n  } = _ref2;\n  const bodyJSON = body ? JSON.stringify(body) : null;\n  function makeRequest() {\n    const controller = new AbortController();\n    const fetchTimeout = setTimeout(() => {\n      controller.abort();\n    }, timeoutLimit);\n    return fetchTransport(\"\".concat(hostname).concat(path), {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal\n    }).then(async res => {\n      if (res.ok) {\n        return res.json();\n      }\n      const responseText = await res.text().catch(() => null);\n      const response = safeParseJSON(responseText);\n      throw new HTTPRequestError({\n        error: response === null || response === void 0 ? void 0 : response.message,\n        hostname,\n        path,\n        method,\n        requestBody: bodyJSON,\n        responseBody: responseText,\n        responseStatusText: res.statusText,\n        statusCode: res.status\n      });\n    }).catch(async e => {\n      if (e instanceof HTTPRequestError) {\n        throw e;\n      }\n      if (e.name === \"AbortError\") {\n        throw e;\n      }\n\n      // Show AN error for all network errors\n      if (enableRequestLogging) {\n        await logger.log({\n          title: \"Access Node Error\",\n          message: \"The provided access node \".concat(hostname, \" does not appear to be a valid REST/HTTP access node.\\n  Please verify that you are not unintentionally using a GRPC access node.\\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect\"),\n          level: logger.LEVELS.error\n        });\n      }\n      throw new HTTPRequestError({\n        error: e === null || e === void 0 ? void 0 : e.message,\n        hostname,\n        path,\n        method,\n        requestBody: bodyJSON\n      });\n    }).finally(() => {\n      clearTimeout(fetchTimeout);\n    });\n  }\n  async function requestLoop() {\n    let retryAttempt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    try {\n      const resp = await makeRequest();\n      return resp;\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504];\n      if (error.name === \"AbortError\" || retryStatusCodes.includes(error.statusCode)) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\"Access node unavailable, retrying in \".concat(retryIntervalMs, \" ms...\"));\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1));\n            }, retryIntervalMs);\n          } else {\n            reject(error);\n          }\n        });\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop();\n}\nfunction safeParseJSON(data) {\n  try {\n    return JSON.parse(data);\n  } catch {\n    return null;\n  }\n}\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/scripts?block_id=\".concat(ix.block.id),\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg => context.Buffer.from(JSON.stringify(ix.arguments[arg].asArgument)).toString(\"base64\"))\n    }\n  });\n  return constructResponse$4(ix, context, res);\n}\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/scripts?block_height=\".concat(ix.block.height),\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg => context.Buffer.from(JSON.stringify(ix.arguments[arg].asArgument)).toString(\"base64\"))\n    }\n  });\n  return constructResponse$4(ix, context, res);\n}\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/scripts?block_height=sealed\",\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg => context.Buffer.from(JSON.stringify(ix.arguments[arg].asArgument)).toString(\"base64\"))\n    }\n  });\n  return constructResponse$4(ix, context, res);\n}\nfunction constructResponse$4(ix, context, res) {\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString());\n  return ret;\n}\nasync function sendExecuteScript(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Execute Script Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Execute Script Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Execute Script Error: context.Buffer must be defined.\");\n  ix = await ix;\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts);\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts);\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts);\n  }\n}\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5\n};\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3\n};\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/accounts/\".concat(ix.account.addr, \"?block_height=\").concat(ix.block.height, \"&expand=contracts,keys\"),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$3(ix, context, res);\n}\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/accounts/\".concat(ix.account.addr, \"?block_height=sealed&expand=contracts,keys\"),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$3(ix, context, res);\n}\nfunction constructResponse$3(ix, context, res) {\n  var _res$keys$map, _res$keys;\n  let ret = context.response();\n  ret.tag = ix.tag;\n  const unwrapContracts = contracts => {\n    const c = {};\n    if (!contracts) return c;\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString();\n    }\n    return c;\n  };\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys: (_res$keys$map = (_res$keys = res.keys) === null || _res$keys === void 0 ? void 0 : _res$keys.map(key => ({\n      index: Number(key.index),\n      publicKey: key.public_key.replace(/^0x/, \"\"),\n      signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n      signAlgoString: key.signing_algorithm,\n      hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n      hashAlgoString: key.hashing_algorithm,\n      sequenceNumber: Number(key.sequence_number),\n      weight: Number(key.weight),\n      revoked: key.revoked\n    }))) !== null && _res$keys$map !== void 0 ? _res$keys$map : []\n  };\n  return ret;\n}\nasync function sendGetAccount(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Account Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Account Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Get Account Error: context.Buffer must be defined.\");\n  ix = await ix;\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts);\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts);\n  }\n}\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks/\".concat(ix.block.id),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$2(ix, context, res);\n}\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=\".concat(ix.block.height),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$2(ix, context, res);\n}\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  var _ix$block;\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const height = (_ix$block = ix.block) !== null && _ix$block !== void 0 && _ix$block.isSealed ? \"sealed\" : \"final\";\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=\".concat(height),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$2(ix, context, res);\n}\nfunction constructResponse$2(ix, context, res) {\n  const block = res.length ? res[0] : null;\n  const ret = context.response();\n  ret.tag = ix.tag;\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp\n  };\n  return ret;\n}\nasync function sendGetBlockHeader(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Block Header Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Block Header Error: context.response must be defined.\");\n  ix = await ix;\n  const interactionHasBlockID = ix.block.id !== null;\n  const interactionHasBlockHeight = ix.block.height !== null;\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts);\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts);\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts);\n  }\n}\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks/\".concat(ix.block.id, \"?expand=payload\"),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$1(ix, context, res);\n}\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=\".concat(ix.block.height, \"&expand=payload\"),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$1(ix, context, res);\n}\nasync function sendGetBlockRequest(ix, context, opts) {\n  var _ix$block2;\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const height = (_ix$block2 = ix.block) !== null && _ix$block2 !== void 0 && _ix$block2.isSealed ? \"sealed\" : \"final\";\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=\".concat(height, \"&expand=payload\"),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse$1(ix, context, res);\n}\nfunction constructResponse$1(ix, context, res) {\n  const block = res.length ? res[0] : null;\n  const ret = context.response();\n  ret.tag = ix.tag;\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    collectionGuarantees: block.payload.collection_guarantees.map(collectionGuarantee => ({\n      collectionId: collectionGuarantee.collection_id,\n      signerIds: collectionGuarantee.signer_ids\n    })),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id\n    }))\n  };\n  return ret;\n}\nasync function sendGetBlock(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Block Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Block Error: context.response must be defined.\");\n  ix = await ix;\n  const interactionHasBlockID = ix.block.id !== null;\n  const interactionHasBlockHeight = ix.block.height !== null;\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts);\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts);\n  } else {\n    return await sendGetBlockRequest(ix, context, opts);\n  }\n}\nasync function sendGetCollection(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Collection Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Collection Error: context.response must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/collections/\".concat(ix.collection.id, \"?expand=transactions\"),\n    method: \"GET\",\n    body: null\n  });\n  const ret = context.response();\n  ret.tag = ix.tag;\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id)\n  };\n  return ret;\n}\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/events?type=\".concat(ix.events.eventType, \"&start_height=\").concat(ix.events.start, \"&end_height=\").concat(ix.events.end),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse(ix, context, res);\n}\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/events?type=\".concat(ix.events.eventType, \"&block_ids=\").concat(ix.events.blockIds.join(\",\")),\n    method: \"GET\",\n    body: null\n  });\n  return constructResponse(ix, context, res);\n}\nfunction constructResponse(ix, context, res) {\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.events = [];\n  res.forEach(block => block.events ? block.events.forEach(event => ret.events.push({\n    blockId: block.block_id,\n    blockHeight: Number(block.block_height),\n    blockTimestamp: block.block_timestamp,\n    type: event.type,\n    transactionId: event.transaction_id,\n    transactionIndex: Number(event.transaction_index),\n    eventIndex: Number(event.event_index),\n    payload: JSON.parse(context.Buffer.from(event.payload, \"base64\").toString())\n  })) : null);\n  return ret;\n}\nasync function sendGetEvents(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Events Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Events Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Get Events Error: context.Buffer must be defined.\");\n  ix = await ix;\n  const interactionContainsBlockHeightRange = ix.events.start !== null;\n  const interactionContainsBlockIDsList = Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0;\n  invariant(interactionContainsBlockHeightRange || interactionContainsBlockIDsList, \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\");\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts);\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts);\n  }\n}\nasync function sendGetTransaction(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Transaction Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Transaction Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Get Transaction Error: context.Buffer must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  ix = await ix;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/transactions/\".concat(ix.transaction.id),\n    method: \"GET\",\n    body: null\n  });\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_id),\n    sequenceNumber: Number(key.sequence_number)\n  });\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature\n  });\n  const unwrapArg = arg => JSON.parse(context.Buffer.from(arg, \"base64\").toString());\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key ? unwrapKey(res.proposal_key) : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)]\n  };\n  return ret;\n}\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5\n};\nasync function sendGetTransactionStatus(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Transaction Status Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Transaction Status Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Get Transaction Status Error: context.Buffer must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  ix = await ix;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/transaction_results/\".concat(ix.transaction.id),\n    method: \"GET\",\n    body: null\n  });\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(context.Buffer.from(event.payload, \"base64\").toString())\n    }))\n  };\n  return ret;\n}\nasync function sendPing(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Ping Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Ping Error: context.response must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null\n  });\n  let ret = context.response();\n  ret.tag = ix.tag;\n  return ret;\n}\nconst idof = acct => \"\".concat(withPrefix(acct.addr), \"-\").concat(acct.keyId);\nasync function sendTransaction(ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Transaction Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Transaction Error: context.response must be defined.\");\n  invariant(context.Buffer, \"SDK Send Transaction Error: context.Buffer must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  ix = await ix;\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = [];\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\"base64\")\n        };\n        if (!payloadSignatures.find(existingSignature => existingSignature.address === signature.address && existingSignature.key_index === signature.key_index && existingSignature.signature === signature.signature)) {\n          payloadSignatures.push(signature);\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix\n      });\n      throw error;\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {};\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct);\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\"base64\")\n        };\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying envelope signature\", {\n        acct,\n        ix\n      });\n      throw error;\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures);\n  var t1 = Date.now();\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/transactions\",\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [...ix.message.arguments.map(arg => context.Buffer.from(JSON.stringify(ix.arguments[arg].asArgument)).toString(\"base64\"))],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum)\n      },\n      authorizers: ix.authorizations.map(tempId => ix.accounts[tempId].addr).reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current];\n      }, []).map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures\n    }\n  });\n  var t2 = Date.now();\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.transactionId = res.id;\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(new CustomEvent(\"FLOW::TX\", {\n      detail: {\n        txId: ret.transactionId,\n        delta: t2 - t1\n      }\n    }));\n  }\n  return ret;\n}\nasync function sendGetNetworkParameters(ix) {\n  var _opts$enableRequestLo;\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Get Network Parameters Error: opts.node must be defined.\");\n  invariant(context.response, \"SDK Send Get Network Parameters Error: context.response must be defined.\");\n  const httpRequest$1 = opts.httpRequest || httpRequest;\n  ix = await ix;\n  const res = await httpRequest$1({\n    hostname: opts.node,\n    path: \"/v1/network/parameters\",\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: (_opts$enableRequestLo = opts.enableRequestLogging) !== null && _opts$enableRequestLo !== void 0 ? _opts$enableRequestLo : true\n  });\n  let ret = context.response();\n  ret.tag = ix.tag;\n  ret.networkParameters = {\n    chainId: res.chain_id\n  };\n  return ret;\n}\nconst send = async function (ix) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  invariant(opts.node, \"SDK Send Error: Either opts.node or \\\"accessNode.api\\\" in config must be defined.\");\n  invariant(context.ix, \"SDK Send Error: context.ix must be defined.\");\n  ix = await ix;\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts);\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts);\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts);\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts);\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts);\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts);\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts);\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts);\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts);\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts);\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts);\n    default:\n      return ix;\n  }\n};\nexport { send, sendExecuteScript, sendGetAccount, sendGetBlock, sendGetBlockHeader, sendGetCollection, sendGetEvents, sendGetNetworkParameters, sendGetTransaction, sendGetTransactionStatus, sendPing, sendTransaction };","map":{"version":3,"names":["AbortController","globalThis","require","HTTPRequestError","Error","constructor","_ref","error","hostname","path","method","requestBody","responseBody","responseStatusText","statusCode","msg","concat","name","errorMessage","httpRequest","_ref2","body","headers","retryLimit","retryIntervalMs","timeoutLimit","enableRequestLogging","bodyJSON","JSON","stringify","makeRequest","controller","fetchTimeout","setTimeout","abort","fetchTransport","signal","then","res","ok","json","responseText","text","catch","response","safeParseJSON","message","statusText","status","e","logger","log","title","level","LEVELS","finally","clearTimeout","requestLoop","retryAttempt","arguments","length","undefined","resp","retryStatusCodes","includes","Promise","resolve","reject","console","warn","data","parse","sendExecuteScriptAtBlockIDRequest","ix","context","opts","httpRequest$1","node","block","id","script","Buffer","from","cadence","toString","map","arg","asArgument","constructResponse$4","sendExecuteScriptAtBlockHeightRequest","height","sendExecuteScriptAtLatestBlockRequest","ret","tag","encodedData","sendExecuteScript","invariant","HashAlgorithmIDs","SHA2_256","SHA2_384","SHA3_256","SHA3_384","KMAC128_BLS_BLS12_381","SignatureAlgorithmIDs","ECDSA_P256","ECDSA_secp256k1","BLS_BLS12_381","sendGetAccountAtBlockHeightRequest","account","addr","constructResponse$3","sendGetAccountAtLatestBlockRequest","_res$keys$map","_res$keys","unwrapContracts","contracts","c","key","Object","keys","address","balance","Number","code","index","publicKey","public_key","replace","signAlgo","signing_algorithm","signAlgoString","hashAlgo","hashing_algorithm","hashAlgoString","sequenceNumber","sequence_number","weight","revoked","sendGetAccount","sendGetBlockHeaderByIDRequest","constructResponse$2","sendGetBlockHeaderByHeightRequest","sendGetLatestBlockHeaderRequest","_ix$block","isSealed","blockHeader","header","parentId","parent_id","timestamp","sendGetBlockHeader","interactionHasBlockID","interactionHasBlockHeight","sendGetBlockByIDRequest","constructResponse$1","sendGetBlockByHeightRequest","sendGetBlockRequest","_ix$block2","collectionGuarantees","payload","collection_guarantees","collectionGuarantee","collectionId","collection_id","signerIds","signer_ids","blockSeals","block_seals","blockSeal","blockId","block_id","executionReceiptId","result_id","sendGetBlock","sendGetCollection","collection","transactionIds","transactions","transaction","sendGetEventsForHeightRangeRequest","events","eventType","start","end","constructResponse","sendGetEventsForBlockIDsRequest","blockIds","join","forEach","event","push","blockHeight","block_height","blockTimestamp","block_timestamp","type","transactionId","transaction_id","transactionIndex","transaction_index","eventIndex","event_index","sendGetEvents","interactionContainsBlockHeightRange","interactionContainsBlockIDsList","Array","isArray","sendGetTransaction","unwrapKey","keyId","key_id","unwrapSignature","sig","key_index","signature","unwrapArg","args","referenceBlockId","reference_block_id","gasLimit","gas_limit","payer","proposalKey","proposal_key","authorizers","payloadSignatures","payload_signatures","envelopeSignatures","envelope_signatures","STATUS_MAP","UNKNOWN","PENDING","FINALIZED","EXECUTED","SEALED","EXPIRED","sendGetTransactionStatus","transactionStatus","toUpperCase","statusString","status_code","error_message","sendPing","idof","acct","withPrefix","sendTransaction","values","accounts","role","sansPrefix","String","find","existingSignature","tempId","t1","Date","now","refBlock","computeLimit","proposer","sequenceNum","authorizations","reduce","prev","current","item","t2","window","CustomEvent","dispatchEvent","detail","txId","delta","sendGetNetworkParameters","_opts$enableRequestLo","networkParameters","chainId","chain_id","send","isTransaction","isGetTransactionStatus","isGetTransaction","isScript","isGetAccount","isGetEvents","isGetBlock","isGetBlockHeader","isGetCollection","isPing","isGetNetworkParameters"],"sources":["../src/http-request.js","../src/send-execute-script.js","../src/send-get-account.js","../src/send-get-block-header.js","../src/send-get-block.js","../src/send-get-collection.js","../src/send-get-events.js","../src/send-get-transaction.js","../src/send-get-transaction-status.js","../src/send-ping.js","../src/send-transaction.js","../src/send-get-network-parameters.js","../src/send-http.js"],"sourcesContent":["import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"cross-fetch\"\n\nconst AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nclass HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {object} options.body - HTTP Request Body\n * @param {object} [options.headers] - HTTP Request Headers\n * @param {boolean} [options.enableRequestLogging=true] - Enable/Disable request logging\n * @param {number} [options.retryLimit=5] - Number of times to retry request\n * @param {number} [options.retryIntervalMs=1000] - Time in milliseconds to wait before retrying request\n * @param {number} [options.timeoutLimit=30000] - Time in milliseconds to wait before timing out request\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n  timeoutLimit = 30000,\n  enableRequestLogging = true,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    const controller = new AbortController()\n    const fetchTimeout = setTimeout(() => {\n      controller.abort()\n    }, timeoutLimit)\n\n    return fetchTransport(`${hostname}${path}`, {\n      method: method,\n      body: bodyJSON,\n      headers,\n      signal: controller.signal,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = await res.text().catch(() => null)\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        if (e.name === \"AbortError\") {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        if (enableRequestLogging) {\n          await logger.log({\n            title: \"Access Node Error\",\n            message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\n  Please verify that you are not unintentionally using a GRPC access node.\n  See more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n            level: logger.LEVELS.error,\n          })\n        }\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n      .finally(() => {\n        clearTimeout(fetchTimeout)\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (\n        error.name === \"AbortError\" ||\n        retryStatusCodes.includes(error.statusCode)\n      ) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            if (enableRequestLogging) {\n              console.warn(\n                `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n              )\n            }\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n\nfunction safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendExecuteScriptAtBlockIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_id=${ix.block.id}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=${ix.block.height}`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendExecuteScriptAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/scripts?block_height=sealed`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: ix.message.arguments.map(arg =>\n        context.Buffer.from(\n          JSON.stringify(ix.arguments[arg].asArgument)\n        ).toString(\"base64\")\n      ),\n    },\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.encodedData = JSON.parse(context.Buffer.from(res, \"base64\").toString())\n\n  return ret\n}\n\nexport async function sendExecuteScript(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Execute Script Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Execute Script Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Execute Script Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.id) {\n    return await sendExecuteScriptAtBlockIDRequest(ix, context, opts)\n  } else if (ix.block.height) {\n    return await sendExecuteScriptAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendExecuteScriptAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst HashAlgorithmIDs = {\n  SHA2_256: 1,\n  SHA2_384: 2,\n  SHA3_256: 3,\n  SHA3_384: 4,\n  KMAC128_BLS_BLS12_381: 5,\n}\n\nconst SignatureAlgorithmIDs = {\n  ECDSA_P256: 1,\n  ECDSA_secp256k1: 2,\n  BLS_BLS12_381: 3,\n}\n\nasync function sendGetAccountAtBlockHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=${ix.block.height}&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetAccountAtLatestBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/accounts/${ix.account.addr}?block_height=sealed&expand=contracts,keys`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  const unwrapContracts = contracts => {\n    const c = {}\n    if (!contracts) return c\n    for (let key of Object.keys(contracts)) {\n      c[key] = context.Buffer.from(contracts[key], \"base64\").toString()\n    }\n    return c\n  }\n\n  ret.account = {\n    address: res.address,\n    balance: Number(res.balance),\n    code: \"\",\n    contracts: unwrapContracts(res.contracts),\n    keys:\n      res.keys?.map(key => ({\n        index: Number(key.index),\n        publicKey: key.public_key.replace(/^0x/, \"\"),\n        signAlgo: SignatureAlgorithmIDs[key.signing_algorithm],\n        signAlgoString: key.signing_algorithm,\n        hashAlgo: HashAlgorithmIDs[key.hashing_algorithm],\n        hashAlgoString: key.hashing_algorithm,\n        sequenceNumber: Number(key.sequence_number),\n        weight: Number(key.weight),\n        revoked: key.revoked,\n      })) ?? [],\n  }\n\n  return ret\n}\n\nexport async function sendGetAccount(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Account Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Account Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Account Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  if (ix.block.height !== null) {\n    return await sendGetAccountAtBlockHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetAccountAtLatestBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockHeaderByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockHeaderByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetLatestBlockHeaderRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n  }\n\n  return ret\n}\n\nexport async function sendGetBlockHeader(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Block Header Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Block Header Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockHeaderByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockHeaderByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetLatestBlockHeaderRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetBlockByIDRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks/${ix.block.id}?expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockByHeightRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${ix.block.height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetBlockRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const height = ix.block?.isSealed ? \"sealed\" : \"final\"\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/blocks?height=${height}&expand=payload`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  const block = res.length ? res[0] : null\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: block.header.id,\n    parentId: block.header.parent_id,\n    height: Number(block.header.height),\n    timestamp: block.header.timestamp,\n    collectionGuarantees: block.payload.collection_guarantees.map(\n      collectionGuarantee => ({\n        collectionId: collectionGuarantee.collection_id,\n        signerIds: collectionGuarantee.signer_ids,\n      })\n    ),\n    blockSeals: block.payload.block_seals.map(blockSeal => ({\n      blockId: blockSeal.block_id,\n      executionReceiptId: blockSeal.result_id,\n    })),\n  }\n\n  return ret\n}\n\nexport async function sendGetBlock(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Block Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Block Error: context.response must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionHasBlockID = ix.block.id !== null\n  const interactionHasBlockHeight = ix.block.height !== null\n\n  if (interactionHasBlockID) {\n    return await sendGetBlockByIDRequest(ix, context, opts)\n  } else if (interactionHasBlockHeight) {\n    return await sendGetBlockByHeightRequest(ix, context, opts)\n  } else {\n    return await sendGetBlockRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetCollection(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Collection Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Collection Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/collections/${ix.collection.id}?expand=transactions`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const ret = context.response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: res.id,\n    transactionIds: res.transactions.map(transaction => transaction.id),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nasync function sendGetEventsForHeightRangeRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${ix.events.eventType}&start_height=${ix.events.start}&end_height=${ix.events.end}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nasync function sendGetEventsForBlockIDsRequest(ix, context, opts) {\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/events?type=${\n      ix.events.eventType\n    }&block_ids=${ix.events.blockIds.join(\",\")}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  return constructResponse(ix, context, res)\n}\n\nfunction constructResponse(ix, context, res) {\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.events = []\n  res.forEach(block =>\n    block.events\n      ? block.events.forEach(event =>\n          ret.events.push({\n            blockId: block.block_id,\n            blockHeight: Number(block.block_height),\n            blockTimestamp: block.block_timestamp,\n            type: event.type,\n            transactionId: event.transaction_id,\n            transactionIndex: Number(event.transaction_index),\n            eventIndex: Number(event.event_index),\n            payload: JSON.parse(\n              context.Buffer.from(event.payload, \"base64\").toString()\n            ),\n          })\n        )\n      : null\n  )\n\n  return ret\n}\n\nexport async function sendGetEvents(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Get Events Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Get Events Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Events Error: context.Buffer must be defined.`\n  )\n\n  ix = await ix\n\n  const interactionContainsBlockHeightRange = ix.events.start !== null\n  const interactionContainsBlockIDsList =\n    Array.isArray(ix.events.blockIds) && ix.events.blockIds.length > 0\n\n  invariant(\n    interactionContainsBlockHeightRange || interactionContainsBlockIDsList,\n    \"SendGetEventsError: Unable to determine which get events request to send. Either a block height range, or block IDs must be specified.\"\n  )\n\n  if (interactionContainsBlockHeightRange) {\n    return await sendGetEventsForHeightRangeRequest(ix, context, opts)\n  } else {\n    return await sendGetEventsForBlockIDsRequest(ix, context, opts)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetTransaction(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  const unwrapKey = key => ({\n    address: key.address,\n    keyId: Number(key.key_id),\n    sequenceNumber: Number(key.sequence_number),\n  })\n\n  const unwrapSignature = sig => ({\n    address: sig.address,\n    keyId: Number(sig.key_index),\n    signature: sig.signature,\n  })\n\n  const unwrapArg = arg =>\n    JSON.parse(context.Buffer.from(arg, \"base64\").toString())\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    script: context.Buffer.from(res.script, \"base64\").toString(),\n    args: [...res.arguments.map(unwrapArg)],\n    referenceBlockId: res.reference_block_id,\n    gasLimit: Number(res.gas_limit),\n    payer: res.payer,\n    proposalKey: res.proposal_key\n      ? unwrapKey(res.proposal_key)\n      : res.proposal_key,\n    authorizers: res.authorizers,\n    payloadSignatures: [...res.payload_signatures.map(unwrapSignature)],\n    envelopeSignatures: [...res.envelope_signatures.map(unwrapSignature)],\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst STATUS_MAP = {\n  UNKNOWN: 0,\n  PENDING: 1,\n  FINALIZED: 2,\n  EXECUTED: 3,\n  SEALED: 4,\n  EXPIRED: 5,\n}\n\nexport async function sendGetTransactionStatus(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Transaction Status Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Transaction Status Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Get Transaction Status Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transaction_results/${ix.transaction.id}`,\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    blockId: res.block_id,\n    status: STATUS_MAP[res.status.toUpperCase()] || \"\",\n    statusString: res.status.toUpperCase(),\n    statusCode: res.status_code,\n    errorMessage: res.error_message,\n    events: res.events.map(event => ({\n      type: event.type,\n      transactionId: event.transaction_id,\n      transactionIndex: Number(event.transaction_index),\n      eventIndex: Number(event.event_index),\n      payload: JSON.parse(\n        context.Buffer.from(event.payload, \"base64\").toString()\n      ),\n    })),\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendPing(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Ping Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Ping Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  await httpRequest({\n    hostname: opts.node,\n    path: \"/v1/blocks?height=sealed\",\n    method: \"GET\",\n    body: null,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport async function sendTransaction(ix, context = {}, opts = {}) {\n  invariant(opts.node, `SDK Send Transaction Error: opts.node must be defined.`)\n  invariant(\n    context.response,\n    `SDK Send Transaction Error: context.response must be defined.`\n  )\n  invariant(\n    context.Buffer,\n    `SDK Send Transaction Error: context.Buffer must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  // Apply Non Payer Signatures to Payload Signatures\n  let payloadSignatures = []\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const signature = {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n        if (!payloadSignatures.find(existingSignature => existingSignature.address === signature.address\n          && existingSignature.key_index === signature.key_index\n          && existingSignature.signature === signature.signature\n        )) {\n          payloadSignatures.push(signature)\n        }\n      }\n    } catch (error) {\n      console.error(\"SDK HTTP Send Error: Trouble applying payload signature\", {\n        acct,\n        ix,\n      })\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  let envelopeSignatures = {}\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        let id = acct.tempId || idof(acct)\n        envelopeSignatures[id] = envelopeSignatures[id] || {\n          address: sansPrefix(acct.addr),\n          key_index: String(acct.keyId),\n          signature: context.Buffer.from(acct.signature, \"hex\").toString(\n            \"base64\"\n          ),\n        }\n      }\n    } catch (error) {\n      console.error(\n        \"SDK HTTP Send Error: Trouble applying envelope signature\",\n        {acct, ix}\n      )\n      throw error\n    }\n  }\n  envelopeSignatures = Object.values(envelopeSignatures)\n\n  var t1 = Date.now()\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/transactions`,\n    method: \"POST\",\n    body: {\n      script: context.Buffer.from(ix.message.cadence).toString(\"base64\"),\n      arguments: [\n        ...ix.message.arguments.map(arg =>\n          context.Buffer.from(\n            JSON.stringify(ix.arguments[arg].asArgument)\n          ).toString(\"base64\")\n        ),\n      ],\n      reference_block_id: ix.message.refBlock ? ix.message.refBlock : null,\n      gas_limit: String(ix.message.computeLimit),\n      payer: sansPrefix(\n        ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n      ),\n      proposal_key: {\n        address: sansPrefix(ix.accounts[ix.proposer].addr),\n        key_index: String(ix.accounts[ix.proposer].keyId),\n        sequence_number: String(ix.accounts[ix.proposer].sequenceNum),\n      },\n      authorizers: ix.authorizations\n        .map(tempId => ix.accounts[tempId].addr)\n        .reduce((prev, current) => {\n          return prev.find(item => item === current) ? prev : [...prev, current]\n        }, [])\n        .map(sansPrefix),\n      payload_signatures: payloadSignatures,\n      envelope_signatures: envelopeSignatures,\n    },\n  })\n  var t2 = Date.now()\n\n  let ret = context.response()\n  ret.tag = ix.tag\n  ret.transactionId = res.id\n\n  if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {httpRequest as defaultHttpRequest} from \"./http-request.js\"\n\nexport async function sendGetNetworkParameters(ix, context = {}, opts = {}) {\n  invariant(\n    opts.node,\n    `SDK Send Get Network Parameters Error: opts.node must be defined.`\n  )\n  invariant(\n    context.response,\n    `SDK Send Get Network Parameters Error: context.response must be defined.`\n  )\n\n  const httpRequest = opts.httpRequest || defaultHttpRequest\n\n  ix = await ix\n\n  const res = await httpRequest({\n    hostname: opts.node,\n    path: `/v1/network/parameters`,\n    method: \"GET\",\n    body: null,\n    enableRequestLogging: opts.enableRequestLogging ?? true,\n  })\n\n  let ret = context.response()\n  ret.tag = ix.tag\n\n  ret.networkParameters = {\n    chainId: res.chain_id,\n  }\n  return ret\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {sendGetNetworkParameters} from \"./send-get-network-parameters.js\"\n\nexport const send = async (ix, context = {}, opts = {}) => {\n  invariant(\n    opts.node,\n    `SDK Send Error: Either opts.node or \"accessNode.api\" in config must be defined.`\n  )\n  invariant(context.ix, `SDK Send Error: context.ix must be defined.`)\n\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case context.ix.isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, context, opts) : sendTransaction(ix, context, opts)\n    case context.ix.isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, context, opts) : sendGetTransactionStatus(ix, context, opts)\n    case context.ix.isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, context, opts) : sendGetTransaction(ix, context, opts)\n    case context.ix.isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, context, opts) : sendExecuteScript(ix, context, opts)\n    case context.ix.isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, context, opts) : sendGetAccount(ix, context, opts)\n    case context.ix.isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, context, opts) : sendGetEvents(ix, context, opts)\n    case context.ix.isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, context, opts) : sendGetBlock(ix, context, opts)\n    case context.ix.isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, context, opts) : sendGetBlockHeader(ix, context, opts)\n    case context.ix.isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, context, opts) : sendGetCollection(ix, context, opts)\n    case context.ix.isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, context, opts) : sendPing(ix, context, opts)\n    case context.ix.isGetNetworkParameters(ix):\n      return opts.sendGetNetworkParameters ? opts.sendGetNetworkParameters(ix, context, opts) : sendGetNetworkParameters(ix, context, opts)\n    default:\n      return ix\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}