{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FeeBumpTransaction = undefined;\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _xdr = require('./xdr');\nvar _xdr2 = _interopRequireDefault(_xdr);\nvar _hashing = require('./hashing');\nvar _transaction = require('./transaction');\nvar _transaction_base = require('./transaction_base');\nvar _decode_encode_muxed_account = require('./util/decode_encode_muxed_account');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\n *\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\n * submitting to the network or forwarding on to additional signers.\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string.\n * @param {string} networkPassphrase - passphrase of the target Stellar network\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\n *\n * @extends TransactionBase\n */\nvar FeeBumpTransaction = exports.FeeBumpTransaction = function (_TransactionBase) {\n  _inherits(FeeBumpTransaction, _TransactionBase);\n  function FeeBumpTransaction(envelope, networkPassphrase) {\n    _classCallCheck(this, FeeBumpTransaction);\n    if (typeof envelope === 'string') {\n      var buffer = Buffer.from(envelope, 'base64');\n      envelope = _xdr2.default.TransactionEnvelope.fromXDR(buffer);\n    }\n    var envelopeType = envelope.switch();\n    if (envelopeType !== _xdr2.default.EnvelopeType.envelopeTypeTxFeeBump()) {\n      throw new Error('Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ' + envelopeType.name + '.');\n    }\n    var txEnvelope = envelope.value();\n    var tx = txEnvelope.tx();\n    var fee = tx.fee().toString();\n    // clone signatures\n    var signatures = (txEnvelope.signatures() || []).slice();\n    var _this = _possibleConstructorReturn(this, (FeeBumpTransaction.__proto__ || Object.getPrototypeOf(FeeBumpTransaction)).call(this, tx, signatures, fee, networkPassphrase));\n    var innerTxEnvelope = _xdr2.default.TransactionEnvelope.envelopeTypeTx(tx.innerTx().v1());\n    _this._feeSource = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(_this.tx.feeSource());\n    _this._innerTransaction = new _transaction.Transaction(innerTxEnvelope, networkPassphrase);\n    return _this;\n  }\n\n  /**\n   * @type {Transaction}\n   * @readonly\n   */\n\n  _createClass(FeeBumpTransaction, [{\n    key: 'signatureBase',\n    /**\n     * Returns the \"signature base\" of this transaction, which is the value\n     * that, when hashed, should be signed to create a signature that\n     * validators on the Stellar Network will accept.\n     *\n     * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n     * of this transaction.\n     * @returns {Buffer}\n     */\n    value: function signatureBase() {\n      var taggedTransaction = new _xdr2.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);\n      var txSignature = new _xdr2.default.TransactionSignaturePayload({\n        networkId: _xdr2.default.Hash.fromXDR((0, _hashing.hash)(this.networkPassphrase)),\n        taggedTransaction: taggedTransaction\n      });\n      return txSignature.toXDR();\n    }\n\n    /**\n     * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n     * @returns {xdr.TransactionEnvelope}\n     */\n  }, {\n    key: 'toEnvelope',\n    value: function toEnvelope() {\n      var envelope = new _xdr2.default.FeeBumpTransactionEnvelope({\n        tx: _xdr2.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()),\n        // make a copy of the tx\n        signatures: this.signatures.slice() // make a copy of the signatures\n      });\n\n      return new _xdr2.default.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\n    }\n  }, {\n    key: 'innerTransaction',\n    get: function get() {\n      return this._innerTransaction;\n    }\n\n    /**\n     * @type {string}\n     * @readonly\n     */\n  }, {\n    key: 'feeSource',\n    get: function get() {\n      return this._feeSource;\n    }\n  }]);\n  return FeeBumpTransaction;\n}(_transaction_base.TransactionBase);","map":{"version":3,"names":["Object","defineProperty","exports","value","FeeBumpTransaction","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_xdr","require","_xdr2","_interopRequireDefault","_hashing","_transaction","_transaction_base","_decode_encode_muxed_account","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_TransactionBase","envelope","networkPassphrase","buffer","Buffer","from","TransactionEnvelope","fromXDR","envelopeType","switch","EnvelopeType","envelopeTypeTxFeeBump","Error","name","txEnvelope","tx","fee","toString","signatures","slice","_this","getPrototypeOf","innerTxEnvelope","envelopeTypeTx","innerTx","v1","_feeSource","encodeMuxedAccountToAddress","feeSource","_innerTransaction","Transaction","signatureBase","taggedTransaction","TransactionSignaturePayloadTaggedTransaction","txSignature","TransactionSignaturePayload","networkId","Hash","hash","toXDR","toEnvelope","FeeBumpTransactionEnvelope","get","TransactionBase"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/stellar-base/lib/fee_bump_transaction.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FeeBumpTransaction = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _xdr = require('./xdr');\n\nvar _xdr2 = _interopRequireDefault(_xdr);\n\nvar _hashing = require('./hashing');\n\nvar _transaction = require('./transaction');\n\nvar _transaction_base = require('./transaction_base');\n\nvar _decode_encode_muxed_account = require('./util/decode_encode_muxed_account');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\n *\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\n * submitting to the network or forwarding on to additional signers.\n *\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\n *     object or base64 encoded string.\n * @param {string} networkPassphrase - passphrase of the target Stellar network\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\n *\n * @extends TransactionBase\n */\nvar FeeBumpTransaction = exports.FeeBumpTransaction = function (_TransactionBase) {\n  _inherits(FeeBumpTransaction, _TransactionBase);\n\n  function FeeBumpTransaction(envelope, networkPassphrase) {\n    _classCallCheck(this, FeeBumpTransaction);\n\n    if (typeof envelope === 'string') {\n      var buffer = Buffer.from(envelope, 'base64');\n      envelope = _xdr2.default.TransactionEnvelope.fromXDR(buffer);\n    }\n\n    var envelopeType = envelope.switch();\n    if (envelopeType !== _xdr2.default.EnvelopeType.envelopeTypeTxFeeBump()) {\n      throw new Error('Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ' + envelopeType.name + '.');\n    }\n\n    var txEnvelope = envelope.value();\n    var tx = txEnvelope.tx();\n    var fee = tx.fee().toString();\n    // clone signatures\n    var signatures = (txEnvelope.signatures() || []).slice();\n\n    var _this = _possibleConstructorReturn(this, (FeeBumpTransaction.__proto__ || Object.getPrototypeOf(FeeBumpTransaction)).call(this, tx, signatures, fee, networkPassphrase));\n\n    var innerTxEnvelope = _xdr2.default.TransactionEnvelope.envelopeTypeTx(tx.innerTx().v1());\n    _this._feeSource = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(_this.tx.feeSource());\n    _this._innerTransaction = new _transaction.Transaction(innerTxEnvelope, networkPassphrase);\n    return _this;\n  }\n\n  /**\n   * @type {Transaction}\n   * @readonly\n   */\n\n\n  _createClass(FeeBumpTransaction, [{\n    key: 'signatureBase',\n\n\n    /**\n     * Returns the \"signature base\" of this transaction, which is the value\n     * that, when hashed, should be signed to create a signature that\n     * validators on the Stellar Network will accept.\n     *\n     * It is composed of a 4 prefix bytes followed by the xdr-encoded form\n     * of this transaction.\n     * @returns {Buffer}\n     */\n    value: function signatureBase() {\n      var taggedTransaction = new _xdr2.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);\n\n      var txSignature = new _xdr2.default.TransactionSignaturePayload({\n        networkId: _xdr2.default.Hash.fromXDR((0, _hashing.hash)(this.networkPassphrase)),\n        taggedTransaction: taggedTransaction\n      });\n\n      return txSignature.toXDR();\n    }\n\n    /**\n     * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\n     * @returns {xdr.TransactionEnvelope}\n     */\n\n  }, {\n    key: 'toEnvelope',\n    value: function toEnvelope() {\n      var envelope = new _xdr2.default.FeeBumpTransactionEnvelope({\n        tx: _xdr2.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()), // make a copy of the tx\n        signatures: this.signatures.slice() // make a copy of the signatures\n      });\n\n      return new _xdr2.default.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\n    }\n  }, {\n    key: 'innerTransaction',\n    get: function get() {\n      return this._innerTransaction;\n    }\n\n    /**\n     * @type {string}\n     * @readonly\n     */\n\n  }, {\n    key: 'feeSource',\n    get: function get() {\n      return this._feeSource;\n    }\n  }]);\n\n  return FeeBumpTransaction;\n}(_transaction_base.TransactionBase);"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}