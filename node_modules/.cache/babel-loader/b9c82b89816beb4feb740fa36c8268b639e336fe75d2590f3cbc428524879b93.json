{"ast":null,"code":"import{AbstractConnector}from'@web3-react/abstract-connector';import invariant from'tiny-invariant';// 来自ethers.js，与web3提供程序兼容的接口\nclass RequestError extends Error{constructor(message,code,data){super(message);this.code=code;this.data=data;}}class MiniRpcProvider{constructor(chainId,url,batchWaitTimeMs){this.isMetaMask=false;this.chainId=void 0;this.url=void 0;this.host=void 0;this.path=void 0;this.batchWaitTimeMs=void 0;this.nextId=1;this.batchTimeoutId=null;this.batch=[];this.clearBatch=async()=>{console.debug('Clearing batch',this.batch);const batch=this.batch;this.batch=[];this.batchTimeoutId=null;let response;// console.log(batch)\ntry{response=await fetch(this.url,{method:'POST',headers:{'content-type':'application/json',accept:'application/json'},body:JSON.stringify(batch.map(item=>item.request))});}catch(error){// console.log(error)\nbatch.forEach(_ref=>{let{reject}=_ref;return reject(new Error('Failed to send batch call'));});return;}if(!response.ok){batch.forEach(_ref2=>{let{reject}=_ref2;return reject(new RequestError(\"\".concat(response.status,\": \").concat(response.statusText),-32000));});return;}let json;try{json=await response.json();}catch(error){batch.forEach(_ref3=>{let{reject}=_ref3;return reject(new Error('Failed to parse JSON response'));});return;}const byKey=batch.reduce((memo,current)=>{memo[current.request.id]=current;return memo;},{});for(const result of json){const{resolve,reject,request:{method}}=byKey[result.id];if(resolve&&reject){if('error'in result){var _result$error,_result$error2,_result$error3;reject(new RequestError(result===null||result===void 0?void 0:(_result$error=result.error)===null||_result$error===void 0?void 0:_result$error.message,result===null||result===void 0?void 0:(_result$error2=result.error)===null||_result$error2===void 0?void 0:_result$error2.code,result===null||result===void 0?void 0:(_result$error3=result.error)===null||_result$error3===void 0?void 0:_result$error3.data));}else if('result'in result){resolve(result.result);}else{reject(new RequestError(\"Received unexpected JSON-RPC response to \".concat(method,\" request.\"),-32000,result));}}}};this.sendAsync=(request,callback)=>{this.request(request.method,request.params).then(result=>callback(null,{jsonrpc:'2.0',id:request.id,result})).catch(error=>callback(error,null));};this.request=async(method,params)=>{var _this$batchTimeoutId;if(typeof method!=='string'){return this.request(method.method,method.params);}if(method==='eth_chainId'){return\"0x\".concat(this.chainId.toString(16));}// console.log(params)\nconst promise=new Promise((resolve,reject)=>{this.batch.push({request:{jsonrpc:'2.0',id:this.nextId++,method,params},resolve,reject});});this.batchTimeoutId=(_this$batchTimeoutId=this.batchTimeoutId)!==null&&_this$batchTimeoutId!==void 0?_this$batchTimeoutId:setTimeout(this.clearBatch,this.batchWaitTimeMs);return promise;};// console.log(url)\nthis.chainId=chainId;this.url=url;const parsed=new URL(url);this.host=parsed.host;this.path=parsed.pathname;// how long to wait to batch calls\nthis.batchWaitTimeMs=batchWaitTimeMs!==null&&batchWaitTimeMs!==void 0?batchWaitTimeMs:1;// console.log(this)\n}}export class NetworkConnector extends AbstractConnector{constructor(_ref4){let{urls,defaultChainId}=_ref4;invariant(defaultChainId||Object.keys(urls).length===1,'defaultChainId is a required argument with >1 url');super({supportedChainIds:Object.keys(urls).map(k=>Number(k))});// console.log(urls)\nthis.providers=void 0;this.currentChainId=void 0;this.currentChainId=defaultChainId||Number(Object.keys(urls)[0]);this.providers=Object.keys(urls).reduce((accumulator,chainId)=>{accumulator[Number(chainId)]=new MiniRpcProvider(Number(chainId),urls[Number(chainId)]);return accumulator;},{});}get provider(){return this.providers[this.currentChainId];}async activate(){return{provider:this.providers[this.currentChainId],chainId:this.currentChainId,account:null};}async getProvider(){return this.providers[this.currentChainId];}async getChainId(){return this.currentChainId;}async getAccount(){return null;}deactivate(){return;}}","map":{"version":3,"names":["AbstractConnector","invariant","RequestError","Error","constructor","message","code","data","MiniRpcProvider","chainId","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","response","fetch","method","headers","accept","body","JSON","stringify","map","item","request","error","forEach","_ref","reject","ok","_ref2","concat","status","statusText","json","_ref3","byKey","reduce","memo","current","id","result","resolve","_result$error","_result$error2","_result$error3","sendAsync","callback","params","then","jsonrpc","catch","_this$batchTimeoutId","toString","promise","Promise","push","setTimeout","parsed","URL","pathname","NetworkConnector","_ref4","urls","defaultChainId","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","provider","activate","account","getProvider","getChainId","getAccount","deactivate"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/connectors/NetworkConnector.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// 来自ethers.js，与web3提供程序兼容的接口\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    // console.log(url)\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 1\n    // console.log(this)\n  }\n\n  public readonly clearBatch = async () => {\n    console.debug('Clearing batch', this.batch)\n    const batch = this.batch\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    // console.log(batch)\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map(item => item.request))\n      })\n    } catch (error) {\n      // console.log(error)\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method }\n      }:any = byKey[result.id]\n      if (resolve && reject) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n      // eslint-disable-next-line @typescript-eslint/ban-types\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: unknown[] | object },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then(result => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch(error => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    params?: unknown[] | object\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    // console.log(params)\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params\n        },\n        resolve,\n        reject\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n    // console.log(urls)\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}