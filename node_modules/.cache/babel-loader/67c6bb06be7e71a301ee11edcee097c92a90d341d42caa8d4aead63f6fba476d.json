{"ast":null,"code":"import{useCallback}from'react';import{useDispatch}from'react-redux';import{useActiveReact}from'../../hooks/useActiveReact';import useInterval from'../../hooks/useInterval';import{trxAddress}from'./actions';// import config from '../../config'\nimport{ChainId}from'../../config/chainConfig/chainId';let onlyone=0;export default function Updater(){var _window6;const{chainId}=useActiveReact();const dispatch=useDispatch();const getTrxAddress=useCallback(()=>{if([ChainId.TRX,ChainId.TRX_TEST].includes(chainId)&&window.tronWeb){var _window,_window$tronWeb;if((_window=window)===null||_window===void 0?void 0:(_window$tronWeb=_window.tronWeb)===null||_window$tronWeb===void 0?void 0:_window$tronWeb.address){if(ChainId.TRX_TEST===chainId){var _window2,_window2$tronWeb,_window2$tronWeb$full,_window3,_window3$tronWeb,_window3$tronWeb$full;if(((_window2=window)===null||_window2===void 0?void 0:(_window2$tronWeb=_window2.tronWeb)===null||_window2$tronWeb===void 0?void 0:(_window2$tronWeb$full=_window2$tronWeb.fullNode)===null||_window2$tronWeb$full===void 0?void 0:_window2$tronWeb$full.host.indexOf('shasta'))===-1&&!onlyone&&((_window3=window)===null||_window3===void 0?void 0:(_window3$tronWeb=_window3.tronWeb)===null||_window3$tronWeb===void 0?void 0:(_window3$tronWeb$full=_window3$tronWeb.fullNode)===null||_window3$tronWeb$full===void 0?void 0:_window3$tronWeb$full.ready)){onlyone=1;// alert('Please switch to Shasta Network.')\ndispatch(trxAddress({address:''}));}else{dispatch(trxAddress({address:window.tronWeb.defaultAddress.base58}));}}else{var _window4,_window4$tronWeb,_window4$tronWeb$full,_window5,_window5$tronWeb,_window5$tronWeb$full;if(((_window4=window)===null||_window4===void 0?void 0:(_window4$tronWeb=_window4.tronWeb)===null||_window4$tronWeb===void 0?void 0:(_window4$tronWeb$full=_window4$tronWeb.fullNode)===null||_window4$tronWeb$full===void 0?void 0:_window4$tronWeb$full.host.indexOf('api.trongrid.io'))===-1&&!onlyone&&((_window5=window)===null||_window5===void 0?void 0:(_window5$tronWeb=_window5.tronWeb)===null||_window5$tronWeb===void 0?void 0:(_window5$tronWeb$full=_window5$tronWeb.fullNode)===null||_window5$tronWeb$full===void 0?void 0:_window5$tronWeb$full.ready)){onlyone=1;// alert('Please switch to Main Network.')\ndispatch(trxAddress({address:''}));}else{dispatch(trxAddress({address:window.tronWeb.defaultAddress.base58}));}}}else{dispatch(trxAddress({address:''}));}}},[(_window6=window)===null||_window6===void 0?void 0:_window6.tronWeb,chainId]);useInterval(getTrxAddress,1000*3);return null;}","map":{"version":3,"names":["useCallback","useDispatch","useActiveReact","useInterval","trxAddress","ChainId","onlyone","Updater","_window6","chainId","dispatch","getTrxAddress","TRX","TRX_TEST","includes","window","tronWeb","_window","_window$tronWeb","address","_window2","_window2$tronWeb","_window2$tronWeb$full","_window3","_window3$tronWeb","_window3$tronWeb$full","fullNode","host","indexOf","ready","defaultAddress","base58","_window4","_window4$tronWeb","_window4$tronWeb$full","_window5","_window5$tronWeb","_window5$tronWeb$full"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/trx/updater.ts"],"sourcesContent":["\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport useInterval from '../../hooks/useInterval'\n\nimport { AppDispatch } from '../../state'\n\nimport {trxAddress} from './actions'\n\n// import config from '../../config'\nimport { ChainId } from '../../config/chainConfig/chainId'\nlet onlyone = 0\nexport default function Updater(): null {\n  const { chainId } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n  \n  const getTrxAddress = useCallback(() => {\n    if ([ChainId.TRX, ChainId.TRX_TEST].includes(chainId) && window.tronWeb) {\n      if (window?.tronWeb?.address) {\n        if (ChainId.TRX_TEST === chainId) {\n          if (window?.tronWeb?.fullNode?.host.indexOf('shasta') === -1 && !onlyone && window?.tronWeb?.fullNode?.ready) {\n            onlyone = 1\n            // alert('Please switch to Shasta Network.')\n            dispatch(trxAddress({address: ''}))\n          } else {\n            dispatch(trxAddress({address: window.tronWeb.defaultAddress.base58}))\n          }\n        } else {\n          if (window?.tronWeb?.fullNode?.host.indexOf('api.trongrid.io') === -1 && !onlyone && window?.tronWeb?.fullNode?.ready) {\n            onlyone = 1\n            // alert('Please switch to Main Network.')\n            dispatch(trxAddress({address: ''}))\n          } else {\n            dispatch(trxAddress({address: window.tronWeb.defaultAddress.base58}))\n          }\n        }\n      } else {\n        dispatch(trxAddress({address: ''}))\n      }\n    }\n  }, [window?.tronWeb, chainId])\n\n  useInterval(getTrxAddress, 1000 * 3)\n\n\n  return null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}