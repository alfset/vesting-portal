{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error('Decode Error: could not decode tapInternalKey with key 0x' + keyVal.key.toString('hex'));\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error('Decode Error: tapInternalKey not a 32-byte x-only pubkey');\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value\n    };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.tapInternalKey === undefined;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd\n  };\n}\nexports.makeConverter = makeConverter;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeConverter","TYPE_BYTE","decode","keyVal","key","length","Error","toString","encode","Buffer","from","expected","check","data","isBuffer","canAdd","currentData","newData","tapInternalKey","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/shared/tapInternalKey.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,SAASC,aAAaA,CAACC,SAAS,EAAE;EAChC,SAASC,MAAMA,CAACC,MAAM,EAAE;IACtB,IAAIA,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC,KAAKH,SAAS,IAAIE,MAAM,CAACC,GAAG,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1D,MAAM,IAAIC,KAAK,CACb,2DAA2D,GACzDH,MAAM,CAACC,GAAG,CAACG,QAAQ,CAAC,KAAK,CAC7B,CAAC;IACH;IACA,IAAIJ,MAAM,CAACJ,KAAK,CAACM,MAAM,KAAK,EAAE,EAAE;MAC9B,MAAM,IAAIC,KAAK,CACb,0DACF,CAAC;IACH;IACA,OAAOH,MAAM,CAACJ,KAAK;EACrB;EACA,SAASS,MAAMA,CAACT,KAAK,EAAE;IACrB,MAAMK,GAAG,GAAGK,MAAM,CAACC,IAAI,CAAC,CAACT,SAAS,CAAC,CAAC;IACpC,OAAO;MAAEG,GAAG;MAAEL;IAAM,CAAC;EACvB;EACA,MAAMY,QAAQ,GAAG,QAAQ;EACzB,SAASC,KAAKA,CAACC,IAAI,EAAE;IACnB,OAAOJ,MAAM,CAACK,QAAQ,CAACD,IAAI,CAAC,IAAIA,IAAI,CAACR,MAAM,KAAK,EAAE;EACpD;EACA,SAASU,MAAMA,CAACC,WAAW,EAAEC,OAAO,EAAE;IACpC,OACE,CAAC,CAACD,WAAW,IAAI,CAAC,CAACC,OAAO,IAAID,WAAW,CAACE,cAAc,KAAKC,SAAS;EAE1E;EACA,OAAO;IACLjB,MAAM;IACNM,MAAM;IACNI,KAAK;IACLD,QAAQ;IACRI;EACF,CAAC;AACH;AACAjB,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}