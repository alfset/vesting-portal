{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst typeFields_1 = require('../../typeFields');\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error('Decode Error: could not decode globalXpub with key 0x' + keyVal.key.toString('hex'));\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error('Decode Error: globalXpub has invalid extended pubkey in key 0x' + keyVal.key.toString('hex'));\n  }\n  if (keyVal.value.length / 4 % 1 !== 0) {\n    throw new Error('Decode Error: Global GLOBAL_XPUB value length should be multiple of 4');\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm'\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = keyVal.value.readUInt32LE(i * 4 + 4);\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const head = Buffer.from([typeFields_1.GlobalTypes.GLOBAL_XPUB]);\n  const key = Buffer.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = Buffer.allocUnsafe(splitPath.length * 4);\n  data.masterFingerprint.copy(value, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    value.writeUInt32LE(num, offset);\n    offset += 4;\n  });\n  return {\n    key,\n    value\n  };\n}\nexports.encode = encode;\nexports.expected = '{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return Buffer.isBuffer(epk) && epk.length === 78 && [2, 3].indexOf(epk[45]) > -1 && Buffer.isBuffer(mfp) && mfp.length === 4 && typeof p === 'string' && !!p.match(/^m(\\/\\d+'?)*$/);\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.extendedPubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return array.filter(v => v.extendedPubkey.equals(item.extendedPubkey)).length === 0;\n}\nexports.canAddToArray = canAddToArray;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","range","n","Array","keys","decode","keyVal","key","GlobalTypes","GLOBAL_XPUB","Error","toString","length","includes","extendedPubkey","slice","data","masterFingerprint","path","i","val","readUInt32LE","isHard","idx","encode","head","Buffer","from","concat","splitPath","split","allocUnsafe","copy","offset","forEach","level","num","parseInt","writeUInt32LE","expected","check","epk","mfp","p","isBuffer","indexOf","match","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/global/globalXpub.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error(\n      'Decode Error: could not decode globalXpub with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error(\n      'Decode Error: globalXpub has invalid extended pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.value.length / 4) % 1 !== 0) {\n    throw new Error(\n      'Decode Error: Global GLOBAL_XPUB value length should be multiple of 4',\n    );\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm',\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = keyVal.value.readUInt32LE(i * 4 + 4);\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const head = Buffer.from([typeFields_1.GlobalTypes.GLOBAL_XPUB]);\n  const key = Buffer.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = Buffer.allocUnsafe(splitPath.length * 4);\n  data.masterFingerprint.copy(value, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    value.writeUInt32LE(num, offset);\n    offset += 4;\n  });\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return (\n    Buffer.isBuffer(epk) &&\n    epk.length === 78 &&\n    [2, 3].indexOf(epk[45]) > -1 &&\n    Buffer.isBuffer(mfp) &&\n    mfp.length === 4 &&\n    typeof p === 'string' &&\n    !!p.match(/^m(\\/\\d+'?)*$/)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.extendedPubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.extendedPubkey.equals(item.extendedPubkey)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}