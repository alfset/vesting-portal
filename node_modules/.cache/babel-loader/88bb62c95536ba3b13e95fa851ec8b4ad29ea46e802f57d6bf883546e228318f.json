{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Coin = void 0;\nvar json_1 = require(\"../util/json\");\nvar numeric_1 = require(\"./numeric\");\nvar coin_1 = require(\"@terra-money/terra.proto/cosmos/base/v1beta1/coin\");\n/**\n * Captures `sdk.Coin` and `sdk.DecCoin` from Cosmos SDK. A composite value that combines\n * a denomination with an amount value. Coins are immutable once created, and operations\n * that return Coin will return a new Coin. See [[Coins]] for a collection of Coin objects.\n */\nvar Coin = /** @class */function (_super) {\n  __extends(Coin, _super);\n  /**\n   * Creates a new coin. Depending on the type of amount, it will be converted to an\n   * integer coin or decimal coin.\n   *\n   * @param denom denomination\n   * @param amount coin's amount\n   */\n  function Coin(denom, amount) {\n    var _this = _super.call(this) || this;\n    _this.denom = denom;\n    _this.amount = numeric_1.Numeric.parse(amount);\n    return _this;\n  }\n  /**\n   * Checks whether the Coin is an Integer coin.\n   */\n  Coin.prototype.isIntCoin = function () {\n    // TODO: convert into typeguard\n    return this.amount instanceof numeric_1.Int;\n  };\n  /**\n   * Checks whether the Coin is a Decimal coin.\n   */\n  Coin.prototype.isDecCoin = function () {\n    return this.amount instanceof numeric_1.Dec;\n  };\n  /**\n   * Turns the Coin into an Integer coin.\n   */\n  Coin.prototype.toIntCoin = function () {\n    return new Coin(this.denom, new numeric_1.Int(this.amount));\n  };\n  /**\n   * Turns the Coin into an Integer coin with ceiling the amount.\n   */\n  Coin.prototype.toIntCeilCoin = function () {\n    return new Coin(this.denom, new numeric_1.Int(this.amount.ceil()));\n  };\n  /**\n   * Turns the Coin into a Decimal coin.\n   */\n  Coin.prototype.toDecCoin = function () {\n    return new Coin(this.denom, new numeric_1.Dec(this.amount));\n  };\n  /**\n   * Outputs `<amount><denom>`.\n   *\n   * Eg: `Coin('uluna', 1500) -> 1500uluna`\n   */\n  Coin.prototype.toString = function () {\n    var amount = this.amount.toFixed();\n    if (this.isDecCoin() && amount.indexOf('.') === -1) {\n      return \"\".concat(amount, \".0\").concat(this.denom);\n    }\n    return \"\".concat(amount).concat(this.denom);\n  };\n  Coin.fromString = function (str) {\n    var m = str.match(/^(-?[0-9]+(\\.[0-9]+)?)([0-9a-zA-Z/]+)$/);\n    if (m === null) {\n      throw new Error(\"failed to parse to Coin: \".concat(str));\n    }\n    var amount = m[1];\n    var denom = m[3];\n    return new Coin(denom, amount);\n  };\n  /**\n   * Creates a new Coin adding to the current value.\n   *\n   * @param other\n   */\n  Coin.prototype.add = function (other) {\n    var otherAmount;\n    if (other instanceof Coin) {\n      if (other.denom !== this.denom) {\n        throw new Coin.ArithmeticError(\"cannot add two Coins of different denoms: \".concat(this.denom, \" and \").concat(other.denom));\n      }\n      otherAmount = other.amount;\n    } else {\n      otherAmount = other;\n    }\n    otherAmount = numeric_1.Numeric.parse(otherAmount);\n    return new Coin(this.denom, this.amount.add(otherAmount));\n  };\n  /**\n   * Creates a new Coin subtracting from the current value.\n   * @param other\n   */\n  Coin.prototype.sub = function (other) {\n    var otherAmount;\n    if (other instanceof Coin) {\n      if (other.denom !== this.denom) {\n        throw new Coin.ArithmeticError(\"cannot subtract two Coins of different denoms: \".concat(this.denom, \" and \").concat(other.denom));\n      }\n      otherAmount = other.amount;\n    } else {\n      otherAmount = other;\n    }\n    otherAmount = numeric_1.Numeric.parse(otherAmount);\n    return new Coin(this.denom, this.amount.sub(otherAmount));\n  };\n  /**\n   * Multiplies the current value with an amount.\n   * @param other\n   */\n  Coin.prototype.mul = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.mul(otherAmount));\n  };\n  /**\n   * Divides the current value with an amount.\n   * @param other\n   */\n  Coin.prototype.div = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.div(otherAmount));\n  };\n  /**\n   * Modulo the current value with an amount.\n   * @param other\n   */\n  Coin.prototype.mod = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.mod(otherAmount));\n  };\n  Coin.fromAmino = function (data) {\n    var denom = data.denom,\n      amount = data.amount;\n    return new Coin(denom, amount);\n  };\n  Coin.prototype.toAmino = function () {\n    var _a = this,\n      denom = _a.denom,\n      amount = _a.amount;\n    return {\n      denom: denom,\n      amount: amount.toString()\n    };\n  };\n  Coin.fromData = function (data) {\n    var denom = data.denom,\n      amount = data.amount;\n    return new Coin(denom, amount);\n  };\n  Coin.prototype.toData = function () {\n    var _a = this,\n      denom = _a.denom,\n      amount = _a.amount;\n    return {\n      denom: denom,\n      amount: amount.toString()\n    };\n  };\n  Coin.fromProto = function (proto) {\n    return new Coin(proto.denom, numeric_1.Numeric.parse(proto.amount));\n  };\n  Coin.prototype.toProto = function () {\n    return coin_1.Coin.fromPartial({\n      denom: this.denom,\n      amount: this.amount.toString()\n    });\n  };\n  return Coin;\n}(json_1.JSONSerializable);\nexports.Coin = Coin;\n(function (Coin) {\n  var ArithmeticError = /** @class */function () {\n    function ArithmeticError(message) {\n      this.message = message;\n    }\n    return ArithmeticError;\n  }();\n  Coin.ArithmeticError = ArithmeticError;\n})(Coin = exports.Coin || (exports.Coin = {}));\nexports.Coin = Coin;","map":{"version":3,"names":["json_1","require","numeric_1","coin_1","Coin","_super","__extends","denom","amount","_this","call","Numeric","parse","prototype","isIntCoin","Int","isDecCoin","Dec","toIntCoin","toIntCeilCoin","ceil","toDecCoin","toString","toFixed","indexOf","concat","fromString","str","m","match","Error","add","other","otherAmount","ArithmeticError","sub","mul","div","mod","fromAmino","data","toAmino","_a","fromData","toData","fromProto","proto","toProto","fromPartial","JSONSerializable","exports","message"],"sources":["../../src/core/Coin.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}