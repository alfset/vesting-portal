{"ast":null,"code":"import{connect,// Contract,\nkeyStores,providers}from'near-api-js';import{useTranslation}from'react-i18next';import{useCallback,useEffect,useMemo,useState}from'react';// import {getConfig} from './config'\nimport{tryParseAmount3}from'../../state/swap/hooks';import{BigAmount}from'../../utils/formatBignumber';import{useTransactionAdder}from'../../state/transactions/hooks';import{recordsTxns}from'../../utils/bridge/register';import{useTxnsDtilOpen,useTxnsErrorTipOpen}from'../../state/application/hooks';import useInterval from'../../hooks/useInterval';import{isAddress}from'../../utils/isAddress';import{ChainId}from'../../config/chainConfig/chainId';// import { VALID_BALANCE } from '../../config/constant'\nimport{// useDarkModeManager,\n// useExpertModeManager,\n// useInterfaceModeManager,\nuseInterfaceBalanceValidManager// useUserTransactionTTL,\n// useUserSlippageTolerance\n}from'../../state/user/hooks';import config from'../../config';// export enum WrapType {\n//   NOT_APPLICABLE,\n//   WRAP,\n//   UNWRAP,\n//   NOCONNECT\n// }\n// import { setupWalletSelector } from \"@near-wallet-selector/core\";\n// import { setupModal } from \"@near-wallet-selector/modal-ui\";\n// import { setupSender } from \"@near-wallet-selector/sender\";\nimport{useWalletSelector}from\"./WalletSelectorContext\";// import type { Transaction } from \"@near-wallet-selector/core\";\n// import { BigNumber } from '@ethersproject/bignumber'\nconst NOT_APPLICABLE={};// const nearConfig:any = getConfig(process.env.NODE_ENV || 'development')\n// const contractId = 'bridge-1.crossdemo.testnet'\nexport async function initConnect(chainId,token){let account;try{let connectConfig={};if(chainId===ChainId.NEAR_TEST){connectConfig={networkId:\"testnet\",keyStore:new keyStores.InMemoryKeyStore(),nodeUrl:\"https://rpc.testnet.near.org\",walletUrl:\"https://wallet.testnet.near.org\",helperUrl:\"https://helper.testnet.near.org\",explorerUrl:\"https://explorer.testnet.near.org\"};}else if(chainId===ChainId.NEAR){connectConfig={networkId:'mainnet',keyStore:new keyStores.InMemoryKeyStore(),nodeUrl:'https://rpc.mainnet.near.org',walletUrl:'https://wallet.near.org',helperUrl:'https://helper.mainnet.near.org',explorerUrl:'https://explorer.mainnet.near.org'};}const near=await connect(connectConfig);// console.log(near)\naccount=await near.account(token);}catch(error){console.log('initConnect');console.log(error);}return account;}export function useNearAddress(){var _window;let accountId=\"\";if((_window=window)===null||_window===void 0?void 0:_window.selector){if(window.selector.store.getState().accounts.length>0){accountId=window.selector.store.getState().accounts[0].accountId;}}return accountId;}export function useLogin(){// const login = useCallback(async() => {\n//   if (window?.near) {\n//     try {\n//       const res = await window.near.requestSignIn({ contractId, methodNames: [] })\n//       if (!res.error) {\n//         if (res && res.accessKey) {\n//           setAccess(res.accessKey)\n//         } else {\n//           console.log('res: ', res)\n//         }\n//       }\n//     } catch (error) {\n//       console.log('error: ', error)\n//     }\n//   } else {\n//     if (confirm('Please install Sender Wallet.') === true) {\n//       window.open('https://chrome.google.com/webstore/detail/sender-wallet/epapihdplajcdnnkdeiahlgigofloibg')\n//     }\n//   }\n// }, [])\n// 更换到selector登录\nconst{modal}=useWalletSelector();const login=useCallback(async()=>{var _window2;if((_window2=window)===null||_window2===void 0?void 0:_window2.selector){try{modal.show();// if (!res.error) {\n//   if (res && res.accessKey) {\n//     setAccess(res.accessKey)\n//   } else {\n//     console.log('res: ', res)\n//   }\n// }\n}catch(error){console.log('error: ',error);}}else{}},[]);const logoutNear=useCallback(async()=>{var _window3;if((_window3=window)===null||_window3===void 0?void 0:_window3.selector){const wallet=await window.selector.wallet();wallet.signOut().catch(err=>{console.log(\"Failed to sign out\");console.error(err);});}return{};},[]);return{login,logoutNear};}export function useNearBalance(){const{selector}=useWalletSelector();const{network}=selector.options;// console.log(selector)\n// console.log(network)\nconst provider=new providers.JsonRpcProvider({url:network.nodeUrl});const getNearBalance=useCallback(async()=>{// let bl:any = ''\n// try {\n//   bl = await window.nightly.near?.account().getAccountBalance()\n// } catch (error) {\n// }\n// console.log(bl)\n// return bl\nconst accountId=useNearAddress();try{const{amount}=await provider.query({\"request_type\":\"view_account\",finality:\"final\",\"account_id\":accountId});// const bn = BigNumber.from(amount);\nreturn{total:amount,available:amount};}catch(error){}return{};},[]);const getNearTokenBalance=useCallback(async _ref=>{let{token}=_ref;let bl=BigInt(0);const accountId=useNearAddress();// const useAccount = account ? account : window.near?.accountId\n// try {\n//   bl = await window.near?.account().viewFunction(\n//     token,\n//     'ft_balance_of',\n//     { \"account_id\": useAccount },\n//   )\n// } catch (error) {\n// }\n// console.log(bl)\n// return bl\nif(token&&token!=='mpc.testnet'){try{bl=await provider.query({\"request_type\":\"call_function\",\"account_id\":token,\"method_name\":\"ft_balance_of\",\"args_base64\":Buffer.from(JSON.stringify({\"account_id\":accountId})).toString('base64'),finality:\"optimistic\"});bl=JSON.parse(Buffer.from(bl.result).toString());}catch(error){console.log(error);}}return bl;},[]);const getNearStorageBalance=useCallback(async _ref2=>{var _window4,_window4$near;let{token,account,chainId}=_ref2;let bl;const useAccount=account?account:(_window4=window)===null||_window4===void 0?void 0:(_window4$near=_window4.near)===null||_window4$near===void 0?void 0:_window4$near.accountId;const accountFn=await initConnect(chainId,token);// console.log(accountFn)\ntry{if(accountFn&&useAccount&&isAddress(useAccount,chainId)){bl=await accountFn.viewFunction(token,'storage_balance_of',{\"account_id\":useAccount});}}catch(error){console.log(error);}return bl;},[]);const getNearStorageBalanceBounds=useCallback(async _ref3=>{let{token,chainId}=_ref3;let bl;const accountFn=await initConnect(chainId,token);try{if(accountFn&&isAddress(token,chainId)){bl=await accountFn.viewFunction(token,'storage_balance_bounds');}}catch(error){console.log(error);}return bl;},[]);return{getNearBalance,getNearTokenBalance,getNearStorageBalance,getNearStorageBalanceBounds};}export function useNearPoolDatas(){const getNearPoolDatas=useCallback(async(calls,chainId)=>{return new Promise(resolve=>{var _window5,_window6,_window6$near;const arr=[];const labelArr=[];// console.log(chainId)\nif(((_window5=window)===null||_window5===void 0?void 0:_window5.selector)&&((_window6=window)===null||_window6===void 0?void 0:(_window6$near=_window6.near)===null||_window6$near===void 0?void 0:_window6$near.account)&&[ChainId.NEAR,ChainId.NEAR_TEST].includes(chainId)){for(const item of calls){if(item.token==='near'||item.anytoken==='near')continue;if(item.token){var _window7,_window7$near,_window8,_window8$near;arr.push((_window7=window)===null||_window7===void 0?void 0:(_window7$near=_window7.near)===null||_window7$near===void 0?void 0:_window7$near.account().viewFunction(item.token,'ft_balance_of',{\"account_id\":item.anytoken}));labelArr.push({key:item.anytoken,label:'balanceOf'});arr.push((_window8=window)===null||_window8===void 0?void 0:(_window8$near=_window8.near)===null||_window8$near===void 0?void 0:_window8$near.account().viewFunction(item.token,'ft_total_supply',{}));labelArr.push({key:item.anytoken,label:'totalSupply'});}if(isAddress(item.account,chainId)){var _window9,_window9$near;arr.push((_window9=window)===null||_window9===void 0?void 0:(_window9$near=_window9.near)===null||_window9$near===void 0?void 0:_window9$near.account().viewFunction(item.anytoken,'ft_balance_of',{\"account_id\":item.account}));labelArr.push({key:item.anytoken,label:'balance'});}}}// console.log(calls)\nPromise.all(arr).then(res=>{// console.log(res)\nconst list={};for(let i=0,len=arr.length;i<len;i++){const k=labelArr[i].key;const l=labelArr[i].label;if(!list[k])list[k]={};list[k][l]=res[i];}// console.log(list)\nresolve(list);});});},[]);return{getNearPoolDatas};}export function useSendNear(){const{selector,accountId}=useWalletSelector();const sendTransaction=useCallback(async actions=>{const wallet=await selector.wallet();const transactions=[];transactions.push({signerId:accountId||\"\",receiverId:actions.receiverId,actions:[{type:\"FunctionCall\",params:actions.actions[0]}]});return wallet.signAndSendTransactions({transactions});},[selector,accountId]);const sendNear=useCallback(async(routerContractId,amount,bindaddr,selectchain,tokenType,anyContractId)=>{return new Promise((resolve,reject)=>{// console.log('sendNear')\nconst actions={receiverId:tokenType==='ANYTOKEN'?anyContractId:routerContractId,actions:[]};if(tokenType==='ANYTOKEN'){actions.actions.push({methodName:'swap_out',args:{\"receiver_id\":\"\".concat(bindaddr),\"to_chain_id\":\"\".concat(selectchain),\"amount\":\"\".concat(amount)},gas:'300000000000000',deposit:'0'});}else{actions.actions.push({methodName:'swap_out',args:{\"receiver_id\":\"\".concat(bindaddr),\"to_chain_id\":\"\".concat(selectchain)},gas:'300000000000000',deposit:amount});}let tx={};// window.near.signAndSendTransaction(actions)\nsendTransaction(actions)// window.nightly.near.signAllTransactions(actions)\n.then(res=>{console.log(res);if(res&&res.length>0){tx=res[0].transaction;resolve(tx);}else{reject(\"sendTransaction ERROR\");}// if (res?.response && !res?.response.error && res?.response.length > 0) {\n//   tx = res?.response[0]?.transaction\n//   resolve(tx)\n// } else {\n//   reject(res?.response?.error)\n// }\n}).catch(error=>{reject(error);});});},[]);const sendNearToken=useCallback(async(contractId,anyContractId,routerContractId,amount,bindaddr,selectchain)=>{return new Promise((resolve,reject)=>{console.log('sendNearToken');const actions={receiverId:contractId,actions:[{methodName:'ft_transfer',args:{'receiver_id':routerContractId,amount:amount,// wNear decimals is 24\nmemo:\"\".concat(bindaddr,\" \").concat(selectchain)},gas:'300000000000000',deposit:'1'}]};console.log(actions);let tx={};sendTransaction(actions)// window.nightly.near.signAllTransactions(actions)\n.then(res=>{console.log(res);if(res&&res.length>0){tx=res[0].transaction;resolve(tx);}else{reject(\"sendTransaction ERROR\");}// if (res?.response && !res?.response.error && res?.response.length > 0) {\n//   tx = res?.response[0]?.transaction\n//   resolve(tx)\n// } else {\n//   reject(res?.response?.error)\n// }\n}).catch(error=>{reject(error);});});},[]);const depositStorageNear=useCallback((contractid,accountId,nearStorageBalanceBounds)=>{return new Promise((resolve,reject)=>{console.log('sendNearToken');const actions={receiverId:contractid,actions:[{methodName:'storage_deposit',args:{\"account_id\":accountId// \"registration_only\": true, \n},gas:'300000000000000',// deposit: 1e24\ndeposit:nearStorageBalanceBounds?nearStorageBalanceBounds:'1250000000000000000000'// deposit: amount\n}]// amount: amount\n};console.log(actions);let tx={};sendTransaction(actions)// window.nightly.near.signAllTransactions(actions)\n.then(res=>{console.log(res);if(res&&res.length>0){tx=res[0].transaction;resolve(tx);}else{reject(\"sendTransaction ERROR\");}// if (res?.response && !res?.response.error && res?.response.length > 0) {\n//   tx = res?.response[0]?.transaction\n//   resolve(tx)\n// } else {\n//   reject(res?.response?.error)\n// }\n}).catch(error=>{reject(error);});});},[]);const depositNearToken=useCallback(async(contractId,anyContractId,routerContractId,amount,bindaddr,selectchain)=>{return new Promise((resolve,reject)=>{console.log('sendNearToken');const actions={receiverId:contractId,actions:[{methodName:'ft_transfer_call',args:{'receiver_id':routerContractId,amount:amount,// wNear decimals is 24\nmsg:\"any_swap_out \".concat(anyContractId,\" \").concat(bindaddr,\" \").concat(selectchain)},gas:'300000000000000',deposit:'1'}]};console.log(actions);let tx={};sendTransaction(actions)// window.nightly.near.signAllTransactions(actions)\n.then(res=>{console.log(res);if(res&&res.length>0){tx=res[0].transaction;resolve(tx);}else{reject(\"sendTransaction ERROR\");}// if (res?.response && !res?.response.error && res?.response.length > 0) {\n//   tx = res?.response[0]?.transaction\n//   resolve(tx)\n// } else {\n//   reject(res?.response?.error)\n// }\n}).catch(error=>{reject(error);});});},[]);const withdrawNearToken=useCallback(async(contractId,anyContractId,routerContractId,amount,bindaddr,selectchain)=>{return new Promise((resolve,reject)=>{console.log('sendNearToken');const actions={receiverId:contractId,actions:[{methodName:'ft_transfer_call',args:{'receiver_id':routerContractId,amount:amount,// wNear decimals is 24\nmsg:\"any_swap_out \".concat(anyContractId,\" \").concat(bindaddr,\" \").concat(selectchain)},gas:'300000000000000',deposit:'1'}]};console.log(actions);let tx={};sendTransaction(actions)// window.nightly.near.signAllTransactions(actions)\n.then(res=>{console.log(res);if(res&&res.length>0){tx=res[0].transaction;resolve(tx);}else{reject(\"sendTransaction ERROR\");}// if (res?.response && !res?.response.error && res?.response.length > 0) {\n//   tx = res?.response[0]?.transaction\n//   resolve(tx)\n// } else {\n//   reject(res?.response?.error)\n// }\n}).catch(error=>{reject(error);});});},[]);return{sendNear,sendNearToken,depositStorageNear,depositNearToken,withdrawNearToken};}// contractId, anyContractId, routerContractId, amount, bindaddr, selectchain\nexport function useNearSendTxns(routerToken,inputCurrency,anyContractId,contractId,typedValue,receiverId,chainId,selectChain,destConfig,useToChainId){const{sendNear,sendNearToken}=useSendNear();const{t}=useTranslation();const address=useNearAddress();const addTransaction=useTransactionAdder();const[userInterfaceBalanceValid]=useInterfaceBalanceValidManager();const{onChangeViewDtil}=useTxnsDtilOpen();const{onChangeViewErrorTip}=useTxnsErrorTipOpen();const[balance,setBalance]=useState();const inputAmount=useMemo(()=>tryParseAmount3(typedValue,inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.decimals),[typedValue,inputCurrency]);const underlyingToken=contractId?contractId:anyContractId;const{getNearBalance,getNearTokenBalance}=useNearBalance();const getBalance=useCallback(()=>{if([ChainId.NEAR,ChainId.NEAR_TEST].includes(chainId)){if((inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.tokenType)==='NATIVE'||(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address)==='near'){getNearBalance().then(res=>{if(res===null||res===void 0?void 0:res.available){// setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\nsetBalance(BigAmount.format(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.decimals,res===null||res===void 0?void 0:res.total));}else{setBalance('');}});}else{getNearTokenBalance({token:contractId}).then(res=>{// console.log(contractId)\n// console.log(res)\nif(res){// setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\nsetBalance(BigAmount.format(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.decimals,res));}else{setBalance('');}});}}},[inputCurrency,contractId,chainId]);useEffect(()=>{getBalance();},[inputCurrency,contractId]);useInterval(getBalance,1000*10);let sufficientBalance=false;try{// sufficientBalance = true\nsufficientBalance=inputCurrency&&typedValue&&balance&&Number(balance===null||balance===void 0?void 0:balance.toExact())>=Number(typedValue);}catch(error){console.log(error);}return useMemo(()=>{// console.log(inputAmount)\n// console.log(receiverId)\n// console.log(selectChain)\n// console.log(routerToken)\n// console.log(underlyingToken)\n// console.log(chainId)\nif(!useToChainId||!routerToken||!underlyingToken||!chainId)return NOT_APPLICABLE;// console.log(balance)\nreturn{// wrapType: WrapType.WRAP,\nbalance,execute:receiverId&&(sufficientBalance||!userInterfaceBalanceValid)&&inputAmount?async()=>{try{const txReceipt=[\"NATIVE\",\"ANYTOKEN\"].includes(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.tokenType)||(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address)==='near'?await sendNear(routerToken,inputAmount,receiverId,useToChainId,inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.tokenType,anyContractId):await sendNearToken(contractId,anyContractId,routerToken,inputAmount,receiverId,useToChainId);console.log(txReceipt);if(txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash){const data={hash:txReceipt.hash,chainId:chainId,selectChain:selectChain,account:address,value:inputAmount,formatvalue:typedValue,to:receiverId,symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,version:destConfig.type,pairid:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,routerToken:routerToken};addTransaction(txReceipt,{summary:\"Cross bridge \".concat(typedValue,\" \").concat(inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol),value:typedValue,toChainId:selectChain,toAddress:receiverId.indexOf('0x')===0?receiverId===null||receiverId===void 0?void 0:receiverId.toLowerCase():receiverId,symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,version:'swapin',routerToken:routerToken,token:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address,logoUrl:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.logoUrl,isLiquidity:destConfig===null||destConfig===void 0?void 0:destConfig.isLiquidity,fromInfo:{symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol,name:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.name,decimals:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.decimals,address:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.address},toInfo:{symbol:destConfig===null||destConfig===void 0?void 0:destConfig.symbol,name:destConfig===null||destConfig===void 0?void 0:destConfig.name,decimals:destConfig===null||destConfig===void 0?void 0:destConfig.decimals,address:destConfig===null||destConfig===void 0?void 0:destConfig.address}});recordsTxns(data);onChangeViewDtil(txReceipt===null||txReceipt===void 0?void 0:txReceipt.hash,true);}}catch(error){console.log('Could not swapout',error);onChangeViewErrorTip('Txns failure.',true);}}:undefined,inputError:sufficientBalance?undefined:t('Insufficient',{symbol:inputCurrency===null||inputCurrency===void 0?void 0:inputCurrency.symbol})};},[inputAmount,receiverId,selectChain,routerToken,anyContractId,contractId,chainId,inputCurrency,balance,underlyingToken,destConfig,useToChainId,userInterfaceBalanceValid]);}/**\n * any token 充值与提现underlying\n * 给定选定的输入和输出货币，返回一个wrap回调\n * @param inputCurrency 选定的输入货币\n * @param typedValue 用户输入值\n */ //  export function useNearSwapPoolUnderlyingCallback(\n//   inputCurrency: any,\n//   inputToken: string | undefined,\n//   // anyContractId:any,\n//   contractId:any,\n//   typedValue: string | undefined,\n//   swapType: string | undefined,\n//   // selectCurrency: any,\n//   chainId: any\n// // ): { execute?: undefined | (() => Promise<void>); inputError?: string } {\n// ): { execute?: undefined | (() => Promise<void>); inputError?: string } {\n//   // const { chainId } = useActiveReact()\n//   // const bridgeContract = useSwapUnderlyingContract(isAddress(inputToken, evmChainId))\n//   const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n//   const { t } = useTranslation()\n//   const {depositNearToken, withdrawNearToken} = useSendNear()\n//   const [balance, setBalance] = useState<any>()\n//   // const useAccount:any = isAddress(account, evmChainId)\n//   // const ethbalance = useETHBalances(useAccount ? [useAccount] : [])?.[account ?? '']\n//   // const anybalance = useCurrencyBalance(useAccount ?? undefined, inputCurrency)\n//   // const balance = selectCurrency?.tokenType === \"NATIVE\" ? ethbalance : anybalance\n//   // const underlyingToken = contractId ? contractId : anyContractId\n//   const {\n//     getNearBalance,\n//     getNearTokenBalance\n//   } = useNearBalance()\n//   const getBalance = useCallback(() => {\n//     if (inputCurrency?.tokenType === 'NATIVE') {\n//       getNearBalance().then(res => {\n//         if (res?.available) {\n//           // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n//           setBalance(BigAmount.format(inputCurrency?.decimals,res?.total))\n//         } else {\n//           setBalance('')\n//         }\n//       })\n//     } else {\n//       getNearTokenBalance({token: contractId}).then(res => {\n//         // console.log(contractId)\n//         // console.log(res)\n//         if (res) {\n//           // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n//           setBalance(BigAmount.format(inputCurrency?.decimals,res))\n//         } else {\n//           setBalance('')\n//         }\n//       })\n//     }\n//   }, [inputCurrency, contractId])\n//   useEffect(() => {\n//     getBalance()\n//   }, [inputCurrency, contractId])\n//   useInterval(getBalance, 1000 * 10)\n//   // console.log(balance?.raw.toString())\n//   // console.log(inputCurrency)\n//   // 我们总是可以解析输入货币的金额，因为包装是1:1\n//   const inputAmount = useMemo(() => tryParseAmount3(typedValue, inputCurrency?.decimals), [typedValue, inputCurrency])\n//   const addTransaction = useTransactionAdder()\n//   return useMemo(() => {\n//     // console.log(inputCurrency)\n//     if (!chainId || !inputCurrency || !swapType || [ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) return NOT_APPLICABLE\n//     // console.log(inputAmount?.raw.toString())\n//     const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n//     // console.log(sufficientBalance)\n//     return {\n//       execute:\n//       (sufficientBalance || !VALID_BALANCE) && inputAmount\n//           ? async () => {\n//               try {\n//                 // console.log(inputAmount.raw.toString(16))\n//                 const txReceipt:any = swapType === 'deposit' ? await depositNearToken : await withdrawNearToken\n//                 addTransaction(txReceipt, { summary: `${swapType === 'deposit' ? 'Deposit' : 'Withdraw'} ${inputAmount.toSignificant(6)} ${inputCurrency?.symbol}` })\n//               } catch (error) {\n//                 console.log('Could not swapout', error)\n//                 onChangeViewErrorTip(error, true)\n//               }\n//             }\n//           : undefined,\n//       inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n//     }\n//   }, [chainId, inputCurrency, inputAmount, balance, addTransaction, t, swapType, inputToken])\n// }\nexport function updateNearHash(hash,chainId){const data={msg:'Error',info:''};return new Promise(resolve=>{// const url = 'https://rpc.testnet.near.org'\nconst url=config.chainInfo[chainId].nodeRpc;fetch(url,{method:'POST',headers:{'content-type':'application/json',accept:'application/json'},body:JSON.stringify({\"jsonrpc\":\"2.0\",\"id\":\"dontcare\",\"method\":\"EXPERIMENTAL_tx_status\",\"params\":[hash,\"bowen\"]})}).then(res=>res.json()).then(json=>{var _json$result,_json$result$transact;console.log(json);const result=json===null||json===void 0?void 0:(_json$result=json.result)===null||_json$result===void 0?void 0:(_json$result$transact=_json$result.transaction_outcome)===null||_json$result$transact===void 0?void 0:_json$result$transact.outcome;if(result){var _result$status,_result$status2,_result$status3;if((result===null||result===void 0?void 0:(_result$status=result.status)===null||_result$status===void 0?void 0:_result$status.SuccessReceiptId)||(result===null||result===void 0?void 0:(_result$status2=result.status)===null||_result$status2===void 0?void 0:_result$status2.SuccessValue)){data.msg='Success';data.info=json;}else if(result===null||result===void 0?void 0:(_result$status3=result.status)===null||_result$status3===void 0?void 0:_result$status3.Failure){data.msg='Failure';data.error='Txns is failure!';}else{data.msg='Null';data.error='Query is empty!';}}else{data.msg='Null';data.error='Query is empty!';}resolve(data);}).catch(err=>{console.log(err.toString());data.error='Query is empty!';resolve(data);});});}// updateNearHash('4KVYoGtn2FFceXdtrttGPkqWnKAGJZ9yVArFMF2z7RxH', 'NEAR_TEST').then(res => {\n//   console.log(res)\n// })","map":{"version":3,"names":["connect","keyStores","providers","useTranslation","useCallback","useEffect","useMemo","useState","tryParseAmount3","BigAmount","useTransactionAdder","recordsTxns","useTxnsDtilOpen","useTxnsErrorTipOpen","useInterval","isAddress","ChainId","useInterfaceBalanceValidManager","config","useWalletSelector","NOT_APPLICABLE","initConnect","chainId","token","account","connectConfig","NEAR_TEST","networkId","keyStore","InMemoryKeyStore","nodeUrl","walletUrl","helperUrl","explorerUrl","NEAR","near","error","console","log","useNearAddress","_window","accountId","window","selector","store","getState","accounts","length","useLogin","modal","login","_window2","show","logoutNear","_window3","wallet","signOut","catch","err","useNearBalance","network","options","provider","JsonRpcProvider","url","getNearBalance","amount","query","finality","total","available","getNearTokenBalance","_ref","bl","BigInt","Buffer","from","JSON","stringify","toString","parse","result","getNearStorageBalance","_ref2","_window4","_window4$near","useAccount","accountFn","viewFunction","getNearStorageBalanceBounds","_ref3","useNearPoolDatas","getNearPoolDatas","calls","Promise","resolve","_window5","_window6","_window6$near","arr","labelArr","includes","item","anytoken","_window7","_window7$near","_window8","_window8$near","push","key","label","_window9","_window9$near","all","then","res","list","i","len","k","l","useSendNear","sendTransaction","actions","transactions","signerId","receiverId","type","params","signAndSendTransactions","sendNear","routerContractId","bindaddr","selectchain","tokenType","anyContractId","reject","methodName","args","concat","gas","deposit","tx","transaction","sendNearToken","contractId","memo","depositStorageNear","contractid","nearStorageBalanceBounds","depositNearToken","msg","withdrawNearToken","useNearSendTxns","routerToken","inputCurrency","typedValue","selectChain","destConfig","useToChainId","t","address","addTransaction","userInterfaceBalanceValid","onChangeViewDtil","onChangeViewErrorTip","balance","setBalance","inputAmount","decimals","underlyingToken","getBalance","format","sufficientBalance","Number","toExact","execute","txReceipt","hash","data","value","formatvalue","to","symbol","version","pairid","summary","toChainId","toAddress","indexOf","toLowerCase","logoUrl","isLiquidity","fromInfo","name","toInfo","undefined","inputError","updateNearHash","info","chainInfo","nodeRpc","fetch","method","headers","accept","body","json","_json$result","_json$result$transact","transaction_outcome","outcome","_result$status","_result$status2","_result$status3","status","SuccessReceiptId","SuccessValue","Failure"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/near/index.ts"],"sourcesContent":["import {\n  connect,\n  // Contract,\n  keyStores,\n  providers\n} from 'near-api-js'\nimport type { AccountView, CodeResult } from \"near-api-js/lib/providers/provider\";\nimport type { Transaction } from \"@near-wallet-selector/core\";\nimport { useTranslation } from 'react-i18next'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\n// import {getConfig} from './config'\nimport { tryParseAmount3 } from '../../state/swap/hooks'\nimport { BigAmount } from '../../utils/formatBignumber'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { recordsTxns } from '../../utils/bridge/register'\nimport { useTxnsDtilOpen, useTxnsErrorTipOpen } from '../../state/application/hooks'\nimport useInterval from '../../hooks/useInterval'\nimport { isAddress } from '../../utils/isAddress'\nimport { ChainId } from '../../config/chainConfig/chainId'\n// import { VALID_BALANCE } from '../../config/constant'\nimport {\n  // useDarkModeManager,\n  // useExpertModeManager,\n  // useInterfaceModeManager,\n  useInterfaceBalanceValidManager\n  // useUserTransactionTTL,\n  // useUserSlippageTolerance\n} from '../../state/user/hooks'\nimport config from '../../config'\n// export enum WrapType {\n//   NOT_APPLICABLE,\n//   WRAP,\n//   UNWRAP,\n//   NOCONNECT\n// }\n\n\n// import { setupWalletSelector } from \"@near-wallet-selector/core\";\n// import { setupModal } from \"@near-wallet-selector/modal-ui\";\n// import { setupSender } from \"@near-wallet-selector/sender\";\nimport { useWalletSelector } from \"./WalletSelectorContext\";\n// import type { Transaction } from \"@near-wallet-selector/core\";\n// import { BigNumber } from '@ethersproject/bignumber'\n\nconst NOT_APPLICABLE = {}\n\n// const nearConfig:any = getConfig(process.env.NODE_ENV || 'development')\n// const contractId = 'bridge-1.crossdemo.testnet'\n\nexport async function initConnect(chainId: any, token: any) {\n  let account\n  try {\n    let connectConfig: any = {}\n    if (chainId === ChainId.NEAR_TEST) {\n      connectConfig = {\n        networkId: \"testnet\",\n        keyStore: new keyStores.InMemoryKeyStore(),\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      }\n    } else if (chainId === ChainId.NEAR) {\n      connectConfig = {\n        networkId: 'mainnet',\n        keyStore: new keyStores.InMemoryKeyStore(),\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org',\n        explorerUrl: 'https://explorer.mainnet.near.org',\n      }\n    }\n    const near = await connect(connectConfig);\n    // console.log(near)\n    account = await near.account(token);\n  } catch (error) {\n    console.log('initConnect')\n    console.log(error)\n  }\n  return account;\n}\n\nexport function useNearAddress() {\n  let accountId = \"\"\n  if (window?.selector) {\n    if (window.selector.store.getState().accounts.length > 0) {\n      accountId = window.selector.store.getState().accounts[0].accountId;\n    }\n  }\n  return accountId;\n}\n\nexport function useLogin() {\n\n  // const login = useCallback(async() => {\n  //   if (window?.near) {\n  //     try {\n  //       const res = await window.near.requestSignIn({ contractId, methodNames: [] })\n  //       if (!res.error) {\n  //         if (res && res.accessKey) {\n  //           setAccess(res.accessKey)\n  //         } else {\n  //           console.log('res: ', res)\n  //         }\n  //       }\n  //     } catch (error) {\n  //       console.log('error: ', error)\n  //     }\n  //   } else {\n  //     if (confirm('Please install Sender Wallet.') === true) {\n  //       window.open('https://chrome.google.com/webstore/detail/sender-wallet/epapihdplajcdnnkdeiahlgigofloibg')\n  //     }\n  //   }\n  // }, [])\n\n\n  // 更换到selector登录\n  const { modal } = useWalletSelector();\n\n  const login = useCallback(async () => {\n    if (window?.selector) {\n      try {\n\n        modal.show()\n        // if (!res.error) {\n        //   if (res && res.accessKey) {\n        //     setAccess(res.accessKey)\n        //   } else {\n        //     console.log('res: ', res)\n        //   }\n        // }\n      } catch (error) {\n        console.log('error: ', error)\n      }\n    } else {\n\n    }\n  }, []);\n\n  const logoutNear = useCallback(async() => {\n    if (window?.selector) {\n      const wallet = await window.selector.wallet();\n      wallet.signOut().catch((err) => {\n        console.log(\"Failed to sign out\");\n        console.error(err);\n      });\n    }\n    return {}\n  }, [])\n\n  return {\n    login,\n    logoutNear\n  }\n}\n\nexport function useNearBalance() {\n  const { selector  } = useWalletSelector();\n  const { network } = selector.options;\n  // console.log(selector)\n  // console.log(network)\n  const provider = new providers.JsonRpcProvider({ url: network.nodeUrl });\n  const getNearBalance = useCallback(async () => {\n    // let bl:any = ''\n    // try {\n    //   bl = await window.nightly.near?.account().getAccountBalance()\n    // } catch (error) {\n\n    // }\n    // console.log(bl)\n    // return bl\n    const accountId = useNearAddress()\n    try {\n      const { amount } = await provider.query<AccountView>({\n        \"request_type\": \"view_account\",\n        finality: \"final\",\n        \"account_id\": accountId,\n      });\n      // const bn = BigNumber.from(amount);\n      return { total: amount, available: amount }\n    } catch (error) {\n\n    }\n    return {}\n  }, [])\n\n  const getNearTokenBalance = useCallback(async ({ token }) => {\n    let bl: any = BigInt(0);\n    const accountId = useNearAddress()\n    // const useAccount = account ? account : window.near?.accountId\n    // try {\n\n    //   bl = await window.near?.account().viewFunction(\n    //     token,\n    //     'ft_balance_of',\n    //     { \"account_id\": useAccount },\n    //   )\n    // } catch (error) {\n\n    // }\n    // console.log(bl)\n    // return bl\n    if (token && token !== 'mpc.testnet') {\n      try {\n        bl = await provider.query<CodeResult>({\n          \"request_type\": \"call_function\",\n          \"account_id\": token,\n          \"method_name\": \"ft_balance_of\",\n          \"args_base64\": Buffer.from(JSON.stringify({\n            \"account_id\": accountId\n          })).toString('base64'),\n          finality: \"optimistic\",\n        });\n        bl = JSON.parse(Buffer.from(bl.result).toString())\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n\n    return bl\n  }, [])\n\n  const getNearStorageBalance = useCallback(async ({ token, account, chainId }) => {\n    let bl: any\n    const useAccount = account ? account : window?.near?.accountId\n    const accountFn = await initConnect(chainId, token);\n    // console.log(accountFn)\n    try {\n      if (accountFn && useAccount && isAddress(useAccount, chainId)) {\n        bl = await accountFn.viewFunction(\n          token,\n          'storage_balance_of',\n          { \"account_id\": useAccount },\n        )\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    return bl\n  }, [])\n\n  const getNearStorageBalanceBounds = useCallback(async ({ token, chainId }) => {\n    let bl: any\n    const accountFn = await initConnect(chainId, token);\n    try {\n      if (accountFn && isAddress(token, chainId)) {\n        bl = await accountFn.viewFunction(\n          token,\n          'storage_balance_bounds',\n        )\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    return bl\n  }, [])\n\n  return {\n    getNearBalance,\n    getNearTokenBalance,\n    getNearStorageBalance,\n    getNearStorageBalanceBounds\n  }\n}\n\nexport function useNearPoolDatas() {\n  const getNearPoolDatas = useCallback(async (calls, chainId) => {\n    return new Promise(resolve => {\n      const arr = []\n      const labelArr: any = []\n      // console.log(chainId)\n      if (window?.selector && window?.near?.account && [ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) {\n\n        for (const item of calls) {\n          if (item.token === 'near' || item.anytoken === 'near') continue\n          if (item.token) {\n            arr.push(window?.near?.account().viewFunction(\n              item.token,\n              'ft_balance_of',\n              { \"account_id\": item.anytoken },\n            ))\n            labelArr.push({\n              key: item.anytoken,\n              label: 'balanceOf'\n            })\n            arr.push(window?.near?.account().viewFunction(\n              item.token,\n              'ft_total_supply',\n              {},\n            ))\n            labelArr.push({\n              key: item.anytoken,\n              label: 'totalSupply'\n            })\n          }\n\n          if (isAddress(item.account, chainId)) {\n\n            arr.push(window?.near?.account().viewFunction(\n              item.anytoken,\n              'ft_balance_of',\n              { \"account_id\": item.account },\n            ))\n            labelArr.push({\n              key: item.anytoken,\n              label: 'balance'\n            })\n          }\n        }\n      }\n      // console.log(calls)\n      Promise.all(arr).then(res => {\n        // console.log(res)\n        const list: any = {}\n        for (let i = 0, len = arr.length; i < len; i++) {\n          const k = labelArr[i].key\n          const l = labelArr[i].label\n          if (!list[k]) list[k] = {}\n          list[k][l] = res[i]\n        }\n        // console.log(list)\n        resolve(list)\n      })\n    })\n  }, [])\n\n  return {\n    getNearPoolDatas,\n  }\n}\n\n\nexport function useSendNear() {\n  const { selector, accountId } = useWalletSelector();\n\n  const sendTransaction = useCallback(\n    async (actions: any) => {\n      const wallet = await selector.wallet();\n      const transactions: Array<Transaction> = [];\n      transactions.push({\n        signerId: accountId || \"\",\n        receiverId: actions.receiverId,\n        actions: [\n          {\n            type: \"FunctionCall\",\n            params: actions.actions[0]\n          },\n        ]\n      });\n      return wallet\n        .signAndSendTransactions({ transactions })\n\n    },\n    [selector, accountId]\n  );\n\n  const sendNear = useCallback(async (routerContractId, amount, bindaddr, selectchain, tokenType, anyContractId) => {\n    return new Promise((resolve, reject) => {\n      // console.log('sendNear')\n      const actions: any = {\n        receiverId: tokenType === 'ANYTOKEN' ? anyContractId : routerContractId,\n        actions: [],\n      }\n      if (tokenType === 'ANYTOKEN') {\n        actions.actions.push({\n          methodName: 'swap_out',\n          args: {\n            \"receiver_id\": `${bindaddr}`,\n            \"to_chain_id\": `${selectchain}`,\n            \"amount\": `${amount}`,\n          },\n          gas: '300000000000000',\n          deposit: '0'\n        })\n      } else {\n        actions.actions.push({\n          methodName: 'swap_out',\n          args: {\n            \"receiver_id\": `${bindaddr}`,\n            \"to_chain_id\": `${selectchain}`,\n          },\n          gas: '300000000000000',\n          deposit: amount\n        })\n      }\n\n      let tx: any = {}\n      // window.near.signAndSendTransaction(actions)\n      sendTransaction(actions)\n        // window.nightly.near.signAllTransactions(actions)\n        .then((res: any) => {\n          console.log(res)\n          if (res && res.length > 0) {\n            tx = res[0].transaction;\n            resolve(tx)\n          } else {\n            reject(\"sendTransaction ERROR\")\n          }\n\n          // if (res?.response && !res?.response.error && res?.response.length > 0) {\n          //   tx = res?.response[0]?.transaction\n          //   resolve(tx)\n          // } else {\n          //   reject(res?.response?.error)\n          // }\n        }).catch((error: any) => {\n          reject(error)\n        })\n    })\n  }, [])\n\n  const sendNearToken = useCallback(async (contractId, anyContractId, routerContractId, amount, bindaddr, selectchain) => {\n    return new Promise((resolve, reject) => {\n      console.log('sendNearToken')\n      const actions = {\n        receiverId: contractId,\n        actions: [\n          {\n            methodName: 'ft_transfer',\n            args: {\n              'receiver_id': routerContractId,\n              amount: amount,  // wNear decimals is 24\n              memo: `${bindaddr} ${selectchain}`\n            },\n            gas: '300000000000000',\n            deposit: '1'\n          }\n        ]\n      }\n      console.log(actions)\n      let tx: any = {}\n      sendTransaction(actions)\n        // window.nightly.near.signAllTransactions(actions)\n        .then((res: any) => {\n          console.log(res)\n          if (res && res.length > 0) {\n            tx = res[0].transaction;\n            resolve(tx)\n          } else {\n            reject(\"sendTransaction ERROR\")\n          }\n\n          // if (res?.response && !res?.response.error && res?.response.length > 0) {\n          //   tx = res?.response[0]?.transaction\n          //   resolve(tx)\n          // } else {\n          //   reject(res?.response?.error)\n          // }\n        }).catch((error: any) => {\n          reject(error)\n        })\n    })\n  }, [])\n\n  const depositStorageNear = useCallback((contractid, accountId, nearStorageBalanceBounds) => {\n    return new Promise((resolve, reject) => {\n      console.log('sendNearToken')\n      const actions = {\n        receiverId: contractid,\n        actions: [\n          {\n            methodName: 'storage_deposit',\n            args: {\n              \"account_id\": accountId,\n              // \"registration_only\": true, \n            },\n            gas: '300000000000000',\n            // deposit: 1e24\n            deposit: nearStorageBalanceBounds ? nearStorageBalanceBounds : '1250000000000000000000'\n            // deposit: amount\n          }\n        ],\n        // amount: amount\n      }\n      console.log(actions)\n      let tx: any = {}\n      sendTransaction(actions)\n        // window.nightly.near.signAllTransactions(actions)\n        .then((res: any) => {\n          console.log(res)\n          if (res && res.length > 0) {\n            tx = res[0].transaction;\n            resolve(tx)\n          } else {\n            reject(\"sendTransaction ERROR\")\n          }\n\n          // if (res?.response && !res?.response.error && res?.response.length > 0) {\n          //   tx = res?.response[0]?.transaction\n          //   resolve(tx)\n          // } else {\n          //   reject(res?.response?.error)\n          // }\n        }).catch((error: any) => {\n          reject(error)\n        })\n    })\n  }, [])\n\n  const depositNearToken = useCallback(async (contractId, anyContractId, routerContractId, amount, bindaddr, selectchain) => {\n    return new Promise((resolve, reject) => {\n      console.log('sendNearToken')\n      const actions = {\n        receiverId: contractId,\n        actions: [\n          {\n            methodName: 'ft_transfer_call',\n            args: {\n              'receiver_id': routerContractId,\n              amount: amount,  // wNear decimals is 24\n              msg: `any_swap_out ${anyContractId} ${bindaddr} ${selectchain}`\n            },\n            gas: '300000000000000',\n            deposit: '1'\n          }\n        ]\n      }\n      console.log(actions)\n      let tx: any = {}\n      sendTransaction(actions)\n        // window.nightly.near.signAllTransactions(actions)\n        .then((res: any) => {\n          console.log(res)\n          if (res && res.length > 0) {\n            tx = res[0].transaction;\n            resolve(tx)\n          } else {\n            reject(\"sendTransaction ERROR\")\n          }\n\n          // if (res?.response && !res?.response.error && res?.response.length > 0) {\n          //   tx = res?.response[0]?.transaction\n          //   resolve(tx)\n          // } else {\n          //   reject(res?.response?.error)\n          // }\n        }).catch((error: any) => {\n          reject(error)\n        })\n    })\n  }, [])\n\n  const withdrawNearToken = useCallback(async (contractId, anyContractId, routerContractId, amount, bindaddr, selectchain) => {\n    return new Promise((resolve, reject) => {\n      console.log('sendNearToken')\n      const actions = {\n        receiverId: contractId,\n        actions: [\n          {\n            methodName: 'ft_transfer_call',\n            args: {\n              'receiver_id': routerContractId,\n              amount: amount,  // wNear decimals is 24\n              msg: `any_swap_out ${anyContractId} ${bindaddr} ${selectchain}`\n            },\n            gas: '300000000000000',\n            deposit: '1'\n          }\n        ]\n      }\n      console.log(actions)\n      let tx: any = {}\n      sendTransaction(actions)\n        // window.nightly.near.signAllTransactions(actions)\n        .then((res: any) => {\n          console.log(res)\n          if (res && res.length > 0) {\n            tx = res[0].transaction;\n            resolve(tx)\n          } else {\n            reject(\"sendTransaction ERROR\")\n          }\n\n          // if (res?.response && !res?.response.error && res?.response.length > 0) {\n          //   tx = res?.response[0]?.transaction\n          //   resolve(tx)\n          // } else {\n          //   reject(res?.response?.error)\n          // }\n        }).catch((error: any) => {\n          reject(error)\n        })\n    })\n  }, [])\n\n\n  return {\n    sendNear,\n    sendNearToken,\n    depositStorageNear,\n    depositNearToken,\n    withdrawNearToken,\n  }\n}\n\n// contractId, anyContractId, routerContractId, amount, bindaddr, selectchain\nexport function useNearSendTxns(\n  routerToken: any,\n  inputCurrency: any,\n  anyContractId: any,\n  contractId: any,\n  typedValue: any,\n  receiverId: any,\n  chainId: any,\n  selectChain: any,\n  destConfig: any,\n  useToChainId: any,\n): {\n  inputError?: string\n  balance?: any,\n  execute?: undefined | (() => Promise<void>)\n} {\n  const { sendNear, sendNearToken } = useSendNear()\n  const { t } = useTranslation()\n  const address = useNearAddress()\n  const addTransaction = useTransactionAdder()\n  const [userInterfaceBalanceValid] = useInterfaceBalanceValidManager()\n  const { onChangeViewDtil } = useTxnsDtilOpen()\n  const { onChangeViewErrorTip } = useTxnsErrorTipOpen()\n  const [balance, setBalance] = useState<any>()\n  const inputAmount = useMemo(() => tryParseAmount3(typedValue, inputCurrency?.decimals), [typedValue, inputCurrency])\n  const underlyingToken = contractId ? contractId : anyContractId\n  const {\n    getNearBalance,\n    getNearTokenBalance\n  } = useNearBalance()\n\n  const getBalance = useCallback(() => {\n    if ([ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) {\n      if (inputCurrency?.tokenType === 'NATIVE' || inputCurrency?.address === 'near') {\n        getNearBalance().then(res => {\n          if (res?.available) {\n            // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n            setBalance(BigAmount.format(inputCurrency?.decimals, res?.total))\n          } else {\n            setBalance('')\n          }\n        })\n      } else {\n        getNearTokenBalance({ token: contractId }).then((res: any) => {\n          // console.log(contractId)\n          // console.log(res)\n          if (res) {\n            // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n            setBalance(BigAmount.format(inputCurrency?.decimals, res))\n          } else {\n            setBalance('')\n          }\n        })\n      }\n    }\n  }, [inputCurrency, contractId, chainId])\n\n  useEffect(() => {\n    getBalance()\n  }, [inputCurrency, contractId])\n\n  useInterval(getBalance, 1000 * 10)\n\n  let sufficientBalance = false\n  try {\n    // sufficientBalance = true\n    sufficientBalance = inputCurrency && typedValue && balance && (Number(balance?.toExact()) >= Number(typedValue))\n  } catch (error) {\n    console.log(error)\n  }\n\n  return useMemo(() => {\n    // console.log(inputAmount)\n    // console.log(receiverId)\n    // console.log(selectChain)\n    // console.log(routerToken)\n    // console.log(underlyingToken)\n    // console.log(chainId)\n    if (!useToChainId || !routerToken || !underlyingToken || !chainId) return NOT_APPLICABLE\n    // console.log(balance)\n    return {\n      // wrapType: WrapType.WRAP,\n      balance,\n      execute: receiverId && (sufficientBalance || !userInterfaceBalanceValid) && inputAmount ? async () => {\n        try {\n          const txReceipt: any = [\"NATIVE\", \"ANYTOKEN\"].includes(inputCurrency?.tokenType) || inputCurrency?.address === 'near' ? await sendNear(routerToken, inputAmount, receiverId, useToChainId, inputCurrency?.tokenType, anyContractId) : await sendNearToken(contractId, anyContractId, routerToken, inputAmount, receiverId, useToChainId)\n          console.log(txReceipt)\n          if (txReceipt?.hash) {\n            const data: any = {\n              hash: txReceipt.hash,\n              chainId: chainId,\n              selectChain: selectChain,\n              account: address,\n              value: inputAmount,\n              formatvalue: typedValue,\n              to: receiverId,\n              symbol: inputCurrency?.symbol,\n              version: destConfig.type,\n              pairid: inputCurrency?.symbol,\n              routerToken: routerToken\n            }\n            addTransaction(txReceipt, {\n              summary: `Cross bridge ${typedValue} ${inputCurrency?.symbol}`,\n              value: typedValue,\n              toChainId: selectChain,\n              toAddress: receiverId.indexOf('0x') === 0 ? receiverId?.toLowerCase() : receiverId,\n              symbol: inputCurrency?.symbol,\n              version: 'swapin',\n              routerToken: routerToken,\n              token: inputCurrency?.address,\n              logoUrl: inputCurrency?.logoUrl,\n              isLiquidity: destConfig?.isLiquidity,\n              fromInfo: {\n                symbol: inputCurrency?.symbol,\n                name: inputCurrency?.name,\n                decimals: inputCurrency?.decimals,\n                address: inputCurrency?.address,\n              },\n              toInfo: {\n                symbol: destConfig?.symbol,\n                name: destConfig?.name,\n                decimals: destConfig?.decimals,\n                address: destConfig?.address,\n              },\n            })\n            recordsTxns(data)\n            onChangeViewDtil(txReceipt?.hash, true)\n          }\n        } catch (error) {\n          console.log('Could not swapout', error)\n          onChangeViewErrorTip('Txns failure.', true)\n        }\n      } : undefined,\n      inputError: sufficientBalance ? undefined : t('Insufficient', { symbol: inputCurrency?.symbol })\n    }\n  }, [inputAmount, receiverId, selectChain, routerToken, anyContractId, contractId, chainId, inputCurrency, balance, underlyingToken, destConfig, useToChainId, userInterfaceBalanceValid])\n}\n\n/**\n * any token 充值与提现underlying\n * 给定选定的输入和输出货币，返回一个wrap回调\n * @param inputCurrency 选定的输入货币\n * @param typedValue 用户输入值\n */\n//  export function useNearSwapPoolUnderlyingCallback(\n//   inputCurrency: any,\n//   inputToken: string | undefined,\n//   // anyContractId:any,\n//   contractId:any,\n//   typedValue: string | undefined,\n//   swapType: string | undefined,\n//   // selectCurrency: any,\n//   chainId: any\n// // ): { execute?: undefined | (() => Promise<void>); inputError?: string } {\n// ): { execute?: undefined | (() => Promise<void>); inputError?: string } {\n//   // const { chainId } = useActiveReact()\n//   // const bridgeContract = useSwapUnderlyingContract(isAddress(inputToken, evmChainId))\n//   const {onChangeViewErrorTip} = useTxnsErrorTipOpen()\n//   const { t } = useTranslation()\n//   const {depositNearToken, withdrawNearToken} = useSendNear()\n\n//   const [balance, setBalance] = useState<any>()\n//   // const useAccount:any = isAddress(account, evmChainId)\n//   // const ethbalance = useETHBalances(useAccount ? [useAccount] : [])?.[account ?? '']\n//   // const anybalance = useCurrencyBalance(useAccount ?? undefined, inputCurrency)\n//   // const balance = selectCurrency?.tokenType === \"NATIVE\" ? ethbalance : anybalance\n//   // const underlyingToken = contractId ? contractId : anyContractId\n//   const {\n//     getNearBalance,\n//     getNearTokenBalance\n//   } = useNearBalance()\n\n//   const getBalance = useCallback(() => {\n//     if (inputCurrency?.tokenType === 'NATIVE') {\n//       getNearBalance().then(res => {\n//         if (res?.available) {\n//           // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n//           setBalance(BigAmount.format(inputCurrency?.decimals,res?.total))\n//         } else {\n//           setBalance('')\n//         }\n//       })\n//     } else {\n//       getNearTokenBalance({token: contractId}).then(res => {\n//         // console.log(contractId)\n//         // console.log(res)\n//         if (res) {\n//           // setBalance(BigAmount.format(inputCurrency?.decimals,res?.available))\n//           setBalance(BigAmount.format(inputCurrency?.decimals,res))\n//         } else {\n//           setBalance('')\n//         }\n//       })\n//     }\n//   }, [inputCurrency, contractId])\n\n//   useEffect(() => {\n//     getBalance()\n//   }, [inputCurrency, contractId])\n\n//   useInterval(getBalance, 1000 * 10)\n//   // console.log(balance?.raw.toString())\n//   // console.log(inputCurrency)\n//   // 我们总是可以解析输入货币的金额，因为包装是1:1\n//   const inputAmount = useMemo(() => tryParseAmount3(typedValue, inputCurrency?.decimals), [typedValue, inputCurrency])\n//   const addTransaction = useTransactionAdder()\n//   return useMemo(() => {\n//     // console.log(inputCurrency)\n//     if (!chainId || !inputCurrency || !swapType || [ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) return NOT_APPLICABLE\n//     // console.log(inputAmount?.raw.toString())\n\n//     const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n//     // console.log(sufficientBalance)\n//     return {\n//       execute:\n//       (sufficientBalance || !VALID_BALANCE) && inputAmount\n//           ? async () => {\n//               try {\n//                 // console.log(inputAmount.raw.toString(16))\n//                 const txReceipt:any = swapType === 'deposit' ? await depositNearToken : await withdrawNearToken\n//                 addTransaction(txReceipt, { summary: `${swapType === 'deposit' ? 'Deposit' : 'Withdraw'} ${inputAmount.toSignificant(6)} ${inputCurrency?.symbol}` })\n//               } catch (error) {\n//                 console.log('Could not swapout', error)\n//                 onChangeViewErrorTip(error, true)\n//               }\n//             }\n//           : undefined,\n//       inputError: sufficientBalance ? undefined : t('Insufficient', {symbol: inputCurrency?.symbol})\n//     }\n//   }, [chainId, inputCurrency, inputAmount, balance, addTransaction, t, swapType, inputToken])\n// }\n\nexport function updateNearHash(hash: any, chainId: any) {\n  const data: any = {\n    msg: 'Error',\n    info: ''\n  }\n  return new Promise(resolve => {\n    // const url = 'https://rpc.testnet.near.org'\n    const url = config.chainInfo[chainId].nodeRpc\n    fetch(url, {\n      method: 'POST',\n      headers: { 'content-type': 'application/json', accept: 'application/json' },\n      body: JSON.stringify({\n        \"jsonrpc\": \"2.0\",\n        \"id\": \"dontcare\",\n        \"method\": \"EXPERIMENTAL_tx_status\",\n        \"params\": [hash, \"bowen\"]\n      })\n    }).then(res => res.json()).then(json => {\n      console.log(json)\n      const result = json?.result?.transaction_outcome?.outcome\n      if (result) {\n        if (\n          result?.status?.SuccessReceiptId\n          || result?.status?.SuccessValue\n        ) {\n          data.msg = 'Success'\n          data.info = json\n        } else if (result?.status?.Failure) {\n          data.msg = 'Failure'\n          data.error = 'Txns is failure!'\n        } else {\n          data.msg = 'Null'\n          data.error = 'Query is empty!'\n        }\n      } else {\n        data.msg = 'Null'\n        data.error = 'Query is empty!'\n      }\n      resolve(data)\n    }).catch(err => {\n      console.log(err.toString())\n      data.error = 'Query is empty!'\n      resolve(data)\n    })\n  })\n}\n// updateNearHash('4KVYoGtn2FFceXdtrttGPkqWnKAGJZ9yVArFMF2z7RxH', 'NEAR_TEST').then(res => {\n//   console.log(res)\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}