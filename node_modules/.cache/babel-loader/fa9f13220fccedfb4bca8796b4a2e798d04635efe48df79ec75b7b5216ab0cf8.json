{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport baseLogger from './logger.js';\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nvar LanguageUtil = /*#__PURE__*/\nfunction () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n        return p.join('-');\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks.default || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n      var addCode = function addCode(c) {\n        if (!c) return;\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n  return LanguageUtil;\n}();\nexport default LanguageUtil;","map":{"version":3,"names":["_classCallCheck","_createClass","baseLogger","capitalize","string","charAt","toUpperCase","slice","LanguageUtil","options","whitelist","logger","create","key","value","getScriptPartFromCode","code","indexOf","p","split","length","pop","formatLanguageCode","join","getLanguagePartFromCode","specialCases","lowerCaseLng","map","part","toLowerCase","cleanCode","isWhitelisted","load","nonExplicitWhitelist","getFallbackCodes","fallbacks","Object","prototype","toString","apply","default","found","toResolveHierarchy","fallbackCode","_this","fallbackCodes","fallbackLng","codes","addCode","c","push","warn","concat","forEach","fc"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/i18next/dist/es/LanguageUtils.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil =\n/*#__PURE__*/\nfunction () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase(); // if lenght 2 guess it's a country\n\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks.default || []; // asume we have an object defining fallbacks\n\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks.default;\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this.isWhitelisted(c)) {\n          codes.push(c);\n        } else {\n          _this.logger.warn(\"rejecting non-whitelisted language code: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nexport default LanguageUtil;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}