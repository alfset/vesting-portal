{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"tendermint.crypto\";\nconst baseProof = {\n  total: long_1.default.ZERO,\n  index: long_1.default.ZERO\n};\nexports.Proof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (!message.total.isZero()) {\n      writer.uint32(8).int64(message.total);\n    }\n    if (!message.index.isZero()) {\n      writer.uint32(16).int64(message.index);\n    }\n    if (message.leafHash.length !== 0) {\n      writer.uint32(26).bytes(message.leafHash);\n    }\n    for (const v of message.aunts) {\n      writer.uint32(34).bytes(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.int64();\n          break;\n        case 2:\n          message.index = reader.int64();\n          break;\n        case 3:\n          message.leafHash = reader.bytes();\n          break;\n        case 4:\n          message.aunts.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n    if (object.total !== undefined && object.total !== null) {\n      message.total = long_1.default.fromString(object.total);\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n    if (object.index !== undefined && object.index !== null) {\n      message.index = long_1.default.fromString(object.index);\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n    if (object.leafHash !== undefined && object.leafHash !== null) {\n      message.leafHash = bytesFromBase64(object.leafHash);\n    }\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(bytesFromBase64(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = (message.total || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n    if (message.aunts) {\n      obj.aunts = message.aunts.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.aunts = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    if (object.total !== undefined && object.total !== null) {\n      message.total = object.total;\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n    if (object.index !== undefined && object.index !== null) {\n      message.index = object.index;\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n    if (object.leafHash !== undefined && object.leafHash !== null) {\n      message.leafHash = object.leafHash;\n    } else {\n      message.leafHash = new Uint8Array();\n    }\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(e);\n      }\n    }\n    return message;\n  }\n};\nconst baseValueOp = {};\nexports.ValueOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    if (message.proof !== undefined) {\n      exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          message.proof = exports.Proof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseValueOp);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    return message;\n  }\n};\nconst baseDominoOp = {\n  key: \"\",\n  input: \"\",\n  output: \"\"\n};\nexports.DominoOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.input !== \"\") {\n      writer.uint32(18).string(message.input);\n    }\n    if (message.output !== \"\") {\n      writer.uint32(26).string(message.output);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDominoOp);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.input = reader.string();\n          break;\n        case 3:\n          message.output = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDominoOp);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = String(object.key);\n    } else {\n      message.key = \"\";\n    }\n    if (object.input !== undefined && object.input !== null) {\n      message.input = String(object.input);\n    } else {\n      message.input = \"\";\n    }\n    if (object.output !== undefined && object.output !== null) {\n      message.output = String(object.output);\n    } else {\n      message.output = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.input !== undefined && (obj.input = message.input);\n    message.output !== undefined && (obj.output = message.output);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseDominoOp);\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.input !== undefined && object.input !== null) {\n      message.input = object.input;\n    } else {\n      message.input = \"\";\n    }\n    if (object.output !== undefined && object.output !== null) {\n      message.output = object.output;\n    } else {\n      message.output = \"\";\n    }\n    return message;\n  }\n};\nconst baseProofOp = {\n  type: \"\"\n};\nexports.ProofOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    if (message.key.length !== 0) {\n      writer.uint32(18).bytes(message.key);\n    }\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.key = reader.bytes();\n          break;\n        case 3:\n          message.data = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseProofOp);\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = \"\";\n    }\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = object.data;\n    } else {\n      message.data = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst baseProofOps = {};\nexports.ProofOps = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.ops) {\n      exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.ops) {\n      obj.ops = message.ops.map(e => e ? exports.ProofOp.toJSON(e) : undefined);\n    } else {\n      obj.ops = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","baseProof","total","default","ZERO","index","Proof","encode","message","writer","arguments","length","undefined","Writer","create","isZero","uint32","int64","leafHash","bytes","v","aunts","decode","input","reader","Reader","end","len","pos","Object","assign","Uint8Array","tag","push","skipType","fromJSON","object","fromString","bytesFromBase64","e","toJSON","obj","toString","base64FromBytes","map","fromPartial","baseValueOp","ValueOp","key","proof","fork","ldelim","baseDominoOp","output","DominoOp","string","String","baseProofOp","type","ProofOp","data","baseProofOps","ProofOps","ops","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sources":["../../../src/tendermint/crypto/proof.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}