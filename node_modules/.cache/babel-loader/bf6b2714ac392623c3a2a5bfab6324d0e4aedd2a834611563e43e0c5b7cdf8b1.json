{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useActiveReact } from '../../hooks/useActiveReact';\nimport useInterval from '../../hooks/useInterval';\nimport { useDispatch } from 'react-redux';\nimport { btcBalanceList } from './actions';\nimport { useLoginBtc,\n// useAptAllowance,\nuseBtcBalance } from './index';\nexport default function Updater() {\n  const {\n    chainId,\n    account\n  } = useActiveReact();\n  const dispatch = useDispatch();\n  // const {setAptAllowance} = useAptAllowance()\n  const {\n    loginBtc\n  } = useLoginBtc();\n  const {\n    getBtcBalance\n  } = useBtcBalance();\n  const getBalance = useCallback(() => {\n    getBtcBalance(chainId, account).then(res => {\n      var _res$chain_stats;\n      dispatch(btcBalanceList({\n        list: {\n          NATIVE: res === null || res === void 0 ? void 0 : (_res$chain_stats = res.chain_stats) === null || _res$chain_stats === void 0 ? void 0 : _res$chain_stats.funded_txo_sum\n        }\n      }));\n    });\n  }, [account, chainId, dispatch]);\n  useEffect(() => {\n    getBalance();\n  }, [account, chainId, dispatch]);\n  useInterval(getBalance, 1000 * 5);\n  const getAptosAddress = useCallback(() => {\n    // console.log(chainId)\n    loginBtc(chainId);\n  }, [chainId]);\n  useEffect(() => {\n    getAptosAddress();\n  }, [chainId]);\n  return null;\n}","map":{"version":3,"names":["useCallback","useEffect","useActiveReact","useInterval","useDispatch","btcBalanceList","useLoginBtc","useBtcBalance","Updater","chainId","account","dispatch","loginBtc","getBtcBalance","getBalance","then","res","_res$chain_stats","list","NATIVE","chain_stats","funded_txo_sum","getAptosAddress"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/btc/updater.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react'\nimport { useActiveReact } from '../../hooks/useActiveReact'\nimport useInterval from '../../hooks/useInterval'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport {btcBalanceList} from './actions'\n\nimport {\n  useLoginBtc,\n  // useAptAllowance,\n  useBtcBalance\n} from './index'\n\nexport default function Updater(): null {\n  const { chainId,account } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n  // const {setAptAllowance} = useAptAllowance()\n  const {loginBtc} = useLoginBtc()\n  const {getBtcBalance} = useBtcBalance()\n\n  const getBalance = useCallback(() => {\n    getBtcBalance(chainId, account).then((res:any) => {\n      dispatch(btcBalanceList({list: {NATIVE: res?.chain_stats?.funded_txo_sum}}))\n    })\n  }, [account, chainId, dispatch])\n\n  useEffect(() => {\n    getBalance()\n  }, [account, chainId, dispatch])\n\n  useInterval(getBalance, 1000 * 5)\n\n  const getAptosAddress = useCallback(() => {\n    // console.log(chainId)\n    loginBtc(chainId)\n  }, [chainId])\n\n  useEffect(() => {\n    getAptosAddress()\n  }, [chainId])\n\n  return null\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAQC,cAAc,QAAO,WAAW;AAExC,SACEC,WAAW;AACX;AACAC,aAAa,QACR,SAAS;AAEhB,eAAe,SAASC,OAAOA,CAAA,EAAS;EACtC,MAAM;IAAEC,OAAO;IAACC;EAAQ,CAAC,GAAGR,cAAc,CAAC,CAAC;EAC5C,MAAMS,QAAQ,GAAGP,WAAW,CAAc,CAAC;EAC3C;EACA,MAAM;IAACQ;EAAQ,CAAC,GAAGN,WAAW,CAAC,CAAC;EAChC,MAAM;IAACO;EAAa,CAAC,GAAGN,aAAa,CAAC,CAAC;EAEvC,MAAMO,UAAU,GAAGd,WAAW,CAAC,MAAM;IACnCa,aAAa,CAACJ,OAAO,EAAEC,OAAO,CAAC,CAACK,IAAI,CAAEC,GAAO,IAAK;MAAA,IAAAC,gBAAA;MAChDN,QAAQ,CAACN,cAAc,CAAC;QAACa,IAAI,EAAE;UAACC,MAAM,EAAEH,GAAG,aAAHA,GAAG,wBAAAC,gBAAA,GAAHD,GAAG,CAAEI,WAAW,cAAAH,gBAAA,uBAAhBA,gBAAA,CAAkBI;QAAc;MAAC,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,OAAO,EAAED,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAEhCV,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,OAAO,EAAED,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAEhCR,WAAW,CAACW,UAAU,EAAE,IAAI,GAAG,CAAC,CAAC;EAEjC,MAAMQ,eAAe,GAAGtB,WAAW,CAAC,MAAM;IACxC;IACAY,QAAQ,CAACH,OAAO,CAAC;EACnB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbR,SAAS,CAAC,MAAM;IACdqB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}