{"ast":null,"code":"import { ConnectType } from '@terra-dev/use-wallet';\nconst interval = 500;\nexport async function checkAvailableExtension(timeout, isChromeExtensionCompatibleBrowser) {\n  return new Promise(resolve => {\n    if (isChromeExtensionCompatibleBrowser) {\n      resolve(ConnectType.CHROME_EXTENSION);\n      return;\n    }\n    const start = Date.now();\n    function check() {\n      const meta = window.document.querySelector('head > meta[name=\"terra-web-connect\"]');\n      if (typeof (meta === null || meta === void 0 ? void 0 : meta.getAttribute('connected')) === 'string') {\n        resolve(ConnectType.WEB_CONNECT);\n      } else if (window['isTerraExtensionAvailable'] === true) {\n        resolve(ConnectType.CHROME_EXTENSION);\n      } else if (Date.now() > start + timeout) {\n        resolve(null);\n      } else {\n        setTimeout(check, interval);\n      }\n    }\n    setTimeout(check, interval);\n  });\n}","map":{"version":3,"names":["ConnectType","interval","checkAvailableExtension","timeout","isChromeExtensionCompatibleBrowser","Promise","resolve","CHROME_EXTENSION","start","Date","now","check","meta","window","document","querySelector","getAttribute","WEB_CONNECT","setTimeout"],"sources":["../../../../src/@terra-money/wallet-provider/utils/checkAvailableExtension.ts"],"sourcesContent":["import { ConnectType } from '@terra-dev/use-wallet';\n\nconst interval = 500;\n\nexport async function checkAvailableExtension(\n  timeout: number,\n  isChromeExtensionCompatibleBrowser: boolean,\n): Promise<ConnectType.CHROME_EXTENSION | ConnectType.WEB_CONNECT | null> {\n  return new Promise<\n    ConnectType.CHROME_EXTENSION | ConnectType.WEB_CONNECT | null\n  >((resolve) => {\n    if (isChromeExtensionCompatibleBrowser) {\n      resolve(ConnectType.CHROME_EXTENSION);\n      return;\n    }\n\n    const start = Date.now();\n\n    function check() {\n      const meta = window.document.querySelector(\n        'head > meta[name=\"terra-web-connect\"]',\n      );\n\n      if (typeof meta?.getAttribute('connected') === 'string') {\n        resolve(ConnectType.WEB_CONNECT);\n      } else if (window['isTerraExtensionAvailable'] === true) {\n        resolve(ConnectType.CHROME_EXTENSION);\n      } else if (Date.now() > start + timeout) {\n        resolve(null);\n      } else {\n        setTimeout(check, interval);\n      }\n    }\n\n    setTimeout(check, interval);\n  });\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAuB;AAEnD,MAAMC,QAAQ,GAAG,GAAG;AAEpB,OAAO,eAAeC,uBAAuBA,CAC3CC,OAAe,EACfC,kCAA2C;EAE3C,OAAO,IAAIC,OAAO,CAEfC,OAAO,IAAI;IACZ,IAAIF,kCAAkC,EAAE;MACtCE,OAAO,CAACN,WAAW,CAACO,gBAAgB,CAAC;MACrC;;IAGF,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;IAExB,SAASC,KAAKA,CAAA;MACZ,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,aAAa,CACxC,uCAAuC,CACxC;MAED,IAAI,QAAOH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,YAAY,CAAC,WAAW,CAAC,MAAK,QAAQ,EAAE;QACvDV,OAAO,CAACN,WAAW,CAACiB,WAAW,CAAC;OACjC,MAAM,IAAIJ,MAAM,CAAC,2BAA2B,CAAC,KAAK,IAAI,EAAE;QACvDP,OAAO,CAACN,WAAW,CAACO,gBAAgB,CAAC;OACtC,MAAM,IAAIE,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,GAAGL,OAAO,EAAE;QACvCG,OAAO,CAAC,IAAI,CAAC;OACd,MAAM;QACLY,UAAU,CAACP,KAAK,EAAEV,QAAQ,CAAC;;IAE/B;IAEAiB,UAAU,CAACP,KAAK,EAAEV,QAAQ,CAAC;EAC7B,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}