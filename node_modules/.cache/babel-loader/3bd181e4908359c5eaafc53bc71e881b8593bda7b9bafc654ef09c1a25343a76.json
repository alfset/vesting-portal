{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tendermint34Client = void 0;\nconst jsonrpc_1 = require(\"../jsonrpc\");\nconst rpcclients_1 = require(\"../rpcclients\");\nconst adaptor_1 = require(\"./adaptor\");\nconst requests = __importStar(require(\"./requests\"));\nclass Tendermint34Client {\n  /**\n   * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.\n   */\n  constructor(client) {\n    this.client = client;\n    this.p = adaptor_1.adaptor34.params;\n    this.r = adaptor_1.adaptor34.responses;\n  }\n  /**\n   * Creates a new Tendermint client for the given endpoint.\n   *\n   * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n   */\n  static async connect(endpoint) {\n    if (typeof endpoint === \"object\") {\n      return Tendermint34Client.create(new rpcclients_1.HttpClient(endpoint));\n    } else {\n      const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n      const rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n      return Tendermint34Client.create(rpcClient);\n    }\n  }\n  /**\n   * Creates a new Tendermint client given an RPC client.\n   */\n  static async create(rpcClient) {\n    // For some very strange reason I don't understand, tests start to fail on some systems\n    // (our CI) when skipping the status call before doing other queries. Sleeping a little\n    // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n    // even in cases where we don't use the result.\n    const _version = await this.detectVersion(rpcClient);\n    return new Tendermint34Client(rpcClient);\n  }\n  static async detectVersion(client) {\n    const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n    const response = await client.execute(req);\n    const result = response.result;\n    if (!result || !result.node_info) {\n      throw new Error(\"Unrecognized format for status response\");\n    }\n    const version = result.node_info.version;\n    if (typeof version !== \"string\") {\n      throw new Error(\"Unrecognized version format: must be string\");\n    }\n    return version;\n  }\n  disconnect() {\n    this.client.disconnect();\n  }\n  async abciInfo() {\n    const query = {\n      method: requests.Method.AbciInfo\n    };\n    return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);\n  }\n  async abciQuery(params) {\n    const query = {\n      params: params,\n      method: requests.Method.AbciQuery\n    };\n    return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);\n  }\n  async block(height) {\n    const query = {\n      method: requests.Method.Block,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);\n  }\n  async blockResults(height) {\n    const query = {\n      method: requests.Method.BlockResults,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);\n  }\n  /**\n   * Search for events that are in a block.\n   *\n   * NOTE\n   * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n   */\n  async blockSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BlockSearch\n    };\n    const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);\n    return {\n      ...resp,\n      // make sure we sort by height, as tendermint may be sorting by string value of the height\n      blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)\n    };\n  }\n  // this should paginate through all blockSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  //\n  // NOTE\n  // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n  async blockSearchAll(params) {\n    let page = params.page || 1;\n    const blocks = [];\n    let done = false;\n    while (!done) {\n      const resp = await this.blockSearch({\n        ...params,\n        page: page\n      });\n      blocks.push(...resp.blocks);\n      if (blocks.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    // make sure we sort by height, as tendermint may be sorting by string value of the height\n    // and the earlier items may be in a higher page than the later items\n    blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n    return {\n      totalCount: blocks.length,\n      blocks: blocks\n    };\n  }\n  /**\n   * Queries block headers filtered by minHeight <= height <= maxHeight.\n   *\n   * @param minHeight The minimum height to be included in the result. Defaults to 0.\n   * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n   */\n  async blockchain(minHeight, maxHeight) {\n    const query = {\n      method: requests.Method.Blockchain,\n      params: {\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for response\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n   */\n  async broadcastTxSync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxSync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);\n  }\n  /**\n   * Broadcast transaction to mempool and do not wait for result\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n   */\n  async broadcastTxAsync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxAsync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n   */\n  async broadcastTxCommit(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxCommit\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);\n  }\n  async commit(height) {\n    const query = {\n      method: requests.Method.Commit,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);\n  }\n  async genesis() {\n    const query = {\n      method: requests.Method.Genesis\n    };\n    return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);\n  }\n  async health() {\n    const query = {\n      method: requests.Method.Health\n    };\n    return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);\n  }\n  async numUnconfirmedTxs() {\n    const query = {\n      method: requests.Method.NumUnconfirmedTxs\n    };\n    return this.doCall(query, this.p.encodeNumUnconfirmedTxs, this.r.decodeNumUnconfirmedTxs);\n  }\n  async status() {\n    const query = {\n      method: requests.Method.Status\n    };\n    return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);\n  }\n  subscribeNewBlock() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlock\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockEvent);\n  }\n  subscribeNewBlockHeader() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlockHeader\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);\n  }\n  subscribeTx(query) {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.Tx,\n        raw: query\n      }\n    };\n    return this.subscribe(request, this.r.decodeTxEvent);\n  }\n  /**\n   * Get a single transaction by hash\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n   */\n  async tx(params) {\n    const query = {\n      params: params,\n      method: requests.Method.Tx\n    };\n    return this.doCall(query, this.p.encodeTx, this.r.decodeTx);\n  }\n  /**\n   * Search for transactions that are in a block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n   */\n  async txSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.TxSearch\n    };\n    return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);\n  }\n  // this should paginate through all txSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  async txSearchAll(params) {\n    let page = params.page || 1;\n    const txs = [];\n    let done = false;\n    while (!done) {\n      const resp = await this.txSearch({\n        ...params,\n        page: page\n      });\n      txs.push(...resp.txs);\n      if (txs.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    return {\n      totalCount: txs.length,\n      txs: txs\n    };\n  }\n  async validators(params) {\n    const query = {\n      method: requests.Method.Validators,\n      params: params\n    };\n    return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);\n  }\n  async validatorsAll(height) {\n    const validators = [];\n    let page = 1;\n    let done = false;\n    let blockHeight = height;\n    while (!done) {\n      const response = await this.validators({\n        per_page: 50,\n        height: blockHeight,\n        page: page\n      });\n      validators.push(...response.validators);\n      blockHeight = blockHeight || response.blockHeight;\n      if (validators.length < response.total) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    return {\n      // NOTE: Default value is for type safety but this should always be set\n      blockHeight: blockHeight !== null && blockHeight !== void 0 ? blockHeight : 0,\n      count: validators.length,\n      total: validators.length,\n      validators: validators\n    };\n  }\n  // doCall is a helper to handle the encode/call/decode logic\n  async doCall(request, encode, decode) {\n    const req = encode(request);\n    const result = await this.client.execute(req);\n    return decode(result);\n  }\n  subscribe(request, decode) {\n    if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n      throw new Error(\"This RPC client type cannot subscribe to events\");\n    }\n    const req = this.p.encodeSubscribe(request);\n    const eventStream = this.client.listen(req);\n    return eventStream.map(event => {\n      return decode(event);\n    });\n  }\n}\nexports.Tendermint34Client = Tendermint34Client;","map":{"version":3,"names":["jsonrpc_1","require","rpcclients_1","adaptor_1","requests","__importStar","Tendermint34Client","constructor","client","p","adaptor34","params","r","responses","connect","endpoint","create","HttpClient","useHttp","startsWith","rpcClient","WebsocketClient","_version","detectVersion","req","createJsonRpcRequest","Method","Status","response","execute","result","node_info","Error","version","disconnect","abciInfo","query","method","AbciInfo","doCall","encodeAbciInfo","decodeAbciInfo","abciQuery","AbciQuery","encodeAbciQuery","decodeAbciQuery","block","height","Block","encodeBlock","decodeBlock","blockResults","BlockResults","encodeBlockResults","decodeBlockResults","blockSearch","BlockSearch","resp","encodeBlockSearch","decodeBlockSearch","blocks","sort","a","b","header","blockSearchAll","page","done","push","length","totalCount","blockchain","minHeight","maxHeight","Blockchain","encodeBlockchain","decodeBlockchain","broadcastTxSync","BroadcastTxSync","encodeBroadcastTx","decodeBroadcastTxSync","broadcastTxAsync","BroadcastTxAsync","decodeBroadcastTxAsync","broadcastTxCommit","BroadcastTxCommit","decodeBroadcastTxCommit","commit","Commit","encodeCommit","decodeCommit","genesis","Genesis","encodeGenesis","decodeGenesis","health","Health","encodeHealth","decodeHealth","numUnconfirmedTxs","NumUnconfirmedTxs","encodeNumUnconfirmedTxs","decodeNumUnconfirmedTxs","status","encodeStatus","decodeStatus","subscribeNewBlock","request","Subscribe","type","SubscriptionEventType","NewBlock","subscribe","decodeNewBlockEvent","subscribeNewBlockHeader","NewBlockHeader","decodeNewBlockHeaderEvent","subscribeTx","Tx","raw","decodeTxEvent","tx","encodeTx","decodeTx","txSearch","TxSearch","encodeTxSearch","decodeTxSearch","txSearchAll","txs","validators","Validators","encodeValidators","decodeValidators","validatorsAll","blockHeight","per_page","total","count","encode","decode","instanceOfRpcStreamingClient","encodeSubscribe","eventStream","listen","map","event","exports"],"sources":["../../src/tendermint34/tendermint34client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}