{"ast":null,"code":"import{useCallback,useEffect,useRef}from\"react\";import{useDispatch// useSelector\n}from'react-redux';import{ChainId}from\"../../config/chainConfig/chainId\";import{useActiveReact}from'../../hooks/useActiveReact';import{adaAddress,adaBalanceList}from'./actions';import useInterval from\"../../hooks/useInterval\";// import { CML, cmlToCore } from \"@cardano-sdk/core\";\n// import {\n//   useAdaBalance\n// } from './index'\nexport default function Updater(){const{chainId,account}=useActiveReact();const dispatch=useDispatch();const setAdaAddress=useCallback(address=>{dispatch(adaAddress({address}));},[dispatch]);const eternlRef=useRef();window.onload=()=>{var _window,_window$cardano;eternlRef.current=(_window=window)===null||_window===void 0?void 0:(_window$cardano=_window.cardano)===null||_window$cardano===void 0?void 0:_window$cardano.eternl;};const bigIntToString=obj=>{return Object.keys(obj).reduce((acc,key)=>{acc[key]=obj[key].toString();return acc;},{});};const getFetchBalance=async()=>{var _window2,_window2$lucid;if(window.lucid&&((_window2=window)===null||_window2===void 0?void 0:(_window2$lucid=_window2.lucid)===null||_window2$lucid===void 0?void 0:_window2$lucid.wallet)){let blList={};try{const utxos=await window.lucid.wallet.getUtxos();console.log(utxos);let total=BigInt(0);utxos.map(e=>{setAdaAddress(e.address);total+=e.assets.lovelace;for(const tokenAddress in e.assets){const _tokenAddress=tokenAddress.slice(0,56)+'.'+tokenAddress.slice(56,tokenAddress.length);if(tokenAddress!==\"lovelace\"){if(blList[_tokenAddress]){blList[_tokenAddress]=blList[_tokenAddress]+e.assets[tokenAddress];}else{blList[_tokenAddress]=e.assets[tokenAddress];// BigInt(10000000).toString();\n}}}});blList['NATIVE']=total.toString();blList=bigIntToString(blList);dispatch(adaBalanceList({list:blList}));}catch(error){}}};const getBalance=useCallback(()=>{var _window3,_window4,_window4$cardano;// if (!account) return;\nconst adaWallet=((_window3=window)===null||_window3===void 0?void 0:_window3.cardano)&&((_window4=window)===null||_window4===void 0?void 0:(_window4$cardano=_window4.cardano)===null||_window4$cardano===void 0?void 0:_window4$cardano.eternl);if([ChainId.ADA,ChainId.ADA_TEST].includes(chainId)&&adaWallet){getFetchBalance();}},[chainId,eternlRef.current,account]);useEffect(()=>{getBalance();},[chainId,eternlRef.current,account]);useInterval(getBalance,1000*10);useEffect(()=>{var _window5,_window6,_window6$cardano;const adaWallet=((_window5=window)===null||_window5===void 0?void 0:_window5.cardano)&&((_window6=window)===null||_window6===void 0?void 0:(_window6$cardano=_window6.cardano)===null||_window6$cardano===void 0?void 0:_window6$cardano.eternl);if([ChainId.ADA,ChainId.ADA_TEST].includes(chainId)&&adaWallet){getBalance();const handleChainChanged=chainID=>{console.log(chainID);};const handleAccountsChanged=()=>{getBalance();};if(adaWallet===null||adaWallet===void 0?void 0:adaWallet.on){adaWallet===null||adaWallet===void 0?void 0:adaWallet.on('networkChanged',handleChainChanged);adaWallet===null||adaWallet===void 0?void 0:adaWallet.on('accountChanged',handleAccountsChanged);}return()=>{if(adaWallet.removeListener){adaWallet.removeListener('chainChanged',handleChainChanged);adaWallet.removeListener('accountsChanged',handleAccountsChanged);}};}return undefined;},[chainId,eternlRef.current]);return null;}","map":{"version":3,"names":["useCallback","useEffect","useRef","useDispatch","ChainId","useActiveReact","adaAddress","adaBalanceList","useInterval","Updater","chainId","account","dispatch","setAdaAddress","address","eternlRef","window","onload","_window","_window$cardano","current","cardano","eternl","bigIntToString","obj","Object","keys","reduce","acc","key","toString","getFetchBalance","_window2","_window2$lucid","lucid","wallet","blList","utxos","getUtxos","console","log","total","BigInt","map","e","assets","lovelace","tokenAddress","_tokenAddress","slice","length","list","error","getBalance","_window3","_window4","_window4$cardano","adaWallet","ADA","ADA_TEST","includes","_window5","_window6","_window6$cardano","handleChainChanged","chainID","handleAccountsChanged","on","removeListener","undefined"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/cardano/updater.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\nimport {\n  useDispatch,\n  // useSelector\n} from 'react-redux'\nimport {\n  // AppState,\n  AppDispatch\n} from '../../state'\nimport { ChainId } from \"../../config/chainConfig/chainId\";\n\nimport { useActiveReact } from '../../hooks/useActiveReact'\n\nimport {\n  adaAddress,\n  adaBalanceList\n} from './actions'\nimport useInterval from \"../../hooks/useInterval\";\n\n// import { CML, cmlToCore } from \"@cardano-sdk/core\";\n// import {\n//   useAdaBalance\n// } from './index'\n\nexport default function Updater(): null {\n  const { chainId, account } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n\n\n  const setAdaAddress = useCallback((address: any) => {\n    dispatch(adaAddress({ address }))\n  }, [dispatch])\n\n\n  const eternlRef = useRef<any>()\n\n  window.onload = () => {\n    eternlRef.current = window?.cardano?.eternl\n  };\n\n  const bigIntToString = (obj: any): any => {\n    return Object.keys(obj).reduce((acc:any, key:any) => {\n      acc[key] = obj[key].toString();\n      return acc;\n    }, {});\n  }\n  \n  const getFetchBalance = async () => {\n    if (window.lucid && window?.lucid?.wallet) {\n      let blList: any = {}\n      try {\n        const utxos = await window.lucid.wallet.getUtxos()\n        console.log(utxos)\n        let total = BigInt(0);\n        utxos.map((e: any) => {\n          setAdaAddress(e.address)\n          total += e.assets.lovelace;\n          for (const tokenAddress in e.assets) {\n            const _tokenAddress = tokenAddress.slice(0,56) + '.' + tokenAddress.slice(56, tokenAddress.length);\n            if(tokenAddress !== \"lovelace\") {\n              if(blList[_tokenAddress]) {\n                blList[_tokenAddress] = blList[_tokenAddress] + e.assets[tokenAddress]\n              } else {\n                blList[_tokenAddress] = e.assets[tokenAddress] // BigInt(10000000).toString();\n              }\n            }\n          }\n        });\n        blList['NATIVE'] = total.toString();\n        blList = bigIntToString(blList);\n        dispatch(adaBalanceList({ list: blList }))\n      } catch (error) {\n        \n      } \n      \n    }\n\n  }\n\n  \n  const getBalance = useCallback(() => {\n    // if (!account) return;\n    const adaWallet = window?.cardano && window?.cardano?.eternl\n\n    if ([ChainId.ADA, ChainId.ADA_TEST].includes(chainId) && adaWallet) {\n      getFetchBalance()\n\n    }\n  }, [chainId, eternlRef.current, account])\n\n  useEffect(() => {\n    getBalance()\n  }, [chainId, eternlRef.current, account])\n\n  useInterval(getBalance, 1000 * 10)\n\n  useEffect(() => {\n    const adaWallet = window?.cardano && window?.cardano?.eternl\n\n    if ([ChainId.ADA, ChainId.ADA_TEST].includes(chainId) && adaWallet) {\n      getBalance()\n\n      const handleChainChanged = (chainID: any) => {\n        console.log(chainID)\n      }\n\n      const handleAccountsChanged = () => {\n        getBalance()\n      }\n\n      if (adaWallet?.on) {\n        adaWallet?.on('networkChanged', handleChainChanged)\n        adaWallet?.on('accountChanged', handleAccountsChanged)\n      }\n\n      return () => {\n        if (adaWallet.removeListener) {\n          adaWallet.removeListener('chainChanged', handleChainChanged)\n          adaWallet.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [chainId, eternlRef.current])\n\n  return null\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}