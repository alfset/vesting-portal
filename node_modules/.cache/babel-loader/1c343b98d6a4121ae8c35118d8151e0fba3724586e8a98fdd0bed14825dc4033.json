{"ast":null,"code":"import { useEffect } from 'react';\nimport { ChainId } from '../../config/chainConfig/chainId';\nimport { useActiveReact } from '../../hooks/useActiveReact';\n// import useInterval from '../../hooks/useInterval'\nimport { useDispatch } from 'react-redux';\nimport { solAddress } from './actions';\nimport { useLoginSol\n// useSolBalance\n// getSolanaInfo\n// getSolTxnsStatus\n// useSolCreateAccount\n} from './index';\nexport default function Updater() {\n  const {\n    chainId,\n    account\n  } = useActiveReact();\n  const dispatch = useDispatch();\n  const {\n    loginSol\n  } = useLoginSol();\n  // const {\n  //   getSolAccountInfo,\n  //   // getAccount\n  // } = useSolCreateAccount()\n  // const {getSolBalance, getSolTokenBalance, getSolTokenInfo} = useSolBalance()\n\n  // const getBalance = useCallback(() => {\n  //   const params = {chainId, account}\n  //   // const params = {chainId: 'SOL', account: 'D2Wa6JtXeyqFMdoacpKMo86Pbr4YpfdVCtAhem8HjqfF'}\n  //   // const params = {chainId, account: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'}\n  //   // const params = {chainId, account: '2wmVCSfPxGPjrnMMn7rchp4uaeoTqN39mXFC2zhPdri9'}\n  //   // const params = {chainId, account: 'B9htQ5ZFRTDGaND6bgS9ne5n1kQFBK6u9TZa178Ywao9'}\n  //   console.log(params)\n  //   Promise.all([\n  //     getSolBalance(params),\n  //     // getSolTokenBalance(params),\n  //     getSolTokenInfo(params),\n  //   ]).then((res) => {\n  //     console.log(res)\n  //   })\n  // }, [getSolBalance, getSolTokenBalance, getSolTokenInfo, chainId, account])\n\n  // useEffect(() => {\n  //   getBalance()\n  // }, [getSolBalance, getSolTokenBalance, chainId, account])\n\n  // useInterval(getBalance, 1000 * 10)\n\n  useEffect(() => {\n    // getSolanaInfo('SOL_TEST', 'requestAirdrop', ['H7SFqpjjSsWxVsBuVbWspHq1yjymQmR9t6xmi1u34yfH']).then((res:any) => console.log(res))\n    if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      var _window, _window$solana;\n      loginSol(1);\n      // Promise.all([\n      //   getSolAccountInfo({account, chainId}),\n      //   getSolAccountInfo({account: 'DCLzsK2u5CNaeEgFv2f4SYsH85gR86C4N753wfD6V5Yy', chainId}),\n      // ]).then((res:any) => {\n      //   console.log(res)\n      // })\n      // getAccount('8fBfAE4gVbv253UgwkwBT5TaV5SaZ7JJWgmQoqbEEei5', 'GkzTnqZSasjZ5geL4cbvPErNVB9xWby4zYN7hpW5k5iX').then((res:any) => console.log(res.toBase58()))\n      // setTimeout(() => {\n\n      //   createAccount()\n      // }, 1000 * 3)\n      (_window = window) === null || _window === void 0 ? void 0 : (_window$solana = _window.solana) === null || _window$solana === void 0 ? void 0 : _window$solana.on('accountChanged', pub => {\n        console.log(pub.toBase58());\n        if (pub) {\n          dispatch(solAddress({\n            address: pub.toBase58()\n          }));\n        }\n      });\n    }\n  }, [chainId, account]);\n  return null;\n}","map":{"version":3,"names":["useEffect","ChainId","useActiveReact","useDispatch","solAddress","useLoginSol","Updater","chainId","account","dispatch","loginSol","SOL","SOL_TEST","includes","_window","_window$solana","window","solana","on","pub","console","log","toBase58","address"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/solana/updater.ts"],"sourcesContent":["\nimport { useEffect } from 'react'\nimport { ChainId } from '../../config/chainConfig/chainId'\nimport { useActiveReact } from '../../hooks/useActiveReact'\n// import useInterval from '../../hooks/useInterval'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport {solAddress} from './actions'\n\nimport {\n  useLoginSol,\n  // useSolBalance\n  // getSolanaInfo\n  // getSolTxnsStatus\n  // useSolCreateAccount\n} from './index'\n\nexport default function Updater(): null {\n  const { chainId, account } = useActiveReact()\n  const dispatch = useDispatch<AppDispatch>()\n  \n  const {loginSol} = useLoginSol()\n  // const {\n  //   getSolAccountInfo,\n  //   // getAccount\n  // } = useSolCreateAccount()\n  // const {getSolBalance, getSolTokenBalance, getSolTokenInfo} = useSolBalance()\n\n  // const getBalance = useCallback(() => {\n  //   const params = {chainId, account}\n  //   // const params = {chainId: 'SOL', account: 'D2Wa6JtXeyqFMdoacpKMo86Pbr4YpfdVCtAhem8HjqfF'}\n  //   // const params = {chainId, account: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'}\n  //   // const params = {chainId, account: '2wmVCSfPxGPjrnMMn7rchp4uaeoTqN39mXFC2zhPdri9'}\n  //   // const params = {chainId, account: 'B9htQ5ZFRTDGaND6bgS9ne5n1kQFBK6u9TZa178Ywao9'}\n  //   console.log(params)\n  //   Promise.all([\n  //     getSolBalance(params),\n  //     // getSolTokenBalance(params),\n  //     getSolTokenInfo(params),\n  //   ]).then((res) => {\n  //     console.log(res)\n  //   })\n  // }, [getSolBalance, getSolTokenBalance, getSolTokenInfo, chainId, account])\n\n  // useEffect(() => {\n  //   getBalance()\n  // }, [getSolBalance, getSolTokenBalance, chainId, account])\n\n  // useInterval(getBalance, 1000 * 10)\n\n  useEffect(() => {\n    // getSolanaInfo('SOL_TEST', 'requestAirdrop', ['H7SFqpjjSsWxVsBuVbWspHq1yjymQmR9t6xmi1u34yfH']).then((res:any) => console.log(res))\n    if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      loginSol(1)\n      // Promise.all([\n      //   getSolAccountInfo({account, chainId}),\n      //   getSolAccountInfo({account: 'DCLzsK2u5CNaeEgFv2f4SYsH85gR86C4N753wfD6V5Yy', chainId}),\n      // ]).then((res:any) => {\n      //   console.log(res)\n      // })\n      // getAccount('8fBfAE4gVbv253UgwkwBT5TaV5SaZ7JJWgmQoqbEEei5', 'GkzTnqZSasjZ5geL4cbvPErNVB9xWby4zYN7hpW5k5iX').then((res:any) => console.log(res.toBase58()))\n      // setTimeout(() => {\n\n      //   createAccount()\n      // }, 1000 * 3)\n      window?.solana?.on('accountChanged', (pub:any) => {\n        console.log(pub.toBase58())\n        if (pub) {\n          dispatch(solAddress({address: pub.toBase58()}))\n        }\n      })\n    }\n  }, [chainId, account])\n\n  return null\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D;AACA,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAQC,UAAU,QAAO,WAAW;AAEpC,SACEC;AACA;AACA;AACA;AACA;AAAA,OACK,SAAS;AAEhB,eAAe,SAASC,OAAOA,CAAA,EAAS;EACtC,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGN,cAAc,CAAC,CAAC;EAC7C,MAAMO,QAAQ,GAAGN,WAAW,CAAc,CAAC;EAE3C,MAAM;IAACO;EAAQ,CAAC,GAAGL,WAAW,CAAC,CAAC;EAChC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEAL,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACC,OAAO,CAACU,GAAG,EAAEV,OAAO,CAACW,QAAQ,CAAC,CAACC,QAAQ,CAACN,OAAO,CAAC,EAAE;MAAA,IAAAO,OAAA,EAAAC,cAAA;MACrDL,QAAQ,CAAC,CAAC,CAAC;MACX;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA,CAAAI,OAAA,GAAAE,MAAM,cAAAF,OAAA,wBAAAC,cAAA,GAAND,OAAA,CAAQG,MAAM,cAAAF,cAAA,uBAAdA,cAAA,CAAgBG,EAAE,CAAC,gBAAgB,EAAGC,GAAO,IAAK;QAChDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC;QAC3B,IAAIH,GAAG,EAAE;UACPV,QAAQ,CAACL,UAAU,CAAC;YAACmB,OAAO,EAAEJ,GAAG,CAACG,QAAQ,CAAC;UAAC,CAAC,CAAC,CAAC;QACjD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACf,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}