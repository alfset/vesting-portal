{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst proofs_1 = require(\"../../../../confio/proofs\");\nexports.protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexports.MerkleRoot = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleRoot);\n    message.hash = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleRoot);\n    message.hash = new Uint8Array();\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = bytesFromBase64(object.hash);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerkleRoot);\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst baseMerklePrefix = {};\nexports.MerklePrefix = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    if (message.keyPrefix.length !== 0) {\n      writer.uint32(10).bytes(message.keyPrefix);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePrefix);\n    message.keyPrefix = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPrefix = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePrefix);\n    message.keyPrefix = new Uint8Array();\n    if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n      message.keyPrefix = bytesFromBase64(object.keyPrefix);\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.keyPrefix !== undefined && (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerklePrefix);\n    if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n      message.keyPrefix = object.keyPrefix;\n    } else {\n      message.keyPrefix = new Uint8Array();\n    }\n    return message;\n  }\n};\nconst baseMerklePath = {\n  keyPath: \"\"\n};\nexports.MerklePath = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.keyPath) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPath.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(String(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.keyPath) {\n      obj.keyPath = message.keyPath.map(e => e);\n    } else {\n      obj.keyPath = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(e);\n      }\n    }\n    return message;\n  }\n};\nconst baseMerkleProof = {};\nexports.MerkleProof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    for (const v of message.proofs) {\n      proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.proofs) {\n      obj.proofs = message.proofs.map(e => e ? proofs_1.CommitmentProof.toJSON(e) : undefined);\n    } else {\n      obj.proofs = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","proofs_1","exports","protobufPackage","baseMerkleRoot","MerkleRoot","encode","message","writer","arguments","length","undefined","default","Writer","create","hash","uint32","bytes","decode","input","reader","Reader","end","len","pos","Object","assign","Uint8Array","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","baseMerklePrefix","MerklePrefix","keyPrefix","baseMerklePath","keyPath","MerklePath","v","string","push","e","String","map","baseMerkleProof","MerkleProof","proofs","CommitmentProof","fork","ldelim","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sources":["../../../../../src/ibc/core/commitment/v1/commitment.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}