{"ast":null,"code":"import { AccAddress } from '@terra-money/terra.js';\nimport { getAddress } from '@ethersproject/address';\nimport nebulas from 'nebulas';\nimport { ChainId } from \"../../config/chainConfig/chainId\";\nimport { isBTCAddress, BTCARR } from './BTC';\nimport { isTRXAddress } from '../../nonevm/trx';\nimport { isSolAddress } from '../../nonevm/solana';\nimport { isAptosAddress } from '../../nonevm/apt';\nimport { isAtomAddress } from '../../nonevm/atom';\nexport function isEvmAddress(value) {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\nconst IotaBech32Helper = {\n  BECH32_DEFAULT_HRP_MAIN: /^iota/,\n  BECH32_DEFAULT_HRP_DEV: /^atoi/\n};\nconst stellarAddress = /^[1-9A-Z]{56}$/;\nexport function isAddress(address, chainId) {\n  // console.log(chainId, address)\n  if (!address) return undefined;\n  if (chainId) {\n    if ([ChainId.TRX, ChainId.TRX_TEST].includes(chainId)) {\n      return isTRXAddress(address);\n    } else if ([ChainId.NAS].includes(chainId)) {\n      return nebulas.Account.isValidAddress(address) ? address : false;\n    } else if ([ChainId.TERRA].includes(chainId)) {\n      return AccAddress.validate(address) ? address : false;\n    } else if ([ChainId.XRP].includes(chainId)) {\n      return address && address.indexOf('r') === 0 && address.length === 34 ? true : false;\n    } else if ([ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) {\n      return address && address.indexOf('0x') !== 0 ? address : false;\n    } else if (BTCARR.includes(chainId)) {\n      return isBTCAddress(address, chainId);\n    } else if ([ChainId.IOTA, ChainId.IOTA_TEST].includes(chainId)) {\n      if (chainId === ChainId.IOTA) {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_MAIN.test(address)) {\n          return address;\n        }\n        return false;\n      } else {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_DEV.test(address)) {\n          return address;\n        }\n        return false;\n      }\n    } else if ([ChainId.XLM, ChainId.XLM_TEST].includes(chainId)) {\n      if (stellarAddress.test(address)) {\n        return address;\n      }\n      return false;\n    } else if ([ChainId.ADA, ChainId.ADA_TEST].includes(chainId)) {\n      if (chainId === ChainId.ADA) {\n        const pattern = /^addr[0-9a-zA-Z]{54,99}/;\n        if (pattern.test(address)) {\n          return address;\n        }\n      } else {\n        const pattern = /^addr_test[0-9a-zA-Z]{54,99}/;\n        if (pattern.test(address)) {\n          return address;\n        }\n      }\n      return false;\n    } else if ([ChainId.FLOW, ChainId.FLOW_TEST].includes(chainId)) {\n      const pattern = /^0x[0-9a-zA-Z]{16}/;\n      if (pattern.test(address)) {\n        return address;\n      }\n      return false;\n    } else if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      return isSolAddress(address);\n    } else if ([ChainId.APT, ChainId.APT_TEST].includes(chainId)) {\n      return isAptosAddress(address);\n    } else if ([ChainId.ATOM_SEI, ChainId.ATOM_SEI_TEST, ChainId.ATOM_DCORE, ChainId.ATOM_DCORE_TEST].includes(chainId)) {\n      return isAtomAddress(address, chainId);\n    } else {\n      return isEvmAddress(address);\n    }\n  } else {\n    return isEvmAddress(address);\n  }\n}","map":{"version":3,"names":["AccAddress","getAddress","nebulas","ChainId","isBTCAddress","BTCARR","isTRXAddress","isSolAddress","isAptosAddress","isAtomAddress","isEvmAddress","value","IotaBech32Helper","BECH32_DEFAULT_HRP_MAIN","BECH32_DEFAULT_HRP_DEV","stellarAddress","isAddress","address","chainId","undefined","TRX","TRX_TEST","includes","NAS","Account","isValidAddress","TERRA","validate","XRP","indexOf","length","NEAR","NEAR_TEST","IOTA","IOTA_TEST","test","XLM","XLM_TEST","ADA","ADA_TEST","pattern","FLOW","FLOW_TEST","SOL","SOL_TEST","APT","APT_TEST","ATOM_SEI","ATOM_SEI_TEST","ATOM_DCORE","ATOM_DCORE_TEST"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/utils/isAddress/index.ts"],"sourcesContent":["\nimport { AccAddress } from '@terra-money/terra.js'\nimport { getAddress } from '@ethersproject/address'\nimport nebulas from 'nebulas'\nimport { ChainId } from \"../../config/chainConfig/chainId\"\nimport {isBTCAddress, BTCARR} from './BTC'\n\nimport {isTRXAddress} from '../../nonevm/trx'\nimport {isSolAddress} from '../../nonevm/solana'\nimport {isAptosAddress} from '../../nonevm/apt'\nimport {isAtomAddress} from '../../nonevm/atom'\n\nexport function isEvmAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst IotaBech32Helper = {\n  BECH32_DEFAULT_HRP_MAIN: /^iota/,\n  BECH32_DEFAULT_HRP_DEV: /^atoi/\n}\n\nconst stellarAddress = /^[1-9A-Z]{56}$/\n\nexport function isAddress(address: any, chainId?: any) {\n  // console.log(chainId, address)\n  if (!address) return undefined\n  if (chainId) {\n    if ([ChainId.TRX, ChainId.TRX_TEST].includes(chainId)) {\n      return isTRXAddress(address)\n    } else if ([ChainId.NAS].includes(chainId)) {\n      return nebulas.Account.isValidAddress(address) ? address : false\n    } else if ([ChainId.TERRA].includes(chainId)) {\n      return AccAddress.validate(address) ? address : false\n    } else if ([ChainId.XRP].includes(chainId)) {\n      return address && address.indexOf('r') === 0 && address.length === 34 ? true : false\n    } else if ([ChainId.NEAR, ChainId.NEAR_TEST].includes(chainId)) {\n      return address && address.indexOf('0x') !== 0 ? address : false\n    } else if (BTCARR.includes(chainId)) {\n      return isBTCAddress(address, chainId)\n    } else if ([ChainId.IOTA, ChainId.IOTA_TEST].includes(chainId)) {\n      if (chainId === ChainId.IOTA) {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_MAIN.test(address)) {\n          return address\n        }\n        return false\n      } else {\n        if (IotaBech32Helper.BECH32_DEFAULT_HRP_DEV.test(address)) {\n          return address\n        }\n        return false\n      }\n    } else if ([ChainId.XLM, ChainId.XLM_TEST].includes(chainId)) {\n      if (stellarAddress.test(address)) {\n        return address\n      }\n      return false\n    } else if ([ChainId.ADA, ChainId.ADA_TEST].includes(chainId)) {\n      if (chainId === ChainId.ADA) {\n        const pattern = /^addr[0-9a-zA-Z]{54,99}/\n        if (pattern.test(address)) {\n          return address\n        }\n      } else {\n        const pattern = /^addr_test[0-9a-zA-Z]{54,99}/\n        if (pattern.test(address)) {\n          return address\n        }\n      }\n      return false\n    } else if ([ChainId.FLOW, ChainId.FLOW_TEST].includes(chainId)) {\n      const pattern = /^0x[0-9a-zA-Z]{16}/\n      if (pattern.test(address)) {\n        return address\n      }\n      return false\n    } else if ([ChainId.SOL, ChainId.SOL_TEST].includes(chainId)) {\n      return isSolAddress(address)\n    } else if ([ChainId.APT, ChainId.APT_TEST].includes(chainId)) {\n      return isAptosAddress(address)\n    } else if ([ChainId.ATOM_SEI, ChainId.ATOM_SEI_TEST, ChainId.ATOM_DCORE, ChainId.ATOM_DCORE_TEST].includes(chainId)) {\n      return isAtomAddress(address, chainId)\n    } else {\n      return isEvmAddress(address)\n    }\n  } else {\n    return isEvmAddress(address)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}