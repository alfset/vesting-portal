{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{adaAddress,adaBalanceList}from'./actions';const initialState={adaAddress:'',adaBalanceList:{}// adaWallet: '',\n};export default createReducer(initialState,builder=>builder.addCase(adaAddress,(state,_ref)=>{let{payload:{address}}=_ref;state.adaAddress=address;}).addCase(adaBalanceList,(state,_ref2)=>{let{payload:{list}}=_ref2;state.adaBalanceList=list;}));","map":{"version":3,"names":["createReducer","adaAddress","adaBalanceList","initialState","builder","addCase","state","_ref","payload","address","_ref2","list"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/cardano/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { adaAddress, adaBalanceList } from './actions'\n\nexport interface BurnState {\n  readonly adaAddress: any\n  readonly adaBalanceList: any\n  // readonly adaWallet: any\n}\n\nconst initialState: BurnState = {\n  adaAddress: '',\n  adaBalanceList: {},\n  // adaWallet: '',\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder\n    .addCase(adaAddress, (state, { payload: { address } }) => {\n      state.adaAddress = address\n    })\n    .addCase(adaBalanceList, (state, { payload: { list } }) => {\n      state.adaBalanceList = list\n    })\n)\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,kBAAkB,CAChD,OAASC,UAAU,CAAEC,cAAc,KAAQ,WAAW,CAQtD,KAAM,CAAAC,YAAuB,CAAG,CAC9BF,UAAU,CAAE,EAAE,CACdC,cAAc,CAAE,CAAC,CACjB;AACF,CAAC,CAED,cAAe,CAAAF,aAAa,CAAYG,YAAY,CAAEC,OAAO,EAC3DA,OAAO,CACJC,OAAO,CAACJ,UAAU,CAAE,CAACK,KAAK,CAAAC,IAAA,GAA+B,IAA7B,CAAEC,OAAO,CAAE,CAAEC,OAAQ,CAAE,CAAC,CAAAF,IAAA,CACnDD,KAAK,CAACL,UAAU,CAAGQ,OAAO,CAC5B,CAAC,CAAC,CACDJ,OAAO,CAACH,cAAc,CAAE,CAACI,KAAK,CAAAI,KAAA,GAA4B,IAA1B,CAAEF,OAAO,CAAE,CAAEG,IAAK,CAAE,CAAC,CAAAD,KAAA,CACpDJ,KAAK,CAACJ,cAAc,CAAGS,IAAI,CAC7B,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}