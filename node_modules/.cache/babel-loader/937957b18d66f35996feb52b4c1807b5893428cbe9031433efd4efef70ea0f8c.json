{"ast":null,"code":"import { getLocalRPC } from './methods';\nimport { VERSION, USE_VERSION } from '../constant';\nimport { ChainId } from './chainId';\nexport const PLQ_MAIN_CHAINID = ChainId.PLQ;\nexport const PLQ_MAINNET = getLocalRPC(PLQ_MAIN_CHAINID, 'https://evm-rpc.planq.network');\nexport const PLQ_MAIN_EXPLORER = 'https://evm.planq.network';\n\n// export const PLQ_TEST_CHAINID = ChainId.PLQ_TEST\n// export const PLQ_TESTNET = getLocalRPC(PLQ_TEST_CHAINID, 'https://zksync2-testnet.zksync.dev')\n// export const PLQ_TEST_EXPLORER = 'https://goerli.explorer.zksync.io'\n\nconst symbol = 'PLQ';\nconst bridgeToken = {\n  [VERSION.V7]: {\n    bridgeInitToken: '',\n    bridgeInitChain: '',\n    crossBridgeInitToken: ''\n  }\n};\nexport default {\n  [PLQ_MAIN_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '',\n    multicalToken: '0x498620233A11014C0D77F1B3CDfaB43C27E3ED16',\n    v1FactoryToken: '',\n    v2FactoryToken: '',\n    nodeRpc: PLQ_MAINNET,\n    nodeRpcList: [PLQ_MAINNET],\n    chainID: PLQ_MAIN_CHAINID,\n    lookHash: PLQ_MAIN_EXPLORER + '/tx/',\n    lookAddr: PLQ_MAIN_EXPLORER + '/address/',\n    lookBlock: PLQ_MAIN_EXPLORER + '/block/',\n    explorer: PLQ_MAIN_EXPLORER,\n    symbol: symbol,\n    name: 'Planq',\n    networkName: 'Planq mainnet',\n    type: 'main',\n    label: PLQ_MAIN_CHAINID\n  }\n  // [PLQ_TEST_CHAINID]: {\n  //   ...bridgeToken[USE_VERSION],\n  //   swapRouterToken: '',\n  //   multicalToken: '',\n  //   v1FactoryToken: '',\n  //   v2FactoryToken: '',\n  //   nodeRpc: PLQ_TESTNET,\n  //   nodeRpcList: [\n  //     PLQ_TESTNET,\n  //   ],\n  //   chainID: PLQ_TEST_CHAINID,\n  //   lookHash: PLQ_TEST_EXPLORER + '/tx/',\n  //   lookAddr: PLQ_TEST_EXPLORER + '/address/',\n  //   lookBlock: PLQ_TEST_EXPLORER + '/block/',\n  //   explorer: PLQ_TEST_EXPLORER,\n  //   symbol: symbol,\n  //   name: 'zkSync Era',\n  //   networkName: 'zkSync Era testnet',\n  //   networkLogo: 'zkSync',\n  //   type: 'test',\n  //   label: PLQ_TEST_CHAINID,\n  // },\n};","map":{"version":3,"names":["getLocalRPC","VERSION","USE_VERSION","ChainId","PLQ_MAIN_CHAINID","PLQ","PLQ_MAINNET","PLQ_MAIN_EXPLORER","symbol","bridgeToken","V7","bridgeInitToken","bridgeInitChain","crossBridgeInitToken","swapRouterToken","multicalToken","v1FactoryToken","v2FactoryToken","nodeRpc","nodeRpcList","chainID","lookHash","lookAddr","lookBlock","explorer","name","networkName","type","label"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/config/chainConfig/plq.ts"],"sourcesContent":["import {getLocalRPC} from './methods'\nimport {VERSION, USE_VERSION} from '../constant'\nimport {ChainId} from './chainId'\n\nexport const PLQ_MAIN_CHAINID = ChainId.PLQ\nexport const PLQ_MAINNET = getLocalRPC(PLQ_MAIN_CHAINID, 'https://evm-rpc.planq.network')\nexport const PLQ_MAIN_EXPLORER = 'https://evm.planq.network'\n\n// export const PLQ_TEST_CHAINID = ChainId.PLQ_TEST\n// export const PLQ_TESTNET = getLocalRPC(PLQ_TEST_CHAINID, 'https://zksync2-testnet.zksync.dev')\n// export const PLQ_TEST_EXPLORER = 'https://goerli.explorer.zksync.io'\n\nconst symbol = 'PLQ'\n\nconst bridgeToken:any = {\n  [VERSION.V7]: {\n    bridgeInitToken: '',\n    bridgeInitChain: '',\n    crossBridgeInitToken: ''\n  },\n}\n\nexport default {\n  [PLQ_MAIN_CHAINID]: {\n    ...bridgeToken[USE_VERSION],\n    swapRouterToken: '',\n    multicalToken: '0x498620233A11014C0D77F1B3CDfaB43C27E3ED16',\n    v1FactoryToken: '',\n    v2FactoryToken: '',\n    nodeRpc: PLQ_MAINNET,\n    nodeRpcList: [\n      PLQ_MAINNET,\n    ],\n    chainID: PLQ_MAIN_CHAINID,\n    lookHash: PLQ_MAIN_EXPLORER + '/tx/',\n    lookAddr: PLQ_MAIN_EXPLORER + '/address/',\n    lookBlock: PLQ_MAIN_EXPLORER + '/block/',\n    explorer: PLQ_MAIN_EXPLORER,\n    symbol: symbol,\n    name: 'Planq',\n    networkName: 'Planq mainnet',\n    type: 'main',\n    label: PLQ_MAIN_CHAINID,\n  },\n  // [PLQ_TEST_CHAINID]: {\n  //   ...bridgeToken[USE_VERSION],\n  //   swapRouterToken: '',\n  //   multicalToken: '',\n  //   v1FactoryToken: '',\n  //   v2FactoryToken: '',\n  //   nodeRpc: PLQ_TESTNET,\n  //   nodeRpcList: [\n  //     PLQ_TESTNET,\n  //   ],\n  //   chainID: PLQ_TEST_CHAINID,\n  //   lookHash: PLQ_TEST_EXPLORER + '/tx/',\n  //   lookAddr: PLQ_TEST_EXPLORER + '/address/',\n  //   lookBlock: PLQ_TEST_EXPLORER + '/block/',\n  //   explorer: PLQ_TEST_EXPLORER,\n  //   symbol: symbol,\n  //   name: 'zkSync Era',\n  //   networkName: 'zkSync Era testnet',\n  //   networkLogo: 'zkSync',\n  //   type: 'test',\n  //   label: PLQ_TEST_CHAINID,\n  // },\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,WAAW;AACrC,SAAQC,OAAO,EAAEC,WAAW,QAAO,aAAa;AAChD,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAO,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,GAAG;AAC3C,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAACI,gBAAgB,EAAE,+BAA+B,CAAC;AACzF,OAAO,MAAMG,iBAAiB,GAAG,2BAA2B;;AAE5D;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,KAAK;AAEpB,MAAMC,WAAe,GAAG;EACtB,CAACR,OAAO,CAACS,EAAE,GAAG;IACZC,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,oBAAoB,EAAE;EACxB;AACF,CAAC;AAED,eAAe;EACb,CAACT,gBAAgB,GAAG;IAClB,GAAGK,WAAW,CAACP,WAAW,CAAC;IAC3BY,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE,4CAA4C;IAC3DC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,OAAO,EAAEZ,WAAW;IACpBa,WAAW,EAAE,CACXb,WAAW,CACZ;IACDc,OAAO,EAAEhB,gBAAgB;IACzBiB,QAAQ,EAAEd,iBAAiB,GAAG,MAAM;IACpCe,QAAQ,EAAEf,iBAAiB,GAAG,WAAW;IACzCgB,SAAS,EAAEhB,iBAAiB,GAAG,SAAS;IACxCiB,QAAQ,EAAEjB,iBAAiB;IAC3BC,MAAM,EAAEA,MAAM;IACdiB,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE,eAAe;IAC5BC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAExB;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}