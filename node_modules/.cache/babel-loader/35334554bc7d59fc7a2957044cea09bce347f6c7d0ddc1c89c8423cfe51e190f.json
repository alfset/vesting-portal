{"ast":null,"code":"import{useWeb3React as useWeb3ReactCore}from'@web3-react/core';import{useEffect,useState}from'react';import{isMobile}from'react-device-detect';import{injected}from'../connectors';import{NetworkContextName}from'../constants';import{chainInfo}from'../config/chainConfig';import{ENV_NODE_CONFIG}from'../config/constant';// import { useConnectedWallet } from '@terra-money/wallet-provider'\nexport function useActiveWeb3React(){const context=useWeb3ReactCore();const contextNetwork=useWeb3ReactCore(NetworkContextName);const EVM_CONTEXT=context.active?context:contextNetwork;// const connectedWallet = useConnectedWallet()\n// const { connect } = useWallet()\n// console.log(context)\n// console.log(contextNetwork)\n// console.log(connectedWallet)\nreturn EVM_CONTEXT;// return {\n//   ...EVM_CONTEXT,\n//   account: connectedWallet?.walletAddress\n// }\n}export function useEagerConnect(){const{activate,active}=useWeb3ReactCore();// 特别是使用useWeb3ReactCore，因为这个钩子的作用\nconst[tried,setTried]=useState(false);useEffect(()=>{injected.isAuthorized().then(isAuthorized=>{if(isAuthorized){activate(injected,undefined,true).catch(()=>{setTried(true);});}else{if(isMobile&&window.ethereum){activate(injected,undefined,true).catch(()=>{setTried(true);});}else{setTried(true);}}});},[activate]);// intentionally only running on mount (make sure it's only mounted once :))\n// if the connection worked, wait until we get confirmation of that to flip the flag\nuseEffect(()=>{if(active){setTried(true);}},[active]);return tried;}/**\n * 用于网络和注入-在检查用户所在的网络后，将用户登录和注销\n */export function useInactiveListener(){let suppress=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const{active,error,activate,chainId}=useWeb3ReactCore();// 特别是使用useWeb3React，因为这个钩子的作用\nuseEffect(()=>{if(chainId){window.localStorage.setItem(ENV_NODE_CONFIG,chainId.toString());}},[chainId]);useEffect(()=>{const{ethereum}=window;// console.log(ethereum)\n// if (ethereum && ethereum.on && !active && !error && !suppress) {\nif(ethereum&&ethereum.on&&!active&&!error&&!suppress){const handleChainChanged=chainID=>{// console.log(chainID)\n// console.log(parseInt(chainID))\nif(chainID){window.localStorage.setItem(ENV_NODE_CONFIG,chainInfo[parseInt(chainID)].label);history.go(0);}// eat errors\nactivate(injected,undefined,true).catch(error=>{console.error('Failed to activate after chain changed',error);});};const handleAccountsChanged=accounts=>{if(accounts.length>0){// eat errors\nactivate(injected,undefined,true).catch(error=>{console.error('Failed to activate after accounts changed',error);});}};ethereum.on('chainChanged',handleChainChanged);ethereum.on('accountsChanged',handleAccountsChanged);return()=>{if(ethereum.removeListener){ethereum.removeListener('chainChanged',handleChainChanged);ethereum.removeListener('accountsChanged',handleAccountsChanged);}};}return undefined;},[active,error,suppress,activate]);}","map":{"version":3,"names":["useWeb3React","useWeb3ReactCore","useEffect","useState","isMobile","injected","NetworkContextName","chainInfo","ENV_NODE_CONFIG","useActiveWeb3React","context","contextNetwork","EVM_CONTEXT","active","useEagerConnect","activate","tried","setTried","isAuthorized","then","undefined","catch","window","ethereum","useInactiveListener","suppress","arguments","length","error","chainId","localStorage","setItem","toString","on","handleChainChanged","chainID","parseInt","label","history","go","console","handleAccountsChanged","accounts","removeListener"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/hooks/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\nimport { chainInfo } from '../config/chainConfig'\nimport { ChainId } from '../config/chainConfig/chainId'\nimport {\n  ENV_NODE_CONFIG\n} from '../config/constant'\n// import { useConnectedWallet } from '@terra-money/wallet-provider'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  const EVM_CONTEXT:any = context.active ? context : contextNetwork\n  // const connectedWallet = useConnectedWallet()\n  // const { connect } = useWallet()\n  // console.log(context)\n  // console.log(contextNetwork)\n  // console.log(connectedWallet)\n  return EVM_CONTEXT\n  // return {\n  //   ...EVM_CONTEXT,\n  //   account: connectedWallet?.walletAddress\n  // }\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // 特别是使用useWeb3ReactCore，因为这个钩子的作用\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * 用于网络和注入-在检查用户所在的网络后，将用户登录和注销\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate, chainId } = useWeb3ReactCore() // 特别是使用useWeb3React，因为这个钩子的作用\n\n  useEffect(() => {\n    if (chainId) {\n      window.localStorage.setItem(ENV_NODE_CONFIG, chainId.toString())\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    const { ethereum } = window\n    // console.log(ethereum)\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = (chainID:any) => {\n        // console.log(chainID)\n        // console.log(parseInt(chainID))\n        if (chainID) {\n          window.localStorage.setItem(ENV_NODE_CONFIG, chainInfo[parseInt(chainID)].label)\n          history.go(0)\n        }\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}