{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error('Decode Error: could not decode tapLeafScript with key 0x' + keyVal.key.toString('hex'));\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error('Decode Error: tapLeafScript has invalid control block in key 0x' + keyVal.key.toString('hex'));\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error('Decode Error: tapLeafScript bad leaf version in key 0x' + keyVal.key.toString('hex'));\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return {\n    controlBlock,\n    script,\n    leafVersion\n  };\n}\nexports.decode = decode;\nfunction encode(tScript) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Buffer.from([tScript.leafVersion]);\n  return {\n    key: Buffer.concat([head, tScript.controlBlock]),\n    value: Buffer.concat([tScript.script, verBuf])\n  };\n}\nexports.encode = encode;\nexports.expected = '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\nfunction check(data) {\n  return Buffer.isBuffer(data.controlBlock) && (data.controlBlock.length - 1) % 32 === 0 && (data.controlBlock[0] & 0xfe) === data.leafVersion && Buffer.isBuffer(data.script);\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.controlBlock.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return array.filter(v => v.controlBlock.equals(item.controlBlock)).length === 0;\n}\nexports.canAddToArray = canAddToArray;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","decode","keyVal","key","InputTypes","TAP_LEAF_SCRIPT","Error","toString","length","leafVersion","script","slice","controlBlock","encode","tScript","head","Buffer","from","verBuf","concat","expected","check","data","isBuffer","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bip174/src/lib/converter/input/tapLeafScript.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error(\n      'Decode Error: could not decode tapLeafScript with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error(\n      'Decode Error: tapLeafScript has invalid control block in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error(\n      'Decode Error: tapLeafScript bad leaf version in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return { controlBlock, script, leafVersion };\n}\nexports.decode = decode;\nfunction encode(tScript) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Buffer.from([tScript.leafVersion]);\n  return {\n    key: Buffer.concat([head, tScript.controlBlock]),\n    value: Buffer.concat([tScript.script, verBuf]),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.controlBlock) &&\n    (data.controlBlock.length - 1) % 32 === 0 &&\n    (data.controlBlock[0] & 0xfe) === data.leafVersion &&\n    Buffer.isBuffer(data.script)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.controlBlock.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.controlBlock.equals(item.controlBlock)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}