{"ast":null,"code":"import{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import{approveList}from'./actions';export function useNonevmAddress(chainId){var _account$chainId$acco,_account$chainId;const account=useSelector(state=>state.nonevm.nonevmAddress);// console.log(account)\n// console.log(chainId)\nreturn{nonevmAccount:(_account$chainId$acco=account===null||account===void 0?void 0:(_account$chainId=account[chainId])===null||_account$chainId===void 0?void 0:_account$chainId.account)!==null&&_account$chainId$acco!==void 0?_account$chainId$acco:undefined};}export function useApproveState(){// const allowanceList:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.approveList)\nconst dispatch=useDispatch();const setApprovalState=useCallback(_ref=>{let{chainId,account,token,spender,allowance}=_ref;if(chainId&&account&&token&&spender){dispatch(approveList({chainId,account,token,spender,allowance}));}},[]);return{setApprovalState};}","map":{"version":3,"names":["useCallback","useDispatch","useSelector","approveList","useNonevmAddress","chainId","_account$chainId$acco","_account$chainId","account","state","nonevm","nonevmAddress","nonevmAccount","undefined","useApproveState","dispatch","setApprovalState","_ref","token","spender","allowance"],"sources":["/workspace/Planq-Dapps/vesting-portal/src/nonevm/hooks/index.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux'\nimport {\n  AppState,\n  AppDispatch\n} from '../../state'\nimport {approveList} from './actions'\n\nexport function useNonevmAddress (chainId:any) {\n  const account:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.nonevmAddress)\n  // console.log(account)\n  // console.log(chainId)\n  return {\n    nonevmAccount: account?.[chainId]?.account ?? undefined\n  }\n}\n\nexport function useApproveState () {\n  // const allowanceList:any = useSelector<AppState, AppState['nonevm']>(state => state.nonevm.approveList)\n  const dispatch = useDispatch<AppDispatch>()\n  const setApprovalState = useCallback(({chainId, account, token, spender, allowance}) => {\n    if (chainId && account && token && spender) {\n      dispatch(approveList({\n        chainId, account, token, spender, allowance\n      }))\n    }\n  }, [])\n\n  return {\n    setApprovalState\n  }\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CACnC,OACEC,WAAW,CACXC,WAAW,KACN,aAAa,CAKpB,OAAQC,WAAW,KAAO,WAAW,CAErC,MAAO,SAAS,CAAAC,gBAAgBA,CAAEC,OAAW,CAAE,KAAAC,qBAAA,CAAAC,gBAAA,CAC7C,KAAM,CAAAC,OAAW,CAAGN,WAAW,CAA+BO,KAAK,EAAIA,KAAK,CAACC,MAAM,CAACC,aAAa,CAAC,CAClG;AACA;AACA,MAAO,CACLC,aAAa,EAAAN,qBAAA,CAAEE,OAAO,SAAPA,OAAO,kBAAAD,gBAAA,CAAPC,OAAO,CAAGH,OAAO,CAAC,UAAAE,gBAAA,iBAAlBA,gBAAA,CAAoBC,OAAO,UAAAF,qBAAA,UAAAA,qBAAA,CAAIO,SAChD,CAAC,CACH,CAEA,MAAO,SAAS,CAAAC,eAAeA,CAAA,CAAI,CACjC;AACA,KAAM,CAAAC,QAAQ,CAAGd,WAAW,CAAc,CAAC,CAC3C,KAAM,CAAAe,gBAAgB,CAAGhB,WAAW,CAACiB,IAAA,EAAmD,IAAlD,CAACZ,OAAO,CAAEG,OAAO,CAAEU,KAAK,CAAEC,OAAO,CAAEC,SAAS,CAAC,CAAAH,IAAA,CACjF,GAAIZ,OAAO,EAAIG,OAAO,EAAIU,KAAK,EAAIC,OAAO,CAAE,CAC1CJ,QAAQ,CAACZ,WAAW,CAAC,CACnBE,OAAO,CAAEG,OAAO,CAAEU,KAAK,CAAEC,OAAO,CAAEC,SACpC,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLJ,gBACF,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}