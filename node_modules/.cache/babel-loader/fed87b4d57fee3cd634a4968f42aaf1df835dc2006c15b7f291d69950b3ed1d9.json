{"ast":null,"code":"\"use strict\";\n\nvar utils = require('./utils/utils.js');\n\n/**\n * User API constructor.\n * Class encapsulate methods for building distributed applications and services.\n *\n * @see [API documentation]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md}\n * @constructor\n *\n * @param {Neb} neb - Instance of Neb library.\n *\n * @example\n * var api = new API ( new Neb() );\n * // or just\n * var api = new Neb().api;\n */\nvar API = function (neb) {\n  this._setRequest(neb._request);\n};\n\n/**\n * @private\n * @param {Request} request - transport wrapper.\n */\nAPI.prototype._setRequest = function (request) {\n  this._request = request;\n  this._path = '/user';\n};\n\n/**\n * Method get state of Nebulas Network.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getnebstate}\n *\n * @return [NebStateObject]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getnebstate}\n *\n * @example\n * var api = new Neb().api;\n * api.getNebState().then(function(state) {\n * //code\n * });\n */\nAPI.prototype.getNebState = function () {\n  return this._sendRequest(\"get\", \"/nebstate\", null);\n};\n\n/**\n * Method get latest irreversible block of Nebulas Network.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#latestirreversibleblock}\n *\n * @return [dataBlockInfo.]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#latestirreversibleblock}\n *\n * @example\n * var api = new Neb().api;\n * api.latestIrreversibleBlock().then(function(blockData) {\n * //code\n * });\n */\nAPI.prototype.latestIrreversibleBlock = function () {\n  return this._sendRequest(\"get\", \"/lib\", null);\n};\n\n/**\n * Method return the state of the account. Balance and nonce.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getaccountstate}\n *\n * @param {Object} options\n * @param {HexString} options.address\n * @param {String} options.height\n *\n * @return [accaountStateObject]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getaccountstate}\n *\n * @example\n * var api = new Neb().api;\n * api.getAccountState({address: \"n1QsosVXKxiV3B4iDWNmxfN4VqpHn2TeUcn\"}).then(function(state) {\n * //code\n * });\n */\nAPI.prototype.getAccountState = function (options) {\n  options = utils.argumentsToObject(['address', 'height'], arguments);\n  var params = {\n    \"address\": options.address,\n    \"height\": options.height\n  };\n  return this._sendRequest(\"post\", \"/accountstate\", params);\n};\n\n/**\n * Method wrap smart contract call functionality.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#call}\n *\n * @param {TransactionOptions} options\n *\n * @return [Transcation hash]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#call}\n *\n * @example\n * var api = new Neb().api;\n * api.call({\n *    chainID: 1,\n *    from: \"n1QZMXSZtW7BUerroSms4axNfyBGyFGkrh5\",\n *    to: \"n1SAeQRVn33bamxN4ehWUT7JGdxipwn8b17\",\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000,\n *    contract: {\n *        function: \"save\",\n *        args: \"[0]\"\n *    }\n * }).then(function(tx) {\n *     //code\n * });\n */\nAPI.prototype.call = function (options) {\n  options = utils.argumentsToObject(['from', 'to', 'value', 'nonce', 'gasPrice', 'gasLimit', 'contract'], arguments);\n  var params = {\n    \"from\": options.from,\n    \"to\": options.to,\n    \"value\": utils.toString(options.value),\n    \"nonce\": options.nonce,\n    \"gasPrice\": utils.toString(options.gasPrice),\n    \"gasLimit\": utils.toString(options.gasLimit),\n    \"contract\": options.contract\n  };\n  return this._sendRequest(\"post\", \"/call\", params);\n};\n\n/**\n * Method wrap submit the signed transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#sendrawtransaction}\n *\n * @param {Object} options\n * @param {String} options.data\n *\n * @return [Transcation hash]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#sendrawtransaction}\n *\n * @example\n * var api = new Neb().api;\n * var tx = new Transaction({\n *    chainID: 1,\n *    from: acc1,\n *    to: acc2,\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000\n * });\n * tx.signTransaction();\n * api.sendRawTransaction( {data: tx.toProtoString()} ).then(function(hash) {\n * //code\n * });\n */\nAPI.prototype.sendRawTransaction = function (options) {\n  options = utils.argumentsToObject(['data'], arguments);\n  var params = {\n    \"data\": options.data\n  };\n  return this._sendRequest(\"post\", \"/rawtransaction\", params);\n};\n\n/**\n * Get block header info by the block hash.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyhash}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n * @param {Boolean} options.fullTransaction\n *\n * @return [Block]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyhash}\n *\n * @example\n * var api = new Neb().api;\n * api.getBlockByHash({\n *     hash: \"00000658397a90df6459b8e7e63ad3f4ce8f0a40b8803ff2f29c611b2e0190b8\",\n *     fullTransaction: true\n * }).then(function(block) {\n * //code\n * });\n */\nAPI.prototype.getBlockByHash = function (options) {\n  options = utils.argumentsToObject(['hash', 'fullTransaction'], arguments);\n  var params = {\n    \"hash\": options.hash,\n    \"full_fill_transaction\": options.fullTransaction\n  };\n  return this._sendRequest(\"post\", \"/getBlockByHash\", params);\n};\n\n/**\n * Get block header info by the block height.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyheight}\n *\n * @param {Object} options\n * @param {Number} options.height\n * @param {Boolean} options.fullTransaction\n *\n * @return [Block]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyheight}\n *\n * @example\n * var api = new Neb().api;\n * api.getBlockByHeight({height:2, fullTransaction:true}).then(function(block) {\n * //code\n * });\n */\nAPI.prototype.getBlockByHeight = function (options) {\n  options = utils.argumentsToObject(['height', 'fullTransaction'], arguments);\n  var params = {\n    \"height\": options.height,\n    \"full_fill_transaction\": options.fullTransaction\n  };\n  return this._sendRequest(\"post\", \"/getBlockByHeight\", params);\n};\n\n/**\n * Get transactionReceipt info by tansaction hash.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n *\n * @return [TransactionReceipt]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @example\n * var api = new Neb().api;\n * api.getTransactionReceipt({hash: \"cc7133643a9ae90ec9fa222871b85349ccb6f04452b835851280285ed72b008c\"}).then(function(receipt) {\n * //code\n * });\n */\nAPI.prototype.getTransactionReceipt = function (options) {\n  options = utils.argumentsToObject(['hash'], arguments);\n  var params = {\n    \"hash\": options.hash\n  };\n  return this._sendRequest(\"post\", \"/getTransactionReceipt\", params);\n};\n\n/**\n * Get transactionReceipt info by contract address.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionbycontract}\n *\n * @param {Object} options\n * @param {HexString} options.address contract address\n *\n * @returns the same as [TransactionReceipt]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @example\n * var api = new Neb().api;\n * api.getTransactionByContract({address: \"n1sqDHGjYtX6rMqFoq5Tow3s3LqF4ZxBvE3\"}).then(function(receipt) {\n *  //code\n * });\n */\nAPI.prototype.getTransactionByContract = function (options) {\n  options = utils.argumentsToObject(['address'], arguments);\n  var params = {\n    \"address\": options.address\n  };\n  return this._sendRequest(\"post\", \"/getTransactionByContract\", params);\n};\n\n/**\n * Return the subscribed events of transaction & block.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#subscribe}\n *\n * @param {Object} options\n * @param {Array|String} options.topics\n * @param {Function} options.onDownloadProgress - On progress callback function. Recive chunk.\n *\n * @return [eventData]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#subscribe}\n *\n * @example\n * var api = new Neb().api;\n * api.subscribe({topics: [\"chain.linkBlock\", \"chain.pendingTransaction\"]}).then(function(eventData) {\n * //code\n * });\n */\nAPI.prototype.subscribe = function (options) {\n  options = utils.argumentsToObject(['topics', 'onDownloadProgress'], arguments);\n  var params = {\n    \"topics\": options.topics\n  };\n  var axiosOptions;\n  if (typeof options.onDownloadProgress === 'function') {\n    axiosOptions = {\n      onDownloadProgress: function (e) {\n        if (typeof e.target._readLength === 'undefined') {\n          e.target._readLength = 0;\n        }\n        var chunk = e.target.responseText.substr(e.target._readLength);\n        // TODO check and split multi events\n        if (chunk && chunk.trim().length > 0) {\n          e.target._readLength += chunk.length;\n          options.onDownloadProgress(chunk);\n        }\n      }\n    };\n  }\n  return this._sendRequest(\"post\", \"/subscribe\", params, null, axiosOptions);\n};\n\n/**\n * Return current gasPrice.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getgasprice}\n *\n * @return [Gas Price]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getgasprice}\n *\n * @example\n * var api = new Neb().api;\n * api.gasPrice().then(function(gasPrice) {\n * //code\n * });\n */\nAPI.prototype.gasPrice = function () {\n  return this._sendRequest(\"get\", \"/getGasPrice\", null);\n};\n\n/**\n * Return the estimate gas of transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#estimategas}\n *\n * @param {TransactionOptions} options\n *\n * @return [Gas]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#estimategas}\n *\n * @example\n * var api = new Neb().api;\n * api.estimateGas({\n *    chainID: 1,\n *    from: \"n1QZMXSZtW7BUerroSms4axNfyBGyFGkrh5\",\n *    to: \"n1SAeQRVn33bamxN4ehWUT7JGdxipwn8b17\",\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000\n * }).then(function(gas) {\n * //code\n * });\n */\nAPI.prototype.estimateGas = function (options) {\n  options = utils.argumentsToObject(['from', 'to', 'value', 'nonce', 'gasPrice', 'gasLimit', 'contract', 'binary'], arguments);\n  var params = {\n    \"from\": options.from,\n    \"to\": options.to,\n    \"value\": utils.toString(options.value),\n    \"nonce\": options.nonce,\n    \"gasPrice\": utils.toString(options.gasPrice),\n    \"gasLimit\": utils.toString(options.gasLimit),\n    \"contract\": options.contract,\n    \"binary\": options.binary\n  };\n  return this._sendRequest(\"post\", \"/estimateGas\", params);\n};\n\n/**\n * Return the events list of transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#geteventsbyhash}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n *\n * @return [Events]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#geteventsbyhash}\n *\n * @example\n * var api = new Neb().api;\n * api.getEventsByHash({hash: \"ec239d532249f84f158ef8ec9262e1d3d439709ebf4dd5f7c1036b26c6fe8073\"}).then(function(events) {\n * //code\n * });\n */\nAPI.prototype.getEventsByHash = function (options) {\n  options = utils.argumentsToObject(['hash'], arguments);\n  var params = {\n    \"hash\": options.hash\n  };\n  return this._sendRequest(\"post\", \"/getEventsByHash\", params);\n};\n\n/**\n * Method getter for dpos dynasty.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getdynasty}\n *\n * @param {Object} options\n * @param {Number} options.height\n *\n * @return [delegatees]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getdynasty}\n *\n * @example\n * var api = new Neb().api;\n * api.getDynasty({height: 1}).then(function(delegatees) {\n * //code\n * });\n */\nAPI.prototype.getDynasty = function (options) {\n  options = utils.argumentsToObject(['height'], arguments);\n  var params = {\n    \"height\": options.height\n  };\n  return this._sendRequest(\"post\", \"/dynasty\", params);\n};\nAPI.prototype._sendRequest = function (method, api, params, callback, axiosOptions) {\n  var action = this._path + api;\n  if (typeof callback === \"function\") {\n    return this._request.asyncRequest(method, action, params, callback);\n  } else {\n    return this._request.request(method, action, params, axiosOptions);\n  }\n};\nmodule.exports = API;","map":{"version":3,"names":["utils","require","API","neb","_setRequest","_request","prototype","request","_path","getNebState","_sendRequest","latestIrreversibleBlock","getAccountState","options","argumentsToObject","arguments","params","address","height","call","from","to","toString","value","nonce","gasPrice","gasLimit","contract","sendRawTransaction","data","getBlockByHash","hash","fullTransaction","getBlockByHeight","getTransactionReceipt","getTransactionByContract","subscribe","topics","axiosOptions","onDownloadProgress","e","target","_readLength","chunk","responseText","substr","trim","length","estimateGas","binary","getEventsByHash","getDynasty","method","api","callback","action","asyncRequest","module","exports"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/nebulas/lib/api.js"],"sourcesContent":["\n\"use strict\";\n\nvar utils = require('./utils/utils.js');\n\n/**\n * User API constructor.\n * Class encapsulate methods for building distributed applications and services.\n *\n * @see [API documentation]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md}\n * @constructor\n *\n * @param {Neb} neb - Instance of Neb library.\n *\n * @example\n * var api = new API ( new Neb() );\n * // or just\n * var api = new Neb().api;\n */\nvar API = function (neb) {\n    this._setRequest(neb._request);\n};\n\n/**\n * @private\n * @param {Request} request - transport wrapper.\n */\nAPI.prototype._setRequest = function (request) {\n    this._request = request;\n    this._path = '/user';\n};\n\n/**\n * Method get state of Nebulas Network.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getnebstate}\n *\n * @return [NebStateObject]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getnebstate}\n *\n * @example\n * var api = new Neb().api;\n * api.getNebState().then(function(state) {\n * //code\n * });\n */\nAPI.prototype.getNebState = function () {\n    return this._sendRequest(\"get\", \"/nebstate\", null);\n};\n\n/**\n * Method get latest irreversible block of Nebulas Network.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#latestirreversibleblock}\n *\n * @return [dataBlockInfo.]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#latestirreversibleblock}\n *\n * @example\n * var api = new Neb().api;\n * api.latestIrreversibleBlock().then(function(blockData) {\n * //code\n * });\n */\nAPI.prototype.latestIrreversibleBlock = function () {\n    return this._sendRequest(\"get\", \"/lib\", null);\n\n};\n\n/**\n * Method return the state of the account. Balance and nonce.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getaccountstate}\n *\n * @param {Object} options\n * @param {HexString} options.address\n * @param {String} options.height\n *\n * @return [accaountStateObject]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getaccountstate}\n *\n * @example\n * var api = new Neb().api;\n * api.getAccountState({address: \"n1QsosVXKxiV3B4iDWNmxfN4VqpHn2TeUcn\"}).then(function(state) {\n * //code\n * });\n */\nAPI.prototype.getAccountState = function (options) {\n    options = utils.argumentsToObject(['address', 'height'], arguments);\n    var params = { \"address\": options.address, \"height\": options.height };\n    return this._sendRequest(\"post\", \"/accountstate\", params);\n};\n\n/**\n * Method wrap smart contract call functionality.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#call}\n *\n * @param {TransactionOptions} options\n *\n * @return [Transcation hash]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#call}\n *\n * @example\n * var api = new Neb().api;\n * api.call({\n *    chainID: 1,\n *    from: \"n1QZMXSZtW7BUerroSms4axNfyBGyFGkrh5\",\n *    to: \"n1SAeQRVn33bamxN4ehWUT7JGdxipwn8b17\",\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000,\n *    contract: {\n *        function: \"save\",\n *        args: \"[0]\"\n *    }\n * }).then(function(tx) {\n *     //code\n * });\n */\nAPI.prototype.call = function (options) {\n    options = utils.argumentsToObject(['from', 'to', 'value', 'nonce', 'gasPrice', 'gasLimit', 'contract'], arguments);\n    var params = {\n        \"from\": options.from,\n        \"to\": options.to,\n        \"value\": utils.toString(options.value),\n        \"nonce\": options.nonce,\n        \"gasPrice\": utils.toString(options.gasPrice),\n        \"gasLimit\": utils.toString(options.gasLimit),\n        \"contract\": options.contract\n    };\n    return this._sendRequest(\"post\", \"/call\", params);\n};\n\n/**\n * Method wrap submit the signed transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#sendrawtransaction}\n *\n * @param {Object} options\n * @param {String} options.data\n *\n * @return [Transcation hash]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#sendrawtransaction}\n *\n * @example\n * var api = new Neb().api;\n * var tx = new Transaction({\n *    chainID: 1,\n *    from: acc1,\n *    to: acc2,\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000\n * });\n * tx.signTransaction();\n * api.sendRawTransaction( {data: tx.toProtoString()} ).then(function(hash) {\n * //code\n * });\n */\nAPI.prototype.sendRawTransaction = function (options) {\n    options = utils.argumentsToObject(['data'], arguments);\n    var params = { \"data\": options.data };\n    return this._sendRequest(\"post\", \"/rawtransaction\", params);\n};\n\n/**\n * Get block header info by the block hash.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyhash}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n * @param {Boolean} options.fullTransaction\n *\n * @return [Block]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyhash}\n *\n * @example\n * var api = new Neb().api;\n * api.getBlockByHash({\n *     hash: \"00000658397a90df6459b8e7e63ad3f4ce8f0a40b8803ff2f29c611b2e0190b8\",\n *     fullTransaction: true\n * }).then(function(block) {\n * //code\n * });\n */\nAPI.prototype.getBlockByHash = function (options) {\n    options = utils.argumentsToObject(['hash', 'fullTransaction'], arguments);\n    var params = { \"hash\": options.hash, \"full_fill_transaction\": options.fullTransaction };\n    return this._sendRequest(\"post\", \"/getBlockByHash\", params);\n};\n\n/**\n * Get block header info by the block height.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyheight}\n *\n * @param {Object} options\n * @param {Number} options.height\n * @param {Boolean} options.fullTransaction\n *\n * @return [Block]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getblockbyheight}\n *\n * @example\n * var api = new Neb().api;\n * api.getBlockByHeight({height:2, fullTransaction:true}).then(function(block) {\n * //code\n * });\n */\nAPI.prototype.getBlockByHeight = function (options) {\n    options = utils.argumentsToObject(['height', 'fullTransaction'], arguments);\n    var params = { \"height\": options.height, \"full_fill_transaction\": options.fullTransaction };\n    return this._sendRequest(\"post\", \"/getBlockByHeight\", params);\n};\n\n/**\n * Get transactionReceipt info by tansaction hash.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n *\n * @return [TransactionReceipt]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @example\n * var api = new Neb().api;\n * api.getTransactionReceipt({hash: \"cc7133643a9ae90ec9fa222871b85349ccb6f04452b835851280285ed72b008c\"}).then(function(receipt) {\n * //code\n * });\n */\nAPI.prototype.getTransactionReceipt = function (options) {\n    options = utils.argumentsToObject(['hash'], arguments);\n    var params = { \"hash\": options.hash };\n    return this._sendRequest(\"post\", \"/getTransactionReceipt\", params);\n};\n\n/**\n * Get transactionReceipt info by contract address.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionbycontract}\n *\n * @param {Object} options\n * @param {HexString} options.address contract address\n *\n * @returns the same as [TransactionReceipt]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#gettransactionreceipt}\n *\n * @example\n * var api = new Neb().api;\n * api.getTransactionByContract({address: \"n1sqDHGjYtX6rMqFoq5Tow3s3LqF4ZxBvE3\"}).then(function(receipt) {\n *  //code\n * });\n */\nAPI.prototype.getTransactionByContract = function (options) {\n    options = utils.argumentsToObject(['address'], arguments);\n    var params = { \"address\": options.address };\n    return this._sendRequest(\"post\", \"/getTransactionByContract\", params);\n};\n\n/**\n * Return the subscribed events of transaction & block.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#subscribe}\n *\n * @param {Object} options\n * @param {Array|String} options.topics\n * @param {Function} options.onDownloadProgress - On progress callback function. Recive chunk.\n *\n * @return [eventData]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#subscribe}\n *\n * @example\n * var api = new Neb().api;\n * api.subscribe({topics: [\"chain.linkBlock\", \"chain.pendingTransaction\"]}).then(function(eventData) {\n * //code\n * });\n */\nAPI.prototype.subscribe = function (options) {\n    options = utils.argumentsToObject(['topics', 'onDownloadProgress'], arguments);\n    var params = { \"topics\": options.topics };\n    var axiosOptions;\n    if (typeof options.onDownloadProgress === 'function') {\n        axiosOptions = {\n            onDownloadProgress: function(e) {\n                if (typeof e.target._readLength === 'undefined') {\n                    e.target._readLength = 0;\n                }\n                var chunk = e.target.responseText.substr(e.target._readLength);\n                // TODO check and split multi events\n                if (chunk && chunk.trim().length > 0) {\n                    e.target._readLength += chunk.length;\n                    options.onDownloadProgress(chunk);\n                }\n            }\n        };\n    }\n    return this._sendRequest(\"post\", \"/subscribe\", params, null, axiosOptions);\n};\n\n/**\n * Return current gasPrice.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getgasprice}\n *\n * @return [Gas Price]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getgasprice}\n *\n * @example\n * var api = new Neb().api;\n * api.gasPrice().then(function(gasPrice) {\n * //code\n * });\n */\nAPI.prototype.gasPrice = function () {\n    return this._sendRequest(\"get\", \"/getGasPrice\", null);\n};\n\n/**\n * Return the estimate gas of transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#estimategas}\n *\n * @param {TransactionOptions} options\n *\n * @return [Gas]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#estimategas}\n *\n * @example\n * var api = new Neb().api;\n * api.estimateGas({\n *    chainID: 1,\n *    from: \"n1QZMXSZtW7BUerroSms4axNfyBGyFGkrh5\",\n *    to: \"n1SAeQRVn33bamxN4ehWUT7JGdxipwn8b17\",\n *    value: 10,\n *    nonce: 12,\n *    gasPrice: 1000000,\n *    gasLimit: 2000000\n * }).then(function(gas) {\n * //code\n * });\n */\nAPI.prototype.estimateGas = function (options) {\n    options = utils.argumentsToObject(['from', 'to', 'value', 'nonce', 'gasPrice', 'gasLimit', 'contract', 'binary'], arguments);\n    var params = {\n        \"from\": options.from,\n        \"to\": options.to,\n        \"value\": utils.toString(options.value),\n        \"nonce\": options.nonce,\n        \"gasPrice\": utils.toString(options.gasPrice),\n        \"gasLimit\": utils.toString(options.gasLimit),\n        \"contract\": options.contract,\n        \"binary\": options.binary\n    };\n    return this._sendRequest(\"post\", \"/estimateGas\", params);\n};\n\n/**\n * Return the events list of transaction.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#geteventsbyhash}\n *\n * @param {Object} options\n * @param {HexString} options.hash\n *\n * @return [Events]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#geteventsbyhash}\n *\n * @example\n * var api = new Neb().api;\n * api.getEventsByHash({hash: \"ec239d532249f84f158ef8ec9262e1d3d439709ebf4dd5f7c1036b26c6fe8073\"}).then(function(events) {\n * //code\n * });\n */\nAPI.prototype.getEventsByHash = function (options) {\n    options = utils.argumentsToObject(['hash'], arguments);\n    var params = { \"hash\": options.hash };\n    return this._sendRequest(\"post\", \"/getEventsByHash\", params);\n};\n\n/**\n * Method getter for dpos dynasty.\n * @see {@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getdynasty}\n *\n * @param {Object} options\n * @param {Number} options.height\n *\n * @return [delegatees]{@link https://github.com/nebulasio/wiki/blob/master/rpc.md#getdynasty}\n *\n * @example\n * var api = new Neb().api;\n * api.getDynasty({height: 1}).then(function(delegatees) {\n * //code\n * });\n */\nAPI.prototype.getDynasty = function (options) {\n    options = utils.argumentsToObject(['height'], arguments);\n    var params = {\"height\": options.height};\n    return this._sendRequest(\"post\", \"/dynasty\", params);\n};\n\nAPI.prototype._sendRequest = function (method, api, params, callback, axiosOptions) {\n    var action = this._path + api;\n    if (typeof callback === \"function\") {\n        return this._request.asyncRequest(method, action, params, callback);\n    } else {\n        return this._request.request(method, action, params, axiosOptions);\n    }\n};\n\nmodule.exports = API;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}