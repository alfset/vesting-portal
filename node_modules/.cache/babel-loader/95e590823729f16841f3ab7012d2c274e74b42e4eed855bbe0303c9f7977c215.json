{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.p2ms = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (!a.input && !a.output && !(a.pubkeys && a.m !== undefined) && !a.signatures) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  function isAcceptableSignature(x) {\n    return bscript.isCanonicalScriptSignature(x) || (opts.allowIncomplete && x === OPS.OP_0) !== undefined;\n  }\n  (0, types_1.typeforce)({\n    network: types_1.typeforce.maybe(types_1.typeforce.Object),\n    m: types_1.typeforce.maybe(types_1.typeforce.Number),\n    n: types_1.typeforce.maybe(types_1.typeforce.Number),\n    output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    pubkeys: types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.isPoint)),\n    signatures: types_1.typeforce.maybe(types_1.typeforce.arrayOf(isAcceptableSignature)),\n    input: types_1.typeforce.maybe(types_1.typeforce.Buffer)\n  }, a);\n  const network = a.network || networks_1.bitcoin;\n  const o = {\n    network\n  };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile([].concat(OP_INT_BASE + a.m, a.pubkeys, OP_INT_BASE + o.n, OPS.OP_CHECKMULTISIG));\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return \"p2ms(\".concat(o.m, \" of \").concat(o.n, \")\");\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!types_1.typeforce.Number(chunks[0])) throw new TypeError('Output is invalid');\n      if (!types_1.typeforce.Number(chunks[chunks.length - 2])) throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3) throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0, types_1.isPoint)(x))) throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys)) throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length) throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m) throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m) throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (o.signatures.length === 0 || !o.signatures.every(isAcceptableSignature)) throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures)) throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length) throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;","map":{"version":3,"names":["Object","defineProperty","exports","value","p2ms","networks_1","require","bscript","types_1","lazy","OPS","OP_INT_BASE","OP_RESERVED","stacksEqual","a","b","length","every","x","i","equals","opts","input","output","pubkeys","m","undefined","signatures","TypeError","assign","validate","isAcceptableSignature","isCanonicalScriptSignature","allowIncomplete","OP_0","typeforce","network","maybe","Number","n","Buffer","arrayOf","isPoint","bitcoin","o","chunks","decoded","decode","decompile","slice","prop","compile","concat","OP_CHECKMULTISIG"],"sources":["/workspace/Planq-Dapps/vesting-portal/node_modules/bitcoinjs-lib/src/payments/p2ms.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2ms = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      m: types_1.typeforce.maybe(types_1.typeforce.Number),\n      n: types_1.typeforce.maybe(types_1.typeforce.Number),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkeys: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.isPoint),\n      ),\n      signatures: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(isAcceptableSignature),\n      ),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!types_1.typeforce.Number(chunks[0]))\n        throw new TypeError('Output is invalid');\n      if (!types_1.typeforce.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0, types_1.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}